[{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,0,10,11,12,13,14,15,16,17,18,19,20,21,2,22,23,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,59,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,26,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,25,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,5,6,172,173,174,175,176,7,8,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,9,204,0,10,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,11,12,13,14,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,27,28,29,30,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,31,32,33,34,35,36,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,37,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,16,357,17,358,359,18,19,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,38,39,40,389,390,391,392,41,393,394,20,21,395,2,22,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,23,3,4,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,42,447,448,449,43,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[5,6,7,8,482,483,484,485,486,487,488,9,0,10,288,16,17,18,19,21,2,22,23,3,4,422,425,426,434,435],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[75,85,86,489,490,491,492,493,250,252],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[6,7,8,0,288,494,357,17,18,19,20,2,3,4,427],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[61,63,71,90,91,94,96,97,99,25,113],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[495,62,72,73,496],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[497,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[59,60,189,242,498,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[122,499,181,191,194],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[115,500],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,26,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,25,109,110,111,112,113,114,115,116,501,502,503,117,118,119,120,121,122,123,504,124,125,126,499,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,5,6,172,173,174,175,176,7,8,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,9,204,0,10,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,11,12,13,14,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,27,28,29,30,241,242,243,244,245,246,247,248,249,250,251,505,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,506,507,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,31,32,33,34,35,36,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,37,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,16,357,17,358,359,18,19,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,38,39,40,508,389,390,391,392,41,393,394,20,21,395,2,22,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,23,3,4,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,42,447,448,449,43,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[430],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[509],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[493],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[5,6,7,8,482,483,484,485,486,487,488,9,0,10,288,16,17,18,19,21,2,22,23,3,4,422,425,426,434,435],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[91,96,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[88,90,107,112,510],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[300,511,512],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:131","failures":[187],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[398],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[59,60,75,85,86,122,126,499,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,513,514,242,245,250,252,498,255],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":91,"org.easymock.tests2.UsageTest.argumentsOrdered":8,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":356,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":342,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":173,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":45,"org.easymock.tests2.DelegateToTest.testReturnException":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":32,"org.easymock.tests.MockingTest.testPartialClassMocking":369,"org.easymock.tests.MockClassControlTest.testToString":322,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":223,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":390,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":452,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":151,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":15,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":448,"org.easymock.tests2.UsageTest.wrongArguments":6,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":382,"org.easymock.samples.ExampleTest.answerVsDelegate":47,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":292,"org.easymock.tests2.UsageConstraintsTest.testNull":94,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":374,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":219,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":327,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":451,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":471,"org.easymock.tests.UsageTest.moreThanOneArgument":16,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":330,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":407,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageVarargTest.varargIntAccepted":310,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":384,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":502,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":239,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":388,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":484,"org.easymock.tests.ReplayStateInvalidUsageTest.times":445,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":138,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":509,"org.easymock.tests2.DependencyTest.testClassMocking":206,"org.easymock.tests2.AnswerTest.answer":127,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":349,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":228,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":507,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":378,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":411,"org.easymock.tests2.DelegateToTest.testDelegate":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":467,"org.easymock.tests.LimitationsTest.mockFinalMethod":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":365,"org.easymock.tests2.DependencyTest.testClassMockingSupport":207,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":434,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":465,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":226,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":439,"org.easymock.tests.UsageThrowableTest.throwError":280,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":291,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":508,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":332,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":169,"org.easymock.samples.PartialClassMockTest.testGetArea":44,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":440,"org.easymock.tests.MockingTest.testInterfaceMocking":371,"org.easymock.tests2.CompareToTest.testLessOrEqual":510,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":385,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":429,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":480,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":453,"org.easymock.tests2.UsageTest.niceToStrict":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":247,"org.easymock.tests2.MockBuilderTest.testCreateMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":164,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":141,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":461,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":506,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":433,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":412,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":380,"org.easymock.tests.UsageOverloadedMethodTest.overloading":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":160,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":424,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":104,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":271,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":511,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":103,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":311,"org.easymock.tests2.EasyMockSupportClassTest.testAll":148,"org.easymock.tests.MockClassControlTest.testEquals":326,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":400,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":469,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":24,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":363,"org.easymock.tests.MockNameTest.defaultName":481,"org.easymock.tests2.UsageConstraintsTest.testMatches":105,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":331,"org.easymock.samples.ExampleTest.voteForRemovals":51,"org.easymock.tests.UsageVarargTest.allKinds":319,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":23,"org.easymock.samples.BasicClassMockTest.testPrintContent":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":364,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":286,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":36,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":493,"org.easymock.tests2.UsageConstraintsTest.greaterThan":107,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":149,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":377,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":194,"org.easymock.samples.ExampleTest.voteForRemoval":48,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":303,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":195,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":503,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":186,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":403,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":212,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":31,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":213,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":427,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":267,"org.easymock.tests2.UsageTest.moreThanOneArgument":5,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":200,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":350,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":318,"org.easymock.tests.GenericTest.testBridgedEquals":402,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":419,"org.easymock.tests.UsageExpectAndReturnTest.longType":263,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":361,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":470,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":474,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":111,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":468,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":328,"org.easymock.tests.UsageCallCountTest.tooManyCalls":420,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":165,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":143,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":457,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":285,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":121,"org.easymock.tests.MockingTest.testNiceClassMocking":375,"org.easymock.tests.MockingTest.testClassMocking":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":413,"org.easymock.tests2.UsageConstraintsTest.testContains":102,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":93,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":406,"org.easymock.tests.MockTypeTest.fromEasyMockClass":290,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":393,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":259,"org.easymock.tests.UsageExpectAndReturnTest.object":270,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":490,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":313,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":478,"org.easymock.tests.UsageTest.exactCallCountByLastCall":360,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":408,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":389,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":86,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":276,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":230,"org.easymock.tests.MockClassControlTest.testHashCode":325,"org.easymock.tests2.EasyMockSupportTest.testVerify":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":158,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":409,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":432,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":225,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":179,"org.easymock.tests.UsageVarargTest.varargCharAccepted":312,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":295,"org.easymock.tests2.CaptureTest.testCaptureMultiple":495,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":355,"org.easymock.tests2.UsageTest.openCallCountByLastCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":221,"org.easymock.tests.DefaultClassInstantiatorTest.object":296,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":431,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":476,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":136,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":229,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":192,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":458,"org.easymock.tests.CapturesMatcherTest.test":496,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":167,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":323,"org.easymock.tests2.UsageTest.resumeIfFailure":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":34,"org.easymock.tests2.StubTest.stubWithReturnValue":26,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":112,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":269,"org.easymock.tests2.SerializationTest.testAllMockedMethod":77,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":348,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":486,"org.easymock.samples.SupportTest.voteForRemovals":55,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":464,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":354,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":128,"org.easymock.tests.UsageExpectAndThrowTest.object":462,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":391,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":109,"org.easymock.tests2.DelegateToTest.testWrongClass":81,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":472,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":473,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.samples.ConstructorCalledMockTest.testTax":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":118,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":463,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":145,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":42,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":381,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":430,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.UsageUnorderedTest.message":288,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":317,"org.easymock.tests2.ThreadingTest.testThreadSafe":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":162,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":417,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":479,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":56,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":488,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageConstraintsTest.any":100,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":444,"org.easymock.tests2.StubTest.stub":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":40,"org.easymock.tests.UsageExpectAndThrowTest.longType":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":353,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":300,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":443,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":204,"org.easymock.tests2.SerializationTest.testClass":75,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests.LimitationsTest.mockNativeMethod":306,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":135,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":205,"org.easymock.tests2.NameTest.nameForMocksControl":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":137,"org.easymock.tests2.MockedExceptionTest.testMockedException":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":150,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":456,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":258,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":251,"org.easymock.tests.MockingTest.testNicePartialClassMocking":370,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":185,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":133,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":435,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":126,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":97,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":110,"org.easymock.tests.MockingTest.testTwoMocks":368,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":499,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":460,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":114,"org.easymock.samples.ExampleTest.removeNonExistingDocument":52,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":441,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":140,"org.easymock.tests.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":231,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":298,"org.easymock.tests2.ConstraintsToStringTest.andToString":485,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":199,"org.easymock.tests2.MockBuilderTest.testCreateMockString":256,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":320,"org.easymock.tests.UsageExpectAndThrowTest.floatType":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":152,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":147,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":130,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":87,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":161,"org.easymock.samples.ExampleTest.voteAgainstRemoval":49,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":343,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":193,"org.easymock.tests.LimitationsTest.privateConstructor":305,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":514,"org.easymock.tests2.UsageConstraintsTest.testNotNull":113,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":287,"org.easymock.tests2.UsageTest.defaultResetToNice":176,"org.easymock.samples.ExampleTest.voteAgainstRemovals":46,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":344,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":134,"org.easymock.tests.UsageVarargTest.differentLength":314,"org.easymock.tests2.CallbackTest.callback":224,"org.easymock.tests2.UsageConstraintsTest.equals":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":189,"org.easymock.tests.UsageTest.openCallCountByLastCall":358,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":43,"org.easymock.tests.UsageCallCountTest.tooFewCalls":415,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":383,"org.easymock.tests.UsageThrowableTest.throwCheckedException":284,"org.easymock.tests.MockingTest.testStrictClassMocking":366,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":139,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":122,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":124,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":132,"org.easymock.tests.ObjectMethodsTest.testHashCode":477,"org.easymock.tests2.NameTest.nameForNiceMock":13,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":201,"org.easymock.tests2.DependencyTest.testInterfaceMocking":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":491,"org.easymock.samples.ExampleTest.addDocument":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":168,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.AnswerTest.stubAnswer":131,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":505,"org.easymock.tests.UsageVarargTest.varargLongAccepted":316,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":341,"org.easymock.tests.UsageExpectAndReturnTest.floatType":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":85,"org.easymock.tests2.ConstraintsToStringTest.orToString":482,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":60,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":238,"org.easymock.tests.UsageThrowableTest.noUpperLimit":281,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":89,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":116,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests2.SerializationTest.test":76,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":512,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":297,"org.easymock.tests2.UsageConstraintsTest.testSame":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":261,"org.easymock.samples.SupportTest.addDocument":54,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":504,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":153,"org.easymock.tests.GenericTest.testPackageScope":399,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":237,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":373,"org.easymock.tests2.NameTest.nameForMock":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":272,"org.easymock.tests2.UsageStrictMockTest.differentMethods":10,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":190,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":466,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":379,"org.easymock.tests2.MockedExceptionTest.testRealException":30,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":449,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":447,"org.easymock.tests2.NameTest.nameForStrictMock":12,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":246,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":257,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":117,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":299,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":243,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":492,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":157,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.UsageConstraintsTest.testOr":96,"org.easymock.tests.UsageRangeTest.combination":376,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":181,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":154,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":334,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":301,"org.easymock.tests.UsageVarargTest.varargShortAccepted":315,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":418,"org.easymock.tests2.UsageConstraintsTest.cmpTo":101,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":129,"org.easymock.tests2.CompareToTest.testLessThan":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":336,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":175,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":438,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":244,"org.easymock.tests.UsageTest.unexpectedCallWithArray":357,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":416,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":498,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":274,"org.easymock.tests2.CaptureTest.testCapture":497,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":395,"org.easymock.tests2.UsageConstraintsTest.constraints":90,"org.easymock.samples.ExampleTest.addAndChangeDocument":53,"org.easymock.tests2.ConstraintsToStringTest.notToString":483,"org.easymock.tests.UsageStrictMockTest.testVerify":397,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":58,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":362,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":266,"org.easymock.tests.LimitationsTest.abstractClass":304,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":387,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":216,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":309}}]
