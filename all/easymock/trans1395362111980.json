[{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"value","methodName":"key"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,6,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[96],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[97,98,99,7,8,100,9,101,10,11,102,103,12,104,13,14,105,15,106,16,17,107,108,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[123,124,109,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,78,79,80,81,82,83,84,85,86,87,89,90,91,92,19,153,154,113,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[51,172,6,173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:102","sourceCode":"return new org.easymock.internal.Result(org.easymock.IAnswer<?> , false)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[0,174,175],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[176,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[177,178,28,179,180],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[142],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[181,182,183,184,185,186,187,97,98,188,189,190,191,123,124,192,193,109,194,195,110,111,196,197,198,199,200,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,0,201,202,174,175,203,204,205,206,153,207,208,209,210,211,212,213,214,215,216,217,218,219,220,30,221,222,112,223,224,225,226,227,228,229,230,231,232,42,43,44,233,234,235,172,236,237,238,239,176,240,2,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,154,113,258,259,114,115,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,155,285,286,287,288,289,290,116,117,118,156,157,291,292,293,294,295,296,297,298,95,299,300,301,302,303,304,305,306,307,308,309,310,311,312,120,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,158,159,160,161,162,163,330,331,164,165,166,167,168,169,170,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,171,357,358,359,360,361,362,363,364,365,366,367,96,368,369,370,371,372,373,374,375,376,121,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[378,379,203,380,381,28,153,31,34,36,37,40,45,46,47,48,235,49,50,55,58,68,74,2,382,383,384,385,160],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[386,387,154,388,389,313],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[152,390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[181,182,183,184,185,186,391,187,177,178,97,378,98,188,189,392,393,394,395,190,191,396,397,398,399,123,400,124,192,193,109,194,195,110,111,196,197,198,199,99,7,8,100,9,200,101,10,11,102,103,12,125,126,127,128,401,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,0,201,202,174,175,402,379,403,203,380,404,381,405,406,19,20,21,22,23,24,25,26,27,28,29,407,204,205,206,153,207,208,209,210,211,212,213,214,215,216,217,218,219,220,30,408,31,32,409,33,34,35,36,410,37,411,38,39,40,412,41,221,222,112,223,224,225,226,227,228,229,230,231,232,42,43,44,233,104,13,14,105,15,234,106,16,17,107,108,18,45,46,47,48,413,235,49,50,414,51,172,6,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,415,236,237,238,239,176,240,2,241,242,243,244,245,246,247,248,249,250,122,416,417,418,419,251,252,253,254,255,420,421,422,423,424,425,426,427,428,256,257,154,113,258,259,114,115,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,155,285,286,287,288,289,429,290,430,116,117,118,156,157,291,292,119,431,432,433,434,435,436,1,437,438,439,3,440,441,442,443,444,293,445,446,447,448,449,294,450,451,452,295,382,383,453,384,454,455,456,296,297,298,95,299,300,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,385,473,301,474,302,303,304,305,306,307,308,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,309,310,311,312,120,313,314,315,316,317,318,319,320,321,322,495,323,324,325,326,327,328,329,158,159,160,161,162,163,330,496,331,164,165,166,167,168,169,170,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,171,357,358,359,360,361,362,363,364,365,366,367,96,368,369,370,371,372,373,374,375,376,121,377],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[51,172,6,173],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[119],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[221,227,246,155,117,434,300,312,316,167,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,359,360,361,362,363,364,369,370,371,375],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":128,"org.easymock.tests2.UsageTest.argumentsOrdered":230,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":312,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":3,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":225,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":98,"org.easymock.tests2.DelegateToTest.testReturnException":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":282,"org.easymock.tests.MockingTest.testPartialClassMocking":382,"org.easymock.tests.MockClassControlTest.testToString":489,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":415,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":62,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":337,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":191,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":164,"org.easymock.tests2.UsageTest.wrongArguments":223,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":249,"org.easymock.samples.ExampleTest.answerVsDelegate":182,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":468,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":455,"org.easymock.tests2.UsageConstraintsTest.testNull":130,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":380,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":494,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":217,"org.easymock.tests2.CaptureTest.testPrimitive":81,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":168,"org.easymock.tests.UsageTest.moreThanOneArgument":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":356,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":253,"org.easymock.tests.UsageTest.argumentsOrdered":318,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":365,"org.easymock.tests.UsageVarargTest.varargIntAccepted":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":444,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":159,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":108,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":163,"org.easymock.tests.ReplayStateInvalidUsageTest.times":483,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests2.DependencyTest.testClassMocking":394,"org.easymock.tests2.AnswerTest.answer":93,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":445,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":199,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":465,"org.easymock.tests2.CaptureTest.testAnd":78,"org.easymock.tests2.UsageTest.strictResetToDefault":222,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":212,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":288,"org.easymock.tests2.DelegateToTest.testDelegate":243,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":352,"org.easymock.tests.LimitationsTest.mockFinalMethod":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":336,"org.easymock.tests2.DependencyTest.testClassMockingSupport":395,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":291,"org.easymock.tests2.CaptureTest.testCapture1_2446744":82,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":350,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":197,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":477,"org.easymock.tests.UsageThrowableTest.throwError":357,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":467,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":255,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":76,"org.easymock.samples.PartialClassMockTest.testGetArea":378,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":478,"org.easymock.tests.MockingTest.testInterfaceMocking":453,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":297,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":63,"org.easymock.tests2.UsageTest.niceToStrict":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":338,"org.easymock.tests2.ThreadingTest.testChangeDefault":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":180,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":11,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":346,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":213,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":464,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":247,"org.easymock.tests.UsageOverloadedMethodTest.overloading":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":73,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":140,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":375,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":272,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":139,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":87,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":495,"org.easymock.tests.MockClassControlTest.testEquals":493,"org.easymock.tests2.EasyMockSupportClassTest.testAll":55,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":417,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":354,"org.easymock.tests2.CaptureTest.testCaptureAll":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":334,"org.easymock.tests.MockNameTest.defaultName":496,"org.easymock.tests2.UsageConstraintsTest.testMatches":141,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":254,"org.easymock.samples.ExampleTest.voteForRemovals":186,"org.easymock.tests.UsageVarargTest.allKinds":158,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":116,"org.easymock.samples.BasicClassMockTest.testPrintContent":393,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":335,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":363,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":16,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":285,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":427,"org.easymock.tests2.UsageConstraintsTest.greaterThan":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":56,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":287,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":428,"org.easymock.samples.ExampleTest.voteForRemoval":183,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":26,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":405,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":221,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":331,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":210,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":281,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":176,"org.easymock.tests2.CaptureTest.testCaptureFirst":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":211,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":232,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":268,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests2.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":446,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":329,"org.easymock.tests.GenericTest.testBridgedEquals":419,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":307,"org.easymock.tests.UsageExpectAndReturnTest.longType":264,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":332,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":355,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":148,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":310,"org.easymock.tests.UsageCallCountTest.tooManyCalls":308,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":103,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":362,"org.easymock.tests.MockingTest.testNiceClassMocking":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":46,"org.easymock.tests.MockingTest.testClassMocking":452,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":474,"org.easymock.tests2.UsageConstraintsTest.testContains":138,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":44,"org.easymock.tests2.UsageConstraintsTest.testFind":129,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":300,"org.easymock.tests.MockTypeTest.fromEasyMockClass":466,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":124,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":256,"org.easymock.tests.UsageExpectAndReturnTest.object":271,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":216,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":324,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":460,"org.easymock.tests.UsageTest.exactCallCountByLastCall":319,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":29,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":277,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":374,"org.easymock.tests.MockClassControlTest.testHashCode":492,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests2.EasyMockSupportTest.testVerify":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":65,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":370,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":196,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":402,"org.easymock.tests.UsageVarargTest.varargCharAccepted":323,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":420,"org.easymock.tests2.CaptureTest.testCaptureMultiple":77,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":450,"org.easymock.tests2.UsageTest.openCallCountByLastCall":226,"org.easymock.tests.DefaultClassInstantiatorTest.object":421,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":219,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":369,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":66,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":100,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":104,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":491,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":23,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":343,"org.easymock.tests.CapturesMatcherTest.test":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":309,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":74,"org.easymock.tests2.UsageTest.resumeIfFailure":231,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":284,"org.easymock.tests2.StubTest.stubWithReturnValue":246,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":410,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":270,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":293,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":387,"org.easymock.samples.SupportTest.voteForRemovals":189,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":105,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":349,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":173,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":294,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":430,"org.easymock.tests.UsageExpectAndThrowTest.object":347,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":146,"org.easymock.tests2.DelegateToTest.testWrongClass":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":170,"org.easymock.samples.ConstructorCalledMockTest.testTax":177,"org.easymock.tests.UsageStrictMockTest.range":259,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":398,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":215,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":348,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":36,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":52,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":248,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":388,"org.easymock.tests2.CaptureTest.testCaptureNone":86,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":298,"org.easymock.tests.UsageUnorderedTest.message":171,"org.easymock.tests.UsageVerifyTest.twoReturns":118,"org.easymock.tests.UsageVarargTest.varargByteAccepted":328,"org.easymock.tests2.ThreadingTest.testThreadSafe":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":69,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":305,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":461,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":392,"org.easymock.tests2.CaptureTest.testCapture_2617107":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":448,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":167,"org.easymock.tests2.UsageConstraintsTest.any":136,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":482,"org.easymock.tests2.StubTest.stub":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":283,"org.easymock.tests.UsageExpectAndThrowTest.longType":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":425,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":481,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":194,"org.easymock.tests2.SerializationTest.testClass":51,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests.LimitationsTest.mockNativeMethod":385,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":418,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":280,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":8,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":111,"org.easymock.tests2.NameTest.nameForMocksControl":239,"org.easymock.tests2.MockedExceptionTest.testMockedException":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":57,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":316,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":400,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":384,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":341,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":379,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":37,"org.easymock.tests.MockingTest.testNicePartialClassMocking":383,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":99,"org.easymock.tests2.CaptureTest.testCaptureLast":85,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":292,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":133,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":147,"org.easymock.tests.MockingTest.testTwoMocks":295,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":345,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":229,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":151,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":5,"org.easymock.samples.ExampleTest.removeNonExistingDocument":391,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":479,"org.easymock.tests.UsageStrictMockTest.differentMethods":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":10,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":423,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":206,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":59,"org.easymock.tests.UsageExpectAndThrowTest.floatType":339,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":54,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":407,"org.easymock.tests.UsageVerifyTest.twoThrows":117,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":68,"org.easymock.samples.ExampleTest.voteAgainstRemoval":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":296,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":24,"org.easymock.tests.LimitationsTest.privateConstructor":472,"org.easymock.tests2.UsageConstraintsTest.testNotNull":150,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":364,"org.easymock.tests2.UsageTest.defaultResetToNice":228,"org.easymock.samples.ExampleTest.voteAgainstRemovals":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":7,"org.easymock.tests.UsageVarargTest.differentLength":325,"org.easymock.tests2.CallbackTest.callback":244,"org.easymock.tests2.UsageConstraintsTest.equals":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":20,"org.easymock.tests.UsageTest.openCallCountByLastCall":315,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":166,"org.easymock.tests.UsageCallCountTest.tooFewCalls":303,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":250,"org.easymock.tests.UsageThrowableTest.throwCheckedException":361,"org.easymock.tests.MockingTest.testStrictClassMocking":451,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":389,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":157,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":484,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":235,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":175,"org.easymock.tests.ObjectMethodsTest.testHashCode":459,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":207,"org.easymock.tests2.NameTest.nameForNiceMock":238,"org.easymock.tests2.DependencyTest.testInterfaceMocking":190,"org.easymock.samples.ExampleTest.addDocument":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":70,"org.easymock.tests2.DelegateToTest.testStubDelegate":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":75,"org.easymock.tests2.AnswerTest.stubAnswer":174,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":113,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":411,"org.easymock.tests.UsageVarargTest.varargLongAccepted":327,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.floatType":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":178,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":144,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":107,"org.easymock.tests.UsageThrowableTest.noUpperLimit":358,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":126,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":396,"org.easymock.tests2.SerializationTest.test":172,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":422,"org.easymock.tests2.UsageConstraintsTest.testSame":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":262,"org.easymock.samples.SupportTest.addDocument":188,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":413,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":60,"org.easymock.tests.GenericTest.testPackageScope":416,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":17,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":454,"org.easymock.tests2.NameTest.nameForMock":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":412,"org.easymock.tests2.UsageStrictMockTest.differentMethods":110,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":351,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":457,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":289,"org.easymock.tests2.MockedExceptionTest.testRealException":233,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":442,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":109,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":486,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":165,"org.easymock.tests2.NameTest.nameForStrictMock":237,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":397,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":424,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":195,"org.easymock.tests2.UsageConstraintsTest.lessThan":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":64,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.UsageConstraintsTest.testOr":132,"org.easymock.tests.UsageRangeTest.combination":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":403,"org.easymock.tests.UsageTest.wrongArguments":314,"org.easymock.tests2.MockBuilderTest.testWithConstructor":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":61,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":488,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":274,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":426,"org.easymock.tests.UsageVarargTest.varargShortAccepted":326,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":306,"org.easymock.tests2.UsageConstraintsTest.cmpTo":137,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":201,"org.easymock.tests2.CompareToTest.testLessThan":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":434,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":227,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":476,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":32,"org.easymock.tests.UsageTest.unexpectedCallWithArray":313,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":275,"org.easymock.tests2.CaptureTest.testCapture":88,"org.easymock.tests2.UsageConstraintsTest.constraints":127,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":258,"org.easymock.samples.ExampleTest.addAndChangeDocument":187,"org.easymock.tests.UsageStrictMockTest.testVerify":260,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":97,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":333,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":161,"org.easymock.tests.LimitationsTest.abstractClass":471,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":162,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":214,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":321}}]
