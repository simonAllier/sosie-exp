[{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,249,250,250,251,252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"lastControl"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[253,254,255,256,257,258,259,110,260],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[23,25,26,28,104,105,113,261,204,244],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[102,188,189,262,227],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[263,264,265,253,254,266,110,112,260,267,249,250],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[73,268,87,91],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:280","failures":[114,115,116,117,118,119,205,244],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[110,111,269,270],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[85,271],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[253,255,256,257,258,259,260],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[50,272],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[273,274,275,276,277,278,279,280,281,282,283,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[285,41,48,49,286],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[287,288,289,290,291,292],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[34,35,36,37,179,208,209,210,211,212,213,229,230,231,237],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[48,68,69,72,73,74,75,80,82,83,85,86,87,91,92,93,101,146,147,148,149,150,178,180,181,182,183,184,214,215,226,235,236,239,249,249,250,250],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[102,188,189,262,227],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[40,293,47,70,71,73,75,76,268,87,91],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[294,295,296],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[297,298,299,102,103,300,301,154,188,189,302,303,291,304,305,306,292,227,228],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[307,308,309,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[312,313,314,315,316,203],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[63,64,75,86,102,103,317,185,186,187,192,199,216,219,220,227,228,242],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[318],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[319],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Invocation:195","failures":[320,321,322,323,324,273,274,325,275,0,326,276,277,327,328,278,2,329,10,330,14,17,19,272,331,54,55,332,333,279,280,334,281,56,335,282,283,336,337,284,94,95,100,338,339,340,341,342,343,344,345,346,318,347,348,303],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[287,288,289,290,291,292],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[48,58,68,69,72,73,74,75,80,82,83,85,86,87,91,92,93,101,312,313,314,315,316,146,147,148,149,150,178,180,181,182,183,184,349,203,214,215,226,235,236,239,249,249,250,250],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[68,70,85,90,350],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[76,77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":71,"org.easymock.tests2.UsageTest.argumentsOrdered":299,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":217,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":211,"org.easymock.tests2.StubTest.stubWithReturnValue":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":132,"org.easymock.tests2.SerializationTest.testAllMockedMethod":269,"org.easymock.tests2.DelegateToTest.testReturnException":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":209,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":121,"org.easymock.tests.MockingTest.testPartialClassMocking":222,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":288,"org.easymock.samples.SupportTest.voteForRemovals":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":325,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":270,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":107,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":158,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":24,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":234,"org.easymock.tests.UsageExpectAndThrowTest.object":168,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":88,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":255,"org.easymock.tests2.DelegateToTest.testWrongClass":117,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":214,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":215,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":77,"org.easymock.tests2.UsageTest.wrongArguments":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":235,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":284,"org.easymock.samples.ConstructorCalledMockTest.testTax":249,"org.easymock.tests.UsageStrictMockTest.range":227,"org.easymock.samples.ExampleTest.answerVsDelegate":244,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":18,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":94,"org.easymock.tests2.UsageConstraintsTest.testNull":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":169,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":53,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":20,"org.easymock.tests2.CaptureTest.testPrimitive":42,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":239,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":305,"org.easymock.tests.UsageTest.moreThanOneArgument":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":177,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":3,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":182,"org.easymock.tests2.CaptureTest.testCaptureNone":45,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":153,"org.easymock.tests.UsageUnorderedTest.message":154,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":302,"org.easymock.tests.UsageVerifyTest.twoReturns":189,"org.easymock.tests2.ThreadingTest.testThreadSafe":29,"org.easymock.tests.UsageTest.argumentsOrdered":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":344,"org.easymock.tests2.CaptureTest.testCapture_2617107":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":146,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":309,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":238,"org.easymock.tests2.UsageConstraintsTest.any":78,"org.easymock.tests2.StubTest.stub":57,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":210,"org.easymock.tests.UsageExpectAndThrowTest.longType":161,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":0,"org.easymock.tests2.SerializationTest.testClass":110,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":56,"org.easymock.tests.LimitationsTest.mockNativeMethod":143,"org.easymock.tests2.AnswerTest.answer":23,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":142,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":145,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":268,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":280,"org.easymock.tests2.CaptureTest.testAnd":40,"org.easymock.tests2.UsageTest.strictResetToDefault":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":329,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":265,"org.easymock.tests2.NameTest.nameForMocksControl":323,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":281,"org.easymock.tests2.MockedExceptionTest.testMockedException":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":15,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":220,"org.easymock.tests2.DelegateToTest.testDelegate":119,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":162,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":1,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":54,"org.easymock.tests.MockingTest.testNicePartialClassMocking":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":173,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":6,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":333,"org.easymock.tests2.CaptureTest.testCaptureLast":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":212,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":120,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":76,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":89,"org.easymock.tests2.CaptureTest.testCapture1_2446744":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":166,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":298,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":92,"org.easymock.tests.UsageThrowableTest.throwError":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests.UsageStrictMockTest.differentMethods":228,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":274,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":31,"org.easymock.tests2.MockBuilderTest.testCreateMockString":332,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":303,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":341,"org.easymock.tests.UsageExpectAndThrowTest.floatType":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":184,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":339,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":26,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":267,"org.easymock.tests.UsageVerifyTest.twoThrows":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":108,"org.easymock.samples.PartialClassMockTest.testGetArea":251,"org.easymock.tests2.CompareToTest.testLessOrEqual":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":147,"org.easymock.samples.ExampleTest.voteAgainstRemoval":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":308,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":152,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":343,"org.easymock.tests2.UsageTest.niceToStrict":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":159,"org.easymock.tests2.UsageConstraintsTest.testNotNull":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":198,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":52,"org.easymock.tests2.UsageTest.defaultResetToNice":65,"org.easymock.samples.ExampleTest.voteAgainstRemovals":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":345,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":279,"org.easymock.tests2.CallbackTest.callback":113,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":263,"org.easymock.tests.UsageTest.openCallCountByLastCall":219,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":167,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":237,"org.easymock.tests.UsageOverloadedMethodTest.overloading":241,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":206,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":82,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":134,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":81,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":46,"org.easymock.tests.UsageThrowableTest.throwCheckedException":195,"org.easymock.tests2.EasyMockSupportClassTest.testAll":106,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":175,"org.easymock.tests2.CaptureTest.testCaptureAll":41,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":335,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":96,"org.easymock.tests2.UsageConstraintsTest.testMatches":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":98,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":28,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":183,"org.easymock.samples.ExampleTest.voteForRemovals":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":258,"org.easymock.tests2.NameTest.nameForNiceMock":322,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":33,"org.easymock.tests2.DependencyTest.testInterfaceMocking":38,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":257,"org.easymock.tests2.DelegateToTest.testStubDelegate":116,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":197,"org.easymock.tests2.AnswerTest.stubAnswer":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":213,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":118,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":226,"org.easymock.tests2.UsageConstraintsTest.greaterThan":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":340,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":200,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":307,"org.easymock.samples.ExampleTest.voteForRemoval":245,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":30,"org.easymock.tests.UsageExpectAndReturnTest.floatType":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":141,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":319,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":348,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":112,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":327,"org.easymock.tests.UsageThrowableTest.noUpperLimit":192,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":86,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":225,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":69,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":59,"org.easymock.tests2.SerializationTest.test":111,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":254,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":13,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":193,"org.easymock.tests2.UsageConstraintsTest.testSame":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":208,"org.easymock.tests2.CaptureTest.testCaptureFirst":50,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":14,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":190,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":130,"org.easymock.tests.GenericTest.testPackageScope":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":61,"org.easymock.tests2.CaptureTest.testCapture2_2446744":49,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":277,"org.easymock.tests2.NameTest.nameForMock":320,"org.easymock.tests.UsageExpectAndReturnTest.longType":126,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":176,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":266,"org.easymock.tests2.UsageStrictMockTest.differentMethods":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":202,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":346,"org.easymock.tests2.MockedExceptionTest.testRealException":37,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":261,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":196,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":95,"org.easymock.tests2.NameTest.nameForStrictMock":321,"org.easymock.tests2.UsageConstraintsTest.testContains":80,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":36,"org.easymock.tests2.UsageConstraintsTest.testFind":72,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":242,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":5,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":105,"org.easymock.tests.UsageExpectAndReturnTest.object":133,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":336,"org.easymock.tests2.UsageStrictMockTest.range":102,"org.easymock.tests2.UsageConstraintsTest.lessThan":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":275,"org.easymock.tests.UsageTest.exactCallCountByLastCall":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":12,"org.easymock.tests2.CaptureTest.testCaptureRightOne":47,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":232,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":185,"org.easymock.tests2.UsageConstraintsTest.testOr":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":260,"org.easymock.tests.UsageRangeTest.combination":199,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":139,"org.easymock.tests.UsageTest.wrongArguments":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":205,"org.easymock.tests2.MockBuilderTest.testWithConstructor":264,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":136,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":186,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":156,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":300,"org.easymock.tests2.UsageConstraintsTest.cmpTo":79,"org.easymock.tests2.CaptureTest.testCaptureMultiple":285,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":311,"org.easymock.tests2.UsageTest.openCallCountByLastCall":63,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":64,"org.easymock.tests.DefaultClassInstantiatorTest.object":294,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":22,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":155,"org.easymock.tests2.CaptureTest.testCaptureFromStub":48,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":331,"org.easymock.tests.UsageTest.unexpectedCallWithArray":291,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":165,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":137,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":8,"org.easymock.samples.ExampleTest.addAndChangeDocument":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":164,"org.easymock.tests.CapturesMatcherTest.test":286,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":140,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":109,"org.easymock.tests2.CompareToTest.testGreateThan":271,"org.easymock.tests2.UsageTest.resumeIfFailure":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":318,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":129,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":149,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":17}}]
