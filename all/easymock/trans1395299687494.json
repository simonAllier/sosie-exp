[{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[126,488],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[16,18,26,109,110,115,116,118,128],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[52,65,68,69,70,109,125,137,148,150,175,186,187,189,190,193,194,195,199,200,201,202,204,208,209,212,257,489,261,295,297,299,300,301,490,491,389,401,402,403,428,438,440,441,444,445,446,469,470],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[492,493,297,494,495,440],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:94","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[113,131,156,394],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[277,284,286,496,358],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[1,2,3,4,5,7,8,9,10,11,12,13,14,16,17,18,19,21,22,23,24,25,26,29,30,33,34,35,48,49,50,51,52,66,67,70,71,97,107,108,109,110,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,138,139,140,141,144,147,149,153,154,157,159,160,164,165,167,168,171,173,179,180,191,192,194,195,198,201,217,218,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,255,256,257,258,259,260,286,287,290,296,298,301,302,303,305,306,313,321,322,325,326,327,328,329,336,337,339,343,344,345,346,347,348,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,390,391,392,393,394,395,396,397,398,399,400,429,430,431,432,433,436,439,452,455,456,457,458,459,460,461,468,469,470,480,481,482,483,484,485,487],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[12,13,16,17,23,24,26,29,30,33,34,41,52,58,66,67,68,69,70,71,110,113,115,116,133,137,140,149,153,154,155,157,167,168,171,172,179,181,183,190,191,192,194,195,196,197,201,202,203,204,205,206,207,208,209,211,212,213,214,217,218,219,221,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,255,256,286,287,288,289,290,296,298,299,300,301,302,304,305,306,307,308,309,310,311,322,325,326,327,328,329,343,344,345,346,347,348,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,390,391,392,393,394,428,429,430,431,432,433,438,439,442,443,446,447,449,450,454,455,456,468,469,470,471,472,473,474,475,477,480,481,482,483,484,485,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[497],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[14,49,50,72,75,77,79,80,83,86,89,90,93,100,104,136,137,139,140,141,144,146,147,150,151,152,158,161,246,278,279,280,281,282,283,285,312,313,314,315,316,317,318,319,321,322,324,333,334,335,342,434,435,436,437,473,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[12,97,98,182,185,498,499,500,501,502],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[492,493,297,494,495,440],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[109,116],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[5,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,41,48,49,50,51,52,58,65,67,68,69,70,71,75,78,88,94,97,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,147,148,149,150,153,154,155,156,157,158,159,160,161,163,164,165,167,168,171,172,173,175,179,180,181,183,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,263,286,287,288,289,290,291,292,293,294,295,297,298,299,300,301,302,304,305,306,307,308,309,310,311,321,323,325,326,327,328,329,330,331,336,337,339,343,344,345,346,347,348,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,394,397,420,426,428,429,430,431,432,433,436,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,468,469,470,472,476,478,478,479,479,480,481,482,483,485,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[12,98,182,185,498,499,500,503,504],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[67,69,70,139,141,297,298,300,301,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[5,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,67,68,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,144,147,156,255,256,286,287,288,289,290,297,298,347,348,361,362,363,394,428,429,430,431,432,433],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[505,428],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[492,493,297,494,495,440],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[506],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[69,193,199,200,297,300,491,428,440,441,444,445,453,469,470],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[492,493,297,494,495,440],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[125,140,195],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[12,14,48,49,50,72,73,75,77,78,79,80,81,83,84,85,86,88,89,90,91,92,93,94,97,98,99,100,104,136,137,139,140,141,142,144,145,146,147,148,149,150,151,152,158,159,160,161,164,165,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,246,278,279,280,281,282,283,285,312,313,314,315,316,317,318,319,320,321,322,323,324,333,334,335,336,337,339,342,349,354,434,435,436,437,473,474,476,478,479],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":438,"org.easymock.tests2.UsageTest.argumentsOrdered":200,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":414,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":195,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":475,"org.easymock.tests2.DelegateToTest.testReturnException":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":344,"org.easymock.tests.MockingTest.testPartialClassMocking":336,"org.easymock.tests.MockClassControlTest.testToString":314,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":0,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":82,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":226,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":117,"org.easymock.tests2.UsageTest.wrongArguments":193,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":286,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":224,"org.easymock.samples.ExampleTest.answerVsDelegate":481,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":354,"org.easymock.tests2.UsageConstraintsTest.testNull":113,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":341,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":139,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":212,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":319,"org.easymock.tests2.CaptureTest.testPrimitive":19,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":290,"org.easymock.tests.UsageTest.moreThanOneArgument":439,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":245,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":327,"org.easymock.tests.UsageTest.argumentsOrdered":445,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":250,"org.easymock.tests.UsageVarargTest.varargIntAccepted":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":429,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":504,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":173,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":433,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":41,"org.easymock.tests.ReplayStateInvalidUsageTest.times":273,"org.easymock.tests2.DependencyTest.testClassMocking":169,"org.easymock.tests2.AnswerTest.answer":30,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":11,"org.easymock.tests2.CaptureTest.testAnd":16,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":351,"org.easymock.tests2.UsageTest.strictResetToDefault":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":259,"org.easymock.tests2.DelegateToTest.testDelegate":221,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":241,"org.easymock.tests.LimitationsTest.mockFinalMethod":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":347,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":461,"org.easymock.tests2.DependencyTest.testClassMockingSupport":170,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":330,"org.easymock.tests2.CaptureTest.testCapture1_2446744":20,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":143,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":9,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":267,"org.easymock.tests.UsageThrowableTest.throwError":304,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":353,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":64,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":96,"org.easymock.samples.PartialClassMockTest.testGetArea":476,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":268,"org.easymock.tests.MockingTest.testInterfaceMocking":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":430,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":248,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":83,"org.easymock.tests2.UsageTest.niceToStrict":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.MockBuilderTest.testCreateMock":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":44,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":235,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":208,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":350,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":360,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":395,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":222,"org.easymock.tests.UsageOverloadedMethodTest.overloading":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":93,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":450,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":123,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":374,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":25,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":386,"org.easymock.tests2.EasyMockSupportClassTest.testAll":75,"org.easymock.tests.MockClassControlTest.testEquals":318,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":459,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":10,"org.easymock.tests2.CaptureTest.testCaptureAll":17,"org.easymock.tests.MockNameTest.defaultName":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":328,"org.easymock.samples.ExampleTest.voteForRemovals":485,"org.easymock.tests.UsageVarargTest.allKinds":394,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":468,"org.easymock.samples.BasicClassMockTest.testPrintContent":474,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":460,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":310,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":60,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests2.UsageConstraintsTest.greaterThan":126,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":76,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":150,"org.easymock.samples.ExampleTest.voteForRemoval":482,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":285,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":154,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":151,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":355,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":142,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":190,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":246,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":205,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":343,"org.easymock.tests2.CaptureTest.testCaptureFirst":29,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":206,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":202,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":453,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":370,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":156,"org.easymock.tests2.CaptureTest.testCapture2_2446744":28,"org.easymock.tests2.UsageTest.moreThanOneArgument":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":422,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":187,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":393,"org.easymock.tests.GenericTest.testBridgedEquals":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":402,"org.easymock.tests.UsageExpectAndReturnTest.longType":366,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":457,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":244,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":131,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":325,"org.easymock.tests.UsageCallCountTest.tooManyCalls":403,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":371,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":309,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":159,"org.easymock.tests.MockingTest.testNiceClassMocking":342,"org.easymock.tests.MockingTest.testClassMocking":334,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":396,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":112,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":456,"org.easymock.tests.MockTypeTest.fromEasyMockClass":352,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":7,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests.UsageExpectAndReturnTest.object":373,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":211,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":388,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":465,"org.easymock.tests.UsageTest.exactCallCountByLastCall":446,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":251,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":379,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":383,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":449,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":54,"org.easymock.tests.MockClassControlTest.testHashCode":317,"org.easymock.tests2.EasyMockSupportTest.testVerify":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":85,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":252,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":447,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":359,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":490,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":8,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":15,"org.easymock.tests.UsageVarargTest.varargCharAccepted":387,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":277,"org.easymock.tests2.CaptureTest.testCaptureMultiple":506,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":427,"org.easymock.tests2.UsageTest.openCallCountByLastCall":196,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":214,"org.easymock.tests.DefaultClassInstantiatorTest.object":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":358,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":463,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":86,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":39,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":53,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":148,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":316,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":232,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":380,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":94,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":315,"org.easymock.tests2.UsageTest.resumeIfFailure":201,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":346,"org.easymock.tests2.StubTest.stubWithReturnValue":168,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":372,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":420,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":472,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":238,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":426,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":31,"org.easymock.tests.UsageExpectAndThrowTest.object":236,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":264,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.DelegateToTest.testWrongClass":219,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":255,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":256,"org.easymock.samples.ConstructorCalledMockTest.testTax":478,"org.easymock.tests.UsageStrictMockTest.range":300,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":105,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":158,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":237,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":181,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":72,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":223,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":494,"org.easymock.tests2.CaptureTest.testCaptureNone":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":249,"org.easymock.tests.UsageUnorderedTest.message":428,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":489,"org.easymock.tests.UsageVerifyTest.twoReturns":470,"org.easymock.tests.UsageVarargTest.varargByteAccepted":392,"org.easymock.tests2.ThreadingTest.testThreadSafe":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":89,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":400,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":473,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":466,"org.easymock.tests2.CaptureTest.testCapture_2617107":18,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":289,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests2.StubTest.stub":167,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndThrowTest.longType":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":345,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":282,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":271,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":68,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":436,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":382,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":38,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":71,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":497,"org.easymock.tests2.NameTest.nameForMocksControl":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":40,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":77,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":443,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":6,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":230,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":339,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":136,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":183,"org.easymock.tests.MockingTest.testNicePartialClassMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":141,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":36,"org.easymock.tests2.CaptureTest.testCaptureLast":23,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":331,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":165,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":335,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":234,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":199,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":134,"org.easymock.samples.ExampleTest.removeNonExistingDocument":486,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":43,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":269,"org.easymock.tests.UsageStrictMockTest.differentMethods":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":55,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":280,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":155,"org.easymock.tests2.MockBuilderTest.testCreateMockString":189,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":79,"org.easymock.tests.UsageExpectAndThrowTest.floatType":228,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":74,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":33,"org.easymock.tests.UsageVerifyTest.twoThrows":469,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":99,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":88,"org.easymock.samples.ExampleTest.voteAgainstRemoval":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":415,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":247,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":149,"org.easymock.tests.LimitationsTest.privateConstructor":435,"org.easymock.tests2.UsageConstraintsTest.testNotNull":133,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":311,"org.easymock.tests2.UsageTest.defaultResetToNice":198,"org.easymock.samples.ExampleTest.voteAgainstRemovals":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":378,"org.easymock.tests.UsageVarargTest.differentLength":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":37,"org.easymock.tests2.CallbackTest.callback":52,"org.easymock.tests2.UsageConstraintsTest.equals":111,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":145,"org.easymock.tests.UsageTest.openCallCountByLastCall":442,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":288,"org.easymock.tests.UsageCallCountTest.tooFewCalls":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":161,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":225,"org.easymock.tests.UsageThrowableTest.throwCheckedException":308,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":495,"org.easymock.tests.MockingTest.testStrictClassMocking":333,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":164,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":362,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":42,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":163,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":35,"org.easymock.tests.ObjectMethodsTest.testHashCode":464,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":503,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":157,"org.easymock.tests2.NameTest.nameForNiceMock":3,"org.easymock.tests2.DependencyTest.testInterfaceMocking":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":95,"org.easymock.tests2.DelegateToTest.testStubDelegate":218,"org.easymock.tests2.AnswerTest.stubAnswer":34,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":298,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":184,"org.easymock.tests.UsageVarargTest.varargLongAccepted":391,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.floatType":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":97,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":479,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":62,"org.easymock.tests.UsageThrowableTest.noUpperLimit":305,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":108,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":100,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":21,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":279,"org.easymock.tests2.UsageConstraintsTest.testSame":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":364,"org.easymock.samples.SupportTest.addDocument":471,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":496,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":162,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":80,"org.easymock.tests.GenericTest.testPackageScope":321,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":61,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":340,"org.easymock.tests2.NameTest.nameForMock":1,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":375,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":188,"org.easymock.tests2.UsageStrictMockTest.differentMethods":70,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":146,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":367,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":240,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":260,"org.easymock.tests2.MockedExceptionTest.testRealException":51,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":417,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":276,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":287,"org.easymock.tests2.NameTest.nameForStrictMock":2,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":178,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":5,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":140,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":104,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":505,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":128,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":281,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":175,"org.easymock.tests2.UsageStrictMockTest.range":69,"org.easymock.tests2.UsageConstraintsTest.lessThan":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":204,"org.easymock.tests2.CaptureTest.testCaptureRightOne":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":84,"org.easymock.tests2.UsageConstraintsTest.testOr":115,"org.easymock.tests.UsageRangeTest.combination":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":137,"org.easymock.tests.UsageTest.wrongArguments":441,"org.easymock.tests2.MockBuilderTest.testWithConstructor":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":81,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":376,"org.easymock.tests.UsageVarargTest.varargShortAccepted":390,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":283,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":401,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":407,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":197,"org.easymock.tests2.CaptureTest.testCaptureFromStub":27,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":266,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":176,"org.easymock.tests.UsageTest.unexpectedCallWithArray":440,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":399,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":377,"org.easymock.tests2.UsageConstraintsTest.constraints":109,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.samples.ExampleTest.addAndChangeDocument":487,"org.easymock.tests.UsageStrictMockTest.testVerify":303,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":477,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests2.CompareToTest.testGreateThan":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":458,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":431,"org.easymock.tests.LimitationsTest.abstractClass":434,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":369,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":432,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":209}}]
