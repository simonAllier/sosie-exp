[{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[15,16,17,18,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,22,23,24,25,19,26,27,28,29,30,31,32,20,33],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[34,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[36,36,37,37,38,0,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[65,4,66,67,7,68,69,70,71,72,73,24,74,75,76,77,78,79,80,81,33,82,83,84,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[15,16,17,18,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[86,87,88],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[91,92,93],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,32,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[108,109],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[24,74,79,33,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[110],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,22,23,24,25,19,26,27,28,29,30,31,32,20,33],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[36,37,111,112,113,114,115,116,117,118,119,120,121,122,38,123,124,125,0,1,2,126,127,128,129,130,131,132,133,134,135,136,137,138,39,139,140,141,142,143,144,145,146,147,40,148,149,150,151,152,41,153,154,155,156,157,158,65,4,5,159,66,6,67,7,8,160,9,161,91,68,162,163,69,164,165,70,10,166,167,168,169,11,71,108,170,171,172,173,174,175,176,177,178,179,12,180,13,181,94,182,183,184,185,186,14,187,95,188,189,190,191,192,193,89,194,195,196,197,198,199,200,201,21,202,203,72,73,204,22,23,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,42,221,43,44,222,45,46,223,47,224,48,49,50,225,51,226,52,227,228,229,230,231,232,53,233,92,54,234,235,55,56,236,237,57,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,58,59,268,269,270,271,272,273,274,275,276,277,278,279,280,60,281,282,283,284,285,286,287,24,74,288,289,290,291,292,293,294,295,296,297,298,299,34,300,301,86,35,302,303,304,305,306,307,308,309,310,311,312,313,314,96,315,316,317,318,319,97,320,321,322,323,324,98,325,326,327,99,328,100,329,330,331,332,333,334,335,336,337,75,338,339,340,341,342,343,344,345,346,347,348,61,349,350,62,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,101,389,19,26,76,77,27,28,390,391,102,392,393,394,395,396,103,397,398,399,400,401,104,402,403,404,105,405,106,406,407,78,79,29,30,408,409,410,63,411,412,413,414,64,415,416,417,418,419,420,80,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,31,437,438,439,440,441,442,81,443,444,445,446,447,448,449,450,90,451,452,453,454,455,456,457,107,458,459,460,461,462,463,464,465,466,467,468,469,470,32,471,472,20,473,474,33,82,475,476,477,478,479,480,481,482,483,83,84,484,485,486,487,488,489,490,491,492,85,493,494,495,496,497,498],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[110],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[502],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[164,231],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[387,444],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[410],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.ArgumentToString:40","failures":[201,504,15,505,506,507,16,508,286,24,74,17,18,509,25,329,330,389,19,79,29,30,32,20,473,33,82],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[4,5,7,8,9,10,12,13,14],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[0,224,50,510,511,512,513,58,59],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[158,4,165,169,514],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[34,300,301,35,303],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests2.UsageTest.argumentsOrdered":23,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":90,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":203,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":122,"org.easymock.tests2.DelegateToTest.testReturnException":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":478,"org.easymock.tests.MockingTest.testPartialClassMocking":307,"org.easymock.tests.MockClassControlTest.testToString":343,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":263,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":391,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":510,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":384,"org.easymock.tests2.UsageTest.wrongArguments":21,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":64,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":312,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":230,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":216,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":348,"org.easymock.tests2.CaptureTest.testPrimitive":181,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":388,"org.easymock.tests.UsageTest.moreThanOneArgument":389,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":106,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":488,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":483,"org.easymock.tests.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageVarargTest.varargIntAccepted":357,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":437,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":42,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":279,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":441,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":256,"org.easymock.tests.ReplayStateInvalidUsageTest.times":380,"org.easymock.tests2.DependencyTest.testClassMocking":247,"org.easymock.tests2.AnswerTest.answer":170,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":457,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":179,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":412,"org.easymock.tests2.CaptureTest.testAnd":12,"org.easymock.tests2.UsageTest.strictResetToDefault":200,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":339,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":485,"org.easymock.tests2.DelegateToTest.testDelegate":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":403,"org.easymock.tests.LimitationsTest.mockFinalMethod":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":467,"org.easymock.tests2.DependencyTest.testClassMockingSupport":248,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":329,"org.easymock.tests2.CaptureTest.testCapture1_2446744":94,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":177,"org.easymock.tests.UsageThrowableTest.throwError":420,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":374,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":414,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":280,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":154,"org.easymock.samples.PartialClassMockTest.testGetArea":38,"org.easymock.tests.MockingTest.testInterfaceMocking":309,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":375,"org.easymock.tests2.CompareToTest.testLessOrEqual":514,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":438,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":102,"org.easymock.tests2.UsageTest.niceToStrict":202,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":337,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":46,"org.easymock.tests2.MockBuilderTest.testCreateMock":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":150,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":398,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":15,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":212,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":411,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":491,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":147,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":434,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":163,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":323,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":162,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":87,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":186,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":358,"org.easymock.tests2.EasyMockSupportClassTest.testAll":136,"org.easymock.tests.MockClassControlTest.testEquals":347,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":465,"org.easymock.tests2.CaptureTest.testCaptureAll":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":178,"org.easymock.tests.MockNameTest.defaultName":295,"org.easymock.tests2.UsageConstraintsTest.testMatches":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":489,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":372,"org.easymock.samples.ExampleTest.voteForRemovals":116,"org.easymock.tests.UsageVarargTest.allKinds":366,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":466,"org.easymock.samples.BasicClassMockTest.testPrintContent":120,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":425,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":482,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":276,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":513,"org.easymock.tests2.UsageConstraintsTest.greaterThan":165,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":236,"org.easymock.samples.ExampleTest.voteForRemoval":113,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":303,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":190,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":415,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":53,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":199,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":371,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":209,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":477,"org.easymock.tests2.CaptureTest.testCaptureFirst":188,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":210,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":31,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":97,"org.easymock.tests2.CaptureTest.testCapture2_2446744":95,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":192,"org.easymock.tests2.UsageTest.moreThanOneArgument":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":51,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":365,"org.easymock.tests.GenericTest.testBridgedEquals":351,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":497,"org.easymock.tests.UsageExpectAndReturnTest.longType":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":463,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":405,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":168,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":486,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":418,"org.easymock.tests.UsageCallCountTest.tooManyCalls":498,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":395,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":424,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":239,"org.easymock.tests.MockingTest.testNiceClassMocking":313,"org.easymock.tests.MockingTest.testClassMocking":305,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":492,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":282,"org.easymock.tests2.UsageConstraintsTest.testFind":66,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":78,"org.easymock.tests.MockTypeTest.fromEasyMockClass":413,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":471,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":157,"org.easymock.tests.UsageExpectAndReturnTest.object":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":511,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":360,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":390,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":83,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":352,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":327,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":433,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":270,"org.easymock.tests.MockClassControlTest.testHashCode":346,"org.easymock.tests2.EasyMockSupportTest.testVerify":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":145,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":469,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":176,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":220,"org.easymock.tests.UsageVarargTest.varargCharAccepted":359,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":298,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":462,"org.easymock.tests2.UsageTest.openCallCountByLastCall":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":500,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":218,"org.easymock.tests.DefaultClassInstantiatorTest.object":299,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":468,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":146,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":103,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":422,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":269,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":55,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":396,"org.easymock.tests.CapturesMatcherTest.test":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":99,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":417,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":344,"org.easymock.tests2.UsageTest.resumeIfFailure":205,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":480,"org.easymock.tests2.StubTest.stubWithReturnValue":290,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":224,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":321,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":456,"org.easymock.samples.SupportTest.voteForRemovals":124,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":272,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":401,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":461,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":171,"org.easymock.tests.UsageExpectAndThrowTest.object":399,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":354,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":166,"org.easymock.tests2.DelegateToTest.testWrongClass":196,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":367,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":368,"org.easymock.samples.ConstructorCalledMockTest.testTax":36,"org.easymock.tests.UsageStrictMockTest.range":33,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":131,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":400,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":133,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":410,"org.easymock.tests2.CaptureTest.testCaptureNone":185,"org.easymock.tests.UsageUnorderedTest.message":32,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":364,"org.easymock.tests2.ThreadingTest.testThreadSafe":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":148,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":495,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":119,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":387,"org.easymock.tests2.UsageConstraintsTest.any":161,"org.easymock.tests2.StubTest.stub":289,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndThrowTest.longType":393,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":86,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":378,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":287,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests.LimitationsTest.mockNativeMethod":429,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":62,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":253,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":288,"org.easymock.tests2.NameTest.nameForMocksControl":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":255,"org.easymock.tests2.MockedExceptionTest.testMockedException":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":138,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":394,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":156,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":310,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":48,"org.easymock.tests.MockingTest.testNicePartialClassMocking":308,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":232,"org.easymock.tests2.CompareToTest.testNotComparable":503,"org.easymock.tests2.CaptureTest.testCaptureLast":184,"org.easymock.tests2.CompareToTest.testCompareEqual":93,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":251,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":245,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":167,"org.easymock.tests.MockingTest.testTwoMocks":306,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":314,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":397,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":71,"org.easymock.samples.ExampleTest.removeNonExistingDocument":117,"org.easymock.tests.UsageStrictMockTest.differentMethods":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":258,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":271,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":300,"org.easymock.tests2.ConstraintsToStringTest.andToString":507,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":191,"org.easymock.tests2.MockBuilderTest.testCreateMockString":52,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":341,"org.easymock.tests.UsageExpectAndThrowTest.floatType":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":139,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":135,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":173,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":268,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":40,"org.easymock.samples.ExampleTest.voteAgainstRemoval":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":408,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":56,"org.easymock.tests.LimitationsTest.privateConstructor":428,"org.easymock.tests2.UsageConstraintsTest.testNotNull":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":426,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":60,"org.easymock.tests2.UsageTest.defaultResetToNice":204,"org.easymock.samples.ExampleTest.voteAgainstRemovals":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":326,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":252,"org.easymock.tests.UsageVarargTest.differentLength":361,"org.easymock.tests2.CallbackTest.callback":125,"org.easymock.tests2.UsageConstraintsTest.equals":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":54,"org.easymock.tests.UsageTest.openCallCountByLastCall":76,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":158,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":386,"org.easymock.tests.UsageCallCountTest.tooFewCalls":493,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests.UsageThrowableTest.throwCheckedException":423,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":18,"org.easymock.tests.MockingTest.testStrictClassMocking":304,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":244,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":297,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":257,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":243,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":175,"org.easymock.tests.ObjectMethodsTest.testHashCode":334,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":110,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":193,"org.easymock.tests2.NameTest.nameForNiceMock":266,"org.easymock.tests2.DependencyTest.testInterfaceMocking":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":512,"org.easymock.samples.ExampleTest.addDocument":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":153,"org.easymock.tests2.DelegateToTest.testStubDelegate":195,"org.easymock.tests2.AnswerTest.stubAnswer":174,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":473,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":49,"org.easymock.tests.UsageVarargTest.varargLongAccepted":363,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.floatType":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":328,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.tests2.ConstraintsToStringTest.orToString":504,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":37,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":70,"org.easymock.tests.UsageThrowableTest.noUpperLimit":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":278,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":65,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":126,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":182,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":88,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":96,"org.easymock.tests2.UsageConstraintsTest.testSame":67,"org.easymock.samples.SupportTest.addDocument":123,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":242,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":140,"org.easymock.tests.GenericTest.testPackageScope":349,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":277,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":311,"org.easymock.tests2.NameTest.nameForMock":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":324,"org.easymock.tests2.UsageStrictMockTest.differentMethods":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":226,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":402,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":340,"org.easymock.tests2.MockedExceptionTest.testRealException":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":132,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":453,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":385,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":383,"org.easymock.tests2.NameTest.nameForStrictMock":265,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":501,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":155,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":231,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":130,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":301,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":43,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":144,"org.easymock.tests2.CaptureTest.testCaptureRightOne":14,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":228,"org.easymock.tests.UsageTest.wrongArguments":26,"org.easymock.tests2.MockBuilderTest.testWithConstructor":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":141,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":81,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":35,"org.easymock.tests.UsageVarargTest.varargShortAccepted":362,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":496,"org.easymock.tests2.UsageConstraintsTest.cmpTo":91,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":172,"org.easymock.tests2.CompareToTest.testLessThan":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests2.CaptureTest.testCaptureFromStub":187,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":373,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":44,"org.easymock.tests.UsageTest.unexpectedCallWithArray":19,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":325,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":474,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.samples.ExampleTest.addAndChangeDocument":118,"org.easymock.tests2.ConstraintsToStringTest.notToString":505,"org.easymock.tests.UsageStrictMockTest.testVerify":476,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":121,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":472,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":464,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":439,"org.easymock.tests.LimitationsTest.abstractClass":427,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":440,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":213,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":356}}]
