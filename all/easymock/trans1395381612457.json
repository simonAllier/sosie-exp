[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[243],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[182],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:243","failures":[20,21,22,23,244,245,68,70,71,73,74,75,76,77,78,79,80,83,84,86,87,88,90,91,92,93,94,95,246,247,248,96,97,98,99,100,249,104,250,251,252,253,112,114,115,117,121,123,254,126,127,128,255,132,134,135,136,137,141,142,154,155,156,157,158,159,160,256,161,257,176,178,179,208,219,220,221,222,223,224,225,227],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[183,189,230,232,240],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[258,216,217,218],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[259,260,261,262,263,264,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[200],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[160,265,266,267,256,161,257,268,269,270,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"key"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[70,71,101,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[147,168],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[273,35,36,274,275],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[276,24,38,102,140,143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[277,278,261,279,280,262,264,281,221,225,282],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[280,283,284,285,286,287,288,289,290,291,208,281,216],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[17,113,138,139,162,210,211,213],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[8,26,27,28,29,30,31,32,33,110,126,127,128,155,184,189,216,217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[0,292,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[294,295,296,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[298,299],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[300,301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"qualifier":"this","this":"name"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[158,197],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[303,304,305,306,307],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[138,139,203,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":184,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.UsageTest.argumentsOrdered":152,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":172,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":148,"org.easymock.tests2.StubTest.stubWithReturnValue":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":280,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":84,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":122,"org.easymock.tests2.SerializationTest.testAllMockedMethod":218,"org.easymock.tests2.DelegateToTest.testReturnException":226,"org.easymock.tests.MockingTest.testPartialClassMocking":20,"org.easymock.samples.SupportTest.voteForRemovals":121,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":273,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":302,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":58,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":46,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":135,"org.easymock.tests.UsageExpectAndThrowTest.object":56,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":201,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":286,"org.easymock.tests2.DelegateToTest.testWrongClass":228,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":74,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":104,"org.easymock.tests2.UsageTest.wrongArguments":146,"org.easymock.samples.ConstructorCalledMockTest.testTax":259,"org.easymock.tests.UsageStrictMockTest.range":70,"org.easymock.samples.ExampleTest.answerVsDelegate":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":219,"org.easymock.tests2.UsageConstraintsTest.testNull":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":57,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":157,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":171,"org.easymock.tests2.CaptureTest.testPrimitive":233,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":65,"org.easymock.tests.UsageTest.moreThanOneArgument":39,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":252,"org.easymock.tests2.CaptureTest.testCaptureNone":238,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":0,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests.UsageVerifyTest.twoReturns":103,"org.easymock.tests.UsageVarargTest.varargByteAccepted":32,"org.easymock.tests2.ThreadingTest.testThreadSafe":129,"org.easymock.tests.UsageTest.argumentsOrdered":44,"org.easymock.tests.UsageVarargTest.varargIntAccepted":27,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":4,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":124,"org.easymock.tests2.CaptureTest.testCapture_2617107":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":107,"org.easymock.tests2.UsageConstraintsTest.any":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":100,"org.easymock.tests.UsageExpectAndThrowTest.longType":49,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":177,"org.easymock.tests2.SerializationTest.testClass":216,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":209,"org.easymock.tests.LimitationsTest.mockNativeMethod":23,"org.easymock.tests2.DependencyTest.testClassMocking":300,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":274,"org.easymock.tests2.AnswerTest.answer":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":94,"org.easymock.tests2.CaptureTest.testAnd":230,"org.easymock.tests2.UsageTest.strictResetToDefault":144,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":279,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":267,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":251,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":167,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests2.DelegateToTest.testDelegate":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":50,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":22,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":128,"org.easymock.tests.MockingTest.testNicePartialClassMocking":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":61,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":159,"org.easymock.tests2.CompareToTest.testCompareEqual":305,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":285,"org.easymock.tests2.CaptureTest.testCaptureLast":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":24,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":225,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":189,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":202,"org.easymock.tests2.DependencyTest.testClassMockingSupport":301,"org.easymock.tests2.CaptureTest.testCapture1_2446744":234,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":282,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":54,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":151,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":206,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":293,"org.easymock.tests.UsageThrowableTest.throwError":9,"org.easymock.tests.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":292,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":131,"org.easymock.tests.UsageExpectAndThrowTest.floatType":48,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":197,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":211,"org.easymock.tests.UsageVerifyTest.twoThrows":102,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":136,"org.easymock.samples.PartialClassMockTest.testGetArea":123,"org.easymock.tests2.CompareToTest.testLessOrEqual":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":97,"org.easymock.samples.ExampleTest.voteAgainstRemoval":115,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":244,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":243,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":47,"org.easymock.tests2.UsageTest.niceToStrict":147,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":278,"org.easymock.tests2.UsageConstraintsTest.testNotNull":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":16,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":126,"org.easymock.samples.ExampleTest.voteAgainstRemovals":112,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":90,"org.easymock.tests2.CallbackTest.callback":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":265,"org.easymock.tests.UsageTest.openCallCountByLastCall":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":55,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":106,"org.easymock.tests.UsageCallCountTest.tooFewCalls":2,"org.easymock.tests.UsageOverloadedMethodTest.overloading":110,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":195,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":19,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":86,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":109,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":194,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":239,"org.easymock.tests.UsageThrowableTest.throwCheckedException":13,"org.easymock.tests2.EasyMockSupportClassTest.testAll":134,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":36,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":63,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":263,"org.easymock.tests2.CaptureTest.testCaptureAll":231,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":224,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":221,"org.easymock.tests2.UsageConstraintsTest.testMatches":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":223,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":253,"org.easymock.tests2.CompareToTest.testGreateOrEqual":306,"org.easymock.samples.ExampleTest.voteForRemovals":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":290,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":133,"org.easymock.tests.UsageVarargTest.allKinds":34,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":101,"org.easymock.tests2.DependencyTest.testInterfaceMocking":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":288,"org.easymock.samples.BasicClassMockTest.testPrintContent":125,"org.easymock.samples.ExampleTest.addDocument":116,"org.easymock.tests2.DelegateToTest.testStubDelegate":227,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":15,"org.easymock.tests2.AnswerTest.stubAnswer":212,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":299,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":291,"org.easymock.tests2.UsageConstraintsTest.greaterThan":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":246,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":257,"org.easymock.tests.UsageVarargTest.varargLongAccepted":31,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.samples.ExampleTest.voteForRemoval":114,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":268,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":93,"org.easymock.tests.UsageExpectAndReturnTest.floatType":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":208,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":260,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":199,"org.easymock.tests.UsageThrowableTest.noUpperLimit":10,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":7,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":143,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":182,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":270,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":235,"org.easymock.tests2.SerializationTest.test":217,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":165,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":76,"org.easymock.tests2.UsageConstraintsTest.testSame":187,"org.easymock.samples.SupportTest.addDocument":120,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":298,"org.easymock.tests2.CaptureTest.testCaptureFirst":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":166,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":153,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":82,"org.easymock.tests.GenericTest.testPackageScope":35,"org.easymock.tests2.CaptureTest.testCapture2_2446744":241,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":132,"org.easymock.tests2.UsageTest.moreThanOneArgument":145,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":255,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":33,"org.easymock.tests.GenericTest.testBridgedEquals":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":5,"org.easymock.tests.UsageExpectAndReturnTest.longType":78,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":64,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":249,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":62,"org.easymock.tests2.UsageStrictMockTest.differentMethods":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":266,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":79,"org.easymock.tests.UsageCallCountTest.tooManyCalls":6,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":248,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":51,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":176,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":105,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":220,"org.easymock.tests2.UsageConstraintsTest.testContains":193,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":214,"org.easymock.tests2.UsageConstraintsTest.testFind":185,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":111,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":158,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":139,"org.easymock.tests.UsageExpectAndReturnTest.object":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":272,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":200,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":160,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":254,"org.easymock.tests2.UsageStrictMockTest.range":178,"org.easymock.tests2.UsageConstraintsTest.lessThan":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":287,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":29,"org.easymock.tests.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":289,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":164,"org.easymock.tests2.CaptureTest.testCaptureRightOne":240,"org.easymock.tests2.UsageConstraintsTest.testOr":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":281,"org.easymock.tests.UsageRangeTest.combination":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":91,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":25,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":155,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":18,"org.easymock.tests.UsageTest.wrongArguments":40,"org.easymock.tests2.MockBuilderTest.testWithConstructor":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":80,"org.easymock.tests2.EasyMockSupportTest.testVerify":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":88,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":17,"org.easymock.tests.UsageVarargTest.varargShortAccepted":30,"org.easymock.tests2.UsageConstraintsTest.cmpTo":192,"org.easymock.tests.UsageVarargTest.varargCharAccepted":28,"org.easymock.tests2.CompareToTest.testLessThan":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":276,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":175,"org.easymock.tests2.UsageTest.openCallCountByLastCall":149,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":150,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":173,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":53,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":3,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":262,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":256,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.UsageConstraintsTest.constraints":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":52,"org.easymock.samples.ExampleTest.addAndChangeDocument":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":92,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":295,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":119,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":137,"org.easymock.tests2.CompareToTest.testGreateThan":304,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":99,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":169,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":271}}]
