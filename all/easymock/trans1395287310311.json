[{"position":"org.easymock.internal.ReflectionUtils:107","failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[110,111],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[112,113,114,115,116,117],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,118,119,120,121,122,5,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,111,140,141,142,143,144,145,146,147,12,14,15,148,149,150,151,152,153,154,155,156,157,21,22,158,23,24,25,27,32,159,160,161,162,163,164,112,165,166,167,168,169,170,171,172,173,174,175,113,41,42,43,44,176,45,46,177,178,179,180,181,182,183,184,185,186,187,51,54,64,70,188,189,190,191,192,73,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,78,79,80,214,215,216,114,217,218,219,220,221,222,223,224,225,226,227,228,93,95,229,230,231,232,233,234,235,236,107,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[256],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[257,258,256],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[36,37,38,259,112,169,113,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,114,219,281,223,227,228,231,282,283,284,285,286,287,116,288],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:148","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError(java.lang.StringBuilder))","type":"CtThrowImpl"},"failures":[18,20,289,290,291,191,192,292,293,294,295,296,117,247,297,251,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[298],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[0,1,1,2,2,118,300,119,120,301,121,302,303,3,4,304,305,122,5,306,307,308,309,310,311,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,111,140,141,142,143,312,144,145,146,147,313,314,315,316,7,9,12,13,14,15,17,18,20,148,149,317,150,151,318,319,152,153,154,155,320,156,157,21,22,158,23,24,25,26,27,30,31,32,33,159,160,161,162,163,36,37,38,259,164,112,165,166,289,167,321,168,169,322,290,291,170,171,172,173,323,174,324,325,175,326,327,328,329,113,41,42,43,44,176,45,46,177,178,179,180,181,182,183,330,184,185,186,187,331,51,54,64,70,188,332,333,334,189,335,336,337,190,338,191,192,339,73,193,74,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,340,341,342,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,77,78,79,80,343,344,345,346,347,348,349,350,280,351,352,353,299,354,355,214,356,215,216,114,217,292,293,218,219,294,295,220,84,357,358,359,360,361,362,363,364,365,366,296,367,368,369,221,281,222,370,223,224,225,226,227,228,93,94,95,229,230,231,371,372,373,374,375,376,377,378,379,380,381,382,383,107,237,238,282,283,239,384,385,386,387,240,241,242,243,244,245,284,285,286,287,116,288,246,117,247,388,389,390,391,392,393,394,395,248,249,396,397,297,250,398,251,252,399,400,253,254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[401],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[310,311,123,124,125,126,127,128,129,130,131,132,298,133,134,135,136,137,138,139,111,140,141,142,143,312,144,145,146,147,313,148,149,317,150,151,318,319,152,153,154,155,320,156,157,27,30,162,402,174,190,338,296,367,221,281,222,383,97,237,238,282,283,239,240,241,242,243,244,116,288,248,249,297,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[148,149,317,150,151,318,319,152,153,154,155,320,156,157,403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[110,111],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[300,310,311,323,188,334,335,348,404],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[86,90],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[0,118,300,119,120,301,121,303,3,4,304,305,122,5,126,131,132,133,134,136,139,141,142,143,312,144,12,14,15,148,149,317,150,318,319,152,153,154,155,157,21,22,158,23,24,25,27,32,162,163,38,164,112,165,289,167,321,290,291,171,172,173,402,174,325,326,41,42,43,44,176,45,46,177,178,179,180,181,182,183,184,185,186,187,331,51,54,64,70,188,334,337,338,339,73,193,74,262,263,265,270,275,196,197,199,204,209,78,79,80,405,348,350,280,352,354,293,294,295,220,84,222,370,223,224,225,226,227,228,93,94,229,230,373,374,375,376,377,379,380,381,382,383,107,283,117,247,391,392,394,395,397,297,398,399],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[289,290,291,191,353,406,292,293,294,295,296,117,247,297,251],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[73,193,74,407],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[408],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[409,410,411,412,292,297],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[139,24,321,401],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[300,310,311,323,188,334,335,348],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[413,414,415,416,417,418],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[419],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[3,4,21,22,23,24,25,27,29,30,33,34,35,37,38,39,40,41,44,48,51,53,55,56,59,62,65,66,69,74,75,76,77,81,84,85,86,87,88,89,90,91,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[36,37,38,259,112,169,113,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,114,219,281,222,223,224,225,226,227,228,231,282,283,284,285,286,287,116,288,117],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[1,1,2,2,123,124,127,128,129,130,135,137,138,111,140,145,146,147,320,190,343,344,345,346,347,221,237,238,239,240,241,242,243,244,248,249,250],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[420],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[125,126,128,130,131,298,141,145,148,317,155],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[409,410,411,412,292,297],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[421],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[191,422,423,296,117,247,251],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[0,1,2,118,300,119,120,301,121,302,303,3,4,304,305,122,5,310,311,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,111,140,141,142,143,312,144,145,146,147,313,314,315,316,7,9,12,13,14,15,17,18,20,148,149,317,150,151,318,319,152,153,154,155,320,156,157,21,22,158,23,24,25,26,27,30,31,32,33,159,160,161,162,163,36,37,38,259,164,112,165,166,289,167,321,168,169,322,290,291,170,171,172,173,323,174,325,175,326,328,329,113,41,42,43,44,176,45,46,177,178,179,180,181,182,183,330,184,185,186,187,331,51,54,64,70,188,334,189,335,336,337,190,338,191,192,339,73,193,74,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,78,79,80,343,344,345,346,347,348,350,280,353,214,215,216,114,217,292,293,218,219,294,295,220,84,362,363,364,365,366,296,221,281,222,370,223,224,225,226,227,228,93,94,229,230,231,373,374,375,376,377,378,379,380,381,382,383,403,403,107,237,238,282,283,239,384,385,386,387,240,241,242,243,244,284,285,286,287,116,288,246,117,247,389,390,391,392,393,394,395,248,249,396,397,297,250,398,251,252,399],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":126,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests2.UsageTest.argumentsOrdered":291,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":186,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":321,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":303,"org.easymock.tests2.DelegateToTest.testReturnException":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":285,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.tests.MockClassControlTest.testToString":99,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":260,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":173,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":237,"org.easymock.tests2.UsageTest.wrongArguments":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":386,"org.easymock.samples.ExampleTest.answerVsDelegate":300,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":83,"org.easymock.tests2.UsageConstraintsTest.testNull":128,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":185,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":104,"org.easymock.tests2.CaptureTest.testPrimitive":150,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":239,"org.easymock.tests.UsageTest.moreThanOneArgument":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":279,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":345,"org.easymock.tests.UsageTest.argumentsOrdered":295,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":7,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":244,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests2.AnswerTest.answer":188,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":316,"org.easymock.tests2.CaptureTest.testAnd":148,"org.easymock.tests2.UsageTest.strictResetToDefault":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":215,"org.easymock.tests2.DelegateToTest.testDelegate":328,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":275,"org.easymock.tests.LimitationsTest.mockFinalMethod":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":299,"org.easymock.tests2.CaptureTest.testCapture1_2446744":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":314,"org.easymock.tests.UsageThrowableTest.throwError":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":72,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":254,"org.easymock.tests2.UsageTest.niceToStrict":167,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":261,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":256,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":12,"org.easymock.tests2.MockBuilderTest.testCreateMock":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":67,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":409,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":269,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":388,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":384,"org.easymock.tests.UsageOverloadedMethodTest.overloading":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":69,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":137,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":205,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":229,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":136,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":154,"org.easymock.tests.MockClassControlTest.testEquals":103,"org.easymock.tests2.EasyMockSupportClassTest.testAll":51,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":94,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":277,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":408,"org.easymock.tests2.CaptureTest.testCaptureAll":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":364,"org.easymock.tests2.UsageConstraintsTest.testMatches":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":346,"org.easymock.samples.ExampleTest.voteForRemovals":121,"org.easymock.tests.UsageVarargTest.allKinds":383,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":246,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":365,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":227,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":288,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":327,"org.easymock.tests2.UsageConstraintsTest.greaterThan":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":356,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":33,"org.easymock.samples.ExampleTest.voteForRemoval":119,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":91,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":160,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":34,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":26,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":112,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":84,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":179,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":284,"org.easymock.tests2.CaptureTest.testCaptureFirst":157,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":180,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":201,"org.easymock.tests2.UsageTest.moreThanOneArgument":166,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":162,"org.easymock.tests2.CaptureTest.testCapture2_2446744":156,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":18,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":382,"org.easymock.tests.GenericTest.testBridgedEquals":96,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":394,"org.easymock.tests.UsageExpectAndReturnTest.longType":197,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":362,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":278,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":312,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":343,"org.easymock.tests.UsageCallCountTest.tooManyCalls":395,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":226,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":42,"org.easymock.tests.MockingTest.testNiceClassMocking":81,"org.easymock.tests.MockingTest.testClassMocking":76,"org.easymock.tests2.UsageConstraintsTest.testContains":135,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":8,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":127,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":231,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":396,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":311,"org.easymock.tests.UsageExpectAndReturnTest.object":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":184,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":377,"org.easymock.tests.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":221,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":358,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":210,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":350,"org.easymock.tests.MockClassControlTest.testHashCode":102,"org.easymock.tests2.EasyMockSupportTest.testVerify":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":61,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":359,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":313,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":402,"org.easymock.tests.UsageVarargTest.varargCharAccepted":376,"org.easymock.tests2.CaptureTest.testCaptureMultiple":420,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":236,"org.easymock.tests2.UsageTest.openCallCountByLastCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":187,"org.easymock.tests.DefaultClassInstantiatorTest.object":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":257,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":367,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":224,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":101,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":31,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":266,"org.easymock.tests.CapturesMatcherTest.test":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":340,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":70,"org.easymock.tests2.UsageTest.resumeIfFailure":170,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":287,"org.easymock.tests2.StubTest.stubWithReturnValue":113,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":203,"org.easymock.tests2.SerializationTest.testAllMockedMethod":74,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":371,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":410,"org.easymock.samples.SupportTest.voteForRemovals":122,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":272,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":407,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":372,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":332,"org.easymock.tests.UsageExpectAndThrowTest.object":270,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":142,"org.easymock.tests2.DelegateToTest.testWrongClass":326,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":248,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":249,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":251,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":330,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":271,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":48,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":385,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":411,"org.easymock.tests2.CaptureTest.testCaptureNone":153,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":255,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":414,"org.easymock.tests.UsageUnorderedTest.message":296,"org.easymock.tests.UsageVerifyTest.twoReturns":247,"org.easymock.tests.UsageVarargTest.varargByteAccepted":381,"org.easymock.tests2.ThreadingTest.testThreadSafe":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":65,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":392,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":283,"org.easymock.tests2.UsageConstraintsTest.any":133,"org.easymock.tests2.StubTest.stub":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":235,"org.easymock.tests.UsageExpectAndThrowTest.longType":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":286,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":89,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":401,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":338,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":164,"org.easymock.tests2.SerializationTest.testClass":73,"org.easymock.tests.LimitationsTest.mockNativeMethod":107,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":95,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":213,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":339,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":415,"org.easymock.tests2.NameTest.nameForMocksControl":309,"org.easymock.tests2.MockedExceptionTest.testMockedException":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":53,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":219,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":264,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":15,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":25,"org.easymock.tests2.CompareToTest.testNotComparable":421,"org.easymock.tests2.CompareToTest.testCompareEqual":419,"org.easymock.tests2.CaptureTest.testCaptureLast":152,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":354,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":46,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":143,"org.easymock.tests.MockingTest.testTwoMocks":77,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":268,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":290,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":146,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":418,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":405,"org.easymock.tests.UsageStrictMockTest.differentMethods":252,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":417,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":87,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":161,"org.easymock.tests2.MockBuilderTest.testCreateMockString":20,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":55,"org.easymock.tests.UsageExpectAndThrowTest.floatType":262,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":50,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":334,"org.easymock.tests.UsageVerifyTest.twoThrows":117,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":64,"org.easymock.samples.ExampleTest.voteAgainstRemoval":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":233,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":253,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":32,"org.easymock.tests.LimitationsTest.privateConstructor":106,"org.easymock.tests2.UsageConstraintsTest.testNotNull":145,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":228,"org.easymock.tests2.UsageTest.defaultResetToNice":322,"org.easymock.samples.ExampleTest.voteAgainstRemovals":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":209,"org.easymock.tests.UsageVarargTest.differentLength":378,"org.easymock.tests2.CallbackTest.callback":323,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":28,"org.easymock.tests.UsageTest.openCallCountByLastCall":218,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":282,"org.easymock.tests.UsageCallCountTest.tooFewCalls":390,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":387,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":416,"org.easymock.tests.UsageThrowableTest.throwCheckedException":225,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":412,"org.easymock.tests.MockingTest.testStrictClassMocking":75,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":45,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":281,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":176,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":335,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":163,"org.easymock.tests2.NameTest.nameForNiceMock":308,"org.easymock.tests2.DependencyTest.testInterfaceMocking":172,"org.easymock.samples.ExampleTest.addDocument":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":66,"org.easymock.tests2.DelegateToTest.testStubDelegate":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":71,"org.easymock.tests2.AnswerTest.stubAnswer":189,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":250,"org.easymock.tests.UsageVarargTest.varargLongAccepted":380,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":232,"org.easymock.tests.UsageExpectAndReturnTest.floatType":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":140,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageThrowableTest.noUpperLimit":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":124,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":39,"org.easymock.tests2.SerializationTest.test":193,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":318,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":86,"org.easymock.tests2.UsageConstraintsTest.testSame":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":195,"org.easymock.samples.SupportTest.addDocument":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":56,"org.easymock.tests.GenericTest.testPackageScope":93,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":360,"org.easymock.tests2.NameTest.nameForMock":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":206,"org.easymock.tests2.UsageStrictMockTest.differentMethods":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":216,"org.easymock.tests2.MockedExceptionTest.testRealException":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":404,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":238,"org.easymock.tests2.NameTest.nameForStrictMock":307,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":11,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":258,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":310,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":24,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":40,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":422,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":141,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":9,"org.easymock.tests2.UsageStrictMockTest.range":191,"org.easymock.tests2.UsageConstraintsTest.lessThan":147,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":178,"org.easymock.tests2.CaptureTest.testCaptureRightOne":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":60,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":413,"org.easymock.tests2.UsageConstraintsTest.testOr":130,"org.easymock.tests.UsageRangeTest.combination":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":22,"org.easymock.tests.UsageTest.wrongArguments":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":57,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":207,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":90,"org.easymock.tests.UsageVarargTest.varargShortAccepted":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":393,"org.easymock.tests2.UsageConstraintsTest.cmpTo":134,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":115,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":320,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":10,"org.easymock.tests.UsageTest.unexpectedCallWithArray":292,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":391,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":208,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":398,"org.easymock.tests2.UsageConstraintsTest.constraints":125,"org.easymock.samples.ExampleTest.addAndChangeDocument":302,"org.easymock.tests.UsageStrictMockTest.testVerify":400,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":304,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":397,"org.easymock.tests2.CompareToTest.testGreateThan":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":363,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":319,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":242,"org.easymock.tests.LimitationsTest.abstractClass":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":243,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":183,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":374}}]
