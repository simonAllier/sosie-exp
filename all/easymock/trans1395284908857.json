[{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[19,20,21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[23,24,25,26,27,28,29,0,30,1,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,4,59,60,61,62,63,64,65,66,5,67,68,69,70,71,72,73,74,75,76,77,78,11,13,79,80,81,82,83,84,85,86,87,14,88,15,89,90,91,92,93,94,95,96,97,98,17,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,18,176,177,178,179,180,181,20,21],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[182,133],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[183,184,185],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[186],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[187,188],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[29,38,39,40,41,42,46,47,53,54,55,56,57,62,63,66,67,68,69,70,71,189,190,191,192,192,193,193,83,90,91,92,93,94,95,96,109,111,112,113,114,115,116,117,118,119,120,121,123,124,126,132,133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[186],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[187,194,30,195,196,197,198,199,200,12,13,88,201,202,203],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[226,227,228,229,230,231,232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1291","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1135","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[233,234,146,153],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[235,236,237,238,239,240,241],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[23,26,27,28,242,0,243,244,245,246,247,62,63,64,65,66,248,70,71,189,190,249,191,250,192,192,193,193,14,89,251,157,158,161,162,163,164,169,171,172,174,175,179,180,181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[182],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[253,254,255,256,257,258,259,92,95,114],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[194,260,261,262,4,196,197,198,199,17,201,202,203,263,264,265,266],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":160,"org.easymock.tests2.UsageTest.argumentsOrdered":203,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":58,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":182,"org.easymock.tests2.StubTest.stubWithReturnValue":89,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":241,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":47,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":178,"org.easymock.tests2.SerializationTest.testAllMockedMethod":22,"org.easymock.tests2.DelegateToTest.testReturnException":229,"org.easymock.tests.MockingTest.testPartialClassMocking":67,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":265,"org.easymock.samples.SupportTest.voteForRemovals":84,"org.easymock.tests.MockClassControlTest.testToString":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":247,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":19,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":118,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":184,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":87,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":176,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":235,"org.easymock.tests2.DelegateToTest.testWrongClass":230,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":70,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":71,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":166,"org.easymock.tests2.UsageTest.wrongArguments":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":26,"org.easymock.samples.ConstructorCalledMockTest.testTax":192,"org.easymock.tests.UsageStrictMockTest.range":30,"org.easymock.samples.ExampleTest.answerVsDelegate":228,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":90,"org.easymock.tests2.UsageConstraintsTest.testNull":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":124,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":114,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":153,"org.easymock.tests2.CaptureTest.testPrimitive":136,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":28,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":198,"org.easymock.tests.UsageTest.moreThanOneArgument":4,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":123,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":249,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":207,"org.easymock.tests2.CaptureTest.testCaptureNone":139,"org.easymock.tests.UsageUnorderedTest.message":187,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests2.ThreadingTest.testThreadSafe":106,"org.easymock.tests.UsageTest.argumentsOrdered":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":62,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":239,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":3,"org.easymock.tests2.UsageConstraintsTest.any":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":226,"org.easymock.tests2.StubTest.stub":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":66,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":209,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests.LimitationsTest.mockNativeMethod":29,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":57,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":25,"org.easymock.tests2.AnswerTest.answer":131,"org.easymock.tests2.CaptureTest.testAnd":134,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":223,"org.easymock.tests2.UsageTest.strictResetToDefault":98,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":60,"org.easymock.tests2.DelegateToTest.testDelegate":232,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":6,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":121,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":208,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":115,"org.easymock.tests.MockingTest.testNicePartialClassMocking":68,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":126,"org.easymock.tests2.CaptureTest.testCaptureLast":138,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":222,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":96,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":165,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":177,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":219,"org.easymock.tests2.CaptureTest.testCapture1_2446744":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":7,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":202,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":180,"org.easymock.tests.UsageThrowableTest.throwError":31,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":183,"org.easymock.tests.UsageStrictMockTest.differentMethods":1,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":108,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":250,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":173,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":119,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":63,"org.easymock.samples.ExampleTest.voteAgainstRemoval":81,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":129,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":254,"org.easymock.tests2.UsageTest.niceToStrict":99,"org.easymock.tests2.UsageConstraintsTest.testNotNull":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":243,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":113,"org.easymock.tests2.UsageTest.defaultResetToNice":102,"org.easymock.samples.ExampleTest.voteAgainstRemovals":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":53,"org.easymock.tests.UsageTest.openCallCountByLastCall":59,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":8,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":157,"org.easymock.tests.UsageOverloadedMethodTest.overloading":73,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":93,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":49,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":170,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":140,"org.easymock.tests.UsageThrowableTest.throwCheckedException":34,"org.easymock.tests2.EasyMockSupportClassTest.testAll":117,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":264,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":261,"org.easymock.tests2.CaptureTest.testCaptureAll":135,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":95,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":92,"org.easymock.tests2.UsageConstraintsTest.testMatches":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":94,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":191,"org.easymock.samples.ExampleTest.voteForRemovals":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":238,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":221,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":110,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":216,"org.easymock.tests2.DependencyTest.testInterfaceMocking":86,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":237,"org.easymock.tests2.DelegateToTest.testStubDelegate":133,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":36,"org.easymock.tests2.AnswerTest.stubAnswer":132,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":231,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":0,"org.easymock.tests2.UsageConstraintsTest.greaterThan":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":76,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":130,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":213,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":2,"org.easymock.samples.ExampleTest.voteForRemoval":80,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":56,"org.easymock.tests.UsageExpectAndReturnTest.floatType":40,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":111,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":205,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":193,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":175,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":158,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":259,"org.easymock.tests2.SerializationTest.test":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":39,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.tests2.CaptureTest.testCaptureFirst":143,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":147,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":206,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":45,"org.easymock.tests.GenericTest.testPackageScope":24,"org.easymock.tests2.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests2.CaptureTest.testCapture2_2446744":142,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":244,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":204,"org.easymock.tests.UsageExpectAndReturnTest.longType":41,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":50,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":248,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":10,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":246,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":91,"org.easymock.tests2.UsageConstraintsTest.testContains":169,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":105,"org.easymock.tests2.UsageConstraintsTest.testFind":161,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":125,"org.easymock.tests.UsageExpectAndReturnTest.object":48,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":18,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":127,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":112,"org.easymock.tests2.UsageStrictMockTest.range":88,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":210,"org.easymock.tests2.UsageConstraintsTest.lessThan":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":236,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":234,"org.easymock.tests.UsageTest.exactCallCountByLastCall":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":141,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":262,"org.easymock.tests2.UsageConstraintsTest.testOr":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":240,"org.easymock.tests.UsageRangeTest.combination":75,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":122,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":227,"org.easymock.tests.UsageTest.wrongArguments":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":43,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":51,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":224,"org.easymock.tests2.UsageConstraintsTest.cmpTo":168,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":214,"org.easymock.tests2.UsageTest.openCallCountByLastCall":100,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":155,"org.easymock.tests2.CaptureTest.testCaptureFromStub":251,"org.easymock.tests.UsageTest.unexpectedCallWithArray":196,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":220,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":195,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":52,"org.easymock.tests2.CaptureTest.testCapture":252,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":258,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":211,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":128,"org.easymock.tests2.UsageConstraintsTest.constraints":159,"org.easymock.tests.ReplayStateInvalidCallsTest.times":217,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":55,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":218,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":120,"org.easymock.tests2.UsageTest.resumeIfFailure":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":65,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":5,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150}}]
