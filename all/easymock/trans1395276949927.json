[{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:173","failures":[2],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:127","sourceCode":"java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"mockType","this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,4,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,2,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,9,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,1,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,10,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[36,38,39,40,41,4,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,87,88,89,90,91,92,93,94,95,96,97,98,99,100,109,121,239,369,1,373,426,439,440,441,442,443,448,449,450,451,452,466,480,481,10,484],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[493,76,113,114],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[494,495],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AssertionErrorWrapper:23","sourceCode":"-2087349195182278608L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[150,182,338,339,340,408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ZERO_OR_MORE"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[383],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[28,29,79,82,496,497,498,499,500,244],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[92,93,94,96,501,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[36],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[36],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","this":"name"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[36,38,39,40,41,4,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,78,80,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,112,113,114,115,118,119,120,121,123,124,125,126,132,139,140,141,142,143,144,145,146,147,148,149,150,151,156,163,170,171,2,172,173,174,182,183,184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,209,212,222,228,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,293,294,295,297,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,9,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,369,370,371,372,1,373,375,376,377,378,379,380,381,382,384,385,386,388,389,390,407,413,415,416,417,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,437,439,440,441,442,443,444,445,446,447,448,449,450,451,452,454,457,458,459,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,10,484,485,486,487,488,489,490,491,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[141,239,241,242,342,503,504,505,506,369,468,469,470,484,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[14,16,17,18,19,21,22,23,24,25,26,27,61,76,88,89,92,93,94,95,100,142,144,148,149,196,202,203,204,205,238,240,241,242,243,246,333,334,343,346,347,349,369,376,385,415,416,417,419,420,422,423,424,425,426,441,474,475,476,478,479,483,10,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[29,79,496,497,498,507,508],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[235,236],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[379,380,469],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[11,12,12,13,13,14,16,17,19,27,28,72,76,78,80,84,101,103,104,106,121,2,184,185,186,187,189,190,191,209,212,222,228,235,271,272,273,274,275,279,280,286,287,288,289,290,294,295,297,313,314,316,437,448,449,450,452,480,481],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[147],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,4,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,2,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,9,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,1,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,10,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[11,12,12,13,13,14,15,16,17,19,21,27,28,36,38,39,40,41,4,43,44,45,46,47,48,0,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,72,76,78,80,84,87,88,90,91,94,95,96,97,98,99,100,101,102,103,104,105,106,109,113,114,115,118,119,120,121,122,123,124,125,126,132,139,140,141,143,145,146,147,150,151,154,155,156,163,170,171,2,172,173,174,182,183,184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,209,212,222,228,231,232,233,234,235,236,239,241,242,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,295,297,306,313,314,315,316,317,326,328,329,331,334,336,337,338,339,340,341,342,344,345,348,349,350,351,352,353,354,369,370,371,372,1,373,375,376,377,378,379,380,381,382,384,386,388,389,390,407,413,437,439,440,441,442,443,448,449,450,451,452,453,454,455,462,463,464,465,466,467,468,469,470,473,480,481,484,486,487,490,491,492],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,4,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,2,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,9,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,1,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,10,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[76,113,114,509,510,511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests2.UsageTest.argumentsOrdered":149,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":341,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":401,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":144,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":22,"org.easymock.tests2.DelegateToTest.testReturnException":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":463,"org.easymock.tests.MockingTest.testPartialClassMocking":294,"org.easymock.tests.MockClassControlTest.testToString":429,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":31,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":216,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":247,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":503,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":496,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":439,"org.easymock.tests2.UsageTest.wrongArguments":142,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":169,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":446,"org.easymock.samples.ExampleTest.answerVsDelegate":15,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":323,"org.easymock.tests2.UsageConstraintsTest.testNull":44,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":202,"org.easymock.tests2.CaptureTest.testPrimitive":90,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":443,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":266,"org.easymock.tests.UsageTest.moreThanOneArgument":342,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":315,"org.easymock.tests.UsageTest.argumentsOrdered":347,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":350,"org.easymock.tests.UsageVarargTest.varargIntAccepted":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":508,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":70,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":137,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":452,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests.ReplayStateInvalidUsageTest.times":309,"org.easymock.tests2.DependencyTest.testClassMocking":152,"org.easymock.tests2.AnswerTest.answer":231,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":408,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":69,"org.easymock.tests2.CaptureTest.testAnd":87,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":320,"org.easymock.tests2.UsageTest.strictResetToDefault":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":339,"org.easymock.tests2.DelegateToTest.testDelegate":174,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":262,"org.easymock.tests.LimitationsTest.mockFinalMethod":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":359,"org.easymock.tests2.DependencyTest.testClassMockingSupport":153,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":333,"org.easymock.tests2.CaptureTest.testCapture1_2446744":91,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":67,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":303,"org.easymock.tests.UsageThrowableTest.throwError":375,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":322,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":138,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":230,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.MockingTest.testInterfaceMocking":296,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":449,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":491,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":461,"org.easymock.tests2.UsageTest.niceToStrict":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":248,"org.easymock.tests2.ThreadingTest.testChangeDefault":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":166,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":256,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":319,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":372,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":471,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":444,"org.easymock.tests.UsageOverloadedMethodTest.overloading":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":227,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":53,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":329,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":282,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":52,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":96,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":418,"org.easymock.tests.MockClassControlTest.testEquals":433,"org.easymock.tests2.EasyMockSupportClassTest.testAll":209,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":385,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":264,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":509,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":68,"org.easymock.tests2.CaptureTest.testCaptureAll":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":357,"org.easymock.tests.MockNameTest.defaultName":374,"org.easymock.tests2.UsageConstraintsTest.testMatches":54,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":316,"org.easymock.samples.ExampleTest.voteForRemovals":19,"org.easymock.tests.UsageVarargTest.allKinds":426,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":468,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":358,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":381,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":467,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests2.UsageConstraintsTest.greaterThan":56,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":368,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":119,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":116,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":107,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":349,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":195,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":462,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":170,"org.easymock.tests2.CaptureTest.testCaptureFirst":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":196,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":278,"org.easymock.tests2.UsageTest.moreThanOneArgument":141,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":409,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":84,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":425,"org.easymock.tests.GenericTest.testBridgedEquals":387,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":478,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":3,"org.easymock.tests.UsageExpectAndReturnTest.longType":274,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":355,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":265,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":61,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":313,"org.easymock.tests.UsageCallCountTest.tooManyCalls":479,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":380,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":185,"org.easymock.tests.MockingTest.testNiceClassMocking":300,"org.easymock.tests.MockingTest.testClassMocking":292,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":493,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":472,"org.easymock.tests2.UsageConstraintsTest.testContains":51,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":125,"org.easymock.tests2.UsageConstraintsTest.testFind":43,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":390,"org.easymock.tests.MockTypeTest.fromEasyMockClass":321,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":482,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":38,"org.easymock.tests.UsageExpectAndReturnTest.object":281,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":497,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":420,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":459,"org.easymock.tests.UsageTest.exactCallCountByLastCall":348,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":453,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":29,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":415,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":328,"org.easymock.tests.MockClassControlTest.testHashCode":432,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":128,"org.easymock.tests2.EasyMockSupportTest.testVerify":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":219,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":66,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":157,"org.easymock.tests.UsageVarargTest.varargCharAccepted":419,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":360,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":414,"org.easymock.tests2.UsageTest.openCallCountByLastCall":145,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":204,"org.easymock.tests.DefaultClassInstantiatorTest.object":361,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":370,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":254,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":511,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":378,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":161,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":127,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":431,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":253,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":267,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":228,"org.easymock.tests2.UsageTest.resumeIfFailure":150,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":318,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":465,"org.easymock.tests2.StubTest.stubWithReturnValue":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":280,"org.easymock.tests2.SerializationTest.testAllMockedMethod":246,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":407,"org.easymock.samples.SupportTest.voteForRemovals":27,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":383,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":259,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":413,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":232,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":455,"org.easymock.tests.UsageExpectAndThrowTest.object":257,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":59,"org.easymock.tests2.DelegateToTest.testWrongClass":172,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":480,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":481,"org.easymock.tests.UsageStrictMockTest.range":486,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":180,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":200,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":258,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":206,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":311,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":445,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":492,"org.easymock.tests2.CaptureTest.testCaptureNone":95,"org.easymock.tests.UsageUnorderedTest.message":369,"org.easymock.tests.UsageVerifyTest.twoReturns":470,"org.easymock.tests.UsageVarargTest.varargByteAccepted":424,"org.easymock.tests2.ThreadingTest.testThreadSafe":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":223,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":476,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":460,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests2.CaptureTest.testCapture_2617107":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":411,"org.easymock.tests2.UsageConstraintsTest.any":0,"org.easymock.tests2.StubTest.stub":182,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndThrowTest.longType":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":365,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":307,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":240,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":132,"org.easymock.tests2.SerializationTest.testClass":244,"org.easymock.tests.LimitationsTest.mockNativeMethod":437,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":386,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":290,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":510,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":160,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":243,"org.easymock.tests2.NameTest.nameForMocksControl":35,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":162,"org.easymock.tests2.MockedExceptionTest.testMockedException":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":211,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":345,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":251,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":295,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":106,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":158,"org.easymock.tests2.CaptureTest.testCaptureLast":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":334,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":191,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":47,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":60,"org.easymock.tests.MockingTest.testTwoMocks":293,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":255,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":148,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":64,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":494,"org.easymock.samples.ExampleTest.removeNonExistingDocument":20,"org.easymock.tests.UsageStrictMockTest.differentMethods":487,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":165,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":129,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":363,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":120,"org.easymock.tests2.MockBuilderTest.testCreateMockString":86,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":213,"org.easymock.tests.UsageExpectAndThrowTest.floatType":249,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":234,"org.easymock.tests.UsageVerifyTest.twoThrows":469,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":30,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":222,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":402,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.LimitationsTest.privateConstructor":436,"org.easymock.tests2.UsageConstraintsTest.testNotNull":63,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":382,"org.easymock.tests2.UsageTest.defaultResetToNice":147,"org.easymock.samples.ExampleTest.voteAgainstRemovals":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":286,"org.easymock.tests.UsageVarargTest.differentLength":421,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":159,"org.easymock.tests2.CallbackTest.callback":156,"org.easymock.tests2.UsageConstraintsTest.equals":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":110,"org.easymock.tests.UsageTest.openCallCountByLastCall":344,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":441,"org.easymock.tests.UsageCallCountTest.tooFewCalls":474,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":447,"org.easymock.tests.UsageThrowableTest.throwCheckedException":379,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":8,"org.easymock.tests.MockingTest.testStrictClassMocking":291,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":373,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":164,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":189,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":236,"org.easymock.tests.ObjectMethodsTest.testHashCode":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":507,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":122,"org.easymock.tests2.NameTest.nameForNiceMock":34,"org.easymock.tests2.DependencyTest.testInterfaceMocking":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":498,"org.easymock.samples.ExampleTest.addDocument":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":224,"org.easymock.tests2.DelegateToTest.testStubDelegate":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":229,"org.easymock.tests2.AnswerTest.stubAnswer":235,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":484,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":81,"org.easymock.tests.UsageVarargTest.varargLongAccepted":423,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndReturnTest.floatType":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":136,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":57,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests.UsageThrowableTest.noUpperLimit":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":40,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":175,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":92,"org.easymock.tests2.SerializationTest.test":245,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":362,"org.easymock.tests2.UsageConstraintsTest.testSame":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":272,"org.easymock.samples.SupportTest.addDocument":26,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":188,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":214,"org.easymock.tests.GenericTest.testPackageScope":384,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":135,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":298,"org.easymock.tests2.NameTest.nameForMock":32,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":283,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":85,"org.easymock.tests2.UsageStrictMockTest.differentMethods":242,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":261,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":340,"org.easymock.tests2.MockedExceptionTest.testRealException":126,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":404,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":440,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":312,"org.easymock.tests2.NameTest.nameForStrictMock":33,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":75,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":36,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":179,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":504,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":58,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":364,"org.easymock.tests.ErrorMessageTest.testGetters":505,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":72,"org.easymock.tests2.UsageStrictMockTest.range":241,"org.easymock.tests2.UsageConstraintsTest.lessThan":65,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":502,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":194,"org.easymock.tests2.CaptureTest.testCaptureRightOne":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":218,"org.easymock.tests2.UsageConstraintsTest.testOr":46,"org.easymock.tests.UsageRangeTest.combination":337,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":102,"org.easymock.tests.UsageTest.wrongArguments":343,"org.easymock.tests2.MockBuilderTest.testWithConstructor":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":215,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":284,"org.easymock.tests.UsageVarargTest.varargShortAccepted":422,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":366,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":477,"org.easymock.tests2.UsageConstraintsTest.cmpTo":50,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":394,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.CaptureTest.testCaptureFromStub":98,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":302,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":73,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":285,"org.easymock.tests2.CaptureTest.testCapture":501,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":485,"org.easymock.tests2.UsageConstraintsTest.constraints":41,"org.easymock.samples.ExampleTest.addAndChangeDocument":21,"org.easymock.tests.UsageStrictMockTest.testVerify":489,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":25,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":483,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":356,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":450,"org.easymock.tests.LimitationsTest.abstractClass":435,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":451,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":506,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":199}}]
