[{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[0,1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[85,86,87,88,89],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[90,91,0,1,4,5,7,8,11,92,12,13,14,15,16,93,94,95,96,17,97,98,99,100,101,102,18,103,20,21,22,104,105,106,107,108,23,24,25,26,27,109,28,29,30,31,32,110,33,34,35,36,37,38,39,40,41,42,43,111,44,45,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,46,135,136,137,138,139,140,47,141,142,143,49,144,145,146,147,148,149,53,54,55,56,57,58,150,59,60,61,62,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,63,188,189,190,191,64,192,193,65,194,195,196,197,198,68,69,70,71,72,199,73,74,75,76,77,86,88,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,78,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,82,259,260,83,261,262,263,264,264,265,265,266,267,268,269,270,271],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[272,273,274,275,20,22,276,143,68,70,277,278,239,279,250,260,83,261],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[90,91,0,1,4,5,7,8,11,92,12,13,14,15,16,93,94,95,96,17,97,98,99,100,101,102,18,103,20,21,22,104,105,106,107,108,23,24,25,26,27,109,28,29,30,31,32,110,33,34,35,36,37,38,39,40,41,42,43,111,44,45,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,46,135,136,137,138,139,140,47,141,142,143,49,144,145,146,147,148,149,53,54,55,56,57,58,150,59,60,61,62,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,63,188,189,190,191,64,192,193,65,194,195,196,197,198,68,69,70,71,72,199,73,74,75,76,77,86,88,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,78,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,82,259,260,83,261,262,263,264,264,265,265,266,267,268,269,270,271],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[31,35,45,280],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,48,51,52,67,69,281,242,282,79,80,81,283,83,261],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[4,6,13,25,26,109,29,30,284,40,111],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[141,145,199,249,252,83],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,48,51,52,67,69,281,242,282,79,80,81,283,83,261],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[85,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[285,286,287],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:61","failures":[90,91,288,4,5,6,7,8,9,10,11,92,12,13,14,15,16,20,23,24,25,26,27,109,28,29,30,31,284,32,110,33,34,35,36,37,38,39,40,41,42,289,43,111,44,45,118,125,186,187,64,192,193,65,194,67,68,213,78,218,290,242,243,244,245,246,247],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[4,6,13,25,26,109,29,30,284,40,111],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,104,105,106,107,108,113,291,119,120,121,292,293,137,294,138,139,140,47,295,296,297,298,299,300,301,177,86,88,206,207,208,248,263,264,264,265,265],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[85,89],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[5,11,92,16,20,29,32,186,187,64,192,193,65,194,68,213,78,218,242,243,244,245,246,247],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[90,91,302,303,304,305,0,1,4,5,6,7,8,9,10,11,92,12,13,14,15,16,93,94,95,96,17,97,98,99,100,101,102,18,103,19,20,306,21,22,276,104,105,106,107,108,23,24,25,26,27,109,28,29,30,31,284,32,110,33,34,35,36,37,38,39,40,41,42,289,43,111,44,45,112,113,114,115,116,117,291,118,307,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,46,135,136,293,137,138,308,139,140,309,47,296,141,142,143,48,49,50,144,145,146,51,52,147,148,149,53,54,55,56,57,58,150,59,60,61,62,151,152,153,154,155,156,310,311,312,313,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,182,183,186,187,63,188,189,190,191,64,192,193,65,194,195,196,197,198,66,67,68,314,69,70,277,71,72,199,73,74,75,76,77,86,88,200,201,202,203,204,315,205,316,206,207,208,209,210,211,212,213,214,215,216,217,78,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,317,290,239,240,241,242,243,244,245,246,247,248,249,250,282,79,251,252,80,81,253,254,318,255,256,319,257,283,258,82,259,320,321,322,323,324,260,83,261,262,263,264,264,265,265,266,267,268,269,270,271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.RecordState:305","failures":[0,1,4,5,6,7,8,11,92,12,13,15,16,93,17,97,98,101,18,103,20,21,22,104,105,106,107,108,23,24,25,26,27,109,28,29,30,31,32,110,33,34,35,36,37,38,39,40,41,42,289,43,111,44,45,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,46,135,136,137,138,139,140,47,141,142,143,49,144,145,146,147,148,149,53,54,55,56,57,58,150,59,60,61,62,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,186,187,63,188,189,190,64,192,194,68,69,70,71,199,73,74,75,76,77,86,315,205,206,207,208,213,78,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,82,259,260,83,261,262,263,266,267,268,269,270],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[14,20,23,24,27,109,28,29,33,35,36,38,39,111,44,45,46,186,187,325,64,192,194,195,68,200,201,202,203,204,78,326,327,328,329,330,243,244,245,246,247,264,264,265,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[31,35,45,280],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[31,35,45,280],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[0,331],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[37],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":26,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":249,"org.easymock.tests2.UsageTest.argumentsOrdered":52,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":84,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":50,"org.easymock.tests2.StubTest.stubWithReturnValue":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":228,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":152,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":210,"org.easymock.tests.MockingTest.testPartialClassMocking":206,"org.easymock.samples.SupportTest.voteForRemovals":262,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":85,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":169,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":241,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":157,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":94,"org.easymock.tests.UsageExpectAndThrowTest.object":167,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":41,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":136,"org.easymock.tests2.DelegateToTest.testWrongClass":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":186,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":187,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":64,"org.easymock.tests2.UsageTest.wrongArguments":48,"org.easymock.samples.ConstructorCalledMockTest.testTax":264,"org.easymock.tests.UsageStrictMockTest.range":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":312,"org.easymock.samples.ExampleTest.answerVsDelegate":267,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":127,"org.easymock.tests2.UsageConstraintsTest.testNull":109,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":168,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":139,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":297,"org.easymock.tests2.CaptureTest.testPrimitive":7,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":194,"org.easymock.tests.UsageTest.moreThanOneArgument":250,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":176,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":311,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":202,"org.easymock.tests2.CaptureTest.testCaptureNone":92,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":180,"org.easymock.tests.UsageUnorderedTest.message":242,"org.easymock.tests.UsageVerifyTest.twoReturns":261,"org.easymock.tests2.ThreadingTest.testThreadSafe":122,"org.easymock.tests.UsageTest.argumentsOrdered":81,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":243,"org.easymock.tests2.CaptureTest.testCapture_2617107":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":65,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":308,"org.easymock.tests2.UsageConstraintsTest.any":32,"org.easymock.tests2.StubTest.stub":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":211,"org.easymock.tests.UsageExpectAndThrowTest.longType":160,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":306,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":103,"org.easymock.tests.LimitationsTest.mockNativeMethod":248,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":238,"org.easymock.tests2.AnswerTest.answer":93,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":88,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":305,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":300,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests2.UsageTest.strictResetToDefault":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":307,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests2.NameTest.nameForMocksControl":275,"org.easymock.tests2.MockedExceptionTest.testMockedException":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":56,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":189,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":252,"org.easymock.tests2.DelegateToTest.testDelegate":156,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":185,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":161,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":140,"org.easymock.tests.MockingTest.testNicePartialClassMocking":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":172,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":213,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":205,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":324,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":42,"org.easymock.tests.MockingTest.testTwoMocks":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":315,"org.easymock.tests2.CaptureTest.testCapture1_2446744":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":165,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":51,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":44,"org.easymock.tests.UsageThrowableTest.throwError":71,"org.easymock.tests.UsageStrictMockTest.differentMethods":70,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":124,"org.easymock.tests2.MockBuilderTest.testCreateMockString":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":204,"org.easymock.tests.UsageExpectAndThrowTest.floatType":159,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":37,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":96,"org.easymock.tests.UsageVerifyTest.twoThrows":83,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":106,"org.easymock.samples.PartialClassMockTest.testGetArea":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":244,"org.easymock.samples.ExampleTest.voteAgainstRemoval":269,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":179,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":120,"org.easymock.tests2.UsageTest.niceToStrict":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":158,"org.easymock.tests2.UsageConstraintsTest.testNotNull":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":77,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":138,"org.easymock.tests2.MockBuilderTest.testCreateMock":309,"org.easymock.tests2.UsageTest.defaultResetToNice":146,"org.easymock.samples.ExampleTest.voteAgainstRemovals":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":234,"org.easymock.tests2.CallbackTest.callback":18,"org.easymock.tests.UsageTest.openCallCountByLastCall":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":166,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":57,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":23,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":217,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":278,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":193,"org.easymock.tests.UsageCallCountTest.tooFewCalls":279,"org.easymock.tests.UsageOverloadedMethodTest.overloading":82,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":256,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":230,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":130,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":34,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":313,"org.easymock.tests.UsageThrowableTest.throwCheckedException":74,"org.easymock.tests2.EasyMockSupportClassTest.testAll":104,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":174,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":304,"org.easymock.tests2.CaptureTest.testCaptureAll":5,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":218,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":132,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":129,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":131,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":97,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":203,"org.easymock.tests2.CompareToTest.testGreateOrEqual":280,"org.easymock.samples.ExampleTest.voteForRemovals":270,"org.easymock.tests2.NameTest.nameForNiceMock":274,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":126,"org.easymock.tests.UsageVarargTest.allKinds":290,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":260,"org.easymock.tests2.DependencyTest.testInterfaceMocking":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":323,"org.easymock.tests2.DelegateToTest.testStubDelegate":153,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":76,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":19,"org.easymock.tests2.AnswerTest.stubAnswer":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":214,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":155,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":68,"org.easymock.tests2.UsageConstraintsTest.greaterThan":38,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":188,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":121,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":277,"org.easymock.samples.ExampleTest.voteForRemoval":268,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":237,"org.easymock.tests.UsageExpectAndReturnTest.floatType":221,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":108,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":265,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageThrowableTest.noUpperLimit":72,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":39,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":24,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":141,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":177,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":9,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":331,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":54,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":199,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":220,"org.easymock.tests2.UsageConstraintsTest.testSame":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":209,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":55,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":226,"org.easymock.tests.GenericTest.testPackageScope":86,"org.easymock.tests2.CaptureTest.testCapture2_2446744":15,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":125,"org.easymock.tests2.UsageTest.moreThanOneArgument":143,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":184,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests.GenericTest.testBridgedEquals":89,"org.easymock.tests2.NameTest.nameForMock":272,"org.easymock.tests.UsageExpectAndReturnTest.longType":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":320,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":175,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":289,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":195,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":200,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":171,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":190,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":239,"org.easymock.tests2.MockedExceptionTest.testRealException":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":75,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":128,"org.easymock.tests2.NameTest.nameForStrictMock":273,"org.easymock.tests2.UsageConstraintsTest.testContains":33,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":101,"org.easymock.tests2.UsageConstraintsTest.testFind":27,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":259,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":91,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests.UsageExpectAndReturnTest.object":229,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":118,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":137,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":59,"org.easymock.tests.UsageTest.exactCallCountByLastCall":253,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":292,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":53,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":182,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests.UsageRangeTest.combination":63,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":317,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":113,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":255,"org.easymock.tests.UsageTest.wrongArguments":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":232,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":183,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":254,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":302,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":288,"org.easymock.tests2.UsageConstraintsTest.cmpTo":110,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":95,"org.easymock.tests2.UsageTest.openCallCountByLastCall":144,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests.DefaultClassInstantiatorTest.object":285,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":62,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":215,"org.easymock.tests2.CaptureTest.testCaptureFromStub":14,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":294,"org.easymock.tests.UsageTest.unexpectedCallWithArray":282,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":281,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":164,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":73,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":233,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":314,"org.easymock.tests2.UsageConstraintsTest.constraints":25,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":119,"org.easymock.samples.ExampleTest.addAndChangeDocument":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":321,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":10,"org.easymock.tests2.UsageTest.resumeIfFailure":147,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":225,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":58}}]
