[{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:115","sourceCode":"for (final org.easymock.internal.MethodSerializationWrapper org.easymock.internal.MethodSerializationWrapper : java.util.Set<org.easymock.internal.MethodSerializationWrapper>) {\n    try {\n        java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n    }\n}","type":"CtForEachImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[19,20,21,22,23,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[4,6,7,8,9,10,11,13,26,14,15,17],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[27,28],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[30,31,32,33],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[56,57,58,59,60,61,62,63,64,38,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[96,97,98,99,100,101,102,5,11,12,17,103,104,105,51,106,107,108,109,110,111,112,113,62,114,65,71,77,81,83,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:27","sourceCode":"-7799769066534714634L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[116,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[118,119,120,121,122],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[123,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[123,3,125],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,117],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[126,127,128,129,130,131,132,96,133,133,134,134,135,136,137,138,139,140,141,142,143,97,98,144,145,146,147,118,119,148,149,150,151,152,153,99,154,155,123,156,157,158,124,3,159,160,161,162,163,164,100,165,30,101,166,125,167,168,169,170,171,172,102,4,5,6,7,8,9,10,11,12,13,14,15,16,17,173,27,28,174,175,176,177,178,179,39,180,31,181,182,183,184,185,186,187,116,103,104,188,40,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,56,212,105,213,214,32,215,57,216,217,218,219,220,41,42,43,44,221,222,223,224,225,45,226,227,0,1,117,228,229,230,231,232,233,234,235,46,47,48,49,50,51,106,34,58,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,120,121,254,255,107,256,257,258,259,260,108,261,262,263,264,265,109,266,267,268,110,269,111,270,271,272,273,274,59,275,276,277,278,279,280,122,60,281,282,283,284,285,113,36,286,287,288,289,290,291,292,293,294,62,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,37,310,311,312,33,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,63,114,329,330,331,64,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,54,347,348,349,350,351,352,353,354,38,355,356,357,358,359,360,55,361,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,115,85,362,86,87,88,89,90,91,363,364,365,366,367,92,93,94,368,369,370,95,371,372,373],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[374,375,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"value"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[377,378,379],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":123,"org.easymock.tests2.UsageTest.argumentsOrdered":218,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":274,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":32,"org.easymock.tests2.StubTest.stubWithReturnValue":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":20,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":263,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":137,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":117,"org.easymock.tests2.DelegateToTest.testReturnException":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":272,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":113,"org.easymock.tests.MockingTest.testPartialClassMocking":287,"org.easymock.samples.SupportTest.voteForRemovals":139,"org.easymock.tests.MockClassControlTest.testToString":320,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":77,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":2,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":65,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":36,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":27,"org.easymock.tests.UsageExpectAndThrowTest.object":75,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":143,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":167,"org.easymock.tests2.DelegateToTest.testWrongClass":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":21,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":356,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":357,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":352,"org.easymock.tests2.UsageTest.wrongArguments":213,"org.easymock.tests.UsageStrictMockTest.range":120,"org.easymock.samples.ConstructorCalledMockTest.testTax":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":238,"org.easymock.samples.ExampleTest.answerVsDelegate":127,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":222,"org.easymock.tests2.UsageConstraintsTest.testNull":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":180,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":325,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":207,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":199,"org.easymock.tests2.CaptureTest.testPrimitive":7,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":355,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":332,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":316,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":84,"org.easymock.tests.UsageTest.moreThanOneArgument":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":237,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":245,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":292,"org.easymock.tests2.CaptureTest.testCaptureNone":12,"org.easymock.tests.UsageUnorderedTest.message":115,"org.easymock.tests.UsageVerifyTest.twoReturns":281,"org.easymock.tests.UsageVarargTest.varargByteAccepted":343,"org.easymock.tests2.ThreadingTest.testThreadSafe":103,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":363,"org.easymock.tests.UsageTest.argumentsOrdered":333,"org.easymock.tests.UsageVarargTest.varargIntAccepted":337,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":304,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":346,"org.easymock.tests2.CaptureTest.testCapture_2617107":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":38,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":206,"org.easymock.tests2.UsageConstraintsTest.any":161,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":313,"org.easymock.tests2.StubTest.stub":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":349,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":273,"org.easymock.tests.UsageExpectAndThrowTest.longType":68,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":33,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":147,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":221,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.ReplayStateInvalidUsageTest.times":314,"org.easymock.tests.LimitationsTest.mockNativeMethod":298,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":153,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":270,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":242,"org.easymock.tests2.AnswerTest.answer":173,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":152,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests2.UsageTest.strictResetToDefault":212,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":184,"org.easymock.tests2.NameTest.nameForMocksControl":235,"org.easymock.tests2.MockedExceptionTest.testMockedException":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":194,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":64,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":367,"org.easymock.tests2.DelegateToTest.testDelegate":51,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":69,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":178,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":208,"org.easymock.tests.MockingTest.testNicePartialClassMocking":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":80,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":181,"org.easymock.tests2.CompareToTest.testNotComparable":25,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":285,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":227,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":361,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":168,"org.easymock.tests.MockingTest.testTwoMocks":286,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":284,"org.easymock.tests2.CaptureTest.testCapture1_2446744":8,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":150,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":172,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":376,"org.easymock.tests.UsageThrowableTest.throwError":85,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":37,"org.easymock.samples.ExampleTest.removeNonExistingDocument":132,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":311,"org.easymock.tests.UsageStrictMockTest.differentMethods":121,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":379,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":188,"org.easymock.tests2.MockBuilderTest.testCreateMockString":211,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":247,"org.easymock.tests.UsageExpectAndThrowTest.floatType":67,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":30,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":174,"org.easymock.tests.UsageVerifyTest.twoThrows":60,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":230,"org.easymock.samples.PartialClassMockTest.testGetArea":136,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":54,"org.easymock.samples.ExampleTest.voteAgainstRemoval":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":291,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":290,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":186,"org.easymock.tests2.UsageTest.niceToStrict":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":66,"org.easymock.tests2.ThreadingTest.testChangeDefault":375,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":91,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":41,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":205,"org.easymock.tests2.UsageTest.defaultResetToNice":216,"org.easymock.tests2.MockBuilderTest.testCreateMock":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":112,"org.easymock.tests.UsageVarargTest.differentLength":340,"org.easymock.tests2.CallbackTest.callback":106,"org.easymock.tests.UsageTest.openCallCountByLastCall":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":74,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":99,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":236,"org.easymock.tests.UsageCallCountTest.tooFewCalls":302,"org.easymock.tests.UsageOverloadedMethodTest.overloading":294,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":100,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":225,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":164,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":239,"org.easymock.tests.UsageThrowableTest.throwCheckedException":88,"org.easymock.tests.MockClassControlTest.testEquals":324,"org.easymock.tests2.EasyMockSupportClassTest.testAll":228,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":241,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":360,"org.easymock.tests2.CaptureTest.testCaptureAll":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":151,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":283,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":224,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":315,"org.easymock.tests2.UsageConstraintsTest.testMatches":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":45,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":176,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":246,"org.easymock.tests.ObjectMethodsTest.testHashCode":296,"org.easymock.samples.ExampleTest.voteForRemovals":131,"org.easymock.tests2.NameTest.nameForNiceMock":234,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":189,"org.easymock.tests.UsageVarargTest.allKinds":345,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":122,"org.easymock.tests2.DependencyTest.testInterfaceMocking":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":55,"org.easymock.samples.BasicClassMockTest.testPrintContent":141,"org.easymock.samples.ExampleTest.addDocument":130,"org.easymock.tests2.DelegateToTest.testStubDelegate":48,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":90,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":144,"org.easymock.tests2.AnswerTest.stubAnswer":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":275,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":50,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":24,"org.easymock.tests2.UsageConstraintsTest.greaterThan":101,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":277,"org.easymock.tests.UsageVarargTest.varargLongAccepted":342,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":187,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":254,"org.easymock.samples.ExampleTest.voteForRemoval":128,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":104,"org.easymock.tests.UsageExpectAndReturnTest.floatType":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":111,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":182,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":134,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests.UsageThrowableTest.noUpperLimit":362,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":166,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":351,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":154,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":192,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":52,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":256,"org.easymock.tests2.UsageConstraintsTest.testSame":158,"org.easymock.samples.SupportTest.addDocument":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":271,"org.easymock.tests2.CaptureTest.testCaptureFirst":17,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":193,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":312,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":261,"org.easymock.tests.GenericTest.testPackageScope":240,"org.easymock.tests2.CaptureTest.testCapture2_2446744":16,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":40,"org.easymock.tests2.UsageTest.moreThanOneArgument":105,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":210,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":344,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":306,"org.easymock.tests2.NameTest.nameForMock":232,"org.easymock.tests.UsageExpectAndReturnTest.longType":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":358,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":190,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":109,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":350,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":81,"org.easymock.tests2.UsageStrictMockTest.differentMethods":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":259,"org.easymock.tests.UsageCallCountTest.tooManyCalls":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":279,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":301,"org.easymock.tests2.MockedExceptionTest.testRealException":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":70,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":353,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":89,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":300,"org.easymock.tests2.NameTest.nameForStrictMock":233,"org.easymock.tests2.UsageConstraintsTest.testContains":163,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":156,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":62,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":31,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":98,"org.easymock.tests.UsageExpectAndReturnTest.object":264,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":183,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":204,"org.easymock.tests2.UsageStrictMockTest.range":118,"org.easymock.tests2.UsageConstraintsTest.lessThan":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":198,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":22,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":297,"org.easymock.tests.UsageTest.exactCallCountByLastCall":334,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":282,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":29,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":191,"org.easymock.tests2.CaptureTest.testCaptureRightOne":14,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":364,"org.easymock.tests2.UsageConstraintsTest.testOr":124,"org.easymock.tests.UsageRangeTest.combination":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":179,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":370,"org.easymock.tests.UsageTest.wrongArguments":330,"org.easymock.tests.MockClassControlTest.testHashCode":323,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":260,"org.easymock.tests2.EasyMockSupportTest.testVerify":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":266,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":368,"org.easymock.tests.UsageVarargTest.varargShortAccepted":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":93,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":53,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":149,"org.easymock.tests2.UsageConstraintsTest.cmpTo":162,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":177,"org.easymock.tests.UsageVarargTest.varargCharAccepted":338,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":61,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":145,"org.easymock.tests2.UsageTest.openCallCountByLastCall":215,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":57,"org.easymock.tests.DefaultClassInstantiatorTest.object":248,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":201,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":92,"org.easymock.tests2.CaptureTest.testCaptureFromStub":15,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":309,"org.easymock.tests.UsageTest.unexpectedCallWithArray":329,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":72,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":267,"org.easymock.tests2.CaptureTest.testCapture":26,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":322,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":253,"org.easymock.tests2.UsageConstraintsTest.constraints":155,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":71,"org.easymock.samples.ExampleTest.addAndChangeDocument":96,"org.easymock.tests.CapturesMatcherTest.test":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":269,"org.easymock.tests.UsageStrictMockTest.testVerify":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":326,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":135,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":321,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":359,"org.easymock.tests2.UsageTest.resumeIfFailure":219,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":108,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":348,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":196}}]
