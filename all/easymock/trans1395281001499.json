[{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[25,26,27,28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[30,31,32],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[33,34,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[36],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[37,38],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:60","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[97,98,99,100,101,102,103,104,105,106,107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:229","sourceCode":"return java.lang.Class<?>.isPrimitive() ? org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.get(java.lang.Class<?>) : null","type":"CtReturnImpl"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,48,49,50,53,54,127,128,129,11,130,131,132,133,134,135,136,137,13,138,139,14,140,15,141,142,143,144,145,146,147,148,149,150,151,152,69,70,71,72,73,153,154,155,156,74,75,76,157,158,159,160,161,162,163,164,165,166,167,20,168,169,170,171,172,173,174,175,22,176,177,23,178,24,179,180],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[97,98,99,100,101,102,103,104,105,106,107],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[16,181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[182,183,184],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[185],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[0,186,1,187,2,188,3,4,189,190,191,5,6,192,7,193,8,194,195,196],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[197,198,199,200],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[202,53,54,127,128,143,144,145,203,204,146,205,206,207,208,209,92,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[3,4,6,192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[211,212],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[213,152,84],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[197,198,199,200],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[214],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[215],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":203,"org.easymock.tests2.StubTest.stubWithReturnValue":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":135,"org.easymock.tests2.SerializationTest.testAllMockedMethod":199,"org.easymock.tests2.DelegateToTest.testReturnException":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":144,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":151,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":29,"org.easymock.samples.SupportTest.voteForRemovals":112,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":211,"org.easymock.tests.MockClassControlTest.testToString":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":38,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":175,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":200,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":167,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":33,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":194,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":126,"org.easymock.tests2.DelegateToTest.testWrongClass":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":166,"org.easymock.tests.UsageStrictMockTest.range":163,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":76,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":46,"org.easymock.tests2.UsageConstraintsTest.testNull":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":174,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":67,"org.easymock.tests2.CaptureTest.testPrimitive":187,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":24,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":75,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":165,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":213,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":157,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":55,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":27,"org.easymock.tests2.UsageConstraintsTest.any":193,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":56,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":145,"org.easymock.tests.UsageExpectAndThrowTest.longType":169,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":88,"org.easymock.tests2.SerializationTest.testClass":197,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":52,"org.easymock.tests.ReplayStateInvalidUsageTest.times":90,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":40,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":215,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":15,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":7,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":51,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":104,"org.easymock.tests2.MockedExceptionTest.testMockedException":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":155,"org.easymock.tests2.DelegateToTest.testDelegate":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":170,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":25,"org.easymock.tests2.CaptureTest.testCaptureLast":30,"org.easymock.tests2.CompareToTest.testCompareEqual":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":204,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":73,"org.easymock.tests2.CaptureTest.testCapture1_2446744":9,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":22,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":172,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":183,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":196,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":84,"org.easymock.samples.ExampleTest.removeNonExistingDocument":39,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":86,"org.easymock.tests.UsageStrictMockTest.differentMethods":164,"org.easymock.tests2.MockBuilderTest.testCreateMockString":58,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":60,"org.easymock.tests.UsageExpectAndThrowTest.floatType":168,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":185,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":101,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":158,"org.easymock.samples.ExampleTest.voteAgainstRemoval":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":20,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":102,"org.easymock.tests2.UsageConstraintsTest.testNotNull":195,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":53,"org.easymock.tests2.MockBuilderTest.testCreateMock":57,"org.easymock.tests2.UsageTest.defaultResetToNice":41,"org.easymock.samples.ExampleTest.voteAgainstRemovals":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":138,"org.easymock.tests2.UsageConstraintsTest.equals":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":136,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":77,"org.easymock.tests.MockClassControlTest.testEquals":66,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":71,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":50,"org.easymock.tests2.CaptureTest.testCaptureAll":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":209,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":119,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":35,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":150,"org.easymock.tests.ObjectMethodsTest.testHashCode":95,"org.easymock.samples.ExampleTest.voteForRemovals":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":26,"org.easymock.tests2.DependencyTest.testInterfaceMocking":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":72,"org.easymock.tests2.DelegateToTest.testStubDelegate":115,"org.easymock.tests2.AnswerTest.stubAnswer":34,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":146,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":154,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":201,"org.easymock.samples.ExampleTest.voteForRemoval":109,"org.easymock.tests.UsageExpectAndReturnTest.floatType":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":43,"org.easymock.tests2.SerializationTest.test":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":205,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":11,"org.easymock.tests2.UsageConstraintsTest.testSame":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":143,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":113,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":87,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":81,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":12,"org.easymock.tests2.CaptureTest.testCapture2_2446744":10,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":17,"org.easymock.tests.GenericTest.testBridgedEquals":212,"org.easymock.tests.UsageExpectAndReturnTest.longType":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":69,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":107,"org.easymock.tests2.UsageStrictMockTest.differentMethods":124,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":177,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":147,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":132,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":156,"org.easymock.tests2.MockedExceptionTest.testRealException":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":28,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":171,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":93,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":79,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":127,"org.easymock.tests2.UsageConstraintsTest.testFind":189,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":8,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":181,"org.easymock.tests2.UsageStrictMockTest.range":123,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":96,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":214,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":97,"org.easymock.tests.UsageRangeTest.combination":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":139,"org.easymock.tests2.MockBuilderTest.testWithConstructor":103,"org.easymock.tests.MockClassControlTest.testHashCode":65,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":61,"org.easymock.tests2.EasyMockSupportTest.testVerify":47,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":13,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":19,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":142,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":48,"org.easymock.tests.DefaultClassInstantiatorTest.object":59,"org.easymock.tests2.CaptureTest.testCaptureFromStub":188,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":83,"org.easymock.tests.UsageTest.unexpectedCallWithArray":68,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":94,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":37,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":106,"org.easymock.tests2.CaptureTest.testCapture":32,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":64,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.testVerify":78,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":14,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":206,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":160}}]
