[{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[18,19,20,21],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,65,0,1,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,6,84,7,8,9,12,85,13,15,86,17,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,46,113,47,114,115,49,116,117,118,119,120,121,122,123,124,125,126,127,128,23,24,129,130,131,132,26,27,28,133,134,135,136,137,138,139,31,34,36,37,39,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,50,52,158,159,160,53,161,54,162,163,56,164,165,166,167,168,169,170,171,172,173,174,175,57,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,45,207,208,209,210,211],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[116,212],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[58,59,60,61,62,63,64,65,0,1,213,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,214,215,83,216,217,218,219,6,84,7,8,9,10,11,12,85,13,15,16,86,17,87,88,89,90,91,92,93,94,220,221,222,95,223,224,225,226,96,97,98,227,99,100,101,102,103,104,105,106,107,108,109,110,111,112,228,46,229,113,47,48,114,115,49,230,116,231,117,118,119,232,233,120,121,122,123,124,125,126,127,128,234,23,24,129,25,130,235,236,131,237,238,132,26,27,28,133,134,135,136,137,138,29,239,139,240,30,31,32,34,36,37,39,40,241,18,19,140,42,242,243,141,142,143,144,244,145,146,147,148,149,150,245,246,247,248,249,151,152,43,250,251,44,252,253,254,153,255,256,257,258,154,155,259,260,156,157,261,262,263,264,50,51,52,158,159,160,265,266,267,268,53,269,161,54,55,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,162,163,56,290,291,164,165,292,293,166,167,168,169,170,171,294,295,296,297,298,299,172,173,174,175,300,301,302,57,176,177,178,303,304,305,306,307,308,309,310,20,21,311,312,313,314,315,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,316,317,318,319,320,321,322,323,45,324,324,325,325,207,326,208,209,210,327,211],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[328,329,330],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[236,260],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[58,59,60,61,331,62,63,64,65,0,1,213,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,214,215,83,216,217,218,219,6,84,7,8,9,10,11,12,85,13,15,16,86,17,89,90,91,92,94,220,221,222,95,223,224,225,226,332,96,97,333,334,335,336,337,338,98,227,339,340,341,342,343,99,100,101,103,104,106,108,109,110,344,111,112,228,345,46,229,113,47,48,114,115,49,230,116,231,117,118,119,232,233,120,121,122,123,124,125,126,127,22,128,346,212,234,23,24,129,347,348,349,350,351,352,130,235,353,354,355,356,357,236,131,237,358,238,359,132,360,26,361,362,363,364,365,366,27,367,368,28,369,370,133,371,134,135,136,137,138,29,239,139,240,372,373,374,375,376,31,33,34,35,36,377,38,378,241,18,19,41,140,379,42,242,243,141,142,143,144,244,145,146,147,148,149,150,245,246,247,248,249,151,152,250,44,253,254,153,255,256,257,258,380,381,382,383,328,384,385,386,387,388,389,390,391,392,393,394,395,396,397,154,155,259,260,156,157,261,262,263,264,50,51,52,398,399,400,158,159,401,160,402,403,404,265,405,406,266,407,408,409,410,411,412,267,413,268,53,269,161,54,55,414,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,415,416,162,417,163,56,290,291,164,165,292,293,166,167,168,169,170,171,294,295,296,297,298,299,172,173,174,175,300,418,301,302,419,57,420,176,177,178,303,304,305,421,306,307,422,308,423,424,425,426,427,428,429,430,431,432,433,309,310,20,21,434,435,311,312,313,436,314,315,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,437,201,438,316,317,318,319,320,439,440,441,442,443,444,445,446,447,202,448,203,449,450,451,452,321,453,454,455,204,205,322,206,323,45,324,324,325,325,207,326,208,209,456,210,457,327,458,459,460,211,461,462],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[58,59,60,61,331,62,63,64,65,0,1,213,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,214,215,83,216,217,218,219,6,84,7,8,9,10,11,12,85,13,15,16,86,17,87,88,89,90,463,91,92,93,464,94,220,221,222,95,223,224,225,226,332,96,97,333,334,335,336,337,338,98,227,339,340,341,342,343,99,100,101,102,103,104,105,106,107,108,109,110,344,465,466,111,112,228,345,46,229,113,47,48,114,115,49,230,116,231,117,118,119,232,233,120,121,122,123,124,125,126,127,22,467,128,346,212,234,23,24,129,347,25,348,349,350,351,352,130,235,353,354,355,356,357,236,131,237,358,238,359,468,469,132,470,360,26,471,361,362,472,473,363,364,365,366,27,474,367,475,476,368,28,369,370,133,371,477,134,135,136,137,138,29,239,139,240,372,478,479,480,373,374,375,376,30,481,31,32,482,33,34,35,36,483,37,484,377,38,39,485,40,378,486,487,488,489,241,18,19,41,140,379,42,242,243,141,142,143,144,244,145,146,147,148,149,150,245,246,247,248,249,151,152,43,490,491,250,251,44,252,253,254,153,255,256,257,258,492,380,381,382,383,328,384,493,385,386,387,388,389,390,391,392,393,394,395,396,397,154,155,259,260,156,157,261,262,263,264,50,51,52,398,399,400,158,159,401,160,402,403,404,265,405,406,266,407,408,409,410,411,412,267,413,268,53,269,161,54,55,414,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,415,416,162,417,163,56,290,291,164,165,292,293,166,167,168,169,170,171,294,295,296,297,298,299,172,173,174,175,300,418,301,302,419,57,420,176,177,178,494,303,304,305,421,306,307,422,308,423,424,425,426,427,428,429,430,431,432,433,309,310,20,21,434,435,311,312,313,436,314,315,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,437,201,438,316,317,318,319,320,439,440,441,442,443,444,445,446,447,202,448,203,449,450,451,452,321,453,454,455,204,205,322,206,323,45,324,325,207,326,208,209,456,210,457,327,458,459,460,211,461,462],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[380,381,384],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[58,59,60,61,331,62,63,64,65,0,1,213,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,214,215,83,216,217,218,219,495,496,497,498,499,500,6,84,7,8,9,10,11,12,85,13,15,16,86,17,87,88,89,90,463,91,92,93,464,94,220,221,222,95,223,224,225,226,332,96,97,333,334,335,336,337,338,98,227,339,340,341,342,343,99,100,101,102,103,104,105,106,107,108,109,110,344,465,466,111,112,228,345,46,229,113,47,48,114,115,49,230,116,231,117,118,119,232,233,120,121,122,123,124,125,126,127,22,467,128,346,212,234,23,24,129,347,25,348,349,350,351,352,130,235,353,354,355,356,357,236,131,237,358,238,359,468,469,132,470,360,26,471,361,362,472,473,363,364,365,366,27,474,367,475,476,368,28,369,370,133,371,134,501,135,136,137,138,29,239,139,240,372,478,479,373,374,375,376,30,31,32,33,34,35,36,37,484,377,38,39,40,378,486,487,488,489,241,18,19,41,140,379,42,242,243,141,142,143,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,144,244,145,146,147,148,149,150,245,246,247,248,249,151,152,43,490,491,250,251,44,252,253,254,153,255,256,257,258,380,381,382,383,328,384,385,386,387,388,389,390,391,392,393,394,395,396,397,154,155,259,260,156,157,261,262,263,264,50,51,52,398,399,400,158,159,401,160,402,403,404,265,405,406,266,407,408,409,410,411,412,267,413,268,53,269,161,54,55,414,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,415,416,162,417,163,56,290,291,164,165,292,293,166,167,168,169,170,171,294,295,296,297,298,299,172,173,174,175,300,418,301,302,419,57,420,176,177,178,303,304,305,421,306,307,422,308,423,424,425,426,427,428,429,430,431,432,433,309,310,20,21,434,435,311,312,313,436,314,315,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,437,201,438,316,317,318,319,320,439,440,441,442,443,444,445,446,447,202,448,203,449,450,451,452,321,453,454,455,204,205,322,206,323,45,324,325,207,326,208,209,456,210,457,327,458,459,460,211,461,462],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[524,525,268,290,526,527],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,65,0,1,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,6,84,8,9,12,85,13,15,86,17,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,46,113,47,114,115,49,116,117,118,119,120,121,122,123,124,125,126,127,128,23,24,129,130,131,132,26,27,28,133,134,135,136,137,138,139,31,34,36,37,39,140,42,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,50,52,158,159,160,53,161,54,162,163,56,164,165,166,167,168,169,170,171,172,173,174,175,57,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,45,207,208,209,210,211],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,65,0,1,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,215,83,216,218,219,6,84,7,8,9,10,11,12,85,13,15,16,86,17,87,88,89,90,91,92,93,94,222,95,223,224,225,226,332,96,97,333,98,99,100,101,102,103,104,105,106,107,108,109,110,344,111,112,228,345,46,229,113,47,48,114,115,49,230,116,231,117,118,119,232,233,120,121,122,123,124,125,126,127,22,128,234,23,24,129,130,236,131,237,238,132,26,27,28,133,134,135,136,137,138,29,239,139,240,30,31,34,35,36,37,38,39,40,486,487,488,489,140,379,243,141,142,143,144,244,145,146,147,148,149,150,245,246,247,248,249,151,152,153,255,256,380,386,387,388,389,390,391,392,393,394,395,396,397,154,155,259,260,156,157,261,262,263,264,50,51,52,158,159,160,405,406,266,407,408,409,410,411,412,267,413,268,53,269,161,54,55,414,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,162,163,56,290,291,164,165,292,293,166,167,168,169,170,171,294,295,296,297,298,299,172,173,174,175,300,301,302,57,420,303,304,305,421,308,423,424,425,427,428,429,430,431,432,433,309,434,435,311,312,313,436,314,315,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,45,324,325,207,326,208,209,456,210,457,327,458,459,460,211,461,462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[213,66],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[58,59,60,61,62,63,64,65,0,1,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,215,83,216,218,219,6,84,7,8,9,10,11,12,85,13,15,16,86,17,87,88,89,90,91,92,93,94,222,95,223,224,225,226,332,96,97,333,98,99,100,101,102,103,104,105,106,107,108,109,110,344,111,112,228,345,46,229,113,47,48,114,115,49,230,116,231,117,118,119,232,233,120,121,122,123,124,125,126,127,22,128,234,23,24,129,130,236,131,237,238,132,26,27,28,133,134,135,136,137,138,29,239,139,240,30,31,34,35,36,37,38,39,40,140,379,243,528,528,141,142,143,144,244,145,146,147,148,149,150,245,246,247,248,249,151,152,154,155,259,260,156,157,261,262,263,264,50,51,52,158,159,160,266,407,408,409,410,411,412,267,413,268,53,269,161,54,55,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,162,163,56,290,291,164,165,292,293,166,167,168,169,170,171,294,295,296,297,298,299,172,174,175,300,301,302,420,303,304,305,421,308,423,424,425,427,428,429,430,431,432,433,309,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,45,324,325,207,326,208,209,456,210,327,458,459,460,211,461,462],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[41,242],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[58,59,60,61,331,62,63,64,65,0,1,213,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,214,215,83,216,217,218,219,6,84,7,8,9,10,11,12,85,13,15,16,86,17,87,88,89,90,463,91,92,93,464,94,220,221,222,95,223,224,225,226,332,96,97,333,334,335,336,337,338,98,227,339,340,341,342,343,99,100,101,102,103,104,105,106,107,108,109,110,344,465,466,111,112,228,345,46,229,113,47,48,114,115,49,230,116,231,117,118,119,232,233,120,121,122,123,124,125,126,127,22,467,128,346,212,234,23,24,129,347,25,348,349,350,351,352,130,235,353,354,355,356,357,236,131,237,358,238,359,468,469,132,470,360,26,471,361,362,472,473,363,364,365,366,27,474,367,475,476,368,28,369,370,133,371,477,134,135,136,137,138,29,239,139,240,372,478,479,480,373,374,375,376,30,481,31,32,482,33,34,35,36,483,37,484,377,38,39,485,40,378,486,487,488,489,241,18,19,41,140,379,42,242,243,141,142,143,144,244,145,146,147,148,149,150,245,246,247,248,249,151,152,43,490,491,250,251,44,252,253,254,153,255,256,257,258,492,380,381,382,383,328,384,493,385,386,387,388,389,390,391,392,393,394,395,396,397,154,155,259,260,156,157,261,262,263,264,50,51,52,398,399,400,158,159,401,160,402,403,404,265,405,406,266,407,408,409,410,411,412,267,413,268,53,269,161,54,55,414,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,415,416,162,417,163,56,290,291,164,165,292,293,166,167,168,169,170,171,294,295,296,297,298,299,172,173,174,175,300,418,301,302,419,57,420,176,177,178,494,303,304,305,421,306,307,422,308,423,424,425,426,427,428,429,430,431,432,433,309,310,20,21,434,435,311,312,313,436,314,315,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,437,201,438,316,317,318,319,320,439,440,441,442,443,444,445,446,447,202,448,203,449,450,451,452,321,453,454,455,204,205,322,206,323,45,324,325,207,326,208,209,456,210,457,327,458,459,460,211,461,462],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[65,75,219,15,95,100,101,103,104,105,107,108,228,46,230,116,231,232,233,131,142,144,244,146,147,148,149,150,154,260,51,267,53,291,292,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[529],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[140,42,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[96,97,333],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[530,531,532],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[58,59,60,61,331,62,63,64,65,0,1,213,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,214,215,83,216,217,218,219,6,84,7,8,9,10,11,12,85,13,15,16,86,17,87,88,89,90,91,92,93,94,220,221,222,95,223,224,225,226,332,96,97,333,334,335,336,337,338,98,227,339,340,341,342,343,99,100,101,102,103,104,105,106,107,108,109,110,344,465,466,111,112,228,345,46,229,113,47,48,114,115,49,230,116,231,117,118,119,232,233,120,121,122,123,124,125,126,127,22,467,128,346,212,234,23,24,129,347,25,348,349,350,351,352,130,235,353,354,355,356,357,236,131,237,358,238,359,468,469,132,470,360,26,471,361,362,472,473,363,364,365,366,27,474,367,475,476,368,28,369,370,133,371,477,134,135,136,137,138,29,239,139,240,372,373,374,375,376,30,481,31,32,482,33,34,35,36,483,37,377,38,39,485,40,378,486,487,488,489,241,18,19,41,140,379,42,242,243,141,142,143,144,244,145,146,147,148,149,150,245,246,247,248,249,151,152,43,250,251,44,252,253,254,153,255,256,257,258,492,380,381,382,383,328,384,493,385,386,387,388,389,390,391,392,393,394,395,396,397,154,155,259,260,156,157,261,262,263,264,50,51,52,398,399,400,158,159,401,160,402,403,404,265,405,406,266,407,408,409,410,411,412,267,413,268,53,269,161,54,55,414,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,415,416,162,417,163,56,290,291,164,165,292,293,166,167,168,169,170,171,294,295,296,297,298,299,172,173,174,175,300,418,301,302,419,57,420,176,177,178,303,304,305,421,306,307,422,308,423,424,425,426,427,428,429,430,431,432,433,309,310,20,21,434,435,311,312,313,436,314,315,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,437,201,438,316,317,318,319,320,439,440,441,442,443,444,445,446,447,202,448,203,449,450,451,452,321,453,454,455,204,205,322,206,323,45,324,324,325,325,207,326,208,209,456,210,457,327,458,459,460,211,461,462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[241,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[113,230,232,233,243,51,52,268,161,290,291,292,293,420,533],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":61,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests2.UsageTest.argumentsOrdered":233,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":448,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":231,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":459,"org.easymock.tests2.DelegateToTest.testReturnException":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":295,"org.easymock.tests.MockingTest.testPartialClassMocking":158,"org.easymock.tests.MockClassControlTest.testToString":311,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":378,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":270,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":112,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":523,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":154,"org.easymock.tests2.UsageTest.wrongArguments":230,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":305,"org.easymock.samples.ExampleTest.answerVsDelegate":326,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":44,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":403,"org.easymock.tests2.UsageConstraintsTest.testNull":63,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":125,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":108,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":315,"org.easymock.tests2.CaptureTest.testPrimitive":8,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":156,"org.easymock.tests.UsageTest.moreThanOneArgument":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":289,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":247,"org.easymock.tests.UsageTest.argumentsOrdered":293,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":316,"org.easymock.tests.UsageVarargTest.varargIntAccepted":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":532,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":30,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":342,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":171,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":507,"org.easymock.tests.ReplayStateInvalidUsageTest.times":394,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.DependencyTest.testClassMocking":465,"org.easymock.tests2.AnswerTest.answer":94,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":453,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":332,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":491,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests2.UsageTest.strictResetToDefault":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":103,"org.easymock.tests2.DelegateToTest.testDelegate":218,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":320,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":506,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":285,"org.easymock.tests.LimitationsTest.mockFinalMethod":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":264,"org.easymock.tests2.DependencyTest.testClassMockingSupport":466,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":306,"org.easymock.tests2.CaptureTest.testCapture1_2446744":9,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":225,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":388,"org.easymock.tests.UsageThrowableTest.throwError":144,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":251,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":494,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":370,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":510,"org.easymock.samples.PartialClassMockTest.testGetArea":45,"org.easymock.tests.MockingTest.testInterfaceMocking":401,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":168,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":473,"org.easymock.tests2.UsageTest.niceToStrict":116,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":271,"org.easymock.tests2.ThreadingTest.testChangeDefault":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":2,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.MockBuilderTest.testCreateMock":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":475,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":354,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":524,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":279,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":104,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":490,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":405,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":303,"org.easymock.tests.UsageOverloadedMethodTest.overloading":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":368,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":70,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":302,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":192,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":69,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":329,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":13,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":426,"org.easymock.tests2.EasyMockSupportClassTest.testAll":132,"org.easymock.tests.MockClassControlTest.testEquals":314,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":287,"org.easymock.tests2.CaptureTest.testCaptureAll":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":262,"org.easymock.tests.MockNameTest.defaultName":323,"org.easymock.tests2.UsageConstraintsTest.testMatches":71,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":248,"org.easymock.samples.ExampleTest.voteForRemovals":210,"org.easymock.tests.UsageVarargTest.allKinds":309,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":50,"org.easymock.samples.BasicClassMockTest.testPrintContent":462,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":149,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":228,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":339,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":493,"org.easymock.tests2.UsageConstraintsTest.greaterThan":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":470,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":173,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":129,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":511,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":385,"org.easymock.samples.ExampleTest.voteForRemoval":208,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":135,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":347,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":252,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":22,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":503,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":308,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":446,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":101,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":294,"org.easymock.tests2.CaptureTest.testCaptureFirst":17,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":102,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":188,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":137,"org.easymock.tests2.UsageTest.moreThanOneArgument":49,"org.easymock.tests2.CaptureTest.testCapture2_2446744":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":454,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":39,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":433,"org.easymock.tests.GenericTest.testBridgedEquals":242,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":411,"org.easymock.tests.UsageExpectAndReturnTest.longType":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":157,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":288,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":78,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":265,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":245,"org.easymock.tests.UsageCallCountTest.tooManyCalls":412,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":275,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":148,"org.easymock.tests.MockingTest.testNiceClassMocking":404,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":88,"org.easymock.tests.MockingTest.testClassMocking":399,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":406,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":139,"org.easymock.tests2.UsageConstraintsTest.testFind":62,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":143,"org.easymock.tests.MockTypeTest.fromEasyMockClass":250,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":238,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":267,"org.easymock.tests.UsageExpectAndReturnTest.object":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":107,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":428,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":256,"org.easymock.tests.UsageTest.exactCallCountByLastCall":166,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":371,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":423,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":197,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":301,"org.easymock.tests.MockClassControlTest.testHashCode":436,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":335,"org.easymock.tests2.EasyMockSupportTest.testVerify":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":364,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":18,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":224,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":376,"org.easymock.tests.UsageVarargTest.varargCharAccepted":427,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":492,"org.easymock.tests2.CaptureTest.testCaptureMultiple":5,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":206,"org.easymock.tests2.UsageTest.openCallCountByLastCall":117,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":110,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":3,"org.easymock.tests.DefaultClassInstantiatorTest.object":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":241,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":153,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":533,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":334,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":509,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":23,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":276,"org.easymock.tests.CapturesMatcherTest.test":528,"org.easymock.tests.ReplayStateInvalidCallsTest.times":515,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":310,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":28,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":312,"org.easymock.tests2.UsageTest.resumeIfFailure":120,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":297,"org.easymock.tests2.StubTest.stubWithReturnValue":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":483,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":190,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":79,"org.easymock.tests2.SerializationTest.testAllMockedMethod":333,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":321,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":525,"org.easymock.samples.SupportTest.voteForRemovals":211,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":282,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":322,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":220,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":438,"org.easymock.tests.UsageExpectAndThrowTest.object":280,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":76,"org.easymock.tests2.DelegateToTest.testWrongClass":216,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":513,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":151,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":152,"org.easymock.tests.UsageStrictMockTest.range":161,"org.easymock.samples.ConstructorCalledMockTest.testTax":324,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":374,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":281,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":36,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":396,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":304,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":526,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":505,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":178,"org.easymock.tests2.CaptureTest.testCaptureNone":85,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":496,"org.easymock.tests.UsageUnorderedTest.message":243,"org.easymock.tests.UsageVerifyTest.twoReturns":52,"org.easymock.tests.UsageVarargTest.varargByteAccepted":432,"org.easymock.tests2.ThreadingTest.testThreadSafe":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":474,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":409,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":461,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":257,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":260,"org.easymock.tests2.UsageConstraintsTest.any":66,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":393,"org.easymock.tests2.StubTest.stub":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":205,"org.easymock.tests.UsageExpectAndThrowTest.longType":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":296,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":328,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":392,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":229,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":98,"org.easymock.tests2.SerializationTest.testClass":96,"org.easymock.tests.LimitationsTest.mockNativeMethod":162,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":350,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":521,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":48,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":497,"org.easymock.tests2.NameTest.nameForMocksControl":489,"org.easymock.tests2.MockedExceptionTest.testMockedException":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":360,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":274,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":358,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":122,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":37,"org.easymock.tests.MockingTest.testNicePartialClassMocking":159,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":530,"org.easymock.tests2.CaptureTest.testCaptureLast":12,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":348,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":307,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":520,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":93,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":77,"org.easymock.tests.MockingTest.testTwoMocks":400,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":517,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":278,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":81,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":500,"org.easymock.samples.ExampleTest.removeNonExistingDocument":457,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":390,"org.easymock.tests.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":336,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":499,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":382,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":136,"org.easymock.tests2.MockBuilderTest.testCreateMockString":40,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":471,"org.easymock.tests.UsageExpectAndThrowTest.floatType":272,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":477,"org.easymock.tests.UsageVerifyTest.twoThrows":51,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":27,"org.easymock.samples.ExampleTest.voteAgainstRemoval":209,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":203,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":24,"org.easymock.tests.LimitationsTest.privateConstructor":416,"org.easymock.tests2.UsageConstraintsTest.testNotNull":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":150,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":29,"org.easymock.tests2.UsageTest.defaultResetToNice":119,"org.easymock.samples.ExampleTest.voteAgainstRemovals":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":196,"org.easymock.tests.UsageVarargTest.differentLength":429,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":349,"org.easymock.tests2.CallbackTest.callback":219,"org.easymock.tests2.UsageConstraintsTest.equals":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":346,"org.easymock.tests.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":259,"org.easymock.tests.UsageCallCountTest.tooFewCalls":407,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":421,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":498,"org.easymock.tests.UsageThrowableTest.throwCheckedException":147,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":527,"org.easymock.tests.MockingTest.testStrictClassMocking":398,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":235,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":395,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":91,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":223,"org.easymock.tests.ObjectMethodsTest.testHashCode":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":531,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":519,"org.easymock.tests2.NameTest.nameForNiceMock":488,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":138,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":514,"org.easymock.tests2.DependencyTest.testInterfaceMocking":111,"org.easymock.samples.ExampleTest.addDocument":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":367,"org.easymock.tests2.DelegateToTest.testStubDelegate":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":369,"org.easymock.tests2.AnswerTest.stubAnswer":95,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":53,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":484,"org.easymock.tests.UsageVarargTest.varargLongAccepted":431,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":202,"org.easymock.tests.UsageExpectAndReturnTest.floatType":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":133,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":325,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":419,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":74,"org.easymock.tests.UsageThrowableTest.noUpperLimit":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":372,"org.easymock.tests2.SerializationTest.test":97,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":10,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":330,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":182,"org.easymock.tests2.UsageConstraintsTest.testSame":64,"org.easymock.samples.SupportTest.addDocument":460,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":463,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":504,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":361,"org.easymock.tests.GenericTest.testPackageScope":140,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":340,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":402,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":502,"org.easymock.tests2.NameTest.nameForMock":486,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":193,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":485,"org.easymock.tests2.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":212,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":284,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":175,"org.easymock.tests2.MockedExceptionTest.testRealException":240,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":450,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":397,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":155,"org.easymock.tests2.NameTest.nameForStrictMock":487,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":33,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":4,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":126,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":373,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":75,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":383,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":113,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":508,"org.easymock.tests2.UsageConstraintsTest.lessThan":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":529,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":100,"org.easymock.tests2.CaptureTest.testCaptureRightOne":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":363,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":495,"org.easymock.tests2.UsageConstraintsTest.testOr":65,"org.easymock.tests.UsageRangeTest.combination":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":123,"org.easymock.tests.UsageTest.wrongArguments":291,"org.easymock.tests2.MockBuilderTest.testWithConstructor":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":362,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":194,"org.easymock.tests.UsageVarargTest.varargShortAccepted":430,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":384,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":410,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":522,"org.easymock.tests2.UsageConstraintsTest.cmpTo":67,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":221,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":442,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":118,"org.easymock.tests2.CaptureTest.testCaptureFromStub":16,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":387,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":32,"org.easymock.tests.UsageTest.unexpectedCallWithArray":290,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":518,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":408,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":195,"org.easymock.tests2.CaptureTest.testCapture":14,"org.easymock.tests2.UsageConstraintsTest.constraints":60,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":269,"org.easymock.samples.ExampleTest.addAndChangeDocument":327,"org.easymock.tests.UsageStrictMockTest.testVerify":414,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":458,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":261,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":169,"org.easymock.tests.LimitationsTest.abstractClass":415,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":170,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":57,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":105}}]
