[{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,0,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,2,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[34,45,51,52,57,123,177,179,183,189,193,194,197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[2,121,122],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[332,15,16,17,18,19,20,21,22,333,334,335,336,337,338,339,339,340,340,23,24,25,26,0,1,341,342,343,344,345,346,347,348,349,350,351,352,353,354,27,355,356,28,29,357,358,30,31,359,360,361,362,363,364,365,366,367,368,369,370,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,371,63,372,64,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,65,66,67,68,69,70,71,72,73,398,74,75,76,77,78,79,399,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,400,97,98,99,100,101,401,102,402,103,104,105,403,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,404,405,406,407,408,409,410,411,412,413,414,415,416,2,121,122,123,417,418,124,125,126,127,128,129,130,131,132,419,420,12,133,134,135,136,137,138,139,140,141,142,421,143,422,144,145,146,147,148,149,423,150,151,152,153,154,155,156,157,158,159,160,424,425,426,427,161,162,428,429,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,454,455,198,456,199,200,201,202,203,204,205,457,206,207,208,458,459,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,460,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,461,462,463,464,465,257,258,259,260,261,466,262,263,264,265,266,267,268,269,467,270,271,272,273,274,275,276,277,468,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,469,470,471,298,299,472,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,473,474,475,324,325,326,327,328,476,477,478,329,479,480,481,482,483,484,485,330,331],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[338,339,339,340,340,0,1,486,379,389,2,487,488,131,11,489,12,133,490,135,422,147,423,427,428],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[15,16,18,21,338,339,339,340,340,23,24,25,26,0,346,27,355,356,28,29,357,358,30,31,364,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,59,376,379,389,395,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,103,104,105,106,107,110,111,116,117,118,119,404,405,406,407,408,409,410,411,412,413,414,415,416,2,121,123,124,125,126,127,131,132,419,420,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,169,170,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,300,301,303,308,313,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[2,121,122,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"primitiveType"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[492,493,494,495],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[332,15,16,17,18,19,20,21,22,333,334,335,336,337,338,339,339,340,340,23,24,25,26,0,1,486,341,342,343,344,345,346,347,348,349,350,351,352,353,354,27,355,356,28,29,357,358,30,31,359,360,361,362,363,364,365,366,367,368,369,370,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,371,63,372,64,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,65,66,67,68,69,70,71,72,73,398,74,75,76,77,78,79,399,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,400,97,98,99,100,101,401,102,402,103,104,105,403,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,404,405,406,407,408,409,410,411,412,413,414,415,416,2,121,122,123,417,418,124,125,126,127,487,128,129,488,130,131,132,419,11,420,12,133,134,490,135,136,137,138,139,140,141,142,421,143,422,144,145,146,147,148,149,423,150,151,152,153,154,155,156,157,158,159,160,424,425,426,427,161,162,428,429,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,454,455,198,456,199,200,201,202,203,204,205,457,206,207,208,458,459,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,460,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,461,462,463,464,465,257,258,259,260,261,466,262,263,264,265,266,267,268,269,467,270,271,272,273,274,275,276,277,468,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,469,470,471,298,299,472,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,473,474,475,324,325,326,327,328,476,477,478,496,329,479,480,481,482,483,497,484,485,330,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[402],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[498],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[89,90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[34,39,68,70,71,72,73,74,75,76,77,78,79,399,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,143,174,175,176,182,183,203,227,228,229,230,231,232,233,234,235,236,257,258,269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2,4,5,6,7,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[499,500,123,501,128,131,132,146,147,148],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[15,16,17,18,20,22,337,338,339,339,340,340,23,24,25,26,0,346,27,355,356,28,29,357,358,30,31,364,34,36,37,44,45,46,47,49,51,52,53,56,57,58,59,376,379,389,395,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,101,102,402,103,104,105,403,106,107,108,110,111,114,115,116,117,118,119,120,404,405,406,407,408,409,410,411,412,413,414,415,2,121,123,417,418,124,125,126,128,131,419,420,134,136,137,138,139,140,141,143,146,147,148,150,151,152,157,158,159,160,424,425,426,161,428,174,175,176,177,178,179,446,452,183,185,186,189,190,193,194,197,198,199,200,201,202,203,204,205,221,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,461,462,463,464,465,257,258,270,271,272,273,274,275,276,277,468,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,469,470,471,300,301,303,309,473,474,475,324,325,326,327,328,476,477,478,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[1,4,5,6,8,9,11],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[499,500,502,131,146,147],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:116","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[1,29,31,503,504,505,487,488,11,506,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"field"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[73,399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[507,508],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[509],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[15,17,18,20,337,338,0,27,355,356,28,29,357,358,30,31,34,36,37,376,379,389,395,68,104,128,131,419,420,134,136,137,138,139,140,141,143,146,147,148,150,157,158,159,160,161,428,174,175,183,185,186,198,227,232,233,234,235,236,237,238,239,240,241,242,245,246,248,249,250,252,253,254,255,256,468,470,471,300,301,303,474,324,325,326,327],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:114","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>(java.util.Set<org.easymock.internal.MethodSerializationWrapper>.size())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[23,24,25,26,199,200,201,202,203,204,219,229,258,476,477,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[510,511,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[513,79,84,96],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[334,335,338,339,340,23,24,25,0,1,486,356,28,29,357,30,31,371,63,373,374,376,378,379,380,381,382,384,385,386,387,389,390,391,392,393,394,395,2,122,127,487,128,129,488,130,131,132,419,11,420,12,133,134,490,135,136,137,139,140,141,142,143,422,144,145,146,147,148,149,423,427,161,162,428,429,163,166,454,455,198,456,205,298,299,472,300,301,303,306,316,317,318,319,320,321,322,323,329,479,480,481,482,483,484],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[39,84,91,96],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[107,109,110,111,112,113,114,116,514,117,118,120],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[2,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[34,36,37,47,48,54,55,97,98,99,100,176,177,178,179,182,183,185,186,190,192,195,196,225],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":189,"org.easymock.tests2.UsageTest.argumentsOrdered":55,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":440,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":50,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":332,"org.easymock.tests2.DelegateToTest.testReturnException":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":200,"org.easymock.tests.MockingTest.testPartialClassMocking":300,"org.easymock.tests.MockClassControlTest.testToString":318,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":400,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":278,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":379,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":355,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":79,"org.easymock.tests2.UsageTest.wrongArguments":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":227,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":155,"org.easymock.samples.ExampleTest.answerVsDelegate":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":166,"org.easymock.tests2.UsageConstraintsTest.testNull":75,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":305,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":139,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":413,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":323,"org.easymock.tests2.CaptureTest.testPrimitive":110,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":231,"org.easymock.tests.UsageTest.moreThanOneArgument":190,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":297,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":326,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":461,"org.easymock.tests.UsageTest.argumentsOrdered":196,"org.easymock.tests.UsageVarargTest.varargIntAccepted":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":232,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":369,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":236,"org.easymock.tests.ReplayStateInvalidUsageTest.times":217,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":346,"org.easymock.tests2.DependencyTest.testClassMocking":353,"org.easymock.tests2.AnswerTest.answer":123,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":447,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":43,"org.easymock.tests2.CaptureTest.testAnd":107,"org.easymock.tests2.UsageTest.strictResetToDefault":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":408,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":159,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":465,"org.easymock.tests2.DelegateToTest.testDelegate":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":293,"org.easymock.tests.LimitationsTest.mockFinalMethod":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":173,"org.easymock.tests2.DependencyTest.testClassMockingSupport":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":485,"org.easymock.tests2.CaptureTest.testCapture1_2446744":111,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":41,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":211,"org.easymock.tests.UsageThrowableTest.throwError":270,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":165,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":397,"org.easymock.samples.PartialClassMockTest.testGetArea":338,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":212,"org.easymock.tests.MockingTest.testInterfaceMocking":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":233,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":470,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":384,"org.easymock.tests2.UsageTest.niceToStrict":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":279,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":131,"org.easymock.tests2.MockBuilderTest.testCreateMock":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":392,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":349,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":287,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":409,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":426,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":153,"org.easymock.tests.UsageOverloadedMethodTest.overloading":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":388,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":224,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":248,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":116,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":466,"org.easymock.tests.MockClassControlTest.testEquals":322,"org.easymock.tests2.EasyMockSupportClassTest.testAll":376,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":295,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":499,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":171,"org.easymock.tests2.CaptureTest.testCaptureAll":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":42,"org.easymock.tests.MockNameTest.defaultName":467,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":327,"org.easymock.samples.ExampleTest.voteForRemovals":20,"org.easymock.tests.UsageVarargTest.allKinds":269,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":172,"org.easymock.samples.BasicClassMockTest.testPrintContent":335,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":276,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":32,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":366,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":497,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":10,"org.easymock.tests2.UsageConstraintsTest.greaterThan":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":158,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":148,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":484,"org.easymock.samples.ExampleTest.voteForRemoval":17,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":149,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":66,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":142,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":205,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":406,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":199,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":402,"org.easymock.tests2.CaptureTest.testCaptureFirst":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":407,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":57,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":244,"org.easymock.tests2.CaptureTest.testCapture2_2446744":119,"org.easymock.tests2.UsageTest.moreThanOneArgument":47,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":134,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":268,"org.easymock.tests.GenericTest.testBridgedEquals":429,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":314,"org.easymock.tests.UsageExpectAndReturnTest.longType":240,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":404,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":296,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":468,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":294,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":477,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":324,"org.easymock.tests.UsageCallCountTest.tooManyCalls":315,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":283,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":275,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests.MockingTest.testNiceClassMocking":306,"org.easymock.tests.MockingTest.testClassMocking":299,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":501,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":308,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":25,"org.easymock.tests2.UsageConstraintsTest.testFind":74,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":152,"org.easymock.tests.MockTypeTest.fromEasyMockClass":164,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":180,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":102,"org.easymock.tests.UsageExpectAndReturnTest.object":247,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":412,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":263,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":208,"org.easymock.tests.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":462,"org.easymock.tests2.ConstraintsToStringTest.findToString":509,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":253,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":223,"org.easymock.tests.MockClassControlTest.testHashCode":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":360,"org.easymock.tests2.EasyMockSupportTest.testVerify":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":386,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":463,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":425,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":40,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":39,"org.easymock.tests.UsageVarargTest.varargCharAccepted":262,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":496,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastCall":51,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":510,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":415,"org.easymock.tests.DefaultClassInstantiatorTest.object":329,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":424,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":387,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":285,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":502,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":359,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":146,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":284,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":254,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":395,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":319,"org.easymock.tests2.UsageTest.resumeIfFailure":56,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":163,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":202,"org.easymock.tests2.StubTest.stubWithReturnValue":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":246,"org.easymock.tests2.SerializationTest.testAllMockedMethod":122,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":446,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":14,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":337,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":427,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":290,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":491,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":452,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":417,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":475,"org.easymock.tests.UsageExpectAndThrowTest.object":288,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":90,"org.easymock.tests2.DelegateToTest.testWrongClass":105,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":175,"org.easymock.tests.UsageStrictMockTest.range":185,"org.easymock.samples.ConstructorCalledMockTest.testTax":339,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":372,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":289,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":419,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":195,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":471,"org.easymock.tests2.CaptureTest.testCaptureNone":115,"org.easymock.tests.UsageUnorderedTest.message":176,"org.easymock.tests.UsageVerifyTest.twoReturns":179,"org.easymock.tests.UsageVarargTest.varargByteAccepted":267,"org.easymock.tests2.ThreadingTest.testThreadSafe":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":390,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":312,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":458,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":334,"org.easymock.tests2.CaptureTest.testCapture_2617107":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":230,"org.easymock.tests2.UsageConstraintsTest.any":80,"org.easymock.tests2.StubTest.stub":58,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":201,"org.easymock.tests.UsageExpectAndThrowTest.longType":281,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":482,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":215,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":364,"org.easymock.tests.LimitationsTest.mockNativeMethod":198,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":428,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":256,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":500,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":343,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":38,"org.easymock.tests2.NameTest.nameForMocksControl":100,"org.easymock.tests2.MockedExceptionTest.testMockedException":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":378,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":194,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":401,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":282,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":303,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":136,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":420,"org.easymock.tests.MockingTest.testNicePartialClassMocking":301,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":141,"org.easymock.tests2.CaptureTest.testCaptureLast":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":3,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":341,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":31,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":91,"org.easymock.tests.MockingTest.testTwoMocks":472,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":286,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":54,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":95,"org.easymock.samples.ExampleTest.removeNonExistingDocument":21,"org.easymock.tests.UsageStrictMockTest.differentMethods":186,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":361,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":508,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":480,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":67,"org.easymock.tests2.MockBuilderTest.testCreateMockString":135,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":316,"org.easymock.tests.UsageExpectAndThrowTest.floatType":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":380,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":486,"org.easymock.tests.UsageVerifyTest.twoThrows":178,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":389,"org.easymock.samples.ExampleTest.voteAgainstRemoval":18,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":147,"org.easymock.tests.LimitationsTest.privateConstructor":455,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":505,"org.easymock.tests2.UsageConstraintsTest.testNotNull":94,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":23,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":277,"org.easymock.tests2.UsageTest.defaultResetToNice":53,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":252,"org.easymock.tests.UsageVarargTest.differentLength":264,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":342,"org.easymock.tests2.CallbackTest.callback":44,"org.easymock.tests2.UsageConstraintsTest.equals":398,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":495,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":422,"org.easymock.tests.UsageTest.openCallCountByLastCall":193,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":229,"org.easymock.tests.UsageCallCountTest.tooFewCalls":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":156,"org.easymock.tests.UsageThrowableTest.throwCheckedException":274,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":494,"org.easymock.tests.MockingTest.testStrictClassMocking":298,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":30,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":258,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":347,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":358,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":126,"org.easymock.tests2.CompareToTest.testGreateOrEqual":513,"org.easymock.tests.ObjectMethodsTest.testHashCode":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":8,"org.easymock.tests2.NameTest.nameForNiceMock":99,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":69,"org.easymock.tests2.DependencyTest.testInterfaceMocking":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.samples.ExampleTest.addDocument":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.DelegateToTest.testStubDelegate":104,"org.easymock.tests2.AnswerTest.stubAnswer":125,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":183,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":489,"org.easymock.tests.UsageVarargTest.varargLongAccepted":266,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.floatType":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":255,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":340,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests.UsageThrowableTest.noUpperLimit":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":371,"org.easymock.tests2.SerializationTest.test":121,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":112,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":479,"org.easymock.tests2.UsageConstraintsTest.testSame":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":238,"org.easymock.samples.SupportTest.addDocument":336,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":381,"org.easymock.tests.GenericTest.testPackageScope":161,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":367,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":304,"org.easymock.tests2.NameTest.nameForMock":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":249,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":490,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":292,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":457,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":160,"org.easymock.tests2.MockedExceptionTest.testRealException":26,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":443,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":228,"org.easymock.tests2.NameTest.nameForStrictMock":98,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":511,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":140,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":63,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":481,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":89,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":128,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":363,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":405,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":385,"org.easymock.tests2.CaptureTest.testCaptureRightOne":117,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":507,"org.easymock.tests2.UsageConstraintsTest.testOr":77,"org.easymock.tests.UsageRangeTest.combination":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":137,"org.easymock.tests.UsageTest.wrongArguments":192,"org.easymock.tests2.MockBuilderTest.testWithConstructor":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":382,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":250,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":483,"org.easymock.tests.UsageVarargTest.varargShortAccepted":265,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":313,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":433,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":52,"org.easymock.tests2.CaptureTest.testCaptureFromStub":118,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":210,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":129,"org.easymock.tests.UsageTest.unexpectedCallWithArray":191,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":182,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":311,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":251,"org.easymock.tests2.CaptureTest.testCapture":514,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":184,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.samples.ExampleTest.addAndChangeDocument":22,"org.easymock.tests.UsageStrictMockTest.testVerify":188,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":333,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":170,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":234,"org.easymock.tests.LimitationsTest.abstractClass":454,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":243,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":410,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":260}}]
