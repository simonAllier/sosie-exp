[{"position":"org.easymock.internal.RecordState:315","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[43,44,45,46],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[47,48,49,50,51,52,53,54,55,43,56,57,58,59,44,60,45,61,46,62],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[65,66,67],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[68,69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[72,73,74,75,76,77,78,79,80,81,82,47,48,49,50,83,84,85,86,87,88,51,52,89,90,91,92,93,94,95,96,97,98,0,1,2,3,99,100,101,102,103,104,105,106,107,108,109,110,53,54,55,43,56,57,58,59,44,60,111,112,65,113,114,68,115,116,45,61,117,118,119,46,62,120,121,122,123,124,125,126,127,128,129,130,4,131,132,5,133,134,135,136,70,137,6,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,27,28,183,184,185,186,187,188,189,66,190,191,192,193,194,195,196,197,29,198,199,200,30,31,201,202,203,204,205,206,207,208,32,33,34,35,36,37,209,210,211,212,213,214,215,216,217,38,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,67,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,39,266,267,268,269,40,270,271,272,273,274,275,41,276,277,278,279,280,42,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matching"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[106,135,139,140,66,192,305,259,267,268,270,271,278,292,293],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[306,307,2,308,309,310,311,312,121,313,314,69,315,316,317,318,319,320,321,322,128,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,201,339,340,341,342,343,344,345,346,347,348,64,349,350,351,352,353,354,265,355,356,357,358,359,359,360,360],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[76,77,361,47,48,49,50,83,84,85,86,87,88,51,52,89,90,104,109,110,53,54,55,43,56,57,58,59,44,60,111,112,65,113,114,68,115,116,45,61,117,118,119,46,62,120,317,126,174,175,181,182,27,28,183,66,190,36,217,38,67,259,260,261,262,263,264],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[133],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[115,362],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[363,125,364],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[306,316,328,365,329,330,331,332,333,334,335,336,366,367,337,348,353,354,358],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[76,77,78,79,80,81,306,82,307,47,48,49,50,83,84,85,86,87,88,51,52,89,90,91,94,95,96,97,0,1,2,3,99,100,102,103,104,105,106,107,108,308,309,310,311,312,109,110,53,54,55,43,56,57,58,59,60,111,112,65,113,114,68,115,116,45,61,117,118,119,46,62,120,121,313,122,314,69,315,316,317,318,319,320,321,123,124,125,126,127,128,323,324,325,129,326,327,130,4,131,132,328,329,331,332,333,334,335,336,337,5,133,134,135,136,70,137,6,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,161,162,163,164,165,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,338,174,175,176,178,179,181,182,27,28,183,188,189,66,190,191,192,193,194,196,197,29,198,199,200,30,31,346,347,202,203,204,205,206,350,351,352,32,33,34,35,36,37,368,368,217,38,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,67,250,251,252,253,254,255,256,259,260,261,262,263,264,265,39,266,267,268,269,40,270,271,272,273,275,41,278,279,280,42,281,282,283,284,285,291,292,293,294,295,356,357,296,358,297,359,360,298,299,300,301,302,303,304],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[369,370,371],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[372,72,73,74,75,76,373,77,78,79,80,81,306,82,307,361,47,48,49,50,83,84,85,86,87,88,51,52,89,90,91,92,93,94,95,96,374,375,376,377,378,97,98,379,380,381,382,383,0,1,2,3,99,384,385,386,387,388,100,101,389,390,391,392,393,102,103,104,105,106,107,108,394,395,396,308,397,398,309,399,400,401,402,403,404,405,406,407,310,408,409,410,411,412,311,413,414,312,415,416,417,418,419,420,421,422,423,109,110,53,54,424,55,43,56,57,58,59,44,60,111,112,65,113,114,68,115,116,45,61,117,118,119,46,62,120,121,313,122,314,69,315,316,425,317,426,427,318,319,320,321,363,322,123,124,125,126,127,128,323,324,325,428,129,326,327,429,130,4,430,431,131,132,328,432,329,330,433,434,331,332,333,435,334,436,437,335,336,438,337,5,133,134,135,136,70,137,6,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,338,166,167,168,169,170,171,172,173,174,175,176,177,178,179,439,440,180,441,442,443,444,364,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,181,182,27,28,183,184,185,186,187,188,189,66,190,191,192,193,194,195,196,197,29,198,199,200,30,31,201,339,340,341,342,343,344,345,63,346,347,348,64,202,203,204,205,206,207,208,462,463,464,349,350,351,465,352,466,467,468,32,33,34,35,36,37,353,469,470,209,210,354,211,212,213,214,215,216,217,38,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,471,241,242,243,244,245,246,247,67,248,249,250,251,252,253,254,255,256,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,257,488,489,490,491,492,258,493,259,260,261,262,263,264,494,495,265,496,39,266,267,268,269,40,270,271,272,273,274,275,41,276,277,278,279,280,42,281,282,283,284,285,286,287,288,289,290,355,291,292,293,294,295,356,357,296,358,297,359,360,298,299,300,301,302,303,497,304],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[59,113,120,498],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[434],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[499,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[321],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[109,115,119,500],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[76,77,78,79,80,81,306,82,307,47,48,49,50,83,84,85,86,87,88,51,52,89,90,91,94,95,96,97,0,1,2,3,99,100,102,103,104,105,106,107,108,308,309,310,311,312,109,110,53,54,55,43,56,57,58,59,60,111,112,65,113,114,68,115,116,45,61,117,118,119,46,62,120,121,313,122,314,69,315,316,317,318,319,320,321,123,124,126,127,128,323,324,325,129,326,327,130,4,131,132,328,329,331,332,333,334,335,336,337,5,133,134,135,136,70,137,6,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,161,162,163,164,165,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,338,174,175,176,178,179,181,182,27,28,183,188,189,66,190,191,192,193,194,196,197,29,198,199,200,30,31,346,347,202,203,204,205,206,350,351,352,32,33,34,35,36,37,217,38,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,67,250,251,252,253,254,255,256,259,260,261,262,263,264,265,39,266,267,268,269,40,270,271,272,273,275,41,278,279,280,42,281,282,283,284,285,291,292,293,294,295,356,357,296,358,297,359,360,298,299,300,301,302,303,304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[47,49,51,53,54,43,57,58,44,45,46],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,196,198,199,200,30,31,32,33,34,35,36,37,38,41,42,292],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[499],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[125],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[415,435,501,502,503,504,505],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[76,77,91,94,96,99,273,299],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[313],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[47,49,50,83,84,85,86,88,499,51,52,90],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":54,"org.easymock.tests2.UsageTest.argumentsOrdered":140,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":482,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":70,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":296,"org.easymock.tests2.DelegateToTest.testReturnException":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":33,"org.easymock.tests.MockingTest.testPartialClassMocking":350,"org.easymock.tests.MockClassControlTest.testToString":340,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":372,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":7,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":309,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":501,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageTest.wrongArguments":135,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":164,"org.easymock.samples.ExampleTest.answerVsDelegate":299,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":354,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":467,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":314,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":152,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":345,"org.easymock.tests2.CaptureTest.testPrimitive":50,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":26,"org.easymock.tests.UsageTest.moreThanOneArgument":266,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":204,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":169,"org.easymock.tests.UsageTest.argumentsOrdered":271,"org.easymock.tests.UsageVarargTest.varargIntAccepted":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":260,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":505,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":328,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":392,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":264,"org.easymock.tests.ReplayStateInvalidUsageTest.times":449,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":97,"org.easymock.tests2.DependencyTest.testClassMocking":430,"org.easymock.tests2.AnswerTest.answer":91,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":81,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":470,"org.easymock.tests2.CaptureTest.testAnd":47,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":203,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":147,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":173,"org.easymock.tests2.DelegateToTest.testDelegate":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":22,"org.easymock.tests.LimitationsTest.mockFinalMethod":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":285,"org.easymock.tests2.DependencyTest.testClassMockingSupport":431,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":207,"org.easymock.tests2.CaptureTest.testCapture1_2446744":83,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":79,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":444,"org.easymock.tests.UsageThrowableTest.throwError":196,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":210,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":439,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":414,"org.easymock.samples.PartialClassMockTest.testGetArea":358,"org.easymock.tests.MockingTest.testInterfaceMocking":465,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":364,"org.easymock.tests2.CompareToTest.testLessOrEqual":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":403,"org.easymock.tests2.UsageTest.niceToStrict":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":8,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":369,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":331,"org.easymock.tests2.MockBuilderTest.testCreateMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":16,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":148,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":469,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":216,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":248,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":162,"org.easymock.tests.UsageOverloadedMethodTest.overloading":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":113,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":41,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":229,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":279,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":65,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":471,"org.easymock.tests2.EasyMockSupportClassTest.testAll":308,"org.easymock.tests.MockClassControlTest.testEquals":344,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":24,"org.easymock.tests2.CaptureTest.testCaptureAll":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":283,"org.easymock.tests.MockNameTest.defaultName":213,"org.easymock.tests2.UsageConstraintsTest.testMatches":114,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":205,"org.easymock.samples.ExampleTest.voteForRemovals":303,"org.easymock.tests.UsageVarargTest.allKinds":67,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":284,"org.easymock.samples.BasicClassMockTest.testPrintContent":357,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":30,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":389,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":37,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":460,"org.easymock.tests2.UsageConstraintsTest.greaterThan":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":177,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":321,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":461,"org.easymock.samples.ExampleTest.voteForRemoval":300,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":124,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":363,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":366,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":211,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":316,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":338,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":145,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":32,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":156,"org.easymock.tests2.CaptureTest.testCaptureFirst":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":146,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":225,"org.easymock.tests2.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":126,"org.easymock.tests2.CaptureTest.testCapture2_2446744":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":489,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":336,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":247,"org.easymock.tests.GenericTest.testBridgedEquals":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":255,"org.easymock.tests.UsageExpectAndReturnTest.longType":221,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":25,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":367,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":184,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":118,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":23,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":202,"org.easymock.tests.UsageCallCountTest.tooManyCalls":256,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":200,"org.easymock.tests.MockingTest.testNiceClassMocking":468,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":323,"org.easymock.tests.MockingTest.testClassMocking":464,"org.easymock.tests2.UsageConstraintsTest.testContains":112,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":249,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":365,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":55,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":42,"org.easymock.tests.MockTypeTest.fromEasyMockClass":209,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":188,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":77,"org.easymock.tests.UsageExpectAndReturnTest.object":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":317,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":502,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":242,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":289,"org.easymock.tests.UsageTest.exactCallCountByLastCall":272,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":170,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":415,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":234,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":275,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":385,"org.easymock.tests.MockClassControlTest.testHashCode":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":405,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":215,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":78,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":361,"org.easymock.tests.UsageVarargTest.varargCharAccepted":241,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":453,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":493,"org.easymock.tests2.UsageTest.openCallCountByLastCall":137,"org.easymock.tests.DefaultClassInstantiatorTest.object":454,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":214,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":287,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":384,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":319,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":13,"org.easymock.tests.CapturesMatcherTest.test":368,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":235,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":311,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":341,"org.easymock.tests2.UsageTest.resumeIfFailure":141,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":353,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":35,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":435,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":227,"org.easymock.tests2.SerializationTest.testAllMockedMethod":307,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":257,"org.easymock.samples.SupportTest.voteForRemovals":295,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":387,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":19,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":258,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":92,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":441,"org.easymock.tests.UsageExpectAndThrowTest.object":17,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":61,"org.easymock.tests2.DelegateToTest.testWrongClass":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":175,"org.easymock.tests.UsageStrictMockTest.range":192,"org.easymock.samples.ConstructorCalledMockTest.testTax":359,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":422,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":333,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":168,"org.easymock.tests2.CaptureTest.testCaptureNone":87,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":71,"org.easymock.tests.UsageUnorderedTest.message":259,"org.easymock.tests.UsageVerifyTest.twoReturns":293,"org.easymock.tests.UsageVarargTest.varargByteAccepted":246,"org.easymock.tests2.ThreadingTest.testThreadSafe":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":408,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":253,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":290,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":356,"org.easymock.tests2.CaptureTest.testCapture_2617107":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":28,"org.easymock.tests2.UsageConstraintsTest.any":60,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":448,"org.easymock.tests2.StubTest.stub":130,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":34,"org.easymock.tests.UsageExpectAndThrowTest.longType":10,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":458,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":447,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":105,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":100,"org.easymock.tests2.SerializationTest.testClass":306,"org.easymock.tests.LimitationsTest.mockNativeMethod":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":237,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":376,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":108,"org.easymock.tests2.NameTest.nameForMocksControl":75,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":398,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":11,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":352,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":373,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":121,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":334,"org.easymock.tests.MockingTest.testNicePartialClassMocking":351,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":315,"org.easymock.tests2.CaptureTest.testCaptureLast":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":374,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":208,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":58,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":327,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":117,"org.easymock.tests.MockingTest.testTwoMocks":349,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":15,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":62,"org.easymock.samples.ExampleTest.removeNonExistingDocument":497,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":445,"org.easymock.tests.UsageStrictMockTest.differentMethods":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":386,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":456,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":125,"org.easymock.tests2.MockBuilderTest.testCreateMockString":337,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":399,"org.easymock.tests.UsageExpectAndThrowTest.floatType":9,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":416,"org.easymock.tests.UsageVerifyTest.twoThrows":292,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":310,"org.easymock.samples.ExampleTest.voteAgainstRemoval":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":483,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":166,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":320,"org.easymock.tests.LimitationsTest.privateConstructor":495,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":31,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests2.UsageTest.defaultResetToNice":138,"org.easymock.samples.ExampleTest.voteAgainstRemovals":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":233,"org.easymock.tests.UsageVarargTest.differentLength":243,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":375,"org.easymock.tests2.CallbackTest.callback":99,"org.easymock.tests2.UsageConstraintsTest.equals":424,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":426,"org.easymock.tests.UsageTest.openCallCountByLastCall":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":27,"org.easymock.tests.UsageCallCountTest.tooFewCalls":251,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":165,"org.easymock.tests.UsageThrowableTest.throwCheckedException":199,"org.easymock.tests.MockingTest.testStrictClassMocking":463,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":38,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":98,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":324,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":450,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":129,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":96,"org.easymock.tests2.CompareToTest.testGreateOrEqual":498,"org.easymock.tests.ObjectMethodsTest.testHashCode":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":504,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":127,"org.easymock.tests2.NameTest.nameForNiceMock":74,"org.easymock.tests2.DependencyTest.testInterfaceMocking":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":503,"org.easymock.samples.ExampleTest.addDocument":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.DelegateToTest.testStubDelegate":158,"org.easymock.tests2.AnswerTest.stubAnswer":95,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":190,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":436,"org.easymock.tests.UsageVarargTest.varargLongAccepted":245,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndReturnTest.floatType":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":312,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":391,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":116,"org.easymock.tests.UsageThrowableTest.noUpperLimit":197,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":110,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":417,"org.easymock.tests2.SerializationTest.test":82,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":84,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":455,"org.easymock.tests2.UsageConstraintsTest.testSame":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":219,"org.easymock.samples.SupportTest.addDocument":294,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":428,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":400,"org.easymock.tests.GenericTest.testPackageScope":346,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":390,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":466,"org.easymock.tests2.NameTest.nameForMock":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":438,"org.easymock.tests2.UsageStrictMockTest.differentMethods":107,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":21,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":179,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":485,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":104,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":452,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":182,"org.easymock.tests2.NameTest.nameForStrictMock":73,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":434,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":76,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":371,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":69,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":421,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":457,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":45,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":329,"org.easymock.tests2.UsageStrictMockTest.range":106,"org.easymock.tests2.UsageConstraintsTest.lessThan":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":404,"org.easymock.tests2.CaptureTest.testCaptureRightOne":51,"org.easymock.tests2.UsageConstraintsTest.testOr":57,"org.easymock.tests.UsageRangeTest.combination":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":313,"org.easymock.tests.UsageTest.wrongArguments":268,"org.easymock.tests2.MockBuilderTest.testWithConstructor":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":401,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":231,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":459,"org.easymock.tests.UsageVarargTest.varargShortAccepted":244,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":254,"org.easymock.tests2.UsageConstraintsTest.cmpTo":111,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":93,"org.easymock.tests2.CompareToTest.testLessThan":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":475,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":6,"org.easymock.tests2.CaptureTest.testCaptureFromStub":52,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":443,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":330,"org.easymock.tests.UsageTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":232,"org.easymock.tests2.CaptureTest.testCapture":499,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.tests2.UsageConstraintsTest.constraints":53,"org.easymock.samples.ExampleTest.addAndChangeDocument":304,"org.easymock.tests.UsageStrictMockTest.testVerify":195,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":297,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":282,"org.easymock.tests2.CompareToTest.testGreateThan":362,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":262,"org.easymock.tests.LimitationsTest.abstractClass":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":263,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":149,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":239}}]
