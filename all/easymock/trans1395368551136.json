[{"position":"org.easymock.internal.RecordState:324","failures":[0,1,2],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[50,51,52,53],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[54,55,56,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[60,61,0,62,63,64,65,66,67,68,69,16,70,71,72,73,74,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[75,76,77,78,79],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:36","sourceCode":"return !(org.easymock.IArgumentMatcher.matches(java.lang.Object))","type":"CtReturnImpl"},"failures":[80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[82,83],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,4,5,6,99,7,9,10,11,12,13,100,0,62,63,101,102,103,104,105,106,64,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,65,66,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,67,68,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,69,183,184,185,186,1,2,187,188,16,20,21,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,70,71,204,205,206,207,208,209,210,211,212,72,213,214,73,74,215,216,54,217,218,219,220,221,222,223,224,75,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,50,244,245,246,247,248,51,249,250,251,52,252,253,254,49,255,256,53,257,258,259,260,80,261,262,263,264,265,23,24,25,266,267,268,269,270,271,272,273,26,274,275,276,277,278,279,280,281,282,283,284,285,286],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[239,287],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[288,289,290,291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[292,292,293,293,88,97,98,294,295,14,107,108,109,144,155,156,296,180,297,54,221,223,224,75,225,226,298,299,76,300,227,301,228,229,302,77,303,304,230,231,232,233,235,236,263,264,23,24,25,305,266,306,78,267,307,308,309,310,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[292,293,88,294,295,3,296,54,55,311,221,75,225,226,298,312,76,300,313,314,227,301,228,56,229,315,316,302,77,317,304,305,318,78,267,79,319],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:190","failures":[320,100,62,63,101,103,104,64,115,116,117,120,121,122,123,124,132,66,133,321,322,323,135,136,137,140,324,149,158,159,183,185,186,1,2,187,188,325,326,16,17,18,19,189,190,191,192,193,194,195,196,327,197,198,199,200,202,203,71,204,205,207,209,210,328,329,72,214,74,215,217,221,222,227,237,238,239,241,242,243,50,244,245,246,247,248,51,249,250,251,52,252,253,254,49,255,256,53,257,258,260,80,261,262,264,24,266,78,267,307,268,269,270,272,273,275,276,277,278,330,279,280,281,286],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[55,56,57,331,332,333,334,335,336,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[299,227,78,267,308,310],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[338],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[141,142,217,282,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[100,0,62,101,81,132,133,134,324,205,214,215,216],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastControl":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[339,321,322,323],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[61,0,62,66,74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[340,341,342,343,344,345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":244,"org.easymock.tests2.UsageTest.argumentsOrdered":212,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":199,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":208,"org.easymock.tests2.StubTest.stubWithReturnValue":189,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":56,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":260,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":119,"org.easymock.tests2.SerializationTest.testAllMockedMethod":223,"org.easymock.tests2.DelegateToTest.testReturnException":282,"org.easymock.tests.MockingTest.testPartialClassMocking":107,"org.easymock.samples.SupportTest.voteForRemovals":87,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":3,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":172,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":160,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":84,"org.easymock.tests.UsageExpectAndThrowTest.object":170,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":257,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":203,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":331,"org.easymock.tests2.DelegateToTest.testWrongClass":284,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":38,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":181,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":182,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":249,"org.easymock.tests2.UsageTest.wrongArguments":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":136,"org.easymock.samples.ConstructorCalledMockTest.testTax":292,"org.easymock.tests.UsageStrictMockTest.range":66,"org.easymock.samples.ExampleTest.answerVsDelegate":91,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":327,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":295,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":230,"org.easymock.tests2.UsageConstraintsTest.testNull":246,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":171,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":228,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":198,"org.easymock.tests2.CaptureTest.testPrimitive":272,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":140,"org.easymock.tests.UsageTest.moreThanOneArgument":101,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":179,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":325,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":30,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":322,"org.easymock.tests2.CaptureTest.testCaptureNone":276,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":341,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests.UsageVerifyTest.twoReturns":62,"org.easymock.tests.UsageVarargTest.varargByteAccepted":11,"org.easymock.tests2.ThreadingTest.testThreadSafe":237,"org.easymock.tests.UsageTest.argumentsOrdered":106,"org.easymock.tests.UsageVarargTest.varargIntAccepted":6,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":154,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":97,"org.easymock.tests2.CaptureTest.testCapture_2617107":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":336,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":298,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":139,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":301,"org.easymock.tests2.UsageConstraintsTest.any":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":150,"org.easymock.tests.UsageExpectAndThrowTest.longType":163,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":32,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":268,"org.easymock.tests2.SerializationTest.testClass":221,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests.LimitationsTest.mockNativeMethod":180,"org.easymock.tests2.DependencyTest.testClassMocking":58,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":296,"org.easymock.tests2.AnswerTest.answer":217,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":129,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":310,"org.easymock.tests2.CaptureTest.testAnd":269,"org.easymock.tests2.UsageTest.strictResetToDefault":204,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":306,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":194,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":18,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":104,"org.easymock.tests2.DelegateToTest.testDelegate":285,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":109,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":164,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":263,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":229,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":31,"org.easymock.tests.MockingTest.testNicePartialClassMocking":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":175,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":25,"org.easymock.tests2.CaptureTest.testCaptureLast":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":145,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":82,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":236,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":51,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":45,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":258,"org.easymock.tests2.DependencyTest.testClassMockingSupport":59,"org.easymock.tests.MockingTest.testTwoMocks":14,"org.easymock.tests2.CaptureTest.testCapture1_2446744":273,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":168,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":211,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":261,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":345,"org.easymock.tests.UsageThrowableTest.throwError":183,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":83,"org.easymock.tests.UsageStrictMockTest.differentMethods":133,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":344,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":239,"org.easymock.tests2.MockBuilderTest.testCreateMockString":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":326,"org.easymock.tests.UsageExpectAndThrowTest.floatType":162,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":49,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":218,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":311,"org.easymock.tests.UsageVerifyTest.twoThrows":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":225,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":35,"org.easymock.samples.PartialClassMockTest.testGetArea":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":147,"org.easymock.samples.ExampleTest.voteAgainstRemoval":93,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":339,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":321,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":267,"org.easymock.tests2.UsageTest.niceToStrict":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":161,"org.easymock.tests2.UsageConstraintsTest.testNotNull":80,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":188,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":338,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":227,"org.easymock.tests2.UsageTest.defaultResetToNice":328,"org.easymock.tests2.MockBuilderTest.testCreateMock":302,"org.easymock.samples.ExampleTest.voteAgainstRemovals":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":125,"org.easymock.tests.UsageVarargTest.differentLength":8,"org.easymock.tests2.CallbackTest.callback":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":318,"org.easymock.tests.UsageTest.openCallCountByLastCall":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":169,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":242,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":138,"org.easymock.tests.UsageCallCountTest.tooFewCalls":152,"org.easymock.tests.UsageOverloadedMethodTest.overloading":158,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":253,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":143,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":121,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":157,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":252,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":277,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":343,"org.easymock.tests.UsageThrowableTest.throwCheckedException":1,"org.easymock.tests2.EasyMockSupportClassTest.testAll":224,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":308,"org.easymock.tests2.CaptureTest.testCaptureAll":270,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":235,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":232,"org.easymock.tests2.UsageConstraintsTest.testMatches":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":234,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":220,"org.easymock.samples.ExampleTest.voteForRemovals":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":335,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":241,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":44,"org.easymock.tests.UsageVarargTest.allKinds":13,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":39,"org.easymock.tests2.DependencyTest.testInterfaceMocking":202,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":333,"org.easymock.samples.BasicClassMockTest.testPrintContent":98,"org.easymock.samples.ExampleTest.addDocument":94,"org.easymock.tests2.DelegateToTest.testStubDelegate":283,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":187,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":22,"org.easymock.tests2.AnswerTest.stubAnswer":219,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":337,"org.easymock.tests2.UsageConstraintsTest.greaterThan":255,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":17,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":307,"org.easymock.tests.UsageVarargTest.varargLongAccepted":10,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":36,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.samples.ExampleTest.voteForRemoval":92,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":287,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":238,"org.easymock.tests.UsageExpectAndReturnTest.floatType":112,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":293,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":256,"org.easymock.tests.UsageThrowableTest.noUpperLimit":184,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":243,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":71,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":144,"org.easymock.tests2.SerializationTest.test":222,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":26,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":192,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":185,"org.easymock.tests2.UsageConstraintsTest.testSame":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":111,"org.easymock.samples.SupportTest.addDocument":86,"org.easymock.tests2.CaptureTest.testCaptureFirst":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":193,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":72,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":117,"org.easymock.tests.GenericTest.testPackageScope":155,"org.easymock.tests2.CaptureTest.testCapture2_2446744":279,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":240,"org.easymock.tests2.UsageTest.moreThanOneArgument":205,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":77,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":12,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":67,"org.easymock.tests.UsageExpectAndReturnTest.longType":113,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":190,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":178,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":320,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":259,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":317,"org.easymock.tests2.UsageStrictMockTest.differentMethods":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":114,"org.easymock.tests.UsageCallCountTest.tooManyCalls":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":19,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":57,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":214,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":165,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":137,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":231,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":299,"org.easymock.tests2.UsageConstraintsTest.testContains":52,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":286,"org.easymock.tests2.UsageConstraintsTest.testFind":245,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":159,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":314,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":24,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":21,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":15,"org.easymock.tests.UsageExpectAndReturnTest.object":120,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":60,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":266,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":76,"org.easymock.tests2.UsageStrictMockTest.range":74,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":33,"org.easymock.tests2.UsageConstraintsTest.lessThan":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":332,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":7,"org.easymock.tests.UsageTest.exactCallCountByLastCall":64,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":334,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":191,"org.easymock.tests2.CaptureTest.testCaptureRightOne":278,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":340,"org.easymock.tests2.UsageConstraintsTest.testOr":248,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":55,"org.easymock.tests.UsageRangeTest.combination":16,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":264,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":126,"org.easymock.tests.UsageTest.wrongArguments":102,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":142,"org.easymock.tests2.MockBuilderTest.testWithConstructor":312,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":297,"org.easymock.tests2.EasyMockSupportTest.testVerify":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":123,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":288,"org.easymock.tests.UsageVarargTest.varargShortAccepted":9,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":141,"org.easymock.tests2.UsageConstraintsTest.cmpTo":251,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":47,"org.easymock.tests.UsageVarargTest.varargCharAccepted":99,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":37,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":213,"org.easymock.tests2.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":200,"org.easymock.tests2.CaptureTest.testCaptureFromStub":330,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":300,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":167,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":131,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":153,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":124,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":78,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":65,"org.easymock.tests2.UsageConstraintsTest.constraints":50,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":34,"org.easymock.samples.ExampleTest.addAndChangeDocument":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":166,"org.easymock.tests.ReplayStateInvalidCallsTest.times":40,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":127,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":85,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":226,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":130,"org.easymock.tests2.UsageTest.resumeIfFailure":329,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":274,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":294,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":116,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":196,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":61,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":5}}]
