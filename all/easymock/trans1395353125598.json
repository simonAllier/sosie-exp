[{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[7,8],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > (this.int)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"minimum","callCount":"minimum"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[26,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[14,15,16,17,18,20,29,30,31,32,22,23,25,33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1000","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[39,26,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,14,15,16,74,17,3,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,4,18,106,19,20,29,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,31,32,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,21,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,22,210,211,212,213,214,215,216,217,218,219,220,221,23,222,24,25,33,223,224,225,226,227,228,229,230,231,26,40,41,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,7,8,259,260,261,262,263,264,265,266,267,268,269,270,271,272,38,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,9,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[7,261,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[39,26,40,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[316,317,318,319,320,291,321,322,323,324,325,326,327,328,329,330,331,306,332,333,334,335,336,337],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"qualifier":"qualifier","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,14,15,16,74,17,3,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,4,18,106,19,20,29,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,31,32,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,338,338,169,170,171,21,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,22,210,211,212,213,214,215,216,217,218,219,220,221,23,222,24,25,33,223,224,225,226,227,228,229,230,231,26,40,41,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,339,254,255,256,257,258,7,8,259,260,261,262,263,264,265,266,267,268,269,270,271,272,38,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,9,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[340,341,342],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[343,253,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[224],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[344],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[259,315,38,277],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[315],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[256,271,273],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests2.UsageTest.argumentsOrdered":217,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":202,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":126,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":212,"org.easymock.tests2.StubTest.stubWithReturnValue":191,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":276,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":93,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":53,"org.easymock.tests2.SerializationTest.testAllMockedMethod":41,"org.easymock.tests2.DelegateToTest.testReturnException":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":124,"org.easymock.tests.MockingTest.testPartialClassMocking":81,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":28,"org.easymock.samples.SupportTest.voteForRemovals":51,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":161,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":39,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":149,"org.easymock.tests.UsageExpectAndThrowTest.object":159,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":10,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":273,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":206,"org.easymock.tests2.DelegateToTest.testWrongClass":309,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":263,"org.easymock.tests2.UsageTest.wrongArguments":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":109,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":337,"org.easymock.samples.ConstructorCalledMockTest.testTax":48,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":116,"org.easymock.samples.ExampleTest.answerVsDelegate":55,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":199,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":245,"org.easymock.tests2.UsageConstraintsTest.testNull":259,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":283,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":160,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":240,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":201,"org.easymock.tests2.CaptureTest.testPrimitive":295,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":113,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests.UsageTest.moreThanOneArgument":17,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":168,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":115,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":345,"org.easymock.tests2.CaptureTest.testCaptureNone":300,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.UsageVerifyTest.twoReturns":16,"org.easymock.tests.UsageVarargTest.varargByteAccepted":71,"org.easymock.tests2.ThreadingTest.testThreadSafe":252,"org.easymock.tests.UsageTest.argumentsOrdered":79,"org.easymock.tests.UsageVarargTest.varargIntAccepted":65,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":140,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":61,"org.easymock.tests2.CaptureTest.testCapture_2617107":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":129,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":112,"org.easymock.tests2.UsageConstraintsTest.any":264,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":239,"org.easymock.tests2.StubTest.stub":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":125,"org.easymock.tests.UsageExpectAndThrowTest.longType":152,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":291,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":306,"org.easymock.tests.LimitationsTest.mockNativeMethod":169,"org.easymock.tests2.AnswerTest.answer":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":103,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":329,"org.easymock.tests2.CaptureTest.testAnd":292,"org.easymock.tests2.UsageTest.strictResetToDefault":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":9,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":33,"org.easymock.tests2.NameTest.nameForMocksControl":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":331,"org.easymock.tests2.MockedExceptionTest.testMockedException":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":186,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests2.DelegateToTest.testDelegate":310,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":153,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":280,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":241,"org.easymock.tests.MockingTest.testNicePartialClassMocking":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":164,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":327,"org.easymock.tests2.CaptureTest.testCaptureLast":299,"org.easymock.tests2.CompareToTest.testCompareEqual":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":127,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":262,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":251,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":138,"org.easymock.tests2.CaptureTest.testCapture1_2446744":296,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":84,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":157,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":216,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":278,"org.easymock.tests.UsageThrowableTest.throwError":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":333,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":318,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":339,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":326,"org.easymock.tests2.MockBuilderTest.testCreateMockString":244,"org.easymock.tests.UsageExpectAndThrowTest.floatType":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":184,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":270,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests.ResultTest.createReturnResultToString":45,"org.easymock.tests.UsageVerifyTest.twoThrows":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":234,"org.easymock.samples.PartialClassMockTest.testGetArea":52,"org.easymock.tests.ResultTest.createDelegateResultToString":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":130,"org.easymock.samples.ExampleTest.voteAgainstRemoval":57,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":289,"org.easymock.tests2.UsageTest.niceToStrict":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":150,"org.easymock.tests2.UsageConstraintsTest.testNotNull":277,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":311,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":179,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":238,"org.easymock.tests2.MockBuilderTest.testCreateMock":242,"org.easymock.tests2.UsageTest.defaultResetToNice":215,"org.easymock.samples.ExampleTest.voteAgainstRemovals":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":328,"org.easymock.tests.UsageVarargTest.differentLength":68,"org.easymock.tests2.CallbackTest.callback":207,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":334,"org.easymock.tests.UsageTest.openCallCountByLastCall":76,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":158,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":197,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":256,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":114,"org.easymock.tests.UsageCallCountTest.tooFewCalls":32,"org.easymock.tests.UsageOverloadedMethodTest.overloading":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":268,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":95,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":146,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":267,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":117,"org.easymock.tests.UsageThrowableTest.throwCheckedException":176,"org.easymock.tests2.EasyMockSupportClassTest.testAll":232,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":145,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":166,"org.easymock.tests2.CaptureTest.testCaptureAll":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":332,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":247,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":343,"org.easymock.tests2.UsageConstraintsTest.testMatches":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":249,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":183,"org.easymock.samples.ExampleTest.voteForRemovals":59,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":255,"org.easymock.tests2.NameTest.nameForNiceMock":36,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":344,"org.easymock.tests.UsageVarargTest.allKinds":73,"org.easymock.tests2.DependencyTest.testInterfaceMocking":205,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":14,"org.easymock.samples.BasicClassMockTest.testPrintContent":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":137,"org.easymock.samples.ExampleTest.addDocument":58,"org.easymock.tests2.DelegateToTest.testStubDelegate":308,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":178,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":220,"org.easymock.tests2.AnswerTest.stubAnswer":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":128,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests2.UsageConstraintsTest.greaterThan":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":290,"org.easymock.tests.UsageVarargTest.varargLongAccepted":70,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":29,"org.easymock.samples.ExampleTest.voteForRemoval":56,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":253,"org.easymock.tests.UsageExpectAndReturnTest.floatType":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":223,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":324,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":272,"org.easymock.tests.UsageThrowableTest.noUpperLimit":173,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":257,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":208,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":122,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":297,"org.easymock.tests2.SerializationTest.test":40,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":194,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.testSame":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":85,"org.easymock.samples.SupportTest.addDocument":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":123,"org.easymock.tests2.CaptureTest.testCaptureFirst":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":195,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":219,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":91,"org.easymock.tests.GenericTest.testPackageScope":144,"org.easymock.tests2.CaptureTest.testCapture2_2446744":304,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":254,"org.easymock.tests2.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":243,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":323,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":72,"org.easymock.tests2.NameTest.nameForMock":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":142,"org.easymock.tests.UsageExpectAndReturnTest.longType":87,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":167,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":275,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":88,"org.easymock.tests.UsageCallCountTest.tooManyCalls":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":187,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":31,"org.easymock.tests2.MockedExceptionTest.testRealException":314,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":336,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":246,"org.easymock.tests2.UsageConstraintsTest.testContains":266,"org.easymock.tests2.NameTest.nameForStrictMock":35,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":313,"org.easymock.tests2.UsageConstraintsTest.testFind":8,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":148,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":284,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":189,"org.easymock.tests.UsageExpectAndReturnTest.object":94,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":11,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":287,"org.easymock.tests.ErrorMessageTest.testGetters":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":335,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":200,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":320,"org.easymock.tests.UsageTest.exactCallCountByLastCall":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":193,"org.easymock.tests2.CaptureTest.testCaptureRightOne":302,"org.easymock.tests2.UsageConstraintsTest.testOr":261,"org.easymock.tests.UsageRangeTest.combination":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":281,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":63,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":100,"org.easymock.tests.UsageTest.wrongArguments":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":119,"org.easymock.tests.ResultTest.createThrowResultToString":46,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":317,"org.easymock.tests2.EasyMockSupportTest.testVerify":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":97,"org.easymock.tests.UsageVarargTest.varargShortAccepted":69,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":118,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":228,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":141,"org.easymock.tests2.UsageConstraintsTest.cmpTo":265,"org.easymock.tests.UsageVarargTest.varargCharAccepted":66,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":43,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":221,"org.easymock.tests2.UsageTest.openCallCountByLastCall":213,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":214,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":203,"org.easymock.tests2.CaptureTest.testCaptureFromStub":303,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":156,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":175,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":316,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":98,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":288,"org.easymock.tests2.UsageConstraintsTest.constraints":258,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":106,"org.easymock.samples.ExampleTest.addAndChangeDocument":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":155,"org.easymock.tests.CapturesMatcherTest.test":338,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":340,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":235,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":135,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":298,"org.easymock.tests2.UsageTest.resumeIfFailure":218,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":198,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":64,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":13}}]
