[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[3,4,5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[10,11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[15,16,17,18],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:117","failures":[20,21,22,23,24,25,26,27],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[15,16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[28,29,30,31,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[34,35,20,36,37,38,39,40,41,42,43,44,45,46,47,48,48,49,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,28,70,71,72,73,74,75,76,21,77,78,79,80,0,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,19,124,125,126,127,128,129,130,22,23,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,1,156,157,158,159,160,161,162,15,16,17,24,163,164,25,165,26,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,29,30,213,214,215,216,5,217,218,31,219,220,221,222,223,6,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,27,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,2,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[163,164],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[371,372],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[81,117,179],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[103,104],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[28,70,373,31,219,273,277,278,280,283,320,324,325,327,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[28,80,85,86,211,29,30,5,31,6,224,227,228,374,375,258],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[34,35,20,36,37,38,39,40,41,42,43,44,45,46,47,48,48,49,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,28,70,71,73,74,75,76,21,77,78,79,80,0,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,19,124,125,126,127,128,129,130,22,23,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,1,156,157,158,159,160,161,162,15,16,17,24,25,165,26,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,201,202,204,205,206,207,208,209,210,211,212,29,30,215,216,5,217,218,31,219,220,221,222,223,6,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,27,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,2,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,363,364,368,370],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[163],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[3,4,5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[50,51,52,53,77,83,90,189,198,199,200,29,222,226,231,232,233,234,235,236,255,261,262,295,307,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,365,366,367],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[68,70,79,80,85,86,127,128,129,130,211,29,30,5,217,219,223,224,227,228],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[50,51,52,53,77,83,90,189,29,222,226,231,232,233,234,235,236,255,295,307,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[48,48,49,49,54,376,15,377,378,379],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[380,381,382],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[15,16,17,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":103,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":222,"org.easymock.tests2.UsageTest.argumentsOrdered":86,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":234,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":81,"org.easymock.tests2.StubTest.stubWithReturnValue":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":278,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":19,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests2.DelegateToTest.testReturnException":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":232,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":213,"org.easymock.tests.MockingTest.testPartialClassMocking":2,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":4,"org.easymock.samples.SupportTest.voteForRemovals":46,"org.easymock.tests.MockClassControlTest.testToString":353,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":14,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":316,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":214,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":92,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":163,"org.easymock.tests.UsageExpectAndThrowTest.object":326,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":57,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":121,"org.easymock.tests2.DelegateToTest.testWrongClass":134,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":209,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":210,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":259,"org.easymock.tests2.UsageTest.wrongArguments":80,"org.easymock.samples.ConstructorCalledMockTest.testTax":48,"org.easymock.tests.UsageStrictMockTest.range":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":192,"org.easymock.samples.ExampleTest.answerVsDelegate":20,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":58,"org.easymock.tests2.UsageConstraintsTest.testNull":105,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":327,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":178,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":358,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":159,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":170,"org.easymock.tests2.CaptureTest.testPrimitive":140,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":263,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":335,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":251,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":227,"org.easymock.tests.UsageTest.moreThanOneArgument":223,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":362,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":338,"org.easymock.tests2.CaptureTest.testCaptureNone":145,"org.easymock.tests.UsageUnorderedTest.message":211,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":304,"org.easymock.tests2.ThreadingTest.testThreadSafe":95,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":289,"org.easymock.tests.UsageTest.argumentsOrdered":228,"org.easymock.tests.UsageVarargTest.varargIntAccepted":298,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":347,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":264,"org.easymock.tests2.CaptureTest.testCapture_2617107":139,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":262,"org.easymock.tests2.UsageConstraintsTest.any":111,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":169,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":248,"org.easymock.tests2.StubTest.stub":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":268,"org.easymock.tests.UsageExpectAndThrowTest.longType":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":233,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":247,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":65,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests.ReplayStateInvalidUsageTest.times":249,"org.easymock.tests.LimitationsTest.mockNativeMethod":230,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":288,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":203,"org.easymock.tests2.AnswerTest.answer":24,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":76,"org.easymock.tests2.CaptureTest.testAnd":137,"org.easymock.tests2.UsageTest.strictResetToDefault":78,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":183,"org.easymock.tests2.NameTest.nameForMocksControl":130,"org.easymock.tests2.MockedExceptionTest.testMockedException":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":155,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":226,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":293,"org.easymock.tests2.DelegateToTest.testDelegate":136,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":341,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":320,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":175,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":171,"org.easymock.tests.MockingTest.testNicePartialClassMocking":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":331,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":180,"org.easymock.tests2.CaptureTest.testCaptureLast":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":235,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":370,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":64,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":208,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":122,"org.easymock.tests.MockingTest.testTwoMocks":339,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":369,"org.easymock.tests2.CaptureTest.testCapture1_2446744":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":74,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":85,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":125,"org.easymock.tests.UsageThrowableTest.throwError":307,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":243,"org.easymock.samples.ExampleTest.removeNonExistingDocument":40,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":245,"org.easymock.tests.UsageStrictMockTest.differentMethods":219,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":97,"org.easymock.tests2.MockBuilderTest.testCreateMockString":174,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":364,"org.easymock.tests.UsageExpectAndThrowTest.floatType":318,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":117,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":25,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":93,"org.easymock.samples.PartialClassMockTest.testGetArea":47,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":265,"org.easymock.samples.ExampleTest.voteAgainstRemoval":37,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":337,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":317,"org.easymock.tests2.UsageTest.niceToStrict":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":314,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":10,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":168,"org.easymock.tests2.UsageTest.defaultResetToNice":84,"org.easymock.tests2.MockBuilderTest.testCreateMock":172,"org.easymock.samples.ExampleTest.voteAgainstRemovals":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":284,"org.easymock.tests.UsageVarargTest.differentLength":301,"org.easymock.tests2.CallbackTest.callback":21,"org.easymock.tests2.UsageConstraintsTest.equals":33,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":379,"org.easymock.tests.UsageTest.openCallCountByLastCall":225,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":325,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":3,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":1,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":200,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":261,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":190,"org.easymock.tests.UsageCallCountTest.tooFewCalls":345,"org.easymock.tests.UsageOverloadedMethodTest.overloading":188,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":255,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":61,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":187,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":9,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":114,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":146,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":193,"org.easymock.tests.UsageThrowableTest.throwCheckedException":311,"org.easymock.tests.MockClassControlTest.testEquals":357,"org.easymock.tests2.EasyMockSupportClassTest.testAll":91,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":202,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":333,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":75,"org.easymock.tests2.CaptureTest.testCaptureAll":138,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":295,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":60,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":250,"org.easymock.tests2.UsageConstraintsTest.testMatches":116,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":62,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":363,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":241,"org.easymock.tests.ObjectMethodsTest.testHashCode":239,"org.easymock.samples.ExampleTest.voteForRemovals":39,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":99,"org.easymock.tests2.NameTest.nameForNiceMock":129,"org.easymock.tests.UsageVarargTest.allKinds":306,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":212,"org.easymock.tests2.DependencyTest.testInterfaceMocking":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":207,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.samples.ExampleTest.addDocument":38,"org.easymock.tests2.DelegateToTest.testStubDelegate":133,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":313,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests2.AnswerTest.stubAnswer":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":236,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":135,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":217,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":382,"org.easymock.tests2.UsageConstraintsTest.greaterThan":118,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":195,"org.easymock.tests.UsageVarargTest.varargLongAccepted":303,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":186,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":220,"org.easymock.samples.ExampleTest.voteForRemoval":36,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":287,"org.easymock.tests.UsageExpectAndReturnTest.floatType":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":181,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":49,"org.easymock.tests.UsageThrowableTest.noUpperLimit":308,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":119,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":237,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":101,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":142,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":153,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":270,"org.easymock.tests2.UsageConstraintsTest.testSame":106,"org.easymock.samples.SupportTest.addDocument":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":231,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":380,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":131,"org.easymock.tests2.CaptureTest.testCaptureFirst":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":154,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":88,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":276,"org.easymock.tests.GenericTest.testPackageScope":201,"org.easymock.tests2.UsageTest.moreThanOneArgument":79,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":98,"org.easymock.tests2.CaptureTest.testCapture2_2446744":149,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":292,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":11,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":305,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":349,"org.easymock.tests2.NameTest.nameForMock":127,"org.easymock.tests.UsageExpectAndReturnTest.longType":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":204,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":281,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":315,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":332,"org.easymock.tests2.UsageStrictMockTest.differentMethods":70,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":273,"org.easymock.tests.UsageCallCountTest.tooManyCalls":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":197,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":344,"org.easymock.tests2.MockedExceptionTest.testRealException":53,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":13,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":321,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":260,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":252,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":59,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":343,"org.easymock.tests2.UsageConstraintsTest.testContains":113,"org.easymock.tests2.NameTest.nameForStrictMock":128,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":52,"org.easymock.tests2.UsageConstraintsTest.testFind":104,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":189,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":179,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":215,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":23,"org.easymock.tests.UsageExpectAndReturnTest.object":279,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":120,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":182,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":167,"org.easymock.tests2.UsageStrictMockTest.range":28,"org.easymock.tests2.UsageConstraintsTest.lessThan":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":158,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":300,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":240,"org.easymock.tests.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":152,"org.easymock.tests2.CaptureTest.testCaptureRightOne":147,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":290,"org.easymock.tests2.UsageConstraintsTest.testOr":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":376,"org.easymock.tests.UsageRangeTest.combination":194,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":296,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":176,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":254,"org.easymock.tests.UsageTest.wrongArguments":224,"org.easymock.tests.MockClassControlTest.testHashCode":356,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":274,"org.easymock.tests2.EasyMockSupportTest.testVerify":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":282,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":291,"org.easymock.tests.UsageVarargTest.varargShortAccepted":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":199,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":27,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":73,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":72,"org.easymock.tests2.UsageConstraintsTest.cmpTo":112,"org.easymock.tests.UsageVarargTest.varargCharAccepted":299,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":381,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":164,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":67,"org.easymock.tests2.UsageTest.openCallCountByLastCall":82,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests.DefaultClassInstantiatorTest.object":368,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":161,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":198,"org.easymock.tests2.CaptureTest.testCaptureFromStub":148,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":242,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":238,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":375,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":323,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":310,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":346,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":283,"org.easymock.tests2.CaptureTest.testCapture":371,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":355,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":218,"org.easymock.tests2.UsageConstraintsTest.constraints":102,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":184,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":322,"org.easymock.samples.ExampleTest.addAndChangeDocument":41,"org.easymock.tests.CapturesMatcherTest.test":372,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":286,"org.easymock.tests.UsageStrictMockTest.testVerify":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":365,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":42,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":354,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":205,"org.easymock.tests2.UsageTest.resumeIfFailure":87,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":143,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":267,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":297,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":156}}]
