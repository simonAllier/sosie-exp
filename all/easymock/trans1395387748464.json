[{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,0,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,172,173,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[331,332,333,334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:330","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","actualTypeArgument":"actualTypeArgument","variable":"variable","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[334,335,336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[337,338,37,38,39,40,41,42,43,44,88,339,340,341,103,104,105,342,153,167,168,343,169,172,172,173,173,182,183,184,344,200,201,345,346,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,219,220,221,222,223,347,224,225,226,227,348,349,228,229,230,231,232,242,248,249,250,312,314],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[188],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[350,238,265,329,330],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[334,335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[52,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[185,186,351,352,353,354,355,228,356,357,358,359,360,361,362,363,364,365,366,233,367,368,369,370,371,372],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[328],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[373,2,6,9,10,12,13,14,15,16,18,19,20,21,22,25,82,83,84,86,87,92,145,146,148,149,150,151,155,168,169,170,171,174,176,177,178,179,181,182,183,185,186,190,192,196,197,202,255,261,262,263,264,277,279,280,281,282,305,314,316,317,320,321,322,323,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[285,291,315,317,325],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[338,39,40,41,374,375,376,204,211,214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[377],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[337,338,37,38,39,40,41,42,43,44,378,379,88,380,339,340,341,103,104,105,342,153,381,382,383,384,385,386,387,167,168,343,388,169,172,173,182,183,184,376,344,200,389,201,345,390,346,202,203,204,391,205,392,206,207,393,208,209,210,211,212,214,215,216,217,219,220,221,222,223,394,347,224,225,226,227,348,349,395,396,229,397,230,398,399,400,401,402,403,404,231,405,406,407,408,409,232,242,410,411,248,249,250,312,314],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[202,412],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[413,414,415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":286,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests2.UsageTest.argumentsOrdered":197,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":192,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":186,"org.easymock.tests2.DelegateToTest.testReturnException":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":32,"org.easymock.tests.MockingTest.testPartialClassMocking":103,"org.easymock.tests.MockClassControlTest.testToString":39,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":124,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":230,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":311,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":292,"org.easymock.tests2.UsageTest.wrongArguments":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":23,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":122,"org.easymock.samples.ExampleTest.answerVsDelegate":175,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":338,"org.easymock.tests2.UsageConstraintsTest.testNull":288,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":219,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":44,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":261,"org.easymock.tests2.CaptureTest.testPrimitive":318,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":143,"org.easymock.tests.UsageTest.moreThanOneArgument":4,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":97,"org.easymock.tests.UsageTest.argumentsOrdered":10,"org.easymock.tests.UsageVarargTest.varargIntAccepted":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":162,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":200,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":166,"org.easymock.tests.ReplayStateInvalidUsageTest.times":114,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":228,"org.easymock.tests2.AnswerTest.answer":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":237,"org.easymock.tests2.CaptureTest.testAnd":315,"org.easymock.tests2.UsageTest.strictResetToDefault":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":390,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":256,"org.easymock.tests2.DelegateToTest.testDelegate":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":139,"org.easymock.tests.LimitationsTest.mockFinalMethod":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":55,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":373,"org.easymock.tests2.CaptureTest.testCapture1_2446744":319,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":235,"org.easymock.tests.UsageThrowableTest.throwError":154,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":108,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":372,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":99,"org.easymock.samples.PartialClassMockTest.testGetArea":184,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":401,"org.easymock.tests2.UsageTest.niceToStrict":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":125,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":374,"org.easymock.tests2.ThreadingTest.testChangeDefault":336,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":202,"org.easymock.tests2.MockBuilderTest.testCreateMock":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":407,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":133,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":257,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":120,"org.easymock.tests.UsageOverloadedMethodTest.overloading":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":409,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":48,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":297,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":70,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":296,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":324,"org.easymock.tests.MockClassControlTest.testEquals":43,"org.easymock.tests2.EasyMockSupportClassTest.testAll":229,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":168,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":236,"org.easymock.tests2.CaptureTest.testCaptureAll":316,"org.easymock.tests2.UsageConstraintsTest.testMatches":298,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":98,"org.easymock.samples.ExampleTest.voteForRemovals":179,"org.easymock.tests.UsageVarargTest.allKinds":22,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":89,"org.easymock.samples.BasicClassMockTest.testPrintContent":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":54,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":160,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.UsageConstraintsTest.greaterThan":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":28,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":227,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":386,"org.easymock.samples.ExampleTest.voteForRemoval":176,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":244,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":222,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":169,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":254,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":31,"org.easymock.tests2.CaptureTest.testCaptureFirst":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":255,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":66,"org.easymock.tests2.UsageTest.moreThanOneArgument":189,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":246,"org.easymock.tests2.CaptureTest.testCapture2_2446744":327,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":207,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":21,"org.easymock.tests.GenericTest.testBridgedEquals":388,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":86,"org.easymock.tests.UsageExpectAndReturnTest.longType":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":51,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":252,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":412,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":142,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":95,"org.easymock.tests.UsageCallCountTest.tooManyCalls":87,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":159,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":210,"org.easymock.tests.MockingTest.testNiceClassMocking":342,"org.easymock.tests.MockingTest.testClassMocking":340,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":80,"org.easymock.tests2.UsageConstraintsTest.testContains":295,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":250,"org.easymock.tests2.UsageConstraintsTest.testFind":287,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":102,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":144,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":330,"org.easymock.tests.UsageExpectAndReturnTest.object":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":260,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":16,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":58,"org.easymock.tests.UsageTest.exactCallCountByLastCall":11,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":410,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":47,"org.easymock.tests.MockClassControlTest.testHashCode":42,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":403,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":234,"org.easymock.tests.UsageVarargTest.varargCharAccepted":15,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests2.UsageTest.openCallCountByLastCall":193,"org.easymock.tests.DefaultClassInstantiatorTest.object":153,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":263,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":404,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":131,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":362,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":41,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":76,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":232,"org.easymock.tests2.UsageTest.resumeIfFailure":198,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":337,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":34,"org.easymock.tests2.StubTest.stubWithReturnValue":275,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":391,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":306,"org.easymock.tests2.SerializationTest.testAllMockedMethod":314,"org.easymock.samples.SupportTest.voteForRemovals":171,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":136,"org.easymock.tests.UsageExpectAndThrowTest.object":134,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":303,"org.easymock.tests2.DelegateToTest.testWrongClass":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":93,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":94,"org.easymock.samples.ConstructorCalledMockTest.testTax":172,"org.easymock.tests.UsageStrictMockTest.range":149,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":259,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":135,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":395,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":116,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":121,"org.easymock.tests2.CaptureTest.testCaptureNone":323,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":332,"org.easymock.tests.UsageUnorderedTest.message":92,"org.easymock.tests.UsageVerifyTest.twoReturns":91,"org.easymock.tests.UsageVarargTest.varargByteAccepted":20,"org.easymock.tests2.ThreadingTest.testThreadSafe":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":405,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":84,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":182,"org.easymock.tests2.CaptureTest.testCapture_2617107":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":0,"org.easymock.tests2.UsageConstraintsTest.any":293,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":113,"org.easymock.tests2.StubTest.stub":274,"org.easymock.tests.UsageExpectAndThrowTest.longType":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":33,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":384,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":112,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":279,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests2.SerializationTest.testClass":312,"org.easymock.tests.LimitationsTest.mockNativeMethod":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":78,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":353,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests2.NameTest.nameForMocksControl":269,"org.easymock.tests2.MockedExceptionTest.testMockedException":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":397,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":8,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":128,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":105,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":377,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":216,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":205,"org.easymock.tests.MockingTest.testNicePartialClassMocking":104,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":221,"org.easymock.tests2.CaptureTest.testCaptureLast":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":351,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":2,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":215,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":291,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":304,"org.easymock.tests.MockingTest.testTwoMocks":341,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":132,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":196,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":308,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":334,"org.easymock.samples.ExampleTest.removeNonExistingDocument":180,"org.easymock.tests.UsageStrictMockTest.differentMethods":150,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":364,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":382,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":245,"org.easymock.tests2.MockBuilderTest.testCreateMockString":208,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":398,"org.easymock.tests.UsageExpectAndThrowTest.floatType":126,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":299,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":411,"org.easymock.tests.UsageVerifyTest.twoThrows":90,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":231,"org.easymock.samples.ExampleTest.voteAgainstRemoval":177,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":226,"org.easymock.tests.LimitationsTest.privateConstructor":379,"org.easymock.tests2.UsageConstraintsTest.testNotNull":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":161,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":248,"org.easymock.tests2.UsageTest.defaultResetToNice":195,"org.easymock.samples.ExampleTest.voteAgainstRemovals":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":74,"org.easymock.tests.UsageVarargTest.differentLength":17,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":352,"org.easymock.tests2.CallbackTest.callback":265,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":394,"org.easymock.tests.UsageTest.openCallCountByLastCall":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":25,"org.easymock.tests.UsageCallCountTest.tooFewCalls":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":123,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":333,"org.easymock.tests.UsageThrowableTest.throwCheckedException":158,"org.easymock.tests.MockingTest.testStrictClassMocking":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":119,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":214,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":211,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":115,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":213,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":241,"org.easymock.tests.ObjectMethodsTest.testHashCode":57,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":247,"org.easymock.tests2.NameTest.nameForNiceMock":268,"org.easymock.tests2.DependencyTest.testInterfaceMocking":310,"org.easymock.samples.ExampleTest.addDocument":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":406,"org.easymock.tests2.DelegateToTest.testStubDelegate":271,"org.easymock.tests2.AnswerTest.stubAnswer":240,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":147,"org.easymock.tests.UsageVarargTest.varargLongAccepted":19,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":151,"org.easymock.tests.UsageExpectAndReturnTest.floatType":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":242,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":173,"org.easymock.tests.UsageThrowableTest.noUpperLimit":155,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":284,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":376,"org.easymock.tests2.SerializationTest.test":313,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":320,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":60,"org.easymock.tests2.UsageConstraintsTest.testSame":289,"org.easymock.samples.SupportTest.addDocument":170,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":399,"org.easymock.tests.GenericTest.testPackageScope":167,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests2.NameTest.nameForMock":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":71,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":393,"org.easymock.tests2.UsageStrictMockTest.differentMethods":281,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":347,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":30,"org.easymock.tests2.MockedExceptionTest.testRealException":251,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":350,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":24,"org.easymock.tests2.NameTest.nameForStrictMock":267,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":346,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":344,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":302,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":383,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":201,"org.easymock.tests2.UsageStrictMockTest.range":280,"org.easymock.tests2.UsageConstraintsTest.lessThan":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":366,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":402,"org.easymock.tests2.CaptureTest.testCaptureRightOne":325,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":331,"org.easymock.tests2.UsageConstraintsTest.testOr":290,"org.easymock.tests.UsageRangeTest.combination":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":217,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests2.MockBuilderTest.testWithConstructor":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":400,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":72,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":385,"org.easymock.tests.UsageVarargTest.varargShortAccepted":18,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":85,"org.easymock.tests2.UsageConstraintsTest.cmpTo":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":1,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":194,"org.easymock.tests2.CaptureTest.testCaptureFromStub":326,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":107,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":345,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":146,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":83,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":73,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":148,"org.easymock.tests2.UsageConstraintsTest.constraints":285,"org.easymock.samples.ExampleTest.addAndChangeDocument":181,"org.easymock.tests.UsageStrictMockTest.testVerify":152,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":185,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":52,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":65,"org.easymock.tests.LimitationsTest.abstractClass":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":165,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":13,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":258}}]
