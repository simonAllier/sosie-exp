[{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[11,12,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[11,13,14,15,16,17,18,19,20,21,22,1,23,24,25,26,27,28,29,30,3,31,4,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,46,47,47,48,49,50,51,52,5,53,54,55,56,6,57,58,59,60,61,62,8,9,10,63,64,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[66,67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[11,68,69,70,71,72],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[74,75,76,77,78,79],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[80,81],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[83,84,85,86,87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[89,90,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[94,95,96,97,90,91,98,99,100],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[101,102,103,104,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[90],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[106],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[107,108,109,110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,11,12,13,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,107,140,141,142,143,14,144,145,15,146,147,148,149,150,151,152,153,154,16,155,156,157,158,159,17,160,161,162,163,164,66,165,166,167,168,169,170,171,94,95,172,173,89,174,96,97,175,90,176,177,178,179,180,181,182,183,184,91,185,186,187,188,92,189,190,18,191,19,20,192,193,21,22,1,70,23,194,24,25,195,26,196,98,197,99,198,199,200,201,202,203,204,100,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,27,235,236,237,238,239,240,241,2,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,28,72,262,29,30,3,31,263,4,32,101,264,33,34,265,35,36,37,38,266,39,267,268,40,41,42,43,269,44,270,271,272,273,45,274,46,46,47,47,275,276,277,278,279,280,281,282,283,284,285,48,49,286,287,288,289,83,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,67,312,102,313,314,315,316,317,318,103,319,320,321,76,322,323,324,325,326,327,328,329,330,331,332,50,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,104,352,353,108,93,354,355,356,357,358,359,360,361,362,363,51,364,365,366,367,368,369,370,371,109,372,110,52,373,374,5,375,376,377,378,379,380,381,382,105,383,384,385,386,387,84,388,389,390,391,392,393,394,395,396,53,54,55,56,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,6,414,415,416,85,417,418,419,420,421,86,422,423,424,425,426,427,87,88,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,79,453,454,455,456,457,458,459,460,461,462,463,73,464,0,465,466,467,468,469,470,471,472,473,474,475,476,477,478,57,58,59,479,60,480,481,482,483,484,485,486,487,488,489,490,491,61,62,8,9,10,63,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[114],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[185],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[112,114,117,66,279,67,365],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[74,75,101,76,322,77,78,384,79,453,454,455,456,457,458,459],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[179,408],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:399","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[150,226],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[492,493,494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":95,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":451,"org.easymock.tests2.UsageTest.argumentsOrdered":259,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":309,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":254,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":274,"org.easymock.tests2.DelegateToTest.testReturnException":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":291,"org.easymock.tests.MockingTest.testPartialClassMocking":58,"org.easymock.tests.MockClassControlTest.testToString":8,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":165,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":431,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":15,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":273,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":175,"org.easymock.tests2.UsageTest.wrongArguments":252,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":380,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":330,"org.easymock.samples.ExampleTest.answerVsDelegate":279,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":5,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":481,"org.easymock.tests2.UsageConstraintsTest.testNull":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":35,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":65,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":229,"org.easymock.tests2.CaptureTest.testPrimitive":198,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":383,"org.easymock.tests.UsageTest.moreThanOneArgument":452,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":450,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":388,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":459,"org.easymock.tests.UsageTest.argumentsOrdered":457,"org.easymock.tests.UsageVarargTest.varargIntAccepted":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":286,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":18,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":218,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":83,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests.ReplayStateInvalidUsageTest.times":355,"org.easymock.tests2.DependencyTest.testClassMocking":270,"org.easymock.tests2.AnswerTest.answer":112,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":248,"org.easymock.tests2.CaptureTest.testAnd":98,"org.easymock.tests2.UsageTest.strictResetToDefault":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":224,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":336,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":463,"org.easymock.tests2.DelegateToTest.testDelegate":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":446,"org.easymock.tests.LimitationsTest.mockFinalMethod":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":395,"org.easymock.tests2.DependencyTest.testClassMockingSupport":271,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":73,"org.easymock.tests2.CaptureTest.testCapture1_2446744":199,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":444,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":246,"org.easymock.tests.UsageThrowableTest.throwError":467,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":104,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":374,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":7,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":390,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":161,"org.easymock.samples.PartialClassMockTest.testGetArea":45,"org.easymock.tests.MockingTest.testInterfaceMocking":479,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":352,"org.easymock.tests2.CompareToTest.testLessOrEqual":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":287,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":150,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":6,"org.easymock.tests2.UsageTest.niceToStrict":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":299,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":21,"org.easymock.tests2.MockBuilderTest.testCreateMock":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":157,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":133,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":440,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":74,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":225,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":483,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":328,"org.easymock.tests.UsageOverloadedMethodTest.overloading":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":180,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":423,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":296,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":179,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":204,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":14,"org.easymock.tests.MockClassControlTest.testEquals":64,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":448,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":393,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":106,"org.easymock.tests2.CaptureTest.testCaptureAll":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":247,"org.easymock.tests.MockNameTest.defaultName":332,"org.easymock.tests2.UsageConstraintsTest.testMatches":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":389,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":350,"org.easymock.samples.ExampleTest.voteForRemovals":283,"org.easymock.tests.UsageVarargTest.allKinds":408,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":394,"org.easymock.samples.BasicClassMockTest.testPrintContent":49,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":473,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":215,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":295,"org.easymock.tests2.UsageConstraintsTest.greaterThan":183,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":144,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":335,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":43,"org.easymock.samples.ExampleTest.voteForRemoval":280,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":349,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":138,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":269,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":375,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":494,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":38,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":50,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":249,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":222,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":290,"org.easymock.tests2.CaptureTest.testCaptureFirst":207,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":223,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":261,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":420,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":107,"org.easymock.tests2.CaptureTest.testCapture2_2446744":206,"org.easymock.tests2.UsageTest.moreThanOneArgument":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":315,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":407,"org.easymock.tests.GenericTest.testBridgedEquals":56,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":490,"org.easymock.tests.UsageExpectAndReturnTest.longType":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":391,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":449,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":187,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":387,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":491,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":421,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":436,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":472,"org.easymock.tests.MockingTest.testNiceClassMocking":482,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":30,"org.easymock.tests.MockingTest.testClassMocking":478,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":484,"org.easymock.tests2.UsageConstraintsTest.testContains":178,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":27,"org.easymock.tests2.UsageConstraintsTest.testFind":173,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":298,"org.easymock.tests.MockTypeTest.fromEasyMockClass":373,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":164,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":320,"org.easymock.tests.UsageExpectAndReturnTest.object":422,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":228,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":402,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":412,"org.easymock.tests.UsageTest.exactCallCountByLastCall":458,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":460,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":72,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":87,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":367,"org.easymock.tests.MockClassControlTest.testHashCode":63,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":209,"org.easymock.tests2.EasyMockSupportTest.testVerify":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":152,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":461,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":339,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":245,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":196,"org.easymock.tests.UsageVarargTest.varargCharAccepted":401,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":341,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":319,"org.easymock.tests2.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":231,"org.easymock.tests.DefaultClassInstantiatorTest.object":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":338,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":410,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":153,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":470,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":128,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":208,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":41,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":10,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":437,"org.easymock.tests.CapturesMatcherTest.test":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":88,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":359,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":17,"org.easymock.tests2.UsageTest.resumeIfFailure":260,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":293,"org.easymock.tests2.StubTest.stubWithReturnValue":264,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":70,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":86,"org.easymock.tests2.SerializationTest.testAllMockedMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":313,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":75,"org.easymock.samples.SupportTest.voteForRemovals":276,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":396,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":443,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":103,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":113,"org.easymock.tests.UsageExpectAndThrowTest.object":441,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":110,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":185,"org.easymock.tests2.DelegateToTest.testWrongClass":239,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":465,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":466,"org.easymock.samples.ConstructorCalledMockTest.testTax":46,"org.easymock.tests.UsageStrictMockTest.range":324,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":243,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":29,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":442,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":1,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":141,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":329,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":77,"org.easymock.tests2.CaptureTest.testCaptureNone":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":379,"org.easymock.tests.UsageUnorderedTest.message":430,"org.easymock.tests.UsageVerifyTest.twoReturns":386,"org.easymock.tests.UsageVarargTest.varargByteAccepted":406,"org.easymock.tests2.ThreadingTest.testThreadSafe":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":155,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":488,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":413,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":48,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":317,"org.easymock.tests2.UsageConstraintsTest.any":176,"org.easymock.tests2.StubTest.stub":101,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":354,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageExpectAndThrowTest.longType":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":318,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":346,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":93,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":121,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":213,"org.easymock.tests.LimitationsTest.mockNativeMethod":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":429,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":55,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":127,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":124,"org.easymock.tests2.NameTest.nameForMocksControl":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":129,"org.easymock.tests2.MockedExceptionTest.testMockedException":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":145,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":455,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":435,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":163,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":60,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":23,"org.easymock.tests.MockingTest.testNicePartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":37,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":68,"org.easymock.tests2.CaptureTest.testCaptureLast":202,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":464,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":97,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":32,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":186,"org.easymock.tests.MockingTest.testTwoMocks":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":414,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":439,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":258,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":189,"org.easymock.samples.ExampleTest.removeNonExistingDocument":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":132,"org.easymock.tests.UsageStrictMockTest.differentMethods":325,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":210,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":344,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":139,"org.easymock.tests2.MockBuilderTest.testCreateMockString":26,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":61,"org.easymock.tests.UsageExpectAndThrowTest.floatType":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":146,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":143,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":115,"org.easymock.tests.UsageVerifyTest.twoThrows":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":262,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":16,"org.easymock.samples.ExampleTest.voteAgainstRemoval":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":310,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":42,"org.easymock.tests.LimitationsTest.privateConstructor":363,"org.easymock.tests2.UsageConstraintsTest.testNotNull":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":474,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":233,"org.easymock.tests2.UsageTest.defaultResetToNice":257,"org.easymock.samples.ExampleTest.voteAgainstRemovals":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":311,"org.easymock.tests.UsageVarargTest.differentLength":403,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":126,"org.easymock.tests2.CallbackTest.callback":66,"org.easymock.tests2.UsageConstraintsTest.equals":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":267,"org.easymock.tests.UsageTest.openCallCountByLastCall":454,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":382,"org.easymock.tests.UsageCallCountTest.tooFewCalls":486,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":331,"org.easymock.tests.UsageThrowableTest.throwCheckedException":471,"org.easymock.tests.MockingTest.testStrictClassMocking":477,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":78,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":476,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":131,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":3,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":263,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":117,"org.easymock.tests.ObjectMethodsTest.testHashCode":411,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":69,"org.easymock.tests2.NameTest.nameForNiceMock":168,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests2.DependencyTest.testInterfaceMocking":272,"org.easymock.samples.ExampleTest.addDocument":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":160,"org.easymock.tests2.DelegateToTest.testStubDelegate":238,"org.easymock.tests2.AnswerTest.stubAnswer":116,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":322,"org.easymock.tests.UsageVarargTest.varargLongAccepted":405,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":308,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":428,"org.easymock.tests.UsageExpectAndReturnTest.floatType":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":47,"org.easymock.tests.UsageThrowableTest.noUpperLimit":468,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":217,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":171,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":2,"org.easymock.tests2.SerializationTest.test":12,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":200,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":415,"org.easymock.tests2.UsageConstraintsTest.testSame":174,"org.easymock.samples.SupportTest.addDocument":275,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":147,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":216,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":480,"org.easymock.tests2.NameTest.nameForMock":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":424,"org.easymock.tests2.UsageStrictMockTest.differentMethods":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":417,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":445,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":409,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":337,"org.easymock.tests2.MockedExceptionTest.testRealException":235,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":376,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":71,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":358,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":381,"org.easymock.tests2.NameTest.nameForStrictMock":167,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":193,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":36,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":242,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":345,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":122,"org.easymock.tests2.UsageConstraintsTest.lessThan":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":212,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":151,"org.easymock.tests2.CaptureTest.testCaptureRightOne":100,"org.easymock.tests2.UsageConstraintsTest.testOr":96,"org.easymock.tests.UsageRangeTest.combination":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":34,"org.easymock.tests.UsageTest.wrongArguments":453,"org.easymock.tests2.MockBuilderTest.testWithConstructor":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":148,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":300,"org.easymock.tests.UsageVarargTest.varargShortAccepted":404,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":347,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":489,"org.easymock.tests2.UsageConstraintsTest.cmpTo":177,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":302,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CaptureTest.testCaptureFromStub":205,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":351,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":20,"org.easymock.tests.UsageTest.unexpectedCallWithArray":79,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":426,"org.easymock.tests2.CaptureTest.testCapture":80,"org.easymock.tests2.UsageConstraintsTest.constraints":94,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":323,"org.easymock.samples.ExampleTest.addAndChangeDocument":285,"org.easymock.tests.UsageStrictMockTest.testVerify":327,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":277,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":392,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":419,"org.easymock.tests.LimitationsTest.abstractClass":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":289,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":226}}]
