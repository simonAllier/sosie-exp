[{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:58","sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[54,69,70,71,72,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[15,20,32,74],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"e":"e"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[76,77,78,79,80,56],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[81,82,83,84,85,86,87,4,88,5,6,7,8,9,89,10,11,12,13,14,15,90,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,33,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,0,1,2,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,34,202,203,204,205,206,207,208,209,210,35,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,36,37,38,39,40,41,42,43,44,45,46,47,48,49,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,50,51,52,53,54,265,266,267,268,269,270,271,272,55,273,274,275,276,80,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,56,57,313,314,315,316,317,318,319,320,321,322,323,324,325,326,69,327,328,329,330,331,332,58,59,333,334,335,336,337,338,339,60,61,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,62,63,64,65,66,67,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,68,424,425,426,427,428,429,430,431,432,70,433,434,435,436,437,71,438,439,440,441,442,443,72,73,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[134],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[116,117,118,119,121,122,136,139,149,155,0,2,181,182,183,185,186,187,188,190,191,192,197,203,204,206,207,208,209,35,213,214,215,216,218,221,244,251,257,258,259,261,318,319,320,321,322,323,365,366,367,383,396,399,469,469,470,470,472,476,477],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[76,77,78,79,80,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[334,338],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:122","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[87,4,5,170,173,175,376,462],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:190","failures":[87,9,14,15,16,19,25,26,27,29,107,108,113,127,130,131,191,204,215,224,226,228,229,232,233,234,46,253,281,311,314,315,372,67,402,403,405,406,407,408,409,425],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[82,83,86,87,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,96,103,104,105,106,107,108,112,113,114,115,116,117,118,119,120,121,122,125,126,127,128,33,129,130,131,132,136,139,149,155,163,170,173,174,175,177,178,179,180,0,1,2,182,185,187,188,191,197,199,200,202,203,204,205,206,207,208,35,214,215,216,221,223,224,225,226,227,228,229,231,232,233,234,235,240,241,36,37,38,39,41,42,43,44,45,46,49,244,253,254,258,259,261,50,51,52,53,54,55,275,276,277,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,311,312,56,57,313,314,315,316,58,59,60,365,366,372,373,374,375,381,383,62,63,64,65,66,67,403,404,413,414,415,417,418,419,420,421,422,423,68,424,425,426,430,431,432,70,433,434,435,436,437,71,438,439,440,441,442,443,72,73,444,445,447,449,450,451,452,454,455,461,462,463,464,465,466,468,471,472,473,474,475,476,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[103,110,241,254,55,275,279,283,284,287,289,290,291,292,294,295,296,297,299,300,301,302,343,65,425],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[358,458],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[20,27,32,478],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[105,106,112,113,33,131,177,178,179,180,276,277,280,281,56,57,315,67,425,426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[139,149,0,185,479,189,190,192,197,198,211,215,218,364,367,469,470,472],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[81,82,83,84,85,86,87,4,88,5,6,7,8,9,89,10,11,12,13,14,15,90,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,480,120,121,122,481,123,124,125,126,127,128,33,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,482,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,0,1,2,181,483,182,183,484,184,185,186,187,485,188,479,189,190,191,486,192,193,194,195,196,197,198,487,199,200,201,34,202,203,204,205,206,207,208,209,210,35,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,488,489,490,237,238,239,240,241,36,37,38,39,40,41,42,43,44,45,46,47,48,49,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,50,51,52,53,54,265,266,267,268,269,270,271,272,55,273,274,275,276,80,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,56,57,313,314,315,316,317,318,319,320,321,322,323,324,325,326,69,327,328,329,330,331,332,58,59,491,333,334,335,336,337,338,492,339,60,61,493,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,62,63,64,65,66,67,396,494,495,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,68,424,425,426,427,428,429,430,431,432,70,433,434,435,436,437,71,438,439,440,441,442,443,72,73,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[364,368],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[0,181,496,182,183,185,186,187,188,190,191,497,192,209,367,396,399,472],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,498],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[222,379],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[105,106,112,113,33,130,131,177,178,179,180,276,277,280,281,56,57,314,315,381,67,424,425,426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[106,112,113,130,131,499,500,80,277,280,281,56,314,315,501,493,67,425,426],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[105,33,131,132,177,178,179,180,276,57,315,316,371,424,425,426,447,449,450],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[116,117,118,119,121,122,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,0,2,181,182,183,184,185,186,187,188,189,190,191,192,197,198,203,204,206,207,208,209,35,211,212,213,214,215,216,217,218,219,220,221,236,237,242,243,244,245,255,256,257,258,259,261,264,318,319,320,321,322,323,324,325,333,334,335,336,337,338,339,364,365,366,367,368,383,396,399,469,469,470,470,472,476,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[81,82,83,84,85,86,87,4,88,5,6,7,8,9,89,10,11,12,13,14,15,90,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,480,120,121,122,481,123,124,125,126,127,128,33,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,0,1,2,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,34,202,203,204,205,206,207,208,209,210,35,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,36,37,38,39,40,41,42,43,44,45,46,47,48,49,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,50,51,52,53,54,265,266,267,268,269,270,271,272,55,273,274,275,276,80,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,56,57,313,314,315,316,317,318,319,320,321,322,323,324,325,326,69,327,328,329,330,331,332,58,59,333,334,335,336,337,338,339,60,61,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,62,63,64,65,66,67,396,494,495,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,68,424,425,426,427,428,429,430,431,432,70,433,434,435,436,437,71,438,439,440,441,442,443,72,73,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[36,38,39,40,41,42,43,45,502,46,47,49],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[116,117,118,119,121,122,136,139,149,155,503,504,505,506,0,2,181,496,182,183,185,186,187,188,190,191,497,192,197,203,204,206,207,208,209,35,213,214,215,216,221,244,257,258,259,261,319,365,366,367,383,396,399,469,469,470,470,472,476,477],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[82,83,84,86,87,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,121,122,125,127,128,33,129,130,131,132,482,163,170,173,174,175,177,178,179,180,0,1,2,181,185,186,191,192,193,194,195,196,197,199,200,201,34,202,203,204,205,206,207,208,35,213,215,219,220,221,222,240,241,36,37,38,39,40,41,42,43,44,45,46,47,48,49,244,253,254,258,259,261,50,51,52,53,54,265,266,267,268,269,270,271,272,55,273,275,276,80,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,311,312,56,57,313,314,315,316,317,319,326,69,327,328,329,58,59,60,61,365,366,370,372,373,374,375,381,383,388,62,63,64,65,66,67,402,403,404,405,406,407,408,409,413,414,415,417,418,420,421,422,423,68,424,425,426,430,431,432,70,433,434,435,436,437,71,438,439,440,441,442,443,72,73,444,445,447,448,449,450,451,452,461,462,463,464,465,466,468],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[507],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[219,220,221,222,241,269,270,271,272,55,273,61,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[107],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":9,"org.easymock.tests2.UsageTest.argumentsOrdered":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":275,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":350,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":108,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":471,"org.easymock.tests2.DelegateToTest.testReturnException":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":270,"org.easymock.tests.MockingTest.testPartialClassMocking":258,"org.easymock.tests.MockClassControlTest.testToString":320,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":176,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":411,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":143,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":283,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":126,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":15,"org.easymock.tests2.UsageTest.wrongArguments":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":62,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":169,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":267,"org.easymock.samples.ExampleTest.answerVsDelegate":462,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":399,"org.easymock.tests2.UsageConstraintsTest.testNull":11,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":263,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":206,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":232,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":325,"org.easymock.tests2.CaptureTest.testPrimitive":39,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":66,"org.easymock.tests.UsageTest.moreThanOneArgument":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":302,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":327,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":456,"org.easymock.tests.UsageTest.argumentsOrdered":281,"org.easymock.tests.UsageVarargTest.varargIntAccepted":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":355,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":50,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":181,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":54,"org.easymock.tests.ReplayStateInvalidUsageTest.times":392,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests2.DependencyTest.testClassMocking":123,"org.easymock.tests2.AnswerTest.answer":170,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":196,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":495,"org.easymock.tests2.CaptureTest.testAnd":36,"org.easymock.tests2.UsageTest.strictResetToDefault":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":374,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":460,"org.easymock.tests2.DelegateToTest.testDelegate":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":298,"org.easymock.tests.LimitationsTest.mockFinalMethod":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":307,"org.easymock.tests2.DependencyTest.testClassMockingSupport":124,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":369,"org.easymock.tests2.CaptureTest.testCapture1_2446744":40,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":194,"org.easymock.tests.UsageThrowableTest.throwError":402,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":386,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":398,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":493,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":157,"org.easymock.samples.PartialClassMockTest.testGetArea":472,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":387,"org.easymock.tests.MockingTest.testInterfaceMocking":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":144,"org.easymock.tests2.UsageTest.niceToStrict":107,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":185,"org.easymock.tests2.MockBuilderTest.testCreateMock":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":166,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":292,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":494,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":429,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":447,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageOverloadedMethodTest.overloading":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":20,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":379,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":439,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":19,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":45,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":416,"org.easymock.tests2.EasyMockSupportClassTest.testAll":136,"org.easymock.tests.MockClassControlTest.testEquals":324,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":300,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":503,"org.easymock.tests2.CaptureTest.testCaptureAll":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":305,"org.easymock.tests.MockNameTest.defaultName":274,"org.easymock.tests2.UsageConstraintsTest.testMatches":21,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":328,"org.easymock.samples.ExampleTest.voteForRemovals":466,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":507,"org.easymock.tests.UsageVarargTest.allKinds":68,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":424,"org.easymock.samples.BasicClassMockTest.testPrintContent":477,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":306,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":408,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":98,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":273,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":492,"org.easymock.tests2.UsageConstraintsTest.greaterThan":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":373,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":216,"org.easymock.samples.ExampleTest.voteForRemoval":463,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":339,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":200,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":209,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":103,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":383,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":225,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":269,"org.easymock.tests2.CaptureTest.testCaptureFirst":49,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":226,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":115,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":436,"org.easymock.tests2.UsageTest.moreThanOneArgument":105,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":34,"org.easymock.tests2.CaptureTest.testCapture2_2446744":48,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":358,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":423,"org.easymock.tests.GenericTest.testBridgedEquals":368,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":454,"org.easymock.tests.UsageExpectAndReturnTest.longType":70,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":303,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":497,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":301,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":446,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":28,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":326,"org.easymock.tests.UsageCallCountTest.tooManyCalls":455,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":153,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":437,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":407,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":117,"org.easymock.tests.MockingTest.testNiceClassMocking":264,"org.easymock.tests.MockingTest.testClassMocking":256,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":496,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":448,"org.easymock.tests2.UsageConstraintsTest.testContains":18,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":221,"org.easymock.tests2.UsageConstraintsTest.testFind":10,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":254,"org.easymock.tests.MockTypeTest.fromEasyMockClass":397,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":5,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":311,"org.easymock.tests.UsageExpectAndReturnTest.object":438,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":35,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":231,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":418,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":249,"org.easymock.tests.UsageTest.exactCallCountByLastCall":282,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":457,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":410,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":198,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":413,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":92,"org.easymock.tests.MockClassControlTest.testHashCode":323,"org.easymock.tests2.EasyMockSupportTest.testVerify":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":146,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":458,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":428,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":376,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":499,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":193,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":482,"org.easymock.tests.UsageVarargTest.varargCharAccepted":417,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":491,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":363,"org.easymock.tests2.UsageTest.openCallCountByLastCall":109,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":234,"org.easymock.tests.DefaultClassInstantiatorTest.object":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":427,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":247,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":290,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":506,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":161,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":91,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":214,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":289,"org.easymock.tests.CapturesMatcherTest.test":498,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":155,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":321,"org.easymock.tests2.UsageTest.resumeIfFailure":114,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":272,"org.easymock.tests2.StubTest.stubWithReturnValue":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":485,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":29,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":71,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":356,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":75,"org.easymock.samples.SupportTest.voteForRemovals":475,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":77,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":295,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":362,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":171,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":412,"org.easymock.tests.UsageExpectAndThrowTest.object":293,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":26,"org.easymock.tests2.DelegateToTest.testWrongClass":84,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":58,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":59,"org.easymock.samples.ConstructorCalledMockTest.testTax":469,"org.easymock.tests.UsageStrictMockTest.range":314,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":238,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":230,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":294,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":187,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":133,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":78,"org.easymock.tests2.CaptureTest.testCaptureNone":44,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":332,"org.easymock.tests.UsageUnorderedTest.message":67,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":501,"org.easymock.tests.UsageVerifyTest.twoReturns":426,"org.easymock.tests.UsageVarargTest.varargByteAccepted":422,"org.easymock.tests2.ThreadingTest.testThreadSafe":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":150,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":452,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":476,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":250,"org.easymock.tests2.CaptureTest.testCapture_2617107":38,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":371,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":360,"org.easymock.tests2.UsageConstraintsTest.any":16,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":391,"org.easymock.tests2.StubTest.stub":240,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":271,"org.easymock.tests.UsageExpectAndThrowTest.longType":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":361,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":337,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":390,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":129,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":445,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":367,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":505,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":160,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":132,"org.easymock.tests2.NameTest.nameForMocksControl":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":162,"org.easymock.tests2.MockedExceptionTest.testMockedException":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":138,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":279,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":88,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":287,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":203,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":188,"org.easymock.tests.MockingTest.testNicePartialClassMocking":259,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":208,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":158,"org.easymock.tests2.CaptureTest.testCaptureLast":43,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":370,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":122,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":14,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":27,"org.easymock.tests.MockingTest.testTwoMocks":257,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":481,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":430,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":291,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":112,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":31,"org.easymock.samples.ExampleTest.removeNonExistingDocument":467,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":165,"org.easymock.tests.UsageStrictMockTest.differentMethods":315,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":93,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":335,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":201,"org.easymock.tests2.MockBuilderTest.testCreateMockString":192,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":140,"org.easymock.tests.UsageExpectAndThrowTest.floatType":285,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":135,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":173,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":487,"org.easymock.tests.UsageVerifyTest.twoThrows":425,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":149,"org.easymock.samples.ExampleTest.voteAgainstRemoval":464,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":215,"org.easymock.tests.LimitationsTest.privateConstructor":243,"org.easymock.tests2.UsageConstraintsTest.testNotNull":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":409,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":219,"org.easymock.tests2.UsageTest.defaultResetToNice":111,"org.easymock.samples.ExampleTest.voteAgainstRemovals":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":352,"org.easymock.tests.UsageVarargTest.differentLength":419,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":159,"org.easymock.tests2.CallbackTest.callback":87,"org.easymock.tests2.UsageConstraintsTest.equals":89,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":211,"org.easymock.tests.UsageTest.openCallCountByLastCall":278,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":64,"org.easymock.tests.UsageCallCountTest.tooFewCalls":450,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":268,"org.easymock.tests.UsageThrowableTest.throwCheckedException":406,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":79,"org.easymock.tests.MockingTest.testStrictClassMocking":255,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":121,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":164,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":118,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":120,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":175,"org.easymock.tests2.CompareToTest.testGreateOrEqual":74,"org.easymock.tests.ObjectMethodsTest.testHashCode":248,"org.easymock.tests2.NameTest.nameForNiceMock":179,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":202,"org.easymock.tests2.DependencyTest.testInterfaceMocking":125,"org.easymock.samples.ExampleTest.addDocument":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":156,"org.easymock.tests2.DelegateToTest.testStubDelegate":83,"org.easymock.tests2.AnswerTest.stubAnswer":174,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":57,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":479,"org.easymock.tests.UsageVarargTest.varargLongAccepted":421,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":349,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":444,"org.easymock.tests.UsageExpectAndReturnTest.floatType":432,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":197,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":470,"org.easymock.tests.UsageThrowableTest.noUpperLimit":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":100,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":24,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":7,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":236,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":41,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":431,"org.easymock.tests2.UsageConstraintsTest.testSame":12,"org.easymock.samples.SupportTest.addDocument":474,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":480,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":141,"org.easymock.tests.GenericTest.testPackageScope":365,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":99,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":262,"org.easymock.tests2.NameTest.nameForMock":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":440,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":486,"org.easymock.tests2.UsageStrictMockTest.differentMethods":131,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":212,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":433,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":297,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":375,"org.easymock.tests2.MockedExceptionTest.testRealException":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":353,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":63,"org.easymock.tests2.NameTest.nameForStrictMock":178,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":184,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":207,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":237,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":336,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":182,"org.easymock.tests2.UsageStrictMockTest.range":130,"org.easymock.tests2.UsageConstraintsTest.lessThan":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":95,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":46,"org.easymock.tests2.UsageConstraintsTest.testOr":13,"org.easymock.tests.UsageRangeTest.combination":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":204,"org.easymock.tests.UsageTest.wrongArguments":277,"org.easymock.tests2.MockBuilderTest.testWithConstructor":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":142,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":434,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":341,"org.easymock.tests.UsageVarargTest.varargShortAccepted":420,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":338,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":453,"org.easymock.tests2.UsageConstraintsTest.cmpTo":17,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":172,"org.easymock.tests2.CompareToTest.testLessThan":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":343,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":110,"org.easymock.tests2.CaptureTest.testCaptureFromStub":47,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":385,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":183,"org.easymock.tests.UsageTest.unexpectedCallWithArray":80,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":451,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":442,"org.easymock.tests2.CaptureTest.testCapture":502,"org.easymock.tests2.UsageConstraintsTest.constraints":8,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":313,"org.easymock.samples.ExampleTest.addAndChangeDocument":468,"org.easymock.tests.UsageStrictMockTest.testVerify":317,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":473,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":304,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":42,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":52,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":435,"org.easymock.tests.LimitationsTest.abstractClass":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":53,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":229}}]
