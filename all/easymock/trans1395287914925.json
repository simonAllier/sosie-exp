[{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[47],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[48,49,50,51,52,53],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[55,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[6,57,58,59,60,61,62,63,64,65,66,67,68,31,69,70,71,72,73,74,75,76,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.internal.Range:36","failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,3,4,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,5,126,127,128,129,130,131,132,133,134,6,135,57,58,136,137,138,59,60,139,140,141,142,55,61,62,143,144,145,146,147,148,149,150,151,152,153,154,155,7,156,157,8,9,158,159,160,10,11,12,13,161,162,163,164,165,14,47,15,16,166,17,18,19,167,168,169,170,20,21,22,171,172,173,0,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,1,196,197,198,199,200,201,202,203,52,204,205,206,207,208,209,2,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,63,64,65,66,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,53,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,56,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,23,24,289,290,25,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,54,309,310,26,27,28,29,30,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,68,31,380,69,70,381,382,32,383,384,385,386,387,388,389,390,391,392,393,33,394,395,396,397,398,399,400,401,402,71,403,72,404,405,73,74,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,34,426,427,428,35,36,429,430,431,432,433,434,435,436,37,437,438,439,440,38,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,39,40,41,42,43,470,471,472,473,75,76,77,474,475,476,477,478,44,479,480,481,482,483,484,485,486,487,488,489,45,46,490,491,492],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[26,452,454,468,469,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[79,94,96,97,98,281,427],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,3,4,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,5,126,127,128,129,130,131,132,133,134,6,135,57,58,136,137,138,59,60,139,140,141,142,55,61,62,143,144,145,146,147,148,149,150,151,152,153,154,155,7,156,157,8,9,158,159,160,10,11,12,13,161,162,163,164,165,14,47,15,16,166,17,18,19,167,168,169,170,20,21,22,171,172,173,0,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,1,196,197,198,199,200,201,202,203,52,204,205,206,207,208,209,2,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,63,64,65,66,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,53,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,56,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,23,24,289,290,25,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,54,309,310,26,27,28,29,30,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,68,31,380,69,70,381,382,32,383,384,385,386,387,388,389,390,391,392,393,33,394,395,396,397,398,399,400,401,402,71,403,72,404,405,73,74,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,34,426,427,428,35,36,429,430,431,432,433,434,435,436,37,437,438,439,440,38,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,39,40,41,42,43,470,471,472,473,75,76,77,474,475,476,477,478,44,479,480,481,482,483,484,485,486,487,488,489,45,46,490,491,492],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[99,48,49,50,493,51,52,206,242,53],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[494,15,168,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[369,495,496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,3,4,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,5,126,127,128,129,130,131,132,133,134,6,135,57,58,136,137,138,59,60,139,140,141,142,55,61,62,143,144,145,146,147,148,149,150,151,152,153,154,155,7,156,157,8,9,158,159,160,10,11,12,13,161,162,163,164,165,14,47,15,16,166,17,18,19,167,168,169,170,20,21,22,171,172,173,0,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,1,196,197,198,199,200,201,202,203,52,204,205,206,207,208,209,2,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,63,64,65,66,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,53,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,56,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,23,24,289,290,25,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,54,309,310,26,27,28,29,30,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,68,31,380,69,70,381,382,32,383,384,385,386,387,388,389,390,391,392,393,33,394,395,396,397,398,399,400,401,402,71,403,72,404,405,73,74,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,34,426,427,428,35,36,429,430,431,432,433,434,435,436,37,437,438,439,440,38,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,39,40,41,42,43,470,471,472,473,75,76,77,474,475,476,477,478,44,479,480,481,482,483,484,485,486,487,488,489,45,46,490,491,492],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[3,4,196,497,209,272],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[118,203,229,233,358,359,360,399,422,449],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:228","sourceCode":"return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[])","type":"CtReturnImpl"},"failures":[78,104,105,0],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[109,213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[57,498,499,69,416,76,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[11,163,19,20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,3,4,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,5,126,127,128,500,501,502,503,504,129,130,131,132,133,134,6,135,57,58,136,137,138,59,60,139,140,141,142,55,61,62,143,144,145,146,147,148,149,150,151,152,153,154,155,7,156,157,8,9,158,159,160,10,11,12,13,161,162,163,164,165,14,47,15,16,166,17,18,19,167,168,169,170,20,21,22,171,172,173,0,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,1,197,198,200,201,202,203,204,205,206,207,208,2,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,63,64,65,66,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,53,244,245,505,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,56,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,23,24,289,290,25,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,54,309,310,26,27,28,29,30,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,372,373,374,375,376,377,378,379,68,31,380,69,70,381,382,32,383,384,385,386,387,388,389,390,391,392,393,33,394,395,396,397,398,399,400,401,402,71,403,72,404,405,73,74,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,34,426,427,428,35,36,429,430,431,432,433,434,435,436,37,437,438,439,440,38,441,442,443,444,445,446,447,448,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,39,40,41,42,43,470,471,472,473,75,76,77,474,475,476,477,478,44,479,480,481,482,483,484,485,486,487,488,489,45,46,490,491,492,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[3,4,99,528,529,171,172,173,0,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,199,52,206,497,209,229,234,235,242,53],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[125,290,437,443],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:243","failures":[78,80,81,83,88,90,95,104,105,6,57,58,0,176,186,192,197,201,203,204,208,227,228,229,230,232,233,234,242,248,263,264,265,266,267,268,271,274,275,276,23,309,310,26,27,28,29,374,376,31,69,70,33,423,445,446,447,448,450,451,452,453,454,455,458,459,461,462,463,465,466,467,468,469,39,40,41,42,43,472,483,484,486,45,46,491],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[79,126,127,128,236,239,240],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[530],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[5,222,223,224,225,286,287,288,312,313,314,315,316,317,430,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:85","failures":[11,163,19,20],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":159,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":402,"org.easymock.tests2.UsageTest.argumentsOrdered":62,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":433,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":140,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":92,"org.easymock.tests2.DelegateToTest.testReturnException":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":313,"org.easymock.tests.MockingTest.testPartialClassMocking":483,"org.easymock.tests.MockClassControlTest.testToString":358,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":226,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":180,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":319,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":67,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":105,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":527,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":48,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":23,"org.easymock.tests2.UsageTest.wrongArguments":60,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":117,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":79,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":399,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":488,"org.easymock.tests2.UsageConstraintsTest.testNull":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":266,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":259,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":363,"org.easymock.tests2.CaptureTest.testPrimitive":148,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":25,"org.easymock.tests.UsageTest.moreThanOneArgument":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":338,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":28,"org.easymock.tests.UsageTest.argumentsOrdered":74,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":351,"org.easymock.tests.UsageVarargTest.varargIntAccepted":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":39,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":1,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":220,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":43,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":511,"org.easymock.tests.ReplayStateInvalidUsageTest.times":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests2.DependencyTest.testClassMocking":102,"org.easymock.tests2.AnswerTest.answer":236,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":439,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":132,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":396,"org.easymock.tests2.CaptureTest.testAnd":145,"org.easymock.tests2.UsageTest.strictResetToDefault":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":199,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":254,"org.easymock.tests2.DelegateToTest.testDelegate":98,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":355,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":510,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":334,"org.easymock.tests.LimitationsTest.mockFinalMethod":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":478,"org.easymock.tests2.DependencyTest.testClassMockingSupport":103,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":306,"org.easymock.tests2.CaptureTest.testCapture1_2446744":149,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":270,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":130,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.UsageThrowableTest.throwError":295,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":398,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":449,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":30,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":528,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":194,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":514,"org.easymock.samples.PartialClassMockTest.testGetArea":88,"org.easymock.tests.MockingTest.testInterfaceMocking":485,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":40,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":309,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":181,"org.easymock.tests2.UsageTest.niceToStrict":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":320,"org.easymock.tests2.ThreadingTest.testChangeDefault":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":34,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":201,"org.easymock.tests2.MockBuilderTest.testCreateMock":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":114,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":328,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":255,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":395,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":305,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":407,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":15,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":461,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":423,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":495,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":47,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":154,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":342,"org.easymock.tests2.EasyMockSupportClassTest.testAll":0,"org.easymock.tests.MockClassControlTest.testEquals":362,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":336,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":476,"org.easymock.tests2.CaptureTest.testCaptureAll":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":131,"org.easymock.tests.MockNameTest.defaultName":318,"org.easymock.tests2.UsageConstraintsTest.testMatches":16,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":29,"org.easymock.samples.ExampleTest.voteForRemovals":83,"org.easymock.tests.UsageVarargTest.allKinds":350,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":477,"org.easymock.samples.BasicClassMockTest.testPrintContent":87,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":301,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":133,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":317,"org.easymock.tests2.UsageConstraintsTest.greaterThan":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":51,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":446,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":276,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":515,"org.easymock.samples.ExampleTest.voteForRemoval":80,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":372,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":246,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":277,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":269,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":507,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":137,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":311,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":252,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":312,"org.easymock.tests2.CaptureTest.testCaptureFirst":157,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":253,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":144,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":457,"org.easymock.tests2.CaptureTest.testCapture2_2446744":156,"org.easymock.tests2.UsageTest.moreThanOneArgument":59,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":440,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":208,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":349,"org.easymock.tests.GenericTest.testBridgedEquals":377,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":414,"org.easymock.tests.UsageExpectAndReturnTest.longType":453,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":474,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":337,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":169,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":26,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":287,"org.easymock.tests.UsageCallCountTest.tooManyCalls":415,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":458,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":300,"org.easymock.tests.MockingTest.testNiceClassMocking":489,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":228,"org.easymock.tests.MockingTest.testClassMocking":481,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":408,"org.easymock.tests2.UsageConstraintsTest.testContains":14,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":224,"org.easymock.tests2.UsageConstraintsTest.testFind":10,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":425,"org.easymock.tests.MockTypeTest.fromEasyMockClass":397,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":128,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":378,"org.easymock.tests.UsageExpectAndReturnTest.object":460,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":115,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":49,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":344,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":420,"org.easymock.tests.UsageTest.exactCallCountByLastCall":406,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":36,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":490,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":352,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":466,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":339,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":281,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":211,"org.easymock.tests.MockClassControlTest.testHashCode":361,"org.easymock.tests2.EasyMockSupportTest.testVerify":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":183,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":353,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":129,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":195,"org.easymock.tests.UsageVarargTest.varargCharAccepted":343,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":364,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":261,"org.easymock.tests.DefaultClassInstantiatorTest.object":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":303,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":184,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":109,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":210,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":513,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":274,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":360,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":325,"org.easymock.tests.ReplayStateInvalidCallsTest.times":519,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":467,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":286,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":520,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":192,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":359,"org.easymock.tests2.UsageTest.resumeIfFailure":143,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":315,"org.easymock.tests2.StubTest.stubWithReturnValue":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":459,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":101,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":438,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":530,"org.easymock.samples.SupportTest.voteForRemovals":90,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":373,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":331,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":443,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":237,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":492,"org.easymock.tests.UsageExpectAndThrowTest.object":329,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":167,"org.easymock.tests2.DelegateToTest.testWrongClass":96,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":517,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":45,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.UsageStrictMockTest.range":69,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":123,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":330,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":203,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":171,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":509,"org.easymock.tests2.CaptureTest.testCaptureNone":153,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":310,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":501,"org.easymock.tests.UsageUnorderedTest.message":416,"org.easymock.tests.UsageVerifyTest.twoReturns":77,"org.easymock.tests.UsageVarargTest.varargByteAccepted":348,"org.easymock.tests2.ThreadingTest.testThreadSafe":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":187,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":412,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":86,"org.easymock.tests2.CaptureTest.testCapture_2617107":147,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":290,"org.easymock.tests2.UsageConstraintsTest.any":164,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":389,"org.easymock.tests2.StubTest.stub":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":314,"org.easymock.tests.UsageExpectAndThrowTest.longType":322,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":135,"org.easymock.tests2.SerializationTest.testClass":99,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests.LimitationsTest.mockNativeMethod":472,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":469,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":108,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":525,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":136,"org.easymock.tests2.NameTest.nameForMocksControl":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":110,"org.easymock.tests2.MockedExceptionTest.testMockedException":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":175,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":405,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":486,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":323,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":263,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":204,"org.easymock.tests.MockingTest.testNicePartialClassMocking":484,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":268,"org.easymock.tests2.CaptureTest.testCaptureLast":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":307,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":524,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":234,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":168,"org.easymock.tests.MockingTest.testTwoMocks":482,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":521,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":450,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":327,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":21,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":504,"org.easymock.samples.ExampleTest.removeNonExistingDocument":84,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":113,"org.easymock.tests.UsageStrictMockTest.differentMethods":70,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":212,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":503,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":367,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":247,"org.easymock.tests2.MockBuilderTest.testCreateMockString":2,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":177,"org.easymock.tests.UsageExpectAndThrowTest.floatType":321,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":173,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":239,"org.easymock.tests.UsageVerifyTest.twoThrows":76,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":243,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":186,"org.easymock.samples.ExampleTest.voteAgainstRemoval":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":54,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":275,"org.easymock.tests.LimitationsTest.privateConstructor":471,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":529,"org.easymock.tests2.UsageConstraintsTest.testNotNull":20,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":302,"org.easymock.tests2.UsageTest.defaultResetToNice":55,"org.easymock.samples.ExampleTest.voteAgainstRemovals":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":107,"org.easymock.tests.UsageVarargTest.differentLength":345,"org.easymock.tests2.CallbackTest.callback":244,"org.easymock.tests2.UsageConstraintsTest.equals":160,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":272,"org.easymock.tests.UsageTest.openCallCountByLastCall":404,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":289,"org.easymock.tests.UsageCallCountTest.tooFewCalls":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":502,"org.easymock.tests.UsageThrowableTest.throwCheckedException":299,"org.easymock.tests.MockingTest.testStrictClassMocking":480,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":479,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":112,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":229,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":232,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":241,"org.easymock.tests.ObjectMethodsTest.testHashCode":419,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":523,"org.easymock.tests2.NameTest.nameForNiceMock":65,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":249,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":518,"org.easymock.tests2.DependencyTest.testInterfaceMocking":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":50,"org.easymock.samples.ExampleTest.addDocument":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":188,"org.easymock.tests2.DelegateToTest.testStubDelegate":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":193,"org.easymock.tests2.AnswerTest.stubAnswer":240,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":31,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":205,"org.easymock.tests.UsageVarargTest.varargLongAccepted":347,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":468,"org.easymock.tests.UsageExpectAndReturnTest.floatType":452,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":242,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":219,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.UsageThrowableTest.noUpperLimit":296,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":9,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":118,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":150,"org.easymock.tests2.SerializationTest.test":100,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":366,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":451,"org.easymock.tests2.UsageConstraintsTest.testSame":12,"org.easymock.samples.SupportTest.addDocument":89,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":231,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":508,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":178,"org.easymock.tests.GenericTest.testPackageScope":374,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":35,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":218,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":487,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":506,"org.easymock.tests2.NameTest.nameForMock":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":462,"org.easymock.tests2.UsageStrictMockTest.differentMethods":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":209,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":454,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":333,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":448,"org.easymock.tests2.MockedExceptionTest.testRealException":225,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":436,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":24,"org.easymock.tests2.NameTest.nameForStrictMock":64,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":200,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":267,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":122,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":498,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":19,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":197,"org.easymock.tests2.UsageStrictMockTest.range":57,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":512,"org.easymock.tests2.UsageConstraintsTest.lessThan":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":182,"org.easymock.tests2.CaptureTest.testCaptureRightOne":155,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":500,"org.easymock.tests2.UsageConstraintsTest.testOr":13,"org.easymock.tests.UsageRangeTest.combination":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":264,"org.easymock.tests.UsageTest.wrongArguments":72,"org.easymock.tests2.MockBuilderTest.testWithConstructor":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":179,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":455,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":426,"org.easymock.tests.UsageVarargTest.varargShortAccepted":346,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":413,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":526,"org.easymock.tests2.UsageConstraintsTest.cmpTo":165,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":238,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":516,"org.easymock.tests2.CompareToTest.testLessThan":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":428,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests2.CaptureTest.testCaptureFromStub":7,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":383,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":198,"org.easymock.tests.UsageTest.unexpectedCallWithArray":403,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":522,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":68,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":411,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":497,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":464,"org.easymock.tests2.UsageConstraintsTest.constraints":158,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":380,"org.easymock.samples.ExampleTest.addAndChangeDocument":85,"org.easymock.tests.UsageStrictMockTest.testVerify":382,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":91,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":379,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":475,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":41,"org.easymock.tests.LimitationsTest.abstractClass":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":42,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":499,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":256,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":340}}]
