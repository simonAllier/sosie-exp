[{"position":"org.easymock.EasyMock:2124","failures":[0,1,2,3,4,5,6],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[12,13,14,15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[17,18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[22],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:317","failures":[26,27,28,29],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[30,31,32,33,34,35,36,37,38],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[41],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"position":"org.easymock.internal.MocksControl:190","failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,57,74,42,75,76,77,78,79,80,15,81,82,83,84],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[85,86,87,88,89,90],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[13,74,91,92,93,94,42,75,22,76,78,79,95,96,97,19,98,99,84,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[100,101,102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[103,104,77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[105,106],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[107,108,62,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,76,123,19,124,125,126],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"position":"org.easymock.internal.RecordState:99","failures":[127,128,129,130,131,107,7,8,9,132,133,134,135,136,137,61,138,109,110,113,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,64,161,66,67,68,69,70,162,163,164,115,165,166,116,117,118,119,120,121,122,46,167,168,169,170,171,172,173,174,175,176,177,178,179,180,48,49,50,51,52,181,182,183,73,184,185,186,187,188,56,57,23,12,189,13,74,91,92,93,94,42,75,76,190,191,77,192,193,194,14,195,78,79,80,15,95,96,196,3,197,198,199,200,201,202,203,204,36,205,37,206,207,208,81,209,210,211,212,213,214,82,83,215,216,217,218,219,123,220,221,222,223,224,225,226,227,10,228,97,19,99,229,124,125,230,84,21,126],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[48,52,56,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[13,42,97,98,84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[128,231,232,233,60,234,235,236,237,238,62,139,63,140,239,240,104,115,165,166,174,241,242,72,203,243,219,123,220,221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[192,80,196,244],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[245,246,247,248,30,31,249,250,251,252,253,254,36,37,38],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":74,"org.easymock.tests2.UsageTest.argumentsOrdered":72,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":82,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":71,"org.easymock.tests2.StubTest.stubWithReturnValue":222,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":30,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":150,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":253,"org.easymock.tests.MockingTest.testPartialClassMocking":7,"org.easymock.samples.SupportTest.voteForRemovals":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":24,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":216,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":102,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":79,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":32,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":117,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":75,"org.easymock.tests2.UsageTest.wrongArguments":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":109,"org.easymock.samples.ConstructorCalledMockTest.testTax":245,"org.easymock.tests.UsageStrictMockTest.range":165,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":243,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":223,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":44,"org.easymock.tests2.UsageConstraintsTest.testNull":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":185,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":214,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":50,"org.easymock.tests2.CaptureTest.testPrimitive":99,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":113,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":233,"org.easymock.tests.UsageTest.moreThanOneArgument":128,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":184,"org.easymock.tests2.CaptureTest.testCaptureNone":125,"org.easymock.tests.UsageUnorderedTest.message":62,"org.easymock.tests.UsageVerifyTest.twoReturns":140,"org.easymock.tests2.ThreadingTest.testThreadSafe":198,"org.easymock.tests.UsageTest.argumentsOrdered":60,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":101,"org.easymock.tests2.CaptureTest.testCapture_2617107":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":112,"org.easymock.tests2.UsageConstraintsTest.any":76,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":122,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":219,"org.easymock.tests.LimitationsTest.mockNativeMethod":164,"org.easymock.tests2.DependencyTest.testClassMocking":105,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":160,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":163,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":22,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":59,"org.easymock.tests2.CaptureTest.testAnd":97,"org.easymock.tests2.UsageTest.strictResetToDefault":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":134,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":5,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":9,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":51,"org.easymock.tests.MockingTest.testNicePartialClassMocking":8,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":187,"org.easymock.tests2.CaptureTest.testCaptureLast":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":114,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":238,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":228,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":42,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":80,"org.easymock.tests2.DependencyTest.testClassMockingSupport":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":237,"org.easymock.tests2.CaptureTest.testCapture1_2446744":229,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":141,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":242,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.tests.UsageThrowableTest.throwError":64,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":100,"org.easymock.tests.UsageStrictMockTest.differentMethods":166,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":87,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":200,"org.easymock.tests2.MockBuilderTest.testCreateMockString":54,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":194,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":2,"org.easymock.tests.UsageVerifyTest.twoThrows":63,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":217,"org.easymock.samples.PartialClassMockTest.testGetArea":46,"org.easymock.tests2.CompareToTest.testLessOrEqual":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":119,"org.easymock.samples.ExampleTest.voteAgainstRemoval":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":57,"org.easymock.tests2.UsageTest.niceToStrict":175,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":70,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":49,"org.easymock.tests2.UsageTest.defaultResetToNice":178,"org.easymock.samples.ExampleTest.voteAgainstRemovals":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":254,"org.easymock.tests.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":210,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":12,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":111,"org.easymock.tests.UsageOverloadedMethodTest.overloading":61,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":192,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":226,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":152,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":77,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":230,"org.easymock.tests.UsageThrowableTest.throwCheckedException":67,"org.easymock.tests2.EasyMockSupportClassTest.testAll":215,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":108,"org.easymock.tests.MockNameTest.defaultName":236,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":225,"org.easymock.tests2.UsageConstraintsTest.testMatches":193,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":41,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":227,"org.easymock.samples.ExampleTest.voteForRemovals":170,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":202,"org.easymock.tests.UsageVarargTest.allKinds":103,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":139,"org.easymock.tests2.DependencyTest.testInterfaceMocking":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":34,"org.easymock.tests2.DelegateToTest.testStubDelegate":204,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":69,"org.easymock.tests2.AnswerTest.stubAnswer":3,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":115,"org.easymock.tests2.UsageConstraintsTest.greaterThan":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":133,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":23,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":90,"org.easymock.samples.ExampleTest.voteForRemoval":168,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":199,"org.easymock.tests.UsageExpectAndReturnTest.floatType":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":55,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":246,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":195,"org.easymock.tests.UsageThrowableTest.noUpperLimit":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":172,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":189,"org.easymock.tests2.SerializationTest.test":205,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":208,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":86,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests2.UsageConstraintsTest.testSame":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":142,"org.easymock.tests2.CaptureTest.testCaptureFirst":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":81,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":148,"org.easymock.tests.GenericTest.testPackageScope":162,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":201,"org.easymock.tests2.CaptureTest.testCapture2_2446744":21,"org.easymock.tests2.UsageTest.moreThanOneArgument":174,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":39,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":52,"org.easymock.tests.UsageExpectAndReturnTest.longType":144,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":206,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":250,"org.easymock.tests2.UsageStrictMockTest.differentMethods":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":149,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":252,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":110,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":224,"org.easymock.tests2.NameTest.nameForStrictMock":25,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":47,"org.easymock.tests2.UsageConstraintsTest.testContains":191,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":197,"org.easymock.tests2.UsageConstraintsTest.testFind":91,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":138,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":4,"org.easymock.tests.MockTypeTest.fromEasyMockClass":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":186,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":6,"org.easymock.tests.UsageExpectAndReturnTest.object":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":88,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":188,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":48,"org.easymock.tests2.UsageStrictMockTest.range":220,"org.easymock.tests2.UsageConstraintsTest.lessThan":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":33,"org.easymock.tests.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":207,"org.easymock.tests2.CaptureTest.testCaptureRightOne":84,"org.easymock.tests2.UsageConstraintsTest.testOr":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":38,"org.easymock.tests.UsageRangeTest.combination":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":157,"org.easymock.tests.UsageTest.wrongArguments":232,"org.easymock.tests2.MockBuilderTest.testWithConstructor":247,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":154,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":89,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":28,"org.easymock.tests2.UsageConstraintsTest.cmpTo":190,"org.easymock.tests2.CaptureTest.testCaptureMultiple":18,"org.easymock.tests2.CompareToTest.testLessThan":244,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests.DefaultClassInstantiatorTest.object":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":83,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests.UsageTest.unexpectedCallWithArray":231,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":66,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":104,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":155,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":56,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.tests.CapturesMatcherTest.test":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":218,"org.easymock.tests2.UsageTest.resumeIfFailure":179,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":120,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":121,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":211}}]
