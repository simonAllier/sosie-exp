[{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[17,18,19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[23,24,25,26,27],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[30,31,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[38,39,40,41,42],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[43,24,44,45,46,47,48,20],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[49,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,24,188,189,190,191,192,44,5,193,6,7,8,9,10,11,194,12,14,15,195,16,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,28,228,229,230,29,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,25,249,26,27,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,45,46,272,273,274,275,276,1,277,42,278,279,280,281,282,47,48,19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,75,76,77,82,84,85,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,127,128,134,140,151,152,153,158,159,160,161,162,163,164,165,166,167,176,177,178,179,180,181,182,183,184,185,186,0,283,284,285,286,287,288,187,24,188,189,190,191,192,44,5,193,6,7,9,10,11,194,12,14,16,196,198,199,200,201,202,204,205,206,212,214,215,216,218,224,289,40,290,291,225,226,227,28,228,229,230,29,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,25,249,27,250,292,251,252,255,293,294,295,296,297,298,299,300,301,302,303,304,305,256,257,258,260,263,264,270,45,46,306,272,273,307,308,274,275,1,2,3,281,47,48,19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[309,310,50,311,117,118,312,313,123,314,315,316,317,318,319,320,321,322,323,324,21,325,326,30,22,327,179,283,284,196,197,199,200,201,202,328,203,329,330,39,331,289,332,333,334,335,336,337,338,339,258,340,341,306,307,280,281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[309,310,50,311,342,343,344,117,118,345,312,346,313,123,314,315,316,317,318,319,320,321,322,151,152,153,323,324,21,325,326,30,22,327,179,0,283,284,347,347,348,348,196,197,199,200,201,349,202,350,328,203,38,204,329,330,39,218,351,352,353,354,355,356,357,331,358,359,289,360,332,40,333,334,361,362,335,363,364,336,365,290,337,338,366,367,339,291,368,369,256,258,340,341,306,272,273,307,274,275,370,276,371,41,372,373,1,277,2,3,374,375,42,376,4,278,279,280,281],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[18,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[351,378,379,380,34,35,381],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[382],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[248,383],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[24,45,384,46,47,48,19],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[351,378,379,380,34,35,256,381,374],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[28,29,385],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[184,288,187,188,189,191],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[386],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":28,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests2.UsageTest.argumentsOrdered":269,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":303,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":264,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":286,"org.easymock.tests2.DelegateToTest.testReturnException":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":137,"org.easymock.tests.MockingTest.testPartialClassMocking":151,"org.easymock.tests.MockClassControlTest.testToString":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":97,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":40,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":378,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":92,"org.easymock.tests2.UsageTest.wrongArguments":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":156,"org.easymock.samples.ExampleTest.answerVsDelegate":24,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":343,"org.easymock.tests2.UsageConstraintsTest.testNull":229,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":199,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":302,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":319,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":352,"org.easymock.tests2.CaptureTest.testPrimitive":7,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":96,"org.easymock.tests.UsageTest.moreThanOneArgument":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":116,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":173,"org.easymock.tests.UsageTest.argumentsOrdered":149,"org.easymock.tests.UsageVarargTest.varargIntAccepted":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":35,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":276,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":186,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests2.AnswerTest.answer":47,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":222,"org.easymock.tests2.CaptureTest.testAnd":5,"org.easymock.tests2.UsageTest.strictResetToDefault":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":298,"org.easymock.tests2.DelegateToTest.testDelegate":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":112,"org.easymock.tests.LimitationsTest.mockFinalMethod":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":90,"org.easymock.tests2.CaptureTest.testCapture1_2446744":8,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":220,"org.easymock.tests.UsageThrowableTest.throwError":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":369,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":183,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":98,"org.easymock.tests2.UsageTest.niceToStrict":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":335,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":346,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":1,"org.easymock.tests2.MockBuilderTest.testCreateMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":106,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":154,"org.easymock.tests.UsageOverloadedMethodTest.overloading":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":62,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":31,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":236,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests2.EasyMockSupportClassTest.testAll":289,"org.easymock.tests.MockClassControlTest.testEquals":318,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":118,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":114,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":353,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":88,"org.easymock.tests2.CaptureTest.testCaptureAll":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":221,"org.easymock.tests2.UsageConstraintsTest.testMatches":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":174,"org.easymock.samples.ExampleTest.voteForRemovals":191,"org.easymock.tests.UsageVarargTest.allKinds":167,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":89,"org.easymock.samples.BasicClassMockTest.testPrintContent":284,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":132,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":141,"org.easymock.tests2.UsageConstraintsTest.greaterThan":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":120,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":329,"org.easymock.samples.ExampleTest.voteForRemoval":188,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":327,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":252,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":330,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":376,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":349,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":179,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":259,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":296,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":136,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":297,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":58,"org.easymock.tests2.CaptureTest.testCapture2_2446744":195,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":254,"org.easymock.tests2.UsageTest.moreThanOneArgument":261,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":42,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":166,"org.easymock.tests.GenericTest.testBridgedEquals":312,"org.easymock.tests.UsageExpectAndReturnTest.longType":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":86,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":294,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":115,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":171,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":367,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":59,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":272,"org.easymock.tests.MockingTest.testNiceClassMocking":323,"org.easymock.tests.MockingTest.testClassMocking":321,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":81,"org.easymock.tests2.UsageConstraintsTest.testContains":235,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":371,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":281,"org.easymock.tests2.UsageConstraintsTest.testFind":228,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":125,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":46,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":71,"org.easymock.tests.UsageExpectAndReturnTest.object":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":301,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":379,"org.easymock.tests.UsageTest.exactCallCountByLastCall":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":351,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":67,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":23,"org.easymock.tests.MockClassControlTest.testHashCode":317,"org.easymock.tests2.EasyMockSupportTest.testVerify":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":43,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":219,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":223,"org.easymock.tests.UsageVarargTest.varargCharAccepted":161,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":212,"org.easymock.tests2.UsageTest.openCallCountByLastCall":265,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":304,"org.easymock.tests.DefaultClassInstantiatorTest.object":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":129,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":357,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":38,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":316,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":103,"org.easymock.tests.CapturesMatcherTest.test":49,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":291,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":315,"org.easymock.tests2.UsageTest.resumeIfFailure":270,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":139,"org.easymock.tests2.StubTest.stubWithReturnValue":206,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":381,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":60,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":245,"org.easymock.tests2.SerializationTest.testAllMockedMethod":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":37,"org.easymock.samples.SupportTest.voteForRemovals":288,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":109,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":18,"org.easymock.tests.UsageExpectAndThrowTest.object":107,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":243,"org.easymock.tests2.DelegateToTest.testWrongClass":26,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":180,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":181,"org.easymock.tests.UsageStrictMockTest.range":76,"org.easymock.samples.ConstructorCalledMockTest.testTax":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":2,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":155,"org.easymock.tests2.CaptureTest.testCaptureNone":194,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":382,"org.easymock.tests.UsageUnorderedTest.message":170,"org.easymock.tests.UsageVerifyTest.twoReturns":178,"org.easymock.tests.UsageVarargTest.varargByteAccepted":165,"org.easymock.tests2.ThreadingTest.testThreadSafe":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":337,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":85,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":283,"org.easymock.tests2.CaptureTest.testCapture_2617107":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":95,"org.easymock.tests2.UsageConstraintsTest.any":233,"org.easymock.tests2.StubTest.stub":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":138,"org.easymock.tests.UsageExpectAndThrowTest.longType":100,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":30,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":214,"org.easymock.tests2.SerializationTest.testClass":256,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":293,"org.easymock.tests.LimitationsTest.mockNativeMethod":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":70,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":345,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":356,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":217,"org.easymock.tests2.NameTest.nameForMocksControl":210,"org.easymock.tests2.MockedExceptionTest.testMockedException":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":332,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":147,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":384,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":153,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":101,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":196,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":3,"org.easymock.tests.MockingTest.testNicePartialClassMocking":152,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":33,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":91,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":231,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":275,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":244,"org.easymock.tests.MockingTest.testTwoMocks":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":105,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":268,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":247,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":168,"org.easymock.tests.UsageStrictMockTest.differentMethods":77,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":325,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":253,"org.easymock.tests2.MockBuilderTest.testCreateMockString":278,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":313,"org.easymock.tests.UsageExpectAndThrowTest.floatType":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":333,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":48,"org.easymock.tests.UsageVerifyTest.twoThrows":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":290,"org.easymock.samples.ExampleTest.voteAgainstRemoval":189,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":204,"org.easymock.tests.LimitationsTest.privateConstructor":310,"org.easymock.tests2.UsageConstraintsTest.testNotNull":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":133,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":279,"org.easymock.tests2.UsageTest.defaultResetToNice":267,"org.easymock.samples.ExampleTest.voteAgainstRemovals":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":66,"org.easymock.tests2.CallbackTest.callback":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":350,"org.easymock.tests.UsageTest.openCallCountByLastCall":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":225,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":94,"org.easymock.tests.UsageCallCountTest.tooFewCalls":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":157,"org.easymock.tests.UsageThrowableTest.throwCheckedException":130,"org.easymock.tests.MockingTest.testStrictClassMocking":320,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":135,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":274,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":308,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":34,"org.easymock.tests2.NameTest.nameForNiceMock":209,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":255,"org.easymock.tests2.DependencyTest.testInterfaceMocking":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":380,"org.easymock.samples.ExampleTest.addDocument":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":338,"org.easymock.tests2.DelegateToTest.testStubDelegate":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.AnswerTest.stubAnswer":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":74,"org.easymock.tests.UsageVarargTest.varargLongAccepted":164,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":78,"org.easymock.tests.UsageExpectAndReturnTest.floatType":53,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":218,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":348,"org.easymock.tests.UsageThrowableTest.noUpperLimit":127,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":241,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":226,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":340,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":9,"org.easymock.tests2.SerializationTest.test":257,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":32,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":21,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":52,"org.easymock.tests2.UsageConstraintsTest.testSame":230,"org.easymock.samples.SupportTest.addDocument":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":334,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests2.NameTest.nameForMock":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":63,"org.easymock.tests2.UsageStrictMockTest.differentMethods":216,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":328,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":111,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":122,"org.easymock.tests2.MockedExceptionTest.testRealException":282,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":36,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":93,"org.easymock.tests2.NameTest.nameForStrictMock":208,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":373,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":200,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":341,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":242,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":326,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":41,"org.easymock.tests2.UsageStrictMockTest.range":215,"org.easymock.tests2.UsageConstraintsTest.lessThan":248,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":354,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":370,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":295,"org.easymock.tests2.CaptureTest.testCaptureRightOne":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":363,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests.UsageRangeTest.combination":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":197,"org.easymock.tests.UsageTest.wrongArguments":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":64,"org.easymock.tests.UsageVarargTest.varargShortAccepted":163,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":22,"org.easymock.tests2.UsageConstraintsTest.cmpTo":234,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":377,"org.easymock.tests2.CompareToTest.testLessThan":383,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":266,"org.easymock.tests2.CaptureTest.testCaptureFromStub":15,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":372,"org.easymock.tests.UsageTest.unexpectedCallWithArray":144,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":73,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":65,"org.easymock.tests2.CaptureTest.testCapture":13,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":75,"org.easymock.tests2.UsageConstraintsTest.constraints":227,"org.easymock.samples.ExampleTest.addAndChangeDocument":192,"org.easymock.tests.UsageStrictMockTest.testVerify":79,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":285,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":87,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":184,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":355,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":57,"org.easymock.tests.LimitationsTest.abstractClass":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":185,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":300}}]
