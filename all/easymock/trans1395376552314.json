[{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[2],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[3],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,0,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[86,87,88,8,11,12,89,90,91,92,93,14,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[29,30,31,33,34,36,46,51,55,57,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[130,55,56,57,58,59,60,61,62,64,65,66,67,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[131,132,133,134,135],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[136,137],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[2,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[30,33,36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[55,57,58,59,60,61,64,139,65],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[140,86,141,142,143,144,145,5,146,22,147,148,149,150],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[69,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[151,152,153,154,126],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[155],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,4,179,86,141,87,180,143,181,88,144,145,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,5,6,205,146,206,207,208,7,8,9,10,11,12,13,209,210,89,211,90,91,92,93,14,94,15,16,17,18,19,212,213,214,215,216,217,218,219,138,220,221,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,222,20,21,22,223,224,225,226,227,116,228,117,118,119,120,121,122,229,230,231,232,233,234,235,236,237,238,23,24,239,123,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,124,255,256,147,257,258,259,125,148,149,260,261,262,263,25,264,150,265,266,267,268,136,137,269,270,271,272,273,274,275,276,277,278,279,27,28,29,30,0,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,280,281,282,283,284,285,54,286,287,55,56,57,58,59,60,61,62,63,64,65,66,67,68,288,289,290,291,292,126,127,128,129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[155,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[295,296,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[298,269,270],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":30,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests2.UsageTest.argumentsOrdered":149,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":93,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":258,"org.easymock.tests2.StubTest.stubWithReturnValue":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":192,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":50,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":159,"org.easymock.tests2.SerializationTest.testAllMockedMethod":270,"org.easymock.tests2.DelegateToTest.testReturnException":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":91,"org.easymock.samples.SupportTest.voteForRemovals":158,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":96,"org.easymock.tests.UsageExpectAndThrowTest.object":106,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":253,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":47,"org.easymock.tests2.DelegateToTest.testWrongClass":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":20,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":9,"org.easymock.tests2.UsageTest.wrongArguments":147,"org.easymock.tests.UsageStrictMockTest.range":146,"org.easymock.samples.ExampleTest.answerVsDelegate":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":272,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":82,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":283,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":107,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":248,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":133,"org.easymock.tests2.CaptureTest.testPrimitive":58,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":115,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":144,"org.easymock.tests.UsageTest.moreThanOneArgument":180,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests2.CaptureTest.testCaptureNone":63,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.UsageVerifyTest.twoReturns":141,"org.easymock.tests.UsageVarargTest.varargByteAccepted":177,"org.easymock.tests2.ThreadingTest.testThreadSafe":275,"org.easymock.tests.UsageTest.argumentsOrdered":145,"org.easymock.tests.UsageVarargTest.varargIntAccepted":171,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":215,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":167,"org.easymock.tests2.CaptureTest.testCapture_2617107":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":15,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":151,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":12,"org.easymock.tests2.UsageConstraintsTest.any":37,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":152,"org.easymock.tests2.StubTest.stub":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":92,"org.easymock.tests.UsageExpectAndThrowTest.longType":99,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":295,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":264,"org.easymock.tests2.SerializationTest.testClass":298,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":287,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests.LimitationsTest.mockNativeMethod":222,"org.easymock.tests2.AnswerTest.answer":267,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":202,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":36,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.UsageTest.strictResetToDefault":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":294,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":72,"org.easymock.tests2.MockedExceptionTest.testMockedException":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":237,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests2.DelegateToTest.testDelegate":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":100,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":280,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":134,"org.easymock.tests.MockingTest.testNicePartialClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":111,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":285,"org.easymock.tests2.CompareToTest.testNotComparable":3,"org.easymock.tests2.CaptureTest.testCaptureLast":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":14,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":77,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":34,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":48,"org.easymock.tests2.CaptureTest.testCapture1_2446744":59,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":104,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":148,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":52,"org.easymock.tests.UsageThrowableTest.throwError":116,"org.easymock.tests.UsageStrictMockTest.differentMethods":206,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":277,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests.UsageExpectAndThrowTest.floatType":98,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":43,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":268,"org.easymock.tests.UsageVerifyTest.twoThrows":86,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":79,"org.easymock.samples.PartialClassMockTest.testGetArea":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":16,"org.easymock.samples.ExampleTest.voteAgainstRemoval":163,"org.easymock.tests2.UsageTest.niceToStrict":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":97,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":80,"org.easymock.tests2.UsageConstraintsTest.testNotNull":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":122,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":126,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":132,"org.easymock.samples.ExampleTest.voteAgainstRemovals":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":198,"org.easymock.tests.UsageVarargTest.differentLength":174,"org.easymock.tests2.CallbackTest.callback":254,"org.easymock.tests.UsageTest.openCallCountByLastCall":181,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":105,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":11,"org.easymock.tests.UsageCallCountTest.tooFewCalls":213,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":83,"org.easymock.tests.UsageOverloadedMethodTest.overloading":221,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":41,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":273,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":194,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":296,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":40,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":64,"org.easymock.tests.UsageThrowableTest.throwCheckedException":119,"org.easymock.tests2.EasyMockSupportClassTest.testAll":271,"org.easymock.tests.MockClassControlTest.testEquals":224,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":219,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":113,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":76,"org.easymock.tests2.UsageConstraintsTest.testMatches":42,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":274,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.samples.ExampleTest.voteForRemovals":165,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":279,"org.easymock.tests.UsageVarargTest.allKinds":4,"org.easymock.tests2.DependencyTest.testInterfaceMocking":252,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":179,"org.easymock.samples.BasicClassMockTest.testPrintContent":168,"org.easymock.samples.ExampleTest.addDocument":164,"org.easymock.tests2.DelegateToTest.testStubDelegate":290,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":121,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":262,"org.easymock.tests2.AnswerTest.stubAnswer":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":94,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":1,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.UsageConstraintsTest.greaterThan":44,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":293,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":286,"org.easymock.tests.UsageVarargTest.varargLongAccepted":176,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":207,"org.easymock.samples.ExampleTest.voteForRemoval":162,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":201,"org.easymock.tests.UsageExpectAndReturnTest.floatType":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":153,"org.easymock.tests.UsageThrowableTest.noUpperLimit":228,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":45,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":211,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":124,"org.easymock.tests2.SerializationTest.test":269,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":60,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":242,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":117,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":184,"org.easymock.samples.SupportTest.addDocument":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":90,"org.easymock.tests2.CaptureTest.testCaptureFirst":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":243,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":190,"org.easymock.tests.GenericTest.testPackageScope":218,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":278,"org.easymock.tests2.UsageTest.moreThanOneArgument":256,"org.easymock.tests2.CaptureTest.testCapture2_2446744":67,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":178,"org.easymock.tests.GenericTest.testBridgedEquals":138,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":84,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":216,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":81,"org.easymock.tests.UsageExpectAndReturnTest.longType":186,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":114,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":135,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":49,"org.easymock.tests2.UsageStrictMockTest.differentMethods":265,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":75,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":187,"org.easymock.tests.UsageCallCountTest.tooManyCalls":217,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":110,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":226,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":238,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":212,"org.easymock.tests2.MockedExceptionTest.testRealException":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":191,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":120,"org.easymock.tests2.UsageConstraintsTest.testContains":39,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":128,"org.easymock.tests2.UsageConstraintsTest.testFind":0,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":70,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":284,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":203,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":24,"org.easymock.tests.UsageExpectAndReturnTest.object":193,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":54,"org.easymock.tests2.UsageStrictMockTest.range":150,"org.easymock.tests2.UsageConstraintsTest.lessThan":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":247,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":173,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":227,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":85,"org.easymock.tests.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":7,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":241,"org.easymock.tests2.CaptureTest.testCaptureRightOne":65,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":229,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests.UsageRangeTest.combination":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":199,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":210,"org.easymock.tests.UsageTest.wrongArguments":143,"org.easymock.tests2.MockBuilderTest.testWithConstructor":71,"org.easymock.tests2.EasyMockSupportTest.testVerify":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":196,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":230,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":209,"org.easymock.tests.UsageVarargTest.varargShortAccepted":175,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":26,"org.easymock.tests2.UsageConstraintsTest.cmpTo":38,"org.easymock.tests.UsageVarargTest.varargCharAccepted":172,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests2.UsageTest.openCallCountByLastCall":259,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":125,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":250,"org.easymock.tests2.CaptureTest.testCaptureFromStub":66,"org.easymock.tests.UsageTest.unexpectedCallWithArray":142,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":140,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":103,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":118,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":214,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":197,"org.easymock.tests2.CaptureTest.testCapture":139,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":205,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":102,"org.easymock.samples.ExampleTest.addAndChangeDocument":166,"org.easymock.tests.CapturesMatcherTest.test":130,"org.easymock.tests.UsageStrictMockTest.testVerify":208,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":200,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":156,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":204,"org.easymock.tests2.UsageTest.resumeIfFailure":260,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":17,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":246,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":170}}]
