[{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"failures":[0,1,2,3],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[31],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[32],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[33,33,34,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[37,55,70,71,77,143,102,104,144,105,106,108,109,110,111,113,114,145,115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[146,102,147,103],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[102,147,103],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[148,149,150,151,93,94,102,152,112],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[58,63,153],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[154,155,156,157,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[53,55,159,160],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[161,162],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[163],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[89,92,164,94,165,166,152,167,168,169,170],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[171],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[172],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":91,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageTest.argumentsOrdered":18,"org.easymock.tests.ObjectMethodsTest.testHashCode":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":152,"org.easymock.tests2.SerializationTest.testAllMockedMethod":103,"org.easymock.tests.MockingTest.testPartialClassMocking":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":150,"org.easymock.samples.BasicClassMockTest.testPrintContent":36,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":52,"org.easymock.tests.MockClassControlTest.testToString":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":139,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":126,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":1,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":146,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":120,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":148,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":44,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":85,"org.easymock.tests2.UsageTest.wrongArguments":16,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":87,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":95,"org.easymock.tests2.UsageConstraintsTest.testNull":22,"org.easymock.tests2.SerializationTest.test":147,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":74,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":110,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":65,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":116,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":159,"org.easymock.tests2.CaptureTest.testCaptureFirst":31,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":124,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":114,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":133,"org.easymock.tests.GenericTest.testBridgedEquals":56,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":35,"org.easymock.tests2.CaptureTest.testCapture_2617107":29,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":104,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":145,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":97,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":168,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":109,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":80,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":42,"org.easymock.tests2.SerializationTest.testClass":102,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":2,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":68,"org.easymock.tests2.DependencyTest.testClassMocking":141,"org.easymock.tests2.AnswerTest.answer":158,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":55,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":136,"org.easymock.tests2.CaptureTest.testAnd":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":154,"org.easymock.tests2.MockedExceptionTest.testMockedException":100,"org.easymock.tests.MockingTest.testNiceClassMocking":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":121,"org.easymock.tests.MockingTest.testClassMocking":46,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":144,"org.easymock.tests2.DelegateToTest.testDelegate":173,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":50,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":101,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":72,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":111,"org.easymock.tests.MockingTest.testNicePartialClassMocking":49,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":76,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":107,"org.easymock.tests2.CompareToTest.testNotComparable":163,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":155,"org.easymock.tests.LimitationsTest.mockFinalMethod":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":75,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":156,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":98,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":41,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":26,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":24,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":78,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":105,"org.easymock.tests2.DependencyTest.testClassMockingSupport":142,"org.easymock.tests.MockingTest.testTwoMocks":47,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests2.UsageConstraintsTest.lessThan":161,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":149,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":128,"org.easymock.tests2.CaptureTest.testCaptureRightOne":30,"org.easymock.tests2.UsageConstraintsTest.testOr":23,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":73,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":40,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":165,"org.easymock.tests2.MockBuilderTest.testCreateMockString":115,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":58,"org.easymock.tests.MockClassControlTest.testHashCode":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":123,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":59,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":129,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":43,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":132,"org.easymock.samples.PartialClassMockTest.testGetArea":37,"org.easymock.tests2.CompareToTest.testLessThan":162,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":127,"org.easymock.tests.LimitationsTest.privateConstructor":67,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":170,"org.easymock.tests2.UsageConstraintsTest.testNotNull":27,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":99,"org.easymock.tests.DefaultClassInstantiatorTest.object":38,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":108,"org.easymock.tests2.MockBuilderTest.testCreateMock":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":135,"org.easymock.tests2.CallbackTest.callback":157,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":106,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests2.UsageConstraintsTest.equals":172,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":130,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":131,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":62,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":82,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":160,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":90,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":171,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":138,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":61,"org.easymock.tests2.EasyMockSupportClassTest.testAll":119,"org.easymock.tests.MockClassControlTest.testEquals":64,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":143,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.LimitationsTest.abstractClass":66,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":70,"org.easymock.tests.MockingTest.testStrictClassMocking":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":96}}]
