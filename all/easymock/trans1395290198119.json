[{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:89","failures":[12,13,14,15],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,9,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[52,61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,36,96,97,98,99,100,101,102,103,104,105,106,107,108,109,62,110,111,112,113,114,115,116],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[117,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[119,120,74,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,92,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,8,168,169,170,105,106,113,171,172,173,174,175,176,177,178,179],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[82,89,98,100,105,62],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[180,181,182,183,184,185,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[187],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[149],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[187],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[119,120,74,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,92,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,8,168,169,170,105,106,113,171,172,173,174,175,176,177,178,179],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[121,122,123,124,131,132,137,138,139,140,141,142,143,144,145,146,154,155,159,160],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[79,188,111],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[189],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[190,191,192,193,194,195,196,197,198,199,200,17,201,74,75,76,202,203,77,204,205,206,207,208,121,122,124,125,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,92,152,153,154,155,156,158,159,160,161,209,210,211,212,13,213,214,28,215,216,217,218,219,220,221,1,117,222,223,224,225,163,226,31,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,164,15,165,166,168,243,244,245,246,247,248,249,250,251,252,253,254,106,107,108,255,109,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,171,172,173,174,175,290,114,116,176,291,292,293,178,179,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[197,198,295,296],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:90","sourceCode":"return java.lang.Class<?>.getConstructor(new java.lang.Class[0])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[298,299,194,300,300,301,301,197,295,209,210,211,212,23,24,302,13,25,213,214,26,303,27,304,215,216,217,218,220,221,222,237,238,240,241,242,34,164,35,14,15,305,306,307,41,42,43,44,45,46,47,48,253,308,254,309,310,311,312,290,313,291,292,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[214],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[314],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[315,316,317,318,185,73,319,217,221,320,186],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[201,322,74,75,76,78,204,323,79,80,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,141,142,143,144,146,148,149,150,151,92,152,153,154,155,156,158,160,161,303,117,4,227,228,229,230,231,232,233,234,235,236,165,8,243,324,245,246,247,248,249,325,105,106,107,108,110,111,112,260,267,115,176],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[190,0,191,192,193,326,194,195,300,300,301,301,327,328,196,329,330,331,197,198,199,200,17,7,201,119,120,74,75,76,202,203,77,204,205,206,22,207,208,121,122,124,125,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,92,152,153,154,155,156,158,159,160,161,209,210,211,212,24,13,213,214,303,28,29,30,304,332,215,216,217,218,219,220,221,1,333,2,334,117,3,222,4,223,224,225,163,226,31,227,228,229,230,231,232,32,233,234,235,236,237,238,239,240,241,242,164,14,15,305,5,335,336,95,337,338,339,165,166,167,8,168,243,324,244,245,246,247,248,249,340,341,342,97,250,251,252,343,344,345,346,347,307,348,349,350,351,169,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,297,376,253,254,106,107,108,377,255,109,256,257,258,378,113,259,260,261,379,11,267,380,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,171,172,173,174,175,290,114,115,116,176,177,291,292,293,178,179,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[381,382,383,384,385,386,387,388,389,390,391,392],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[197,198,295,296],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[74,202,208,1,244,106,258,115,116],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[393,394,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[82,89,92,100,101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[210,24,303,14,306],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[298,299,194,300,300,301,301,197,295,396,397,398,399,400,401,402,403,209,404,405,210,406,407,408,409,410,411,412,413,414,211,415,416,417,418,419,212,420,421,23,24,302,422,13,25,213,214,423,26,303,27,29,30,304,215,216,217,218,220,221,222,186,237,238,240,241,242,34,164,424,425,35,14,15,305,426,306,307,41,42,43,44,45,46,47,48,49,427,428,429,430,431,432,187,253,308,254,309,310,311,433,434,290,435,436,437,313,291,292,293,438],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[439,147,164],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[190,0,191,192,440,193,16,326,298,299,194,441,195,381,300,301,382,327,328,196,329,330,331,197,198,295,396,397,199,200,383,384,385,442,443,17,393,444,386,445,446,387,398,399,447,448,400,449,450,7,201,119,451,120,18,19,20,21,322,452,74,453,75,76,454,202,203,77,78,204,323,205,206,22,79,80,207,208,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,188,139,140,141,142,143,144,145,146,147,148,149,150,151,92,152,153,154,155,156,157,158,159,160,161,401,402,403,209,404,405,210,406,407,408,409,410,411,412,413,414,211,415,416,417,418,419,212,420,421,162,23,317,24,302,318,422,13,25,213,185,214,455,423,26,303,319,27,388,389,390,456,457,28,394,458,391,459,460,392,29,30,304,332,461,462,463,464,465,215,216,217,218,466,219,220,221,320,1,333,2,334,117,3,222,186,467,4,223,224,225,163,226,31,227,228,229,230,231,232,32,233,234,235,236,33,237,238,239,240,241,242,34,468,164,424,425,35,14,15,305,426,306,5,93,335,336,94,95,36,337,338,339,165,166,167,8,168,37,38,39,40,243,324,244,245,246,247,248,249,340,341,342,96,97,469,250,251,252,343,344,345,346,347,307,348,349,350,351,169,352,470,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,471,472,473,474,475,476,477,478,479,480,481,170,373,374,375,297,376,41,42,43,44,45,46,47,48,482,49,427,428,429,430,431,483,432,187,253,308,254,309,325,484,105,106,485,107,108,486,50,51,52,9,53,54,55,56,57,58,59,60,61,377,310,487,488,489,395,311,490,491,255,109,62,110,256,257,111,112,258,492,63,378,493,494,495,64,496,497,113,498,65,66,67,499,312,259,260,261,500,501,502,503,504,505,506,507,508,262,509,263,510,6,511,10,379,512,513,514,264,265,11,266,267,380,268,269,515,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,171,172,173,174,175,433,434,290,435,114,115,116,68,69,70,71,72,176,177,436,437,313,291,292,516,293,517,518,438,178,179,519,294,520],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests2.UsageTest.argumentsOrdered":80,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":235,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":509,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":323,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":382,"org.easymock.tests2.DelegateToTest.testReturnException":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":349,"org.easymock.tests.MockingTest.testPartialClassMocking":291,"org.easymock.tests.MockClassControlTest.testToString":43,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":461,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":514,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":409,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":353,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":165,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":39,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":311,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":518,"org.easymock.tests2.UsageConstraintsTest.testNull":140,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":240,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":48,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":234,"org.easymock.tests2.CaptureTest.testPrimitive":124,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":168,"org.easymock.tests.UsageTest.moreThanOneArgument":109,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":372,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":345,"org.easymock.tests.UsageTest.argumentsOrdered":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":373,"org.easymock.tests.UsageVarargTest.varargIntAccepted":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":10,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":184,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":175,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":85,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests.ReplayStateInvalidUsageTest.times":58,"org.easymock.tests2.DependencyTest.testClassMocking":396,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":512,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":21,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":488,"org.easymock.tests2.CaptureTest.testAnd":121,"org.easymock.tests2.UsageTest.strictResetToDefault":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":230,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":268,"org.easymock.tests2.DelegateToTest.testDelegate":331,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":368,"org.easymock.tests.LimitationsTest.mockFinalMethod":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":72,"org.easymock.tests2.DependencyTest.testClassMockingSupport":397,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":96,"org.easymock.tests2.CaptureTest.testCapture1_2446744":125,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":19,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":9,"org.easymock.tests.UsageThrowableTest.throwError":243,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":395,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":515,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":347,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":421,"org.easymock.samples.PartialClassMockTest.testGetArea":194,"org.easymock.tests.MockingTest.testInterfaceMocking":516,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":53,"org.easymock.tests2.CompareToTest.testLessOrEqual":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":410,"org.easymock.tests2.UsageTest.niceToStrict":204,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":500,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":13,"org.easymock.tests2.MockBuilderTest.testCreateMock":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":417,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":386,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":362,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":231,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":487,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":492,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":37,"org.easymock.tests.UsageOverloadedMethodTest.overloading":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":150,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":336,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":281,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":149,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":130,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":474,"org.easymock.tests.MockClassControlTest.testEquals":47,"org.easymock.tests2.EasyMockSupportClassTest.testAll":209,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":308,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":370,"org.easymock.tests2.CaptureTest.testCaptureAll":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":70,"org.easymock.tests.MockNameTest.defaultName":470,"org.easymock.tests2.UsageConstraintsTest.testMatches":151,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":346,"org.easymock.samples.ExampleTest.voteForRemovals":193,"org.easymock.tests.UsageVarargTest.allKinds":170,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":71,"org.easymock.samples.BasicClassMockTest.testPrintContent":299,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":248,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":458,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":352,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":483,"org.easymock.tests2.UsageConstraintsTest.greaterThan":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":404,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":380,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":305,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":432,"org.easymock.samples.ExampleTest.voteForRemoval":191,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":426,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":224,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":490,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":34,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":202,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":307,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":507,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":228,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":348,"org.easymock.tests2.CaptureTest.testCaptureFirst":134,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":506,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":229,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":36,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":277,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":163,"org.easymock.tests2.CaptureTest.testCapture2_2446744":133,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":513,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":303,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":481,"org.easymock.tests.GenericTest.testBridgedEquals":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":496,"org.easymock.tests.UsageExpectAndReturnTest.longType":273,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":371,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":157,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":369,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":343,"org.easymock.tests.UsageCallCountTest.tooManyCalls":497,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":99,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":247,"org.easymock.tests.MockingTest.testNiceClassMocking":438,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":216,"org.easymock.tests.MockingTest.testClassMocking":437,"org.easymock.tests2.UsageConstraintsTest.testContains":148,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":12,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":63,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":304,"org.easymock.tests2.UsageConstraintsTest.testFind":139,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":261,"org.easymock.tests.MockTypeTest.fromEasyMockClass":489,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":120,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":325,"org.easymock.tests.UsageExpectAndReturnTest.object":280,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":233,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":181,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":67,"org.easymock.tests.UsageTest.exactCallCountByLastCall":258,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":505,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":519,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":374,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":103,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":186,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":389,"org.easymock.tests.MockClassControlTest.testHashCode":46,"org.easymock.tests2.EasyMockSupportTest.testVerify":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":412,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":84,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":375,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":5,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":18,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":162,"org.easymock.tests.UsageVarargTest.varargCharAccepted":475,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":482,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":266,"org.easymock.tests2.UsageTest.openCallCountByLastCall":205,"org.easymock.tests.DefaultClassInstantiatorTest.object":49,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":236,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":340,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":65,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":413,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":442,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":388,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":45,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":359,"org.easymock.tests.CapturesMatcherTest.test":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":337,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":44,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":212,"org.easymock.tests2.UsageTest.resumeIfFailure":207,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":310,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":351,"org.easymock.tests2.StubTest.stubWithReturnValue":201,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":185,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":279,"org.easymock.tests2.SerializationTest.testAllMockedMethod":295,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":379,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":89,"org.easymock.samples.SupportTest.voteForRemovals":195,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":365,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":296,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":11,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":333,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":520,"org.easymock.tests.UsageExpectAndThrowTest.object":363,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":155,"org.easymock.tests2.DelegateToTest.testWrongClass":329,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":179,"org.easymock.tests.UsageStrictMockTest.range":107,"org.easymock.samples.ConstructorCalledMockTest.testTax":300,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":449,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":32,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":364,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":401,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":38,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":98,"org.easymock.tests2.CaptureTest.testCaptureNone":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":252,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":189,"org.easymock.tests.UsageUnorderedTest.message":113,"org.easymock.tests.UsageVerifyTest.twoReturns":116,"org.easymock.tests.UsageVarargTest.varargByteAccepted":480,"org.easymock.tests2.ThreadingTest.testThreadSafe":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":415,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":495,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":499,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":298,"org.easymock.tests2.CaptureTest.testCapture_2617107":123,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":91,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":264,"org.easymock.tests2.UsageConstraintsTest.any":146,"org.easymock.tests2.StubTest.stub":7,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":57,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":350,"org.easymock.tests.UsageExpectAndThrowTest.longType":356,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":430,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":56,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":453,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":28,"org.easymock.tests2.SerializationTest.testClass":197,"org.easymock.tests.LimitationsTest.mockNativeMethod":290,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":254,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":385,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":454,"org.easymock.tests2.NameTest.nameForMocksControl":465,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":443,"org.easymock.tests2.MockedExceptionTest.testMockedException":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":405,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":257,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":451,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":357,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":237,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":214,"org.easymock.tests.MockingTest.testNicePartialClassMocking":292,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":242,"org.easymock.tests2.CompareToTest.testNotComparable":314,"org.easymock.tests2.CompareToTest.testCompareEqual":439,"org.easymock.tests2.CaptureTest.testCaptureLast":128,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":97,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":221,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":156,"org.easymock.tests.MockingTest.testTwoMocks":313,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":320,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":361,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":160,"org.easymock.samples.ExampleTest.removeNonExistingDocument":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":444,"org.easymock.tests.UsageStrictMockTest.differentMethods":108,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":54,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":390,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":428,"org.easymock.tests2.ConstraintsToStringTest.andToString":88,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":225,"org.easymock.tests2.MockBuilderTest.testCreateMockString":27,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":406,"org.easymock.tests.UsageExpectAndThrowTest.floatType":355,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":467,"org.easymock.tests.UsageVerifyTest.twoThrows":115,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":211,"org.easymock.samples.ExampleTest.voteAgainstRemoval":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":263,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":15,"org.easymock.tests.LimitationsTest.privateConstructor":434,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":316,"org.easymock.tests2.UsageConstraintsTest.testNotNull":159,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":29,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":249,"org.easymock.tests2.UsageTest.defaultResetToNice":22,"org.easymock.samples.ExampleTest.voteAgainstRemovals":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":510,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":285,"org.easymock.tests.UsageVarargTest.differentLength":477,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":384,"org.easymock.tests2.CallbackTest.callback":4,"org.easymock.tests2.UsageConstraintsTest.equals":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":424,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":101,"org.easymock.tests.UsageTest.openCallCountByLastCall":256,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":167,"org.easymock.tests.UsageCallCountTest.tooFewCalls":493,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":40,"org.easymock.tests.UsageThrowableTest.throwCheckedException":246,"org.easymock.tests.MockingTest.testStrictClassMocking":436,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":177,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":217,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":59,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":219,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":3,"org.easymock.tests.ObjectMethodsTest.testHashCode":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":183,"org.easymock.tests2.NameTest.nameForNiceMock":464,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":226,"org.easymock.tests2.DependencyTest.testInterfaceMocking":199,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":182,"org.easymock.samples.ExampleTest.addDocument":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":420,"org.easymock.tests2.DelegateToTest.testStubDelegate":196,"org.easymock.tests2.AnswerTest.stubAnswer":117,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":106,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":455,"org.easymock.tests.UsageVarargTest.varargLongAccepted":479,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":262,"org.easymock.tests.UsageExpectAndReturnTest.floatType":272,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":288,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":222,"org.easymock.tests2.ConstraintsToStringTest.orToString":81,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":459,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":153,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":94,"org.easymock.tests.UsageThrowableTest.noUpperLimit":324,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":136,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":398,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":126,"org.easymock.tests2.SerializationTest.test":198,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":427,"org.easymock.tests2.UsageConstraintsTest.testSame":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":271,"org.easymock.samples.SupportTest.addDocument":441,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":466,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":407,"org.easymock.tests.GenericTest.testPackageScope":253,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":504,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":391,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":517,"org.easymock.tests2.NameTest.nameForMock":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":282,"org.easymock.tests2.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":319,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":425,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":274,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":367,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":498,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":269,"org.easymock.tests2.MockedExceptionTest.testRealException":332,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":511,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":450,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":6,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":166,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":61,"org.easymock.tests2.NameTest.nameForStrictMock":463,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":422,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":400,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":429,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":154,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":24,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":508,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":411,"org.easymock.tests2.CaptureTest.testCaptureRightOne":131,"org.easymock.tests2.UsageConstraintsTest.testOr":142,"org.easymock.tests.UsageRangeTest.combination":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":238,"org.easymock.tests.UsageTest.wrongArguments":110,"org.easymock.tests2.MockBuilderTest.testWithConstructor":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":408,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":501,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":283,"org.easymock.tests.UsageVarargTest.varargShortAccepted":478,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":431,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":64,"org.easymock.tests2.UsageConstraintsTest.cmpTo":147,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":503,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":206,"org.easymock.tests2.CaptureTest.testCaptureFromStub":132,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":52,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":302,"org.easymock.tests.UsageTest.unexpectedCallWithArray":62,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":494,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":73,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":284,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":485,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.samples.ExampleTest.addAndChangeDocument":326,"org.easymock.tests2.ConstraintsToStringTest.notToString":83,"org.easymock.tests.UsageStrictMockTest.testVerify":50,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":381,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":484,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":69,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":173,"org.easymock.tests.LimitationsTest.abstractClass":433,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":174,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":95,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":232}}]
