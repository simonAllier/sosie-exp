[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[295,252,253,254],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[296,297,0,298,299,300,301,66,67,302,303,304,305,306,307,308,309,310,311,312,313,314,315,99,100,101,316,317,318,319,320,321,322,323,130,138,139,140,141,141,142,142,169,170,172,173,174,175,176,324,325,177,178,179,180,326,327,190,328,329,330,331,196,332,333,197,334,335,336,337,338,339,340,341,342,198,343,344,345,346,347,199,348,349,252,254,350,351,271,272,273,274,276,277,278,279,352,353,280,281,282,283,354,284,285,286,287,288,289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[141,142,324,355,356],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[180,327,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[2,6,8,10,13,16,18,20,23,25,27,30,32,34,36,38,40,43,45,47,51,53,55,58,61,63,65,302,358,70,73,75,77,79,81,83,85,87,89,91,93,95,97,315,100,102,104,317,107,111,116,359,360,121,123,125,127,129,131,133,135,137,139,141,141,147,149,151,361,154,156,158,160,162,164,166,168,170,171,173,174,176,177,179,180,182,185,187,189,191,193,196,198,200,202,204,206,208,362,211,213,215,217,219,221,223,225,363,229,233,235,239,241,243,244,246,248,250,251,254,256,258,259,260,261,263,265,267,270,272,274,276,278,280,283,285,287,289,291,293],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[23,26,364,92,93,96,97,121,128,129,187,258,264,265],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:66","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan)","type":"CtInvocationImpl"},"failures":[143,144,365,366,195,367,368,369,370,371,372,238,373,374,375,376],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[377,378,379],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,25,26,27,28,380,381,29,30,31,32,34,35,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,303,68,69,70,382,383,311,312,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,98,106,107,108,109,110,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,181,182,184,185,186,187,188,189,195,196,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,253,254,255,256,257,259,260,261,262,264,266,267,268,270,271,274,275,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[296,297,0,298,299,300,301,66,67,302,303,304,305,306,307,308,309,310,311,312,313,314,315,99,100,101,316,317,318,319,320,321,322,323,130,138,139,140,141,141,142,142,169,170,172,173,174,175,176,324,325,177,178,179,180,326,327,190,328,384,329,330,331,196,332,333,197,334,335,336,337,338,339,340,341,342,198,343,344,345,346,347,199,348,349,252,254,350,351,271,272,273,274,276,277,278,385,279,352,353,280,281,282,283,354,284,285,386,286,287,288,289],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[43,83,84,85,86,87,88,89,287,288,289,290],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[296,297,0,298,387,388,389,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,299,390,391,392,393,300,394,395,21,22,23,24,25,26,27,28,396,397,380,381,398,399,400,401,29,30,31,32,33,34,35,36,37,38,39,40,402,403,404,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,405,406,407,301,66,67,302,303,68,358,69,70,382,408,409,383,410,304,305,306,307,308,309,310,311,312,71,72,73,74,75,76,77,78,79,80,81,82,83,411,84,85,86,87,88,89,412,413,414,90,91,92,93,94,95,96,97,98,313,314,315,99,100,415,101,416,417,316,102,103,104,105,418,317,318,319,320,321,322,419,323,106,107,108,420,109,110,111,112,113,114,115,116,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,377,436,437,438,439,440,441,378,442,443,444,379,445,446,447,448,449,450,451,452,453,454,117,359,118,119,360,455,120,121,122,123,124,125,126,127,128,129,130,131,132,456,133,134,135,136,137,457,458,459,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,361,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,460,176,324,325,177,178,179,180,326,327,181,182,461,462,357,463,464,183,184,185,186,187,188,189,190,328,465,191,192,193,194,466,467,468,469,365,366,195,367,368,470,369,370,471,329,330,331,196,332,333,197,334,335,336,337,338,339,340,341,342,198,343,344,345,346,347,199,348,349,200,201,202,203,472,204,205,206,207,208,209,362,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,363,227,228,229,473,230,474,475,231,232,233,234,235,236,237,476,477,478,371,372,238,373,374,479,375,376,480,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,350,481,482,483,351,484,485,271,272,273,274,486,275,276,277,487,278,355,279,352,488,353,280,281,282,489,283,490,354,284,285,356,286,287,288,289,290,291,491,492,292,293,294],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[296,297,0,298,387,388,389,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,299,390,391,392,393,300,394,395,21,22,23,24,25,26,27,28,396,397,380,381,398,399,400,401,29,30,31,32,33,34,35,36,37,38,39,40,402,403,404,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,405,406,407,301,66,67,302,303,68,358,69,70,382,408,409,383,410,304,305,306,307,308,309,310,311,312,71,72,73,74,75,76,77,78,79,80,81,82,83,411,84,85,86,87,88,89,412,413,414,90,91,92,93,94,95,96,97,98,313,314,315,99,100,415,101,416,417,316,102,103,104,105,418,317,318,319,320,321,322,419,323,106,107,108,420,109,110,111,112,113,114,115,116,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,377,436,437,438,439,440,441,378,442,443,444,379,445,446,447,448,449,450,451,452,453,454,117,359,118,119,360,455,120,121,122,123,124,125,126,127,128,129,130,131,132,456,133,134,135,136,137,457,458,459,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,361,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,460,176,324,325,177,178,179,180,326,327,181,182,461,462,357,463,464,183,184,185,186,187,188,189,190,328,465,191,192,193,194,466,467,468,469,365,366,195,367,368,470,369,370,471,329,330,331,196,332,333,197,334,335,336,337,338,339,340,341,342,198,343,344,345,346,347,199,348,349,200,201,202,203,472,204,205,206,207,208,209,362,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,363,227,228,229,473,230,474,475,231,232,233,234,235,236,237,476,477,478,371,372,238,373,374,479,375,376,480,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,350,481,482,483,351,484,485,271,272,273,274,486,275,276,277,487,278,355,279,352,488,353,280,281,282,489,283,490,354,284,285,356,286,287,288,289,290,291,491,492,292,293,294],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[219],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[74,77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[295,252,253,254],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[23,26,364,92,93,96,97,120,121,128,129,187,258,264,265],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[190,328,493,494,495,496,497,252,489,354],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[0,299,300,66,67,302,306,315,99,100,101,130,138,139,140,141,141,142,142,169,170,172,173,174,175,176,177,178,179,180,190,384,196,197,198,199,252,254,271,272,273,274,276,277,278,385,279,352,280,281,282,283,284,285,386,286,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[498],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[318,322],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[295,252,253,254],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[499],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[203],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[296,297,0,298,299,300,301,66,67,302,303,304,305,306,307,308,309,310,311,312,313,314,315,99,100,101,316,317,318,319,320,321,322,323,130,138,139,140,141,141,142,142,169,170,172,173,174,175,176,324,325,177,178,179,180,326,327,190,328,384,329,330,331,196,332,333,197,334,335,336,337,338,339,340,341,342,198,343,344,345,346,347,199,348,349,252,254,350,351,271,272,273,274,276,277,278,385,279,352,353,280,281,282,283,354,284,285,386,286,287,288,289],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[405],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[324,190,328,252,490,354],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[216,260],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[500,501,502,503,504],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[178,179,505,385,280],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[268],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[295,252,253,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[317,318,319,320,322,323],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[318,322],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[427,491,293,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":203,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":90,"org.easymock.tests2.UsageTest.argumentsOrdered":265,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":431,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":260,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":144,"org.easymock.tests2.DelegateToTest.testReturnException":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":85,"org.easymock.tests.MockingTest.testPartialClassMocking":99,"org.easymock.tests.MockClassControlTest.testToString":307,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":461,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":46,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":197,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":41,"org.easymock.tests2.UsageTest.wrongArguments":258,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":471,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":104,"org.easymock.samples.ExampleTest.answerVsDelegate":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":300,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":417,"org.easymock.tests2.UsageConstraintsTest.testNull":205,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":172,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":248,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":312,"org.easymock.tests2.CaptureTest.testPrimitive":158,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":65,"org.easymock.tests.UsageTest.moreThanOneArgument":91,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":171,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":397,"org.easymock.tests.UsageTest.argumentsOrdered":97,"org.easymock.tests.UsageVarargTest.varargIntAccepted":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":133,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":278,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":482,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":137,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests2.DependencyTest.testClassMocking":474,"org.easymock.tests2.AnswerTest.answer":291,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":437,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":194,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":391,"org.easymock.tests2.CaptureTest.testAnd":155,"org.easymock.tests2.UsageTest.strictResetToDefault":256,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":243,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":399,"org.easymock.tests2.DelegateToTest.testDelegate":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":61,"org.easymock.tests.LimitationsTest.mockFinalMethod":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":40,"org.easymock.tests2.DependencyTest.testClassMockingSupport":475,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":402,"org.easymock.tests2.CaptureTest.testCapture1_2446744":159,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":460,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":192,"org.easymock.tests.UsageThrowableTest.throwError":74,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":379,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":393,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":349,"org.easymock.samples.PartialClassMockTest.testGetArea":138,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":445,"org.easymock.tests.MockingTest.testInterfaceMocking":415,"org.easymock.tests2.CompareToTest.testLessOrEqual":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":134,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":406,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":47,"org.easymock.tests2.UsageTest.niceToStrict":259,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":280,"org.easymock.tests2.MockBuilderTest.testCreateMock":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":345,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":55,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":244,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":390,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":414,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":400,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":102,"org.easymock.tests.UsageOverloadedMethodTest.overloading":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":347,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":119,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":214,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":12,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":71,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":213,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":164,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":420,"org.easymock.tests2.EasyMockSupportClassTest.testAll":196,"org.easymock.tests.MockClassControlTest.testEquals":311,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":63,"org.easymock.tests2.CaptureTest.testCaptureAll":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":193,"org.easymock.tests.MockNameTest.defaultName":454,"org.easymock.tests2.UsageConstraintsTest.testMatches":215,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":125,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests.UsageVarargTest.allKinds":116,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":127,"org.easymock.samples.BasicClassMockTest.testPrintContent":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":39,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":80,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":374,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":497,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":419,"org.easymock.tests2.UsageConstraintsTest.greaterThan":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":358,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":180,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":323,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":234,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":326,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":175,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":130,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":241,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":84,"org.easymock.tests2.CaptureTest.testCaptureFirst":168,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":242,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":267,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":8,"org.easymock.tests2.CaptureTest.testCapture2_2446744":167,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":236,"org.easymock.tests2.UsageTest.moreThanOneArgument":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":285,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":115,"org.easymock.tests.GenericTest.testBridgedEquals":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":34,"org.easymock.tests.UsageExpectAndReturnTest.longType":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":36,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":239,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":386,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":64,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":411,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":222,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":62,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":122,"org.easymock.tests.UsageCallCountTest.tooManyCalls":35,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":346,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":272,"org.easymock.tests.MockingTest.testNiceClassMocking":316,"org.easymock.tests.MockingTest.testClassMocking":314,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":401,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":385,"org.easymock.tests2.UsageConstraintsTest.testContains":212,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":289,"org.easymock.tests2.UsageConstraintsTest.testFind":204,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":73,"org.easymock.tests.MockTypeTest.fromEasyMockClass":392,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":21,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":270,"org.easymock.tests.UsageExpectAndReturnTest.object":11,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":494,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":110,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":383,"org.easymock.tests.UsageTest.exactCallCountByLastCall":98,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":328,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":17,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":118,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":477,"org.easymock.tests.MockClassControlTest.testHashCode":310,"org.easymock.tests2.EasyMockSupportTest.testVerify":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":340,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":413,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":191,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":466,"org.easymock.tests.UsageVarargTest.varargCharAccepted":109,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":418,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":442,"org.easymock.tests2.UsageTest.openCallCountByLastCall":261,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":250,"org.easymock.tests.DefaultClassInstantiatorTest.object":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":412,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":408,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":341,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":476,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":178,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":18,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":199,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":308,"org.easymock.tests2.UsageTest.resumeIfFailure":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":299,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":87,"org.easymock.tests2.StubTest.stubWithReturnValue":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":223,"org.easymock.tests2.SerializationTest.testAllMockedMethod":254,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":436,"org.easymock.samples.SupportTest.voteForRemovals":146,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":58,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":295,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":378,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":491,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":389,"org.easymock.tests.UsageExpectAndThrowTest.object":56,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":220,"org.easymock.tests2.DelegateToTest.testWrongClass":229,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":132,"org.easymock.samples.ConstructorCalledMockTest.testTax":141,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":484,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":57,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":282,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":407,"org.easymock.tests2.CaptureTest.testCaptureNone":163,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":499,"org.easymock.tests.UsageUnorderedTest.message":121,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":114,"org.easymock.tests2.ThreadingTest.testThreadSafe":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":343,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":32,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":410,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":139,"org.easymock.tests2.CaptureTest.testCapture_2617107":157,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":44,"org.easymock.tests2.UsageConstraintsTest.any":210,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":181,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndThrowTest.longType":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":86,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":321,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":238,"org.easymock.tests2.SerializationTest.testClass":252,"org.easymock.tests.LimitationsTest.mockNativeMethod":0,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":20,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":302,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":469,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests2.NameTest.nameForMocksControl":464,"org.easymock.tests2.MockedExceptionTest.testMockedException":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":333,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":50,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":269,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":169,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":283,"org.easymock.tests.MockingTest.testNicePartialClassMocking":100,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":174,"org.easymock.tests2.CompareToTest.testCompareEqual":502,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":467,"org.easymock.tests2.CaptureTest.testCaptureLast":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":403,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":208,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":277,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":221,"org.easymock.tests.MockingTest.testTwoMocks":315,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":487,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":1,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":54,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":264,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":225,"org.easymock.samples.ExampleTest.removeNonExistingDocument":361,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":478,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":319,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":235,"org.easymock.tests2.MockBuilderTest.testCreateMockString":286,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":305,"org.easymock.tests.UsageExpectAndThrowTest.floatType":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":334,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":292,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":465,"org.easymock.tests.UsageVerifyTest.twoThrows":128,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":198,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":405,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":179,"org.easymock.tests.LimitationsTest.privateConstructor":297,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":498,"org.easymock.tests2.UsageConstraintsTest.testNotNull":224,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":81,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":287,"org.easymock.tests2.UsageTest.defaultResetToNice":263,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":16,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":468,"org.easymock.tests.UsageVarargTest.differentLength":111,"org.easymock.tests2.CallbackTest.callback":154,"org.easymock.tests2.UsageConstraintsTest.equals":472,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":324,"org.easymock.tests.UsageTest.openCallCountByLastCall":94,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":43,"org.easymock.tests.UsageCallCountTest.tooFewCalls":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":105,"org.easymock.tests.UsageThrowableTest.throwCheckedException":78,"org.easymock.tests.MockingTest.testStrictClassMocking":313,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":275,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":294,"org.easymock.tests2.CompareToTest.testGreateOrEqual":503,"org.easymock.tests.ObjectMethodsTest.testHashCode":409,"org.easymock.tests2.NameTest.nameForNiceMock":463,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":237,"org.easymock.tests2.DependencyTest.testInterfaceMocking":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":495,"org.easymock.samples.ExampleTest.addDocument":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":344,"org.easymock.tests2.DelegateToTest.testStubDelegate":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.AnswerTest.stubAnswer":293,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":490,"org.easymock.tests.UsageVarargTest.varargLongAccepted":113,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.floatType":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":190,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":142,"org.easymock.tests.UsageThrowableTest.noUpperLimit":75,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":218,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":201,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":350,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":160,"org.easymock.tests2.SerializationTest.test":253,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":2,"org.easymock.tests2.UsageConstraintsTest.testSame":206,"org.easymock.samples.SupportTest.addDocument":145,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":486,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":335,"org.easymock.tests.GenericTest.testPackageScope":66,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":479,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":416,"org.easymock.tests2.NameTest.nameForMock":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":13,"org.easymock.tests2.UsageStrictMockTest.differentMethods":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":356,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":5,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":60,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":70,"org.easymock.tests2.MockedExceptionTest.testRealException":290,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":434,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":185,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":42,"org.easymock.tests2.NameTest.nameForStrictMock":357,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":353,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":268,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":173,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":351,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":219,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":320,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":279,"org.easymock.tests2.UsageStrictMockTest.range":187,"org.easymock.tests2.UsageConstraintsTest.lessThan":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":372,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":505,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":240,"org.easymock.tests2.CaptureTest.testCaptureRightOne":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":339,"org.easymock.tests2.UsageConstraintsTest.testOr":207,"org.easymock.tests.UsageRangeTest.combination":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":170,"org.easymock.tests.UsageTest.wrongArguments":93,"org.easymock.tests2.MockBuilderTest.testWithConstructor":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":336,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":14,"org.easymock.tests.UsageVarargTest.varargShortAccepted":112,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":322,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":33,"org.easymock.tests2.UsageConstraintsTest.cmpTo":211,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":492,"org.easymock.tests2.CompareToTest.testLessThan":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":262,"org.easymock.tests2.CaptureTest.testCaptureFromStub":166,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":444,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":352,"org.easymock.tests.UsageTest.unexpectedCallWithArray":92,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":31,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":15,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":25,"org.easymock.tests2.UsageConstraintsTest.constraints":202,"org.easymock.samples.ExampleTest.addAndChangeDocument":153,"org.easymock.tests.UsageStrictMockTest.testVerify":396,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":143,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":22,"org.easymock.tests2.CompareToTest.testGreateThan":501,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":37,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":161,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":135,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":7,"org.easymock.tests.LimitationsTest.abstractClass":296,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":136,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":245}}]
