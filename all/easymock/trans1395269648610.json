[{"position":"org.easymock.ConstructorArgs:60","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[11,0,5,12,13,14,15,16,17],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[20,21,22,23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[25,26,27,28,29,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[31,32,33,34,35,36,37,38,39,40,41],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[31,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,29,73,74,75,76,77,78,79,80,81,82,83,84,30,85,86,87],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[88,89,90,91],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[51,54,55,65,92,70,29,73,74,75,77,79,80,30,86],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[93,25,94,95,96,97,98,99,65,66,100,101,102,92,103,104,28,105,70,106,77,107,79,80,108,86,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[25,26,27,28,29,30],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[17,109,110,111],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[112,113,114],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[115,98,51,54,55,116,117,99,65,66,118,119,103,104,106,29,73,74,75,77,120,121,122,107,79,80,30,108,86,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[17,109,110,111],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[93,25,94,95,96,26,97,98,99,65,66,103,104,27,28,105,70,106,29,77,107,79,80,30,108,86,87],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[17,109,110,111],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[123,124,124,125,125,126,20,127,128,129,130,131,11,132,133,134,135,31,32,136,33,137,34,35,89,36,138,139,140,141,90,18,42,142,143,37,144,145,146,147,38,148,91,149,150,151,152,153,43,154,155,156,157,44,45,46,39,158,40,159,160,161,162,163,164,165,41,166,167,168,169,47,170,171,172,173,174,175,176,48,177,49,178,179,180,181,182,183,184,185,186,115,50,187,98,51,52,53,188,189,190,54,55,56,57,191,192,58,116,193,21,194,22,195,23,196,197,198,199,8,200,201,202,9,203,59,204,205,206,60,61,207,208,62,209,210,211,212,213,214,215,216,217,218,219,220,63,99,64,65,66,221,17,109,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,100,24,275,101,102,92,103,104,276,71,277,278,279,72,106,29,73,280,281,74,75,76,282,283,284,285,286,19,287,288,289,290,291,77,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,107,79,80,335,336,337,84,30,108,85,86,87,338,339,340,341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[34,138,158,163,164,168,99,77,295,296,314,315,316,317,318,323,324,325,326,327,333,336,337,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[342,343,344],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[345,134,31,142,147],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[25,26,27,28,29,30],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[346],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[132,133,134,135,31,32,136,33,137,34,35,89,36,138,139,140,141,90,18,42,142,143,37,144,145,146,147,38,148,91,149,39,158,40,159,160,161,162,163,164,165,41,166,167,168,175,176,181,347,116,99,64,77,292,295,296,297,312,348,314,315,316,317,318,323,324,325,326,327,333,334,336,337,30,108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[183,184,185,186,296,316,329,330,331,332,333,334],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[349,350,351,352,112,353,113,114,354],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[123,124,124,125,125,355,356,11,0,153,43,357,358,154,155,156,157,12,44,45,46,169,47,171,172,173,174,175,359,360,176,48,177,49,361,362,183,184,185,363,364,365,366,367,368,198,199,8,200,202,9,369,370,371,211,372,373,212,374,375,376,377,378,379,380,381,382,213,383,384,385,386,387,214,388,389,17,110,390,391,265,266,267,268,392,393,394,282,349,350,351,352,112,353,354,395,305,396,306,397,348,398,399,400,401,402,403,404,405,406,313,407],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[11,0,5,12,13,14,15,408,16,17],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[123,124,124,125,125,126,20,127,128,409,129,130,410,355,356,411,412,131,11,413,414,415,416,132,133,134,135,31,32,136,33,137,34,35,89,36,138,139,140,141,90,18,42,142,143,37,144,145,146,147,38,148,91,43,154,156,157,45,39,158,40,159,160,161,162,163,164,165,41,166,167,168,169,47,170,171,172,173,175,48,177,49,178,179,180,181,182,183,184,185,186,115,50,187,98,51,52,53,188,189,190,54,55,56,57,191,192,58,116,193,21,194,22,195,23,196,197,198,199,8,200,201,202,9,203,59,204,205,206,60,61,207,208,62,209,210,417,211,212,213,214,215,216,217,218,219,220,63,418,99,64,65,66,221,17,109,110,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,100,24,275,101,102,103,104,276,71,277,278,279,72,106,73,280,281,74,75,76,282,283,284,285,286,19,77,292,293,294,295,296,297,298,299,300,301,302,303,304,305,396,306,307,308,309,310,311,419,420,421,422,423,78,424,425,426,427,312,313,314,315,316,317,318,323,324,325,326,327,328,329,330,331,332,333,334,107,79,80,428,335,429,430,431,82,83,336,337,84,432,30,108,85,86,87,338,433,339,340,341],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[434],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[435,436,437,88,345],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[123,124,124,125,125,355,356,11,153,438,43,357,154,155,156,157,44,45,439,46,169,47,171,172,173,174,175,176,48,177,49,185,198,199,8,200,202,9,440,441,442,211,212,213,214,17,110,265,266,267,268,393,394,282,305,396,306,398,313],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[11,0,5,12,13,14,15,408,16,17],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[345,134,142,147],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[443],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":32,"org.easymock.tests2.UsageTest.argumentsOrdered":55,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":209,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":53,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":410,"org.easymock.tests2.DelegateToTest.testReturnException":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":330,"org.easymock.tests.MockingTest.testPartialClassMocking":266,"org.easymock.tests.MockClassControlTest.testToString":399,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":328,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":222,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":13,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":89,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":321,"org.easymock.samples.ExampleTest.answerVsDelegate":20,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":394,"org.easymock.tests2.UsageConstraintsTest.testNull":33,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":171,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":62,"org.easymock.tests2.CaptureTest.testPrimitive":159,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":318,"org.easymock.tests.UsageTest.moreThanOneArgument":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":241,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":271,"org.easymock.tests.UsageTest.argumentsOrdered":75,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":283,"org.easymock.tests.UsageVarargTest.varargIntAccepted":421,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":323,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":153,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":367,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":327,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":116,"org.easymock.tests2.DependencyTest.testClassMocking":363,"org.easymock.tests2.AnswerTest.answer":215,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":152,"org.easymock.tests2.CaptureTest.testAnd":39,"org.easymock.tests2.UsageTest.strictResetToDefault":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":206,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":278,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":19,"org.easymock.tests2.DelegateToTest.testDelegate":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":237,"org.easymock.tests.LimitationsTest.mockFinalMethod":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":333,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":291,"org.easymock.tests2.DependencyTest.testClassMockingSupport":364,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":103,"org.easymock.tests2.CaptureTest.testCapture1_2446744":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":150,"org.easymock.tests.UsageThrowableTest.throwError":297,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":273,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":434,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":389,"org.easymock.samples.PartialClassMockTest.testGetArea":123,"org.easymock.tests2.CompareToTest.testLessOrEqual":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":324,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":340,"org.easymock.tests2.UsageTest.niceToStrict":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":378,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":344,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":154,"org.easymock.tests2.MockBuilderTest.testCreateMock":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":385,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":231,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":60,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":428,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageOverloadedMethodTest.overloading":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":90,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":256,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":307,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":141,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":113,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":165,"org.easymock.tests.MockClassControlTest.testEquals":403,"org.easymock.tests2.EasyMockSupportClassTest.testAll":211,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":396,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":239,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":440,"org.easymock.tests2.CaptureTest.testCaptureAll":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":289,"org.easymock.tests.MockNameTest.defaultName":120,"org.easymock.tests2.UsageConstraintsTest.testMatches":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":272,"org.easymock.samples.ExampleTest.voteForRemovals":129,"org.easymock.tests.UsageVarargTest.allKinds":312,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":290,"org.easymock.samples.BasicClassMockTest.testPrintContent":356,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":303,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":63,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":334,"org.easymock.tests2.UsageConstraintsTest.greaterThan":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":277,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":49,"org.easymock.samples.ExampleTest.voteForRemoval":127,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":354,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":179,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":174,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":50,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":282,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":204,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":329,"org.easymock.tests2.CaptureTest.testCaptureFirst":168,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":205,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":57,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":252,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":181,"org.easymock.tests2.CaptureTest.testCapture2_2446744":167,"org.easymock.tests2.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":427,"org.easymock.tests.GenericTest.testBridgedEquals":397,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":82,"org.easymock.tests.UsageExpectAndReturnTest.longType":248,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":287,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":439,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":240,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":146,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":269,"org.easymock.tests.UsageCallCountTest.tooManyCalls":83,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":227,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":302,"org.easymock.tests.MockingTest.testNiceClassMocking":392,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":199,"org.easymock.tests.MockingTest.testClassMocking":391,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":438,"org.easymock.tests2.UsageConstraintsTest.testContains":140,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":185,"org.easymock.tests2.UsageConstraintsTest.testFind":136,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":309,"org.easymock.tests.MockTypeTest.fromEasyMockClass":118,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":133,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":84,"org.easymock.tests.UsageExpectAndReturnTest.object":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":208,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":14,"org.easymock.tests.UsageTest.exactCallCountByLastCall":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":295,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":419,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":24,"org.easymock.tests.MockClassControlTest.testHashCode":402,"org.easymock.tests2.EasyMockSupportTest.testVerify":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":380,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":285,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":274,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":149,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":69,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":347,"org.easymock.tests.UsageVarargTest.varargCharAccepted":422,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":418,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":342,"org.easymock.tests.DefaultClassInstantiatorTest.object":349,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":292,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":121,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":381,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":300,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":401,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":48,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":228,"org.easymock.tests.CapturesMatcherTest.test":443,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":242,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":400,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":214,"org.easymock.tests2.UsageTest.resumeIfFailure":56,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":332,"org.easymock.tests2.StubTest.stubWithReturnValue":197,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":254,"org.easymock.tests2.SerializationTest.testAllMockedMethod":110,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":310,"org.easymock.samples.SupportTest.voteForRemovals":131,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":26,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":234,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":111,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":311,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":216,"org.easymock.tests.UsageExpectAndThrowTest.object":232,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":144,"org.easymock.tests2.DelegateToTest.testWrongClass":22,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":336,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":337,"org.easymock.samples.ConstructorCalledMockTest.testTax":124,"org.easymock.tests.UsageStrictMockTest.range":86,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":117,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":233,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":156,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":27,"org.easymock.tests2.CaptureTest.testCaptureNone":164,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":341,"org.easymock.tests.UsageUnorderedTest.message":77,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":67,"org.easymock.tests.UsageVerifyTest.twoReturns":80,"org.easymock.tests.UsageVarargTest.varargByteAccepted":426,"org.easymock.tests2.ThreadingTest.testThreadSafe":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":383,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":431,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":122,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":355,"org.easymock.tests2.CaptureTest.testCapture_2617107":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":317,"org.easymock.tests2.UsageConstraintsTest.any":138,"org.easymock.tests2.StubTest.stub":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":244,"org.easymock.tests.UsageExpectAndThrowTest.longType":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":331,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":112,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":64,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":313,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":264,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":306,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":442,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":221,"org.easymock.tests2.NameTest.nameForMocksControl":416,"org.easymock.tests2.MockedExceptionTest.testMockedException":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":373,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":226,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":268,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":169,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":157,"org.easymock.tests.MockingTest.testNicePartialClassMocking":267,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":173,"org.easymock.tests2.CompareToTest.testCompareEqual":437,"org.easymock.tests2.CaptureTest.testCaptureLast":163,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":104,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":9,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":145,"org.easymock.tests.MockingTest.testTwoMocks":265,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":230,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":54,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":148,"org.easymock.tests.UsageStrictMockTest.differentMethods":87,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":351,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":180,"org.easymock.tests2.ConstraintsToStringTest.andToString":96,"org.easymock.tests2.MockBuilderTest.testCreateMockString":46,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":348,"org.easymock.tests.UsageExpectAndThrowTest.floatType":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":374,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":218,"org.easymock.tests.UsageVerifyTest.twoThrows":79,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":213,"org.easymock.samples.ExampleTest.voteAgainstRemoval":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":339,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":177,"org.easymock.tests.LimitationsTest.privateConstructor":406,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":2,"org.easymock.tests2.UsageConstraintsTest.testNotNull":38,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":304,"org.easymock.tests2.UsageTest.defaultResetToNice":190,"org.easymock.samples.ExampleTest.voteAgainstRemovals":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":260,"org.easymock.tests.UsageVarargTest.differentLength":78,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":359,"org.easymock.tests.UsageTest.openCallCountByLastCall":280,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":134,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":346,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":316,"org.easymock.tests.UsageCallCountTest.tooFewCalls":429,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":322,"org.easymock.tests.UsageThrowableTest.throwCheckedException":301,"org.easymock.tests.MockingTest.testStrictClassMocking":390,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":28,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":202,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":296,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":220,"org.easymock.tests2.CompareToTest.testGreateOrEqual":88,"org.easymock.tests2.NameTest.nameForNiceMock":415,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":182,"org.easymock.tests2.DependencyTest.testInterfaceMocking":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":15,"org.easymock.samples.ExampleTest.addDocument":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":388,"org.easymock.tests2.DelegateToTest.testStubDelegate":194,"org.easymock.tests2.AnswerTest.stubAnswer":219,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":108,"org.easymock.tests.UsageVarargTest.varargLongAccepted":425,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests.UsageExpectAndReturnTest.floatType":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":125,"org.easymock.tests2.ConstraintsToStringTest.orToString":93,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":143,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":101,"org.easymock.tests.UsageThrowableTest.noUpperLimit":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":365,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":161,"org.easymock.tests2.SerializationTest.test":109,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":114,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":350,"org.easymock.tests2.UsageConstraintsTest.testSame":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":246,"org.easymock.samples.SupportTest.addDocument":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":375,"org.easymock.tests.GenericTest.testPackageScope":305,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":286,"org.easymock.tests2.NameTest.nameForMock":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":257,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":7,"org.easymock.tests2.UsageStrictMockTest.differentMethods":66,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":279,"org.easymock.tests2.MockedExceptionTest.testRealException":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":119,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":105,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":315,"org.easymock.tests2.NameTest.nameForStrictMock":414,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":358,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":132,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":368,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":37,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":352,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":43,"org.easymock.tests2.UsageStrictMockTest.range":65,"org.easymock.tests2.UsageConstraintsTest.lessThan":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":59,"org.easymock.tests2.CaptureTest.testCaptureRightOne":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":379,"org.easymock.tests2.UsageConstraintsTest.testOr":34,"org.easymock.tests.UsageRangeTest.combination":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":47,"org.easymock.tests.UsageTest.wrongArguments":73,"org.easymock.tests2.MockBuilderTest.testWithConstructor":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":376,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":258,"org.easymock.tests.UsageVarargTest.varargShortAccepted":424,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":353,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":81,"org.easymock.tests2.UsageConstraintsTest.cmpTo":139,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":217,"org.easymock.tests2.CompareToTest.testLessThan":435,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":166,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":357,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":430,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":259,"org.easymock.tests2.UsageConstraintsTest.constraints":31,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.samples.ExampleTest.addAndChangeDocument":130,"org.easymock.tests2.ConstraintsToStringTest.notToString":94,"org.easymock.tests.UsageStrictMockTest.testVerify":433,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":411,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":432,"org.easymock.tests2.CompareToTest.testGreateThan":436,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":288,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":162,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":325,"org.easymock.tests.LimitationsTest.abstractClass":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":251,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":326,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":61}}]
