[{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[16,17,18,19,20,21,2,4,12],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,17,150,18,19,151,152,153,154,155,156,157,2,3,9,10,12,15,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,0,184,185,186,187,188,189,190,191],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[192],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[193,194,195,196,42,52,90,91,92,134,136,137,171,187,189,190],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[197,198],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[199,27,28,30,31,33,200,201,48,49,50,51,52,53,54,55,56,202,57,59,60,61,62,63,64,203,204,205,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,206,207,208,209,103,104,107,210,128,129,211,134,136,137,139,140,141,142,143,144,145,212,146,147,148,149,213,214,215,16,17,216,150,217,18,19,218,219,220,221,222,223,224,225,226,227,21,228,229,230,231,151,232,233,152,153,154,155,234,156,157,2,3,4,5,6,9,10,11,12,14,15,158,159,160,161,163,235,166,167,168,236,169,170,171,172,174,175,237,176,177,197,178,180,238,181,239,240,182,241,242,243,183,244,245,246,247,248,249,250,251,184,187,189,190,252,253,254,255],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[51,54,59,91,169,175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[236,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[257],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:324","failures":[61,62,91],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[260,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:326","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","actualTypeArgument":"actualTypeArgument","variable":"variable","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[261,262,192],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[180,263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[160,161,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[16,4,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[150,20,21,151],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[265,266,160,267,268,269,270,271,272,197,198,247,251,273,274,275,276,277,278,252,279,280,253,281,282,283,284,285,286,287,288,289,254,290,291,292,293,294,255,295,296],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[297],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[132,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[299,183,256],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":17,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":39,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":173,"org.easymock.tests2.StubTest.stubWithReturnValue":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":231,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":74,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":24,"org.easymock.tests2.SerializationTest.testAllMockedMethod":264,"org.easymock.tests2.DelegateToTest.testReturnException":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":37,"org.easymock.tests.MockingTest.testPartialClassMocking":203,"org.easymock.samples.SupportTest.voteForRemovals":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":284,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":108,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":258,"org.easymock.tests.UsageExpectAndThrowTest.object":118,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":193,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":228,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":159,"org.easymock.tests2.DelegateToTest.testWrongClass":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":129,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":103,"org.easymock.samples.ConstructorCalledMockTest.testTax":265,"org.easymock.tests.UsageStrictMockTest.range":136,"org.easymock.samples.ExampleTest.answerVsDelegate":29,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":245,"org.easymock.tests2.UsageConstraintsTest.testNull":150,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":119,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":167,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":276,"org.easymock.tests.UsageTest.moreThanOneArgument":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":127,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":45,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests.UsageUnorderedTest.message":42,"org.easymock.tests.UsageVerifyTest.twoReturns":92,"org.easymock.tests.UsageVarargTest.varargByteAccepted":100,"org.easymock.tests2.ThreadingTest.testThreadSafe":153,"org.easymock.tests.UsageVarargTest.varargIntAccepted":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":290,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":85,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":106,"org.easymock.tests2.UsageConstraintsTest.any":219,"org.easymock.tests2.StubTest.stub":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":38,"org.easymock.tests.UsageExpectAndThrowTest.longType":111,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":152,"org.easymock.tests2.SerializationTest.testClass":160,"org.easymock.tests.LimitationsTest.mockNativeMethod":201,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":84,"org.easymock.tests2.AnswerTest.answer":178,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":20,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":170,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":268,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":280,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":143,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests2.DelegateToTest.testDelegate":165,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":112,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":168,"org.easymock.tests.MockingTest.testNicePartialClassMocking":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":123,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":261,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":40,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":251,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":19,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":229,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":210,"org.easymock.tests2.CaptureTest.testCapture1_2446744":6,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":273,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":116,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":232,"org.easymock.tests.UsageThrowableTest.throwError":57,"org.easymock.tests.UsageStrictMockTest.differentMethods":137,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":155,"org.easymock.tests2.MockBuilderTest.testCreateMockString":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":47,"org.easymock.tests.UsageExpectAndThrowTest.floatType":110,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":278,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":179,"org.easymock.tests.UsageVerifyTest.twoThrows":91,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":254,"org.easymock.samples.PartialClassMockTest.testGetArea":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":86,"org.easymock.samples.ExampleTest.voteAgainstRemoval":31,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":109,"org.easymock.tests2.UsageTest.niceToStrict":172,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":275,"org.easymock.tests2.UsageConstraintsTest.testNotNull":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":64,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":166,"org.easymock.tests2.UsageTest.defaultResetToNice":237,"org.easymock.samples.ExampleTest.voteAgainstRemovals":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":292,"org.easymock.tests2.CallbackTest.callback":185,"org.easymock.tests.UsageTest.openCallCountByLastCall":53,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":117,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":105,"org.easymock.tests.UsageOverloadedMethodTest.overloading":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":289,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":223,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":76,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":48,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":222,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":11,"org.easymock.tests.UsageThrowableTest.throwCheckedException":61,"org.easymock.tests2.EasyMockSupportClassTest.testAll":252,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":35,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":125,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":202,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":247,"org.easymock.tests2.UsageConstraintsTest.testMatches":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":249,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":46,"org.easymock.samples.ExampleTest.voteForRemovals":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":262,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":156,"org.easymock.tests.UsageVarargTest.allKinds":102,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":90,"org.easymock.tests2.DependencyTest.testInterfaceMocking":158,"org.easymock.samples.BasicClassMockTest.testPrintContent":23,"org.easymock.samples.ExampleTest.addDocument":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":295,"org.easymock.tests2.DelegateToTest.testStubDelegate":163,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":63,"org.easymock.tests2.AnswerTest.stubAnswer":180,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":41,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":134,"org.easymock.tests2.UsageConstraintsTest.greaterThan":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":279,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":207,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":244,"org.easymock.tests.UsageVarargTest.varargLongAccepted":99,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.samples.ExampleTest.voteForRemoval":30,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":83,"org.easymock.tests.UsageExpectAndReturnTest.floatType":67,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":259,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":197,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":266,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":227,"org.easymock.tests.UsageThrowableTest.noUpperLimit":58,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":215,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":169,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":7,"org.easymock.tests2.SerializationTest.test":161,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":141,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":59,"org.easymock.tests2.UsageConstraintsTest.testSame":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":277,"org.easymock.samples.SupportTest.addDocument":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":36,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":260,"org.easymock.tests2.CaptureTest.testCaptureFirst":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":142,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":177,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":282,"org.easymock.tests.GenericTest.testPackageScope":200,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":234,"org.easymock.tests2.CaptureTest.testCapture2_2446744":14,"org.easymock.tests2.UsageTest.moreThanOneArgument":171,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":236,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":101,"org.easymock.tests.UsageExpectAndReturnTest.longType":68,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":126,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":272,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":124,"org.easymock.tests2.UsageStrictMockTest.differentMethods":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":209,"org.easymock.tests2.MockedExceptionTest.testRealException":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":113,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":246,"org.easymock.tests2.UsageConstraintsTest.testContains":221,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":213,"org.easymock.tests2.UsageConstraintsTest.testFind":216,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":50,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":182,"org.easymock.tests.UsageExpectAndReturnTest.object":75,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":194,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":242,"org.easymock.tests.ErrorMessageTest.testGetters":195,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":235,"org.easymock.tests2.UsageStrictMockTest.range":189,"org.easymock.tests2.UsageConstraintsTest.lessThan":233,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":146,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":97,"org.easymock.tests.UsageTest.exactCallCountByLastCall":55,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":56,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":286,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.UsageConstraintsTest.testOr":18,"org.easymock.tests.UsageRangeTest.combination":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":198,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":181,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":131,"org.easymock.tests2.MockBuilderTest.testWithConstructor":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":287,"org.easymock.tests.UsageVarargTest.varargShortAccepted":98,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":130,"org.easymock.tests2.UsageConstraintsTest.cmpTo":220,"org.easymock.tests.UsageVarargTest.varargCharAccepted":96,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":186,"org.easymock.tests2.UsageTest.openCallCountByLastCall":174,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":175,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":149,"org.easymock.tests2.CaptureTest.testCaptureFromStub":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":60,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":79,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":243,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":135,"org.easymock.samples.ExampleTest.addAndChangeDocument":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":114,"org.easymock.tests.CapturesMatcherTest.test":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":82,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":255,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":133,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":8,"org.easymock.tests2.UsageTest.resumeIfFailure":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":87,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":71,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":88,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":196,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":145}}]
