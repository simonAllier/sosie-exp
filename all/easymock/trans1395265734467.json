[{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,2,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[32,33,34,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[36,37,38,39,40,41,42,43,44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[45,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,7,61,62,63,0,8,64,9,10,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,12,94,15,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,18,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,20,21,22,157,158,159,160,161,162,163,164,165,166,167,168,169,170,23,171,24,25,172,173,174,175,176,177,178,179,180,26,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,40,201,202,41,42,43,44,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,46,238,239,240,241,242,243,244,245,6,246,247,248,249,250,251,252,33,34,35,253],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[254,241,247,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[47,58,255,256,257,258,123,124,125,126,127,128,174,190,191,192,193],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,259,15,3,95,98,99,26,181,186,187,4,260,5,261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[214,216,224,230,231,233,235,236,262,6,250],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[263,264,211],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[45,47,56,57,58,59,60,7,0,8,102,103,104,105,106,119,127,129,130,23,197,44,208,209,214,215,216,217,218,219,220,221,222,223,224,225,226,227,265,228,229,230,231,232,233,234,235,236,237,262,46,238,239,240,241,242,243,244,245,6,246,247,248,249,250,251,252],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[266,267,206,207],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[104,268,162,164,165,167,269],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[270,271,272,273,274,275,276,277],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[54,55,278,62,101,279,120,121,122,280,281,282,283,283,284,284,285,286,287,288,289,38,175,176,39,177,178,192,199,290,291,292,293,200,294,295,296,297,298,299,300,301,302,303,304,40,201,41,42,43,305,44,306,307,203,308,33,35],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[45,56,57,59,60,7,62,309,0,8,64,9,10,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,15,95,96,97,98,99,100,102,103,104,105,106,18,120,121,122,310,311,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,20,21,22,162,163,164,165,167,285,269,312,169,313,314,23,171,24,25,172,174,38,175,176,39,315,177,178,179,180,26,181,182,183,184,185,186,187,189,192,194,196,197,198,199,200,295,296,298,302,303,304,40,202,41,43,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,224,316,317,318,319,320,321,322,323,324,228,229,230,231,232,233,234,235,236,237,46,238,239,240,241,242,243,244,245,6,246,247,249,250,251,252,33,34,253],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[325,326,327],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[119,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[231,236,6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[326,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[329],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":231,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":94,"org.easymock.tests2.UsageTest.argumentsOrdered":187,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":263,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":183,"org.easymock.tests2.StubTest.stubWithReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":249,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":83,"org.easymock.tests2.SerializationTest.testAllMockedMethod":35,"org.easymock.tests2.DelegateToTest.testReturnException":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":124,"org.easymock.tests.MockingTest.testPartialClassMocking":120,"org.easymock.samples.SupportTest.voteForRemovals":269,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":146,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":32,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":134,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":267,"org.easymock.tests.UsageExpectAndThrowTest.object":144,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":313,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":246,"org.easymock.tests2.DelegateToTest.testWrongClass":212,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":129,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":130,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":56,"org.easymock.tests2.UsageTest.wrongArguments":181,"org.easymock.samples.ConstructorCalledMockTest.testTax":283,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.samples.ExampleTest.answerVsDelegate":163,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":38,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":273,"org.easymock.tests2.UsageConstraintsTest.testNull":233,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":295,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":37,"org.easymock.tests2.CaptureTest.testPrimitive":217,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":60,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":153,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":202,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":159,"org.easymock.tests2.CaptureTest.testCaptureNone":222,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.UsageVerifyTest.twoReturns":22,"org.easymock.tests.UsageVarargTest.varargByteAccepted":117,"org.easymock.tests2.ThreadingTest.testThreadSafe":194,"org.easymock.tests.UsageTest.argumentsOrdered":99,"org.easymock.tests.UsageVarargTest.varargIntAccepted":112,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":51,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":286,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":31,"org.easymock.tests2.CaptureTest.testCapture_2617107":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":102,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":261,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":59,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":294,"org.easymock.tests2.UsageConstraintsTest.any":46,"org.easymock.tests2.StubTest.stub":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":125,"org.easymock.tests.UsageExpectAndThrowTest.longType":137,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":312,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":324,"org.easymock.tests.LimitationsTest.mockNativeMethod":62,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":278,"org.easymock.tests2.AnswerTest.answer":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":93,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":262,"org.easymock.tests2.CaptureTest.testAnd":214,"org.easymock.tests2.UsageTest.strictResetToDefault":180,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":306,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.tests2.MockedExceptionTest.testMockedException":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":319,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":155,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests2.DelegateToTest.testDelegate":213,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":138,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":296,"org.easymock.tests.MockingTest.testNicePartialClassMocking":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":149,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":43,"org.easymock.tests2.CaptureTest.testCaptureLast":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":127,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":12,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":236,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":178,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":247,"org.easymock.tests.MockingTest.testTwoMocks":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":11,"org.easymock.tests2.CaptureTest.testCapture1_2446744":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":142,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":186,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":251,"org.easymock.tests.UsageThrowableTest.throwError":66,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":61,"org.easymock.tests.UsageStrictMockTest.differentMethods":10,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":196,"org.easymock.tests2.ConstraintsToStringTest.andToString":30,"org.easymock.tests2.MockBuilderTest.testCreateMockString":300,"org.easymock.tests.UsageExpectAndThrowTest.floatType":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":161,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":243,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":205,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":303,"org.easymock.samples.PartialClassMockTest.testGetArea":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":103,"org.easymock.samples.ExampleTest.voteAgainstRemoval":165,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":135,"org.easymock.tests2.UsageTest.niceToStrict":182,"org.easymock.tests2.UsageConstraintsTest.testNotNull":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":73,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":190,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":277,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":200,"org.easymock.tests2.MockBuilderTest.testCreateMock":297,"org.easymock.samples.ExampleTest.voteAgainstRemovals":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":89,"org.easymock.tests2.CallbackTest.callback":253,"org.easymock.tests2.UsageConstraintsTest.equals":328,"org.easymock.tests.UsageTest.openCallCountByLastCall":96,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":143,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":320,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":58,"org.easymock.tests.UsageCallCountTest.tooFewCalls":49,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":274,"org.easymock.tests.UsageOverloadedMethodTest.overloading":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":241,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":109,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":85,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":39,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":131,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":240,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":223,"org.easymock.tests.UsageThrowableTest.throwCheckedException":70,"org.easymock.tests2.EasyMockSupportClassTest.testAll":301,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":55,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":260,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":151,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":288,"org.easymock.tests2.CaptureTest.testCaptureAll":215,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":177,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":176,"org.easymock.tests2.UsageConstraintsTest.testMatches":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":315,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":160,"org.easymock.samples.ExampleTest.voteForRemovals":167,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":198,"org.easymock.tests.UsageVarargTest.allKinds":119,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":20,"org.easymock.tests2.DependencyTest.testInterfaceMocking":169,"org.easymock.samples.BasicClassMockTest.testPrintContent":287,"org.easymock.samples.ExampleTest.addDocument":166,"org.easymock.tests2.DelegateToTest.testStubDelegate":211,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":72,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":314,"org.easymock.tests2.AnswerTest.stubAnswer":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":128,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests2.UsageConstraintsTest.greaterThan":244,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":308,"org.easymock.tests.UsageVarargTest.varargLongAccepted":116,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":65,"org.easymock.samples.ExampleTest.voteForRemoval":164,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":92,"org.easymock.tests.UsageExpectAndReturnTest.floatType":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":199,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":284,"org.easymock.tests2.ConstraintsToStringTest.orToString":27,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":245,"org.easymock.tests.UsageThrowableTest.noUpperLimit":67,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":17,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":229,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":101,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":179,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":219,"org.easymock.tests2.SerializationTest.test":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":255,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":317,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":68,"org.easymock.tests2.UsageConstraintsTest.testSame":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":123,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":264,"org.easymock.tests2.CaptureTest.testCaptureFirst":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":318,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":19,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":81,"org.easymock.tests.GenericTest.testPackageScope":54,"org.easymock.tests2.CaptureTest.testCapture2_2446744":226,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":197,"org.easymock.tests2.UsageTest.moreThanOneArgument":26,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":298,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":118,"org.easymock.tests.GenericTest.testBridgedEquals":36,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":275,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":52,"org.easymock.tests.UsageExpectAndReturnTest.longType":77,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":152,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":248,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":78,"org.easymock.tests.UsageCallCountTest.tooManyCalls":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":156,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":48,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":82,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":13,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":175,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":291,"org.easymock.tests2.UsageConstraintsTest.testContains":239,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":192,"org.easymock.tests2.UsageConstraintsTest.testFind":232,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":133,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":271,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":42,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":209,"org.easymock.tests.UsageExpectAndReturnTest.object":84,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":44,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":292,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":321,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":114,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":276,"org.easymock.tests.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":45,"org.easymock.tests2.CaptureTest.testCaptureRightOne":224,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":310,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":259,"org.easymock.tests2.UsageConstraintsTest.testOr":235,"org.easymock.tests.UsageRangeTest.combination":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":201,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":90,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":110,"org.easymock.tests.UsageTest.wrongArguments":95,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":108,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":87,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":311,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":327,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":107,"org.easymock.tests.UsageVarargTest.varargShortAccepted":115,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":265,"org.easymock.tests2.UsageConstraintsTest.cmpTo":238,"org.easymock.tests.UsageVarargTest.varargCharAccepted":113,"org.easymock.tests2.CompareToTest.testLessThan":254,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests2.UsageTest.openCallCountByLastCall":184,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":185,"org.easymock.tests.DefaultClassInstantiatorTest.object":325,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":270,"org.easymock.tests2.CaptureTest.testCaptureFromStub":225,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":293,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":69,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":307,"org.easymock.tests2.UsageConstraintsTest.constraints":230,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":140,"org.easymock.samples.ExampleTest.addAndChangeDocument":168,"org.easymock.tests2.ConstraintsToStringTest.notToString":28,"org.easymock.tests.CapturesMatcherTest.test":329,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":91,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":304,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":63,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":29,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":220,"org.easymock.tests2.UsageTest.resumeIfFailure":188,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":289,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":80,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":105,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":111}}]
