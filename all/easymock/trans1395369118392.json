[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[9,10,11,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[7,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[14,15],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,14,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,208,209,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,8,281,282,15,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,7,325,9,326,13,327,328,10,329,330,331,332,333,334,335,336,337,11,338,339,340,341,12,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[253],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[365],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[3,366,367],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[327],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:87","sourceCode":"return java.util.List<org.easymock.internal.Injection>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[368,369,370,371,372,373,17,374,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,72,73,74,75,76,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,375,376,131,132,377,133,378,379,380,134,135,136,137,138,139,140,141,142,14,143,144,145,146,147,148,149,150,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,205,210,211,212,213,214,215,216,217,223,224,225,226,227,228,229,230,231,232,233,234,235,381,382,383,384,385,236,237,386,387,238,239,242,243,244,246,247,250,251,252,253,254,255,256,257,258,259,388,260,261,262,263,389,270,271,272,273,274,277,278,279,280,8,281,282,15,283,284,285,286,287,288,302,303,304,305,306,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,7,325,9,326,13,327,328,329,330,331,332,333,334,335,336,337,11,338,339,340,341,12,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:60","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[63,211,308,310,312],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[327,328,349,350,351,352,359,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[119,390],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[391],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[392],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[9,10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"failures":[363,393],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[324,327],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[368,371,54,55,56,57,394,115,130,131,132,133,199,200,201,205,208,208,209,209,218,219,220,236,237,386,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,255,256,257,258,259,260,261,262,263,395,265,266,267,268,8,287,346,348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[18,23,40,41,47,48,49,50,51,52,64,129,146,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,188,192,193,223,230,285,286,287,288,314],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[19,83,89,95,99,101,396,112,119,129,156,162,168,172,174,217,225,281,282,15,302,312,322,333,336,343,350,356,357,362,363,364],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests2.UsageTest.argumentsOrdered":233,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":299,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":228,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":222,"org.easymock.tests2.DelegateToTest.testReturnException":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":48,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.tests.MockClassControlTest.testToString":55,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":395,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":156,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":266,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":345,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":38,"org.easymock.tests2.UsageTest.wrongArguments":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":149,"org.easymock.samples.ExampleTest.answerVsDelegate":211,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":371,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":379,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":255,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":60,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":298,"org.easymock.tests2.CaptureTest.testPrimitive":352,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":175,"org.easymock.tests.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":151,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageVarargTest.varargIntAccepted":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":236,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":382,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":198,"org.easymock.tests.ReplayStateInvalidUsageTest.times":142,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":264,"org.easymock.tests2.AnswerTest.answer":274,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":273,"org.easymock.tests2.CaptureTest.testAnd":349,"org.easymock.tests2.UsageTest.strictResetToDefault":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":293,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":155,"org.easymock.tests2.DelegateToTest.testDelegate":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":76,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":16,"org.easymock.tests2.CaptureTest.testCapture1_2446744":353,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":271,"org.easymock.tests.UsageThrowableTest.throwError":186,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":136,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":126,"org.easymock.samples.PartialClassMockTest.testGetArea":220,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":137,"org.easymock.tests.MockingTest.testInterfaceMocking":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":195,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":203,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":394,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":157,"org.easymock.tests2.UsageTest.niceToStrict":227,"org.easymock.tests2.ThreadingTest.testChangeDefault":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":392,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":238,"org.easymock.tests2.MockBuilderTest.testCreateMock":242,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":165,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":294,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":103,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":147,"org.easymock.tests.UsageOverloadedMethodTest.overloading":128,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":64,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":333,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":94,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":332,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":358,"org.easymock.tests.MockClassControlTest.testEquals":59,"org.easymock.tests2.EasyMockSupportClassTest.testAll":265,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":200,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":272,"org.easymock.tests2.CaptureTest.testCaptureAll":350,"org.easymock.tests2.UsageConstraintsTest.testMatches":334,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":125,"org.easymock.samples.ExampleTest.voteForRemovals":215,"org.easymock.tests.UsageVarargTest.allKinds":37,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":75,"org.easymock.samples.BasicClassMockTest.testPrintContent":219,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":192,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":52,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":311,"org.easymock.tests2.UsageConstraintsTest.greaterThan":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":44,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":263,"org.easymock.samples.ExampleTest.voteForRemoval":212,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":389,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":282,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":383,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":258,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":205,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":291,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":47,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":307,"org.easymock.tests2.CaptureTest.testCaptureFirst":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":292,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":235,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":90,"org.easymock.tests2.UsageTest.moreThanOneArgument":225,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":283,"org.easymock.tests2.CaptureTest.testCapture2_2446744":361,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":243,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":110,"org.easymock.tests.UsageExpectAndReturnTest.longType":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":72,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":174,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":114,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":122,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":69,"org.easymock.tests.UsageCallCountTest.tooManyCalls":111,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":161,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":191,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":246,"org.easymock.tests.MockingTest.testNiceClassMocking":380,"org.easymock.tests.MockingTest.testClassMocking":376,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":104,"org.easymock.tests2.UsageConstraintsTest.testContains":331,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":287,"org.easymock.tests2.UsageConstraintsTest.testFind":325,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":129,"org.easymock.tests.MockTypeTest.fromEasyMockClass":369,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":176,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":364,"org.easymock.tests.UsageExpectAndReturnTest.object":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":297,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":31,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":82,"org.easymock.tests.UsageTest.exactCallCountByLastCall":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":145,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":152,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":99,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":27,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":63,"org.easymock.tests.MockClassControlTest.testHashCode":58,"org.easymock.tests2.EasyMockSupportTest.testVerify":301,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":153,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":61,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":270,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":280,"org.easymock.tests.UsageVarargTest.varargCharAccepted":30,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":316,"org.easymock.tests2.UsageTest.openCallCountByLastCall":229,"org.easymock.tests.DefaultClassInstantiatorTest.object":185,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":77,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":189,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":57,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":261,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":100,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":68,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":268,"org.easymock.tests2.UsageTest.resumeIfFailure":234,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":368,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":50,"org.easymock.tests2.StubTest.stubWithReturnValue":314,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":92,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":341,"org.easymock.tests2.SerializationTest.testAllMockedMethod":348,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":112,"org.easymock.samples.SupportTest.voteForRemovals":207,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":168,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":113,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":275,"org.easymock.tests.UsageExpectAndThrowTest.object":166,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":338,"org.easymock.tests2.DelegateToTest.testWrongClass":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":120,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":121,"org.easymock.tests.UsageStrictMockTest.range":181,"org.easymock.samples.ConstructorCalledMockTest.testTax":208,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":245,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":167,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":240,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":143,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":204,"org.easymock.tests2.CaptureTest.testCaptureNone":357,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":119,"org.easymock.tests.UsageVerifyTest.twoReturns":118,"org.easymock.tests.UsageVarargTest.varargByteAccepted":35,"org.easymock.tests2.ThreadingTest.testThreadSafe":281,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":108,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":218,"org.easymock.tests2.CaptureTest.testCapture_2617107":351,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":374,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":41,"org.easymock.tests2.UsageConstraintsTest.any":329,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":141,"org.easymock.tests2.StubTest.stub":313,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":70,"org.easymock.tests.UsageExpectAndThrowTest.longType":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":49,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":140,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":318,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":269,"org.easymock.tests2.SerializationTest.testClass":346,"org.easymock.tests.LimitationsTest.mockNativeMethod":115,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":102,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":201,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":321,"org.easymock.tests2.NameTest.nameForMocksControl":306,"org.easymock.tests2.MockedExceptionTest.testMockedException":286,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":23,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":393,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":160,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":241,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":4,"org.easymock.tests2.CaptureTest.testCaptureLast":356,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":17,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":251,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":327,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":339,"org.easymock.tests.MockingTest.testTwoMocks":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":164,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":342,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":3,"org.easymock.samples.ExampleTest.removeNonExistingDocument":216,"org.easymock.tests.UsageStrictMockTest.differentMethods":182,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":138,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":15,"org.easymock.tests2.MockBuilderTest.testCreateMockString":244,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":53,"org.easymock.tests.UsageExpectAndThrowTest.floatType":158,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":335,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":277,"org.easymock.tests.UsageVerifyTest.twoThrows":117,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":267,"org.easymock.samples.ExampleTest.voteAgainstRemoval":213,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":202,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":262,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":193,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":285,"org.easymock.tests2.UsageTest.defaultResetToNice":231,"org.easymock.samples.ExampleTest.voteAgainstRemovals":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":98,"org.easymock.tests.UsageVarargTest.differentLength":32,"org.easymock.tests2.CallbackTest.callback":302,"org.easymock.tests.UsageTest.openCallCountByLastCall":22,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":322,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":40,"org.easymock.tests.UsageCallCountTest.tooFewCalls":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":248,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":150,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":2,"org.easymock.tests.UsageThrowableTest.throwCheckedException":190,"org.easymock.tests.MockingTest.testStrictClassMocking":375,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":146,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":250,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":247,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":14,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":249,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":279,"org.easymock.tests.ObjectMethodsTest.testHashCode":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":284,"org.easymock.tests2.NameTest.nameForNiceMock":305,"org.easymock.tests2.DependencyTest.testInterfaceMocking":344,"org.easymock.samples.ExampleTest.addDocument":214,"org.easymock.tests2.DelegateToTest.testStubDelegate":309,"org.easymock.tests2.AnswerTest.stubAnswer":278,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":179,"org.easymock.tests.UsageVarargTest.varargLongAccepted":34,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":101,"org.easymock.tests.UsageExpectAndReturnTest.floatType":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":209,"org.easymock.tests.UsageThrowableTest.noUpperLimit":187,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":65,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":323,"org.easymock.tests2.SerializationTest.test":347,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":354,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":84,"org.easymock.tests2.UsageConstraintsTest.testSame":326,"org.easymock.samples.SupportTest.addDocument":206,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":139,"org.easymock.tests.GenericTest.testPackageScope":199,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":154,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":378,"org.easymock.tests2.NameTest.nameForMock":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":95,"org.easymock.tests2.UsageStrictMockTest.differentMethods":320,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":388,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":87,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":46,"org.easymock.tests2.MockedExceptionTest.testRealException":288,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":385,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":39,"org.easymock.tests2.NameTest.nameForStrictMock":304,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":363,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":256,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":384,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":390,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":237,"org.easymock.tests2.UsageStrictMockTest.range":319,"org.easymock.tests2.UsageConstraintsTest.lessThan":343,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":290,"org.easymock.tests2.CaptureTest.testCaptureRightOne":359,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests2.UsageConstraintsTest.testOr":13,"org.easymock.tests.UsageRangeTest.combination":43,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":253,"org.easymock.tests.UsageTest.wrongArguments":21,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":54,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":96,"org.easymock.tests.UsageVarargTest.varargShortAccepted":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":109,"org.easymock.tests2.UsageConstraintsTest.cmpTo":330,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":276,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":230,"org.easymock.tests2.CaptureTest.testCaptureFromStub":360,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":135,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":386,"org.easymock.tests.UsageTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":107,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":97,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":180,"org.easymock.tests2.UsageConstraintsTest.constraints":324,"org.easymock.samples.ExampleTest.addAndChangeDocument":217,"org.easymock.tests.UsageStrictMockTest.testVerify":184,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":221,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":73,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":355,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":196,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":89,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":197,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":295}}]
