[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[0],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[28],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[30],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[32,33,34,35],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[38,39,40,35],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[41,42,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,61,62,63,44,2,64,3,4,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,7,95,8,96,97,9,10,98,99,100,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,11,12,13,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,14,193,15,16,194,195,196,197,198,199,200,201,202,203,204,205,17,18,206,207,208,209,210,19,20,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,38,39,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,29,289,36,290,32,0,291,292,293,294,295,296,297,298,299,300,301,302,34,303,304,40,305,35,306,307,308,309,310,311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[312],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[111,112,248,252,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[313,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[32,33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[314,315,316,317,318,319,320],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[28,321],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[46,58,129,130,131,132,133,134,196,213,214,215,216],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:85","sourceCode":"return ((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","type":"CtReturnImpl"},"failures":[45,56,59,62,44,2,3,4,66,67,69,70,71,72,73,8,9,10,138,160,12,191,14,15,16,196,18,206,207,19,20,230,250,256,257,258,259,260,261,262,263,265,266,267,268,269,271,272,273,274,275,276,278,279,280,281,288,29,289,36,290,0,291,292,293,294,296,297,298,299,300,301,302,34,303,304,305,306,307,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":36,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":94,"org.easymock.tests2.UsageTest.argumentsOrdered":20,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":132,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":207,"org.easymock.tests2.StubTest.stubWithReturnValue":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":320,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":305,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":83,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":182,"org.easymock.tests2.SerializationTest.testAllMockedMethod":310,"org.easymock.tests2.DelegateToTest.testReturnException":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":130,"org.easymock.tests.MockingTest.testPartialClassMocking":126,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":25,"org.easymock.samples.SupportTest.voteForRemovals":187,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":28,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":152,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":233,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":140,"org.easymock.tests.UsageExpectAndThrowTest.object":150,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":303,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":314,"org.easymock.tests2.DelegateToTest.testWrongClass":254,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":135,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":136,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":56,"org.easymock.tests2.UsageTest.wrongArguments":18,"org.easymock.tests.UsageStrictMockTest.range":3,"org.easymock.samples.ConstructorCalledMockTest.testTax":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":165,"org.easymock.samples.ExampleTest.answerVsDelegate":173,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":197,"org.easymock.tests2.UsageConstraintsTest.testNull":32,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":279,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":227,"org.easymock.tests2.CaptureTest.testPrimitive":259,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":60,"org.easymock.tests.UsageTest.moreThanOneArgument":7,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":159,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":169,"org.easymock.tests2.CaptureTest.testCaptureNone":264,"org.easymock.tests.UsageUnorderedTest.message":1,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":123,"org.easymock.tests2.ThreadingTest.testThreadSafe":217,"org.easymock.tests.UsageTest.argumentsOrdered":10,"org.easymock.tests.UsageVarargTest.varargIntAccepted":117,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":50,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":312,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":184,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":26,"org.easymock.tests2.CaptureTest.testCapture_2617107":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":101,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":318,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":59,"org.easymock.tests2.UsageConstraintsTest.any":294,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":226,"org.easymock.tests2.StubTest.stub":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":131,"org.easymock.tests.UsageExpectAndThrowTest.longType":143,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":23,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":193,"org.easymock.tests2.SerializationTest.testClass":308,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":283,"org.easymock.tests.LimitationsTest.mockNativeMethod":61,"org.easymock.tests2.AnswerTest.answer":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":93,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":287,"org.easymock.tests2.CaptureTest.testAnd":256,"org.easymock.tests2.UsageTest.strictResetToDefault":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":244,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests2.MockedExceptionTest.testMockedException":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":161,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests2.DelegateToTest.testDelegate":255,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":144,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":236,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":228,"org.easymock.tests.MockingTest.testNicePartialClassMocking":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":155,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":241,"org.easymock.tests2.CaptureTest.testCaptureLast":263,"org.easymock.tests2.CompareToTest.testCompareEqual":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":133,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":6,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":292,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":5,"org.easymock.tests2.CaptureTest.testCapture1_2446744":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":148,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":306,"org.easymock.tests.UsageThrowableTest.throwError":66,"org.easymock.tests.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":219,"org.easymock.tests2.ConstraintsToStringTest.andToString":24,"org.easymock.tests2.MockBuilderTest.testCreateMockString":231,"org.easymock.tests.UsageExpectAndThrowTest.floatType":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":171,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":300,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":249,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":234,"org.easymock.samples.PartialClassMockTest.testGetArea":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":102,"org.easymock.samples.ExampleTest.voteAgainstRemoval":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":246,"org.easymock.tests2.UsageTest.niceToStrict":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":141,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":37,"org.easymock.tests2.UsageConstraintsTest.testNotNull":35,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":73,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":43,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":225,"org.easymock.tests2.MockBuilderTest.testCreateMock":229,"org.easymock.tests2.UsageTest.defaultResetToNice":210,"org.easymock.samples.ExampleTest.voteAgainstRemovals":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":89,"org.easymock.tests.UsageVarargTest.differentLength":120,"org.easymock.tests2.CallbackTest.callback":311,"org.easymock.tests.UsageTest.openCallCountByLastCall":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":149,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":275,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":163,"org.easymock.tests.UsageCallCountTest.tooFewCalls":48,"org.easymock.tests.UsageOverloadedMethodTest.overloading":138,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":298,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":85,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":137,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":297,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":166,"org.easymock.tests.UsageThrowableTest.throwCheckedException":70,"org.easymock.tests2.EasyMockSupportClassTest.testAll":232,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":55,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":286,"org.easymock.tests2.CaptureTest.testCaptureAll":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":202,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":46,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":199,"org.easymock.tests2.UsageConstraintsTest.testMatches":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":170,"org.easymock.samples.ExampleTest.voteForRemovals":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":317,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":221,"org.easymock.tests.UsageVarargTest.allKinds":125,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":11,"org.easymock.tests2.DependencyTest.testInterfaceMocking":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":109,"org.easymock.samples.BasicClassMockTest.testPrintContent":185,"org.easymock.samples.ExampleTest.addDocument":176,"org.easymock.tests2.DelegateToTest.testStubDelegate":253,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":72,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":191,"org.easymock.tests2.AnswerTest.stubAnswer":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":134,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":2,"org.easymock.tests2.UsageConstraintsTest.greaterThan":301,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":247,"org.easymock.tests.UsageVarargTest.varargLongAccepted":122,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":65,"org.easymock.samples.ExampleTest.voteForRemoval":174,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":92,"org.easymock.tests.UsageExpectAndReturnTest.floatType":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":222,"org.easymock.tests2.ConstraintsToStringTest.orToString":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":180,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":302,"org.easymock.tests.UsageThrowableTest.noUpperLimit":67,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":204,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":99,"org.easymock.tests2.SerializationTest.test":309,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":272,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":75,"org.easymock.tests2.UsageConstraintsTest.testSame":0,"org.easymock.samples.SupportTest.addDocument":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":129,"org.easymock.tests2.CaptureTest.testCaptureFirst":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":273,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":114,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":81,"org.easymock.tests.GenericTest.testPackageScope":54,"org.easymock.tests2.CaptureTest.testCapture2_2446744":268,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":220,"org.easymock.tests2.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":230,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":124,"org.easymock.tests.GenericTest.testBridgedEquals":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":52,"org.easymock.tests.UsageExpectAndReturnTest.longType":77,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":106,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":158,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":324,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":40,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":167,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":78,"org.easymock.tests.UsageCallCountTest.tooManyCalls":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":162,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":47,"org.easymock.tests2.MockedExceptionTest.testRealException":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":82,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":14,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":145,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":198,"org.easymock.tests2.UsageConstraintsTest.testContains":296,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":215,"org.easymock.tests2.UsageConstraintsTest.testFind":290,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":139,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":38,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":240,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":62,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":39,"org.easymock.tests.UsageExpectAndReturnTest.object":84,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":243,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":224,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests2.UsageConstraintsTest.lessThan":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":315,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":119,"org.easymock.tests.UsageTest.exactCallCountByLastCall":98,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":45,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":271,"org.easymock.tests2.CaptureTest.testCaptureRightOne":266,"org.easymock.tests2.UsageConstraintsTest.testOr":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":319,"org.easymock.tests.UsageRangeTest.combination":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":237,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":90,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":115,"org.easymock.tests.UsageTest.wrongArguments":8,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":112,"org.easymock.tests2.EasyMockSupportTest.testVerify":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":87,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":111,"org.easymock.tests.UsageVarargTest.varargShortAccepted":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":284,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":51,"org.easymock.tests2.UsageConstraintsTest.cmpTo":295,"org.easymock.tests.UsageVarargTest.varargCharAccepted":118,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":192,"org.easymock.tests2.UsageTest.openCallCountByLastCall":208,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":209,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":41,"org.easymock.tests2.CaptureTest.testCaptureFromStub":267,"org.easymock.tests.UsageTest.unexpectedCallWithArray":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":69,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":49,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":88,"org.easymock.tests2.UsageConstraintsTest.constraints":289,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":245,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":146,"org.easymock.samples.ExampleTest.addAndChangeDocument":178,"org.easymock.tests2.ConstraintsToStringTest.notToString":22,"org.easymock.tests.CapturesMatcherTest.test":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":91,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":235,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":63,"org.easymock.tests2.CompareToTest.testGreateThan":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":107,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":262,"org.easymock.tests2.UsageTest.resumeIfFailure":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":103,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":276,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":116}}]
