[{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[52,58,59],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[60,61,62,63,32,33,64,65,66,67,68,69,70,71,72],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:156","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[74,75,76,77,78,79,80],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:235","failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,0,109,1,110,111,112,113,2,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,3,148,149,150,60,151,152,153,4,61,62,154,155,5,6,7,8,156,157,158,159,82,160,161,162,163,164,165,166,167,9,10,168,169,170,171,172,63,173,174,175,176,177,178,179,11,12,180,13,181,182,14,183,15,73,92,16,184,185,186,187,188,189,17,190,191,192,193,18,94,94,95,95,194,195,196,19,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,20,21,22,23,24,25,26,27,28,29,30,31,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,32,242,243,244,245,246,247,248,249,33,64,250,251,65,66,252,253,254,255,256,67,68,34,35,36,69,257,70,258,259,71,260,261,37,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,38,39,40,41,282,283,284,42,43,44,45,46,47,48,49,50,51,52,285,286,53,54,55,56,57,287,288,289,290,291,292,293,294,295,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[297],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[298,299,300],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[115,116,118,120,121,301,132,136,161,302,165],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[303,304,167,305,306],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[96,97,99,101,103,104,106,107,108,0,109,307,1,110,111,112,308,309,310,311,139,312,140,313,314,315,316,317,318,319,141,320,321,322,323,324,142,325,9,10,168,12,326,327,328,180,13,181,182,14,183,15,329,330,331,332,197,333,334,209,335,336,337,338,253,254,255,339,340,44,45,46,47,48,49,50,51,52,58,341,342,343,59,344,345,346,347,293,348,349,350],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[96,97,98,99,351,100,101,102,352,103,104,105,106,107,108,0,298,109,81,307,1,110,111,112,308,309,113,2,114,115,116,353,117,118,119,120,121,122,301,123,124,125,126,127,128,129,130,131,132,133,134,354,135,136,137,138,310,311,355,139,356,312,140,313,314,315,357,316,317,318,319,358,141,320,321,322,323,324,142,359,360,143,144,145,146,147,361,362,363,364,365,3,366,367,368,369,370,371,148,149,150,60,151,372,152,153,4,61,62,154,155,5,6,7,8,373,156,157,158,374,159,375,376,377,378,82,160,325,161,304,302,162,163,379,380,381,382,164,165,166,167,305,9,10,168,169,170,383,171,172,63,173,174,175,384,385,386,176,177,387,388,178,179,389,390,391,392,393,394,395,396,397,398,11,399,400,401,402,403,404,12,83,326,327,84,328,180,13,181,85,182,405,86,14,183,88,15,406,73,329,407,408,409,330,410,411,92,93,412,16,184,185,186,187,188,189,17,190,191,192,193,18,94,95,413,414,415,194,195,416,196,417,418,19,419,331,332,197,420,198,199,200,201,202,421,203,204,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,205,206,207,208,437,438,439,333,334,209,335,210,440,211,212,213,214,215,216,20,21,22,23,24,25,26,27,28,29,30,31,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,441,241,32,442,443,444,242,243,244,245,246,445,247,446,447,248,249,33,64,250,251,65,66,252,336,337,338,253,254,448,255,449,450,339,256,67,68,451,452,453,454,34,35,36,455,456,340,69,457,458,459,460,461,257,462,70,258,259,71,260,261,37,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,38,39,40,41,282,283,284,487,42,488,489,490,491,43,492,493,44,45,46,47,48,49,50,51,494,52,58,341,342,343,59,495,344,345,496,497,498,499,346,500,501,502,285,286,53,54,55,56,57,287,288,289,290,291,292,347,293,348,349,350,294,295,503,504,296],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[161,304,302,162,163,379,380,381,382,164,165,166,167,305,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[293,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[130,505],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[343,297,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[507,306],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[376],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[508,509,33,70,510,511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.RecordState:262","failures":[148,153,9,10,168,169,73,204,437,438,439,210,211,212,213,214,215,216,240,442,443,444,248,251,67,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,284,287,288,289,290,291,292,503,504],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[109,124,512],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[512],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[63,67,68,69,71,513,514],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[515,516,517],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[96,97,98,99,351,100,101,102,352,103,104,105,106,107,108,0,298,109,81,307,1,110,111,112,308,309,113,2,114,115,116,353,117,118,119,120,121,122,301,123,124,125,126,127,128,129,130,131,132,133,134,354,135,136,137,138,310,311,355,139,356,312,140,313,314,315,357,316,317,318,319,358,141,320,321,322,323,324,142,359,360,143,144,145,146,147,361,362,363,364,365,3,366,367,368,369,370,371,148,149,150,60,151,372,152,153,4,61,62,154,155,5,6,7,8,373,156,157,158,374,159,375,376,377,378,82,160,325,161,304,302,162,163,379,380,381,382,164,165,166,167,305,9,10,168,169,170,383,171,172,63,173,174,175,384,385,386,176,177,387,388,178,179,389,390,391,392,393,394,395,396,397,398,11,399,400,401,402,403,404,12,83,326,327,84,328,180,13,181,85,182,405,86,14,183,88,15,406,73,329,407,408,409,330,410,411,92,93,412,16,184,185,186,187,188,189,17,190,191,192,193,18,94,95,413,414,415,194,195,416,196,417,418,19,419,331,332,197,420,198,199,200,201,202,421,203,204,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,205,206,207,208,437,438,439,333,334,209,335,210,440,211,212,213,214,215,216,20,21,22,23,24,25,26,27,28,29,30,31,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,441,241,32,442,443,444,242,243,244,245,246,445,247,446,447,248,249,33,64,250,251,65,66,252,336,337,338,253,254,448,255,449,450,339,256,67,68,451,452,453,454,34,35,36,455,456,340,69,457,458,459,460,461,257,462,70,258,259,71,260,261,37,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,38,39,40,41,282,283,284,487,42,488,489,490,491,43,492,493,44,45,46,47,48,49,50,51,494,52,58,341,342,343,59,495,344,345,496,497,498,499,346,500,501,502,285,286,53,54,55,56,57,287,288,289,290,291,292,347,293,348,349,350,294,295,503,504,296],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[176,177],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[74,75,76,78,79,85,93],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":116,"org.easymock.tests2.UsageTest.argumentsOrdered":62,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":248,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":473,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":372,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":420,"org.easymock.tests2.DelegateToTest.testReturnException":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":288,"org.easymock.tests.MockingTest.testPartialClassMocking":253,"org.easymock.tests.MockClassControlTest.testToString":46,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":389,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":262,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":74,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":122,"org.easymock.tests2.UsageTest.wrongArguments":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":294,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":40,"org.easymock.samples.ExampleTest.answerVsDelegate":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":346,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":450,"org.easymock.tests2.UsageConstraintsTest.testNull":118,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":106,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":191,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":51,"org.easymock.tests2.CaptureTest.testPrimitive":162,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":296,"org.easymock.tests.UsageTest.moreThanOneArgument":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":281,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":244,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":457,"org.easymock.tests.UsageTest.argumentsOrdered":66,"org.easymock.tests.UsageVarargTest.varargIntAccepted":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":478,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":198,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":79,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":408,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":403,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":202,"org.easymock.tests.ReplayStateInvalidUsageTest.times":28,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":3,"org.easymock.tests2.DependencyTest.testClassMocking":387,"org.easymock.tests2.AnswerTest.answer":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":480,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":8,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":497,"org.easymock.tests2.CaptureTest.testAnd":161,"org.easymock.tests2.UsageTest.strictResetToDefault":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":207,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":461,"org.easymock.tests2.DelegateToTest.testDelegate":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":277,"org.easymock.tests.LimitationsTest.mockFinalMethod":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":57,"org.easymock.tests2.DependencyTest.testClassMockingSupport":388,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":445,"org.easymock.tests2.CaptureTest.testCapture1_2446744":163,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":6,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":22,"org.easymock.tests.UsageThrowableTest.throwError":210,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":499,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":502,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":246,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":360,"org.easymock.samples.PartialClassMockTest.testGetArea":197,"org.easymock.tests.MockingTest.testInterfaceMocking":448,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":199,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":435,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":456,"org.easymock.tests2.UsageTest.niceToStrict":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":316,"org.easymock.tests2.ThreadingTest.testChangeDefault":299,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":180,"org.easymock.tests2.MockBuilderTest.testCreateMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":368,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":271,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":444,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":487,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":38,"org.easymock.tests.UsageOverloadedMethodTest.overloading":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":127,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":282,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":126,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":297,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":164,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":425,"org.easymock.tests2.EasyMockSupportClassTest.testAll":139,"org.easymock.tests.MockClassControlTest.testEquals":50,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":55,"org.easymock.tests2.CaptureTest.testCaptureAll":304,"org.easymock.tests.MockNameTest.defaultName":421,"org.easymock.tests2.UsageConstraintsTest.testMatches":128,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":245,"org.easymock.samples.ExampleTest.voteForRemovals":418,"org.easymock.tests.UsageVarargTest.allKinds":433,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":56,"org.easymock.samples.BasicClassMockTest.testPrintContent":332,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":215,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":292,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":374,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":495,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":206,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":112,"org.easymock.samples.ExampleTest.voteForRemoval":416,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":344,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":144,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":308,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":500,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":0,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":148,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":340,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":185,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":287,"org.easymock.tests2.CaptureTest.testCaptureFirst":305,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":186,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.CaptureTest.testCapture2_2446744":167,"org.easymock.tests2.UsageTest.moreThanOneArgument":150,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":481,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":183,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":432,"org.easymock.tests.GenericTest.testBridgedEquals":350,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":492,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":280,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":447,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":242,"org.easymock.tests.UsageCallCountTest.tooManyCalls":493,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":323,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":214,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testNiceClassMocking":339,"org.easymock.tests.MockingTest.testClassMocking":337,"org.easymock.tests2.UsageConstraintsTest.testContains":125,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":42,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":168,"org.easymock.tests2.UsageConstraintsTest.testFind":117,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":284,"org.easymock.tests.MockTypeTest.fromEasyMockClass":498,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":377,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":190,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":427,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":75,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":36,"org.easymock.tests.UsageTest.exactCallCountByLastCall":252,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":458,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":451,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":93,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":422,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":239,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":395,"org.easymock.tests.MockClassControlTest.testHashCode":49,"org.easymock.tests2.EasyMockSupportTest.testVerify":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":318,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":459,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":443,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":5,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":113,"org.easymock.tests.UsageVarargTest.varargCharAccepted":426,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":494,"org.easymock.tests2.CaptureTest.testCaptureMultiple":303,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":486,"org.easymock.tests2.UsageTest.openCallCountByLastCall":152,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":516,"org.easymock.tests.DefaultClassInstantiatorTest.object":52,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":193,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":442,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":34,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":72,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":394,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":110,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":48,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":268,"org.easymock.tests.CapturesMatcherTest.test":306,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":142,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":47,"org.easymock.tests2.UsageTest.resumeIfFailure":154,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":290,"org.easymock.tests2.StubTest.stubWithReturnValue":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":85,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":135,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.SerializationTest.testAllMockedMethod":325,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":479,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":91,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":509,"org.easymock.samples.SupportTest.voteForRemovals":414,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":397,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":274,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":485,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":384,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":453,"org.easymock.tests.UsageExpectAndThrowTest.object":272,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":133,"org.easymock.tests2.DelegateToTest.testWrongClass":158,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":285,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":286,"org.easymock.tests.UsageStrictMockTest.range":71,"org.easymock.samples.ConstructorCalledMockTest.testTax":94,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":410,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":17,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":273,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":181,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":30,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":39,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":510,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":436,"org.easymock.tests2.CaptureTest.testCaptureNone":382,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests.UsageVerifyTest.twoReturns":68,"org.easymock.tests.UsageVarargTest.varargByteAccepted":431,"org.easymock.tests2.ThreadingTest.testThreadSafe":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":320,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":491,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":455,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":331,"org.easymock.tests2.CaptureTest.testCapture_2617107":302,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":483,"org.easymock.tests2.UsageConstraintsTest.any":123,"org.easymock.tests2.StubTest.stub":406,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":27,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndThrowTest.longType":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":289,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":343,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":26,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":11,"org.easymock.tests2.SerializationTest.testClass":82,"org.easymock.tests.LimitationsTest.mockNativeMethod":209,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":349,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":363,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests2.NameTest.nameForMocksControl":393,"org.easymock.tests2.MockedExceptionTest.testMockedException":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":312,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":251,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":266,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":376,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":182,"org.easymock.tests.MockingTest.testNicePartialClassMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":108,"org.easymock.tests2.CompareToTest.testCompareEqual":512,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":361,"org.easymock.tests2.CaptureTest.testCaptureLast":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":247,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":134,"org.easymock.tests.MockingTest.testTwoMocks":338,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":270,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":137,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":300,"org.easymock.samples.ExampleTest.removeNonExistingDocument":19,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":24,"org.easymock.tests.UsageStrictMockTest.differentMethods":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":396,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":341,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":145,"org.easymock.tests2.MockBuilderTest.testCreateMockString":15,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":44,"org.easymock.tests.UsageExpectAndThrowTest.floatType":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":313,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":412,"org.easymock.tests.UsageVerifyTest.twoThrows":67,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":141,"org.easymock.samples.ExampleTest.voteAgainstRemoval":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":474,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":434,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":111,"org.easymock.tests.LimitationsTest.privateConstructor":334,"org.easymock.tests2.UsageConstraintsTest.testNotNull":136,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":216,"org.easymock.tests2.UsageTest.defaultResetToNice":4,"org.easymock.samples.ExampleTest.voteAgainstRemovals":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests.UsageVarargTest.differentLength":428,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":362,"org.easymock.tests2.CallbackTest.callback":378,"org.easymock.tests2.UsageConstraintsTest.equals":353,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":81,"org.easymock.tests.UsageTest.openCallCountByLastCall":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":503,"org.easymock.tests.UsageCallCountTest.tooFewCalls":489,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":41,"org.easymock.tests.UsageThrowableTest.throwCheckedException":213,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":511,"org.easymock.tests.MockingTest.testStrictClassMocking":336,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":204,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":100,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":177,"org.easymock.tests.ObjectMethodsTest.testHashCode":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":78,"org.easymock.tests2.NameTest.nameForNiceMock":392,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":147,"org.easymock.tests2.DependencyTest.testInterfaceMocking":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":76,"org.easymock.samples.ExampleTest.addDocument":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":321,"org.easymock.tests2.DelegateToTest.testStubDelegate":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.AnswerTest.stubAnswer":176,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":258,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":405,"org.easymock.tests.UsageVarargTest.varargLongAccepted":430,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":92,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":95,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests.UsageThrowableTest.noUpperLimit":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":402,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":131,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":114,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":329,"org.easymock.tests2.SerializationTest.test":160,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":379,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":506,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":58,"org.easymock.tests2.UsageConstraintsTest.testSame":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.samples.SupportTest.addDocument":413,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":351,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":314,"org.easymock.tests.GenericTest.testPackageScope":293,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":401,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":449,"org.easymock.tests2.NameTest.nameForMock":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests2.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":307,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":276,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":208,"org.easymock.tests2.MockedExceptionTest.testRealException":169,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":411,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":476,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":171,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":295,"org.easymock.tests2.NameTest.nameForStrictMock":391,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":328,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":517,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":375,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":330,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":513,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":132,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":342,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":326,"org.easymock.tests2.UsageStrictMockTest.range":63,"org.easymock.tests2.UsageConstraintsTest.lessThan":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":77,"org.easymock.tests2.CaptureTest.testCaptureRightOne":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":317,"org.easymock.tests2.UsageConstraintsTest.testOr":120,"org.easymock.tests.UsageRangeTest.combination":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests2.MockBuilderTest.testWithConstructor":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":315,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests.UsageVarargTest.varargShortAccepted":429,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":59,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":43,"org.easymock.tests2.UsageConstraintsTest.cmpTo":124,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":466,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests2.CaptureTest.testCaptureFromStub":166,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":21,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":327,"org.easymock.tests.UsageTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":70,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":490,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":87,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests2.CaptureTest.testCapture":507,"org.easymock.tests2.UsageConstraintsTest.constraints":115,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.samples.ExampleTest.addAndChangeDocument":419,"org.easymock.tests.UsageStrictMockTest.testVerify":37,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":415,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":462,"org.easymock.tests2.CompareToTest.testGreateThan":505,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":54,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":200,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.LimitationsTest.abstractClass":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":201,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":514,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":189}}]
