[{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,9,20,21,22,23,24,25,26,27,28,29,30,11,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[32,33,34,35,36,37,38,39,40,14,15,41,42,43,44,45,46,46,47,47,48,49,50,51,52,53,54,55,56,57,58,22,59,60,61,62,63,64,65,66,67,68,69,70,71,72,24,73,74,75,76,77,78,79,80,81,82,83,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[86,87,88],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[89,90,91,92,2,93,94,95,8,96,97,98,99,100,101,102,103,104,105,29,106,107,108,109,110,111,112,113,114,115,116],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[117,118],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[119,120,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[120],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[89,123,124,125,126,6,7,8,127,128,9,20,129,130,131,103,132,133,134,135,136,137,138,139,11,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[140],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[142,143,123,124,125,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,8,160,127,161,9,20,162,163,43,45,164,165,166,167,168,169,170,102,48,49,171,172,132,173,133,134,54,174,28,175,176,177,178,179,11,31,180,181,84,111,182,183,184,112,113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[34,39,40,14,15,41,42,43,44,45,46,46,47,47,48,49,50,51,52,54,55,56,57,58,22,59,60,61,62,63,64,65,66,67,68,69,70,71,72,24,73,74,75,77,78,79,80,81,82,83,84],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[142,143,203,204],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[205,206],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[207,83,208,84],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[209],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[210,109],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:229","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.get(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[211,212,213,214,111,182,215,216,183,184,112,113,217,218,219,220,221,114,115],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[89,144,145,146,147,148,149,150,151,152,153,222,223,224,12,225,226,227,228,229,230,231,232,233,34,234,235,236,237,238,239,90,240,241,0,242,243,91,244,245,1,246,247,92,248,249,250,2,3,93,251,252,253,254,155,156,157,39,126,6,7,255,256,257,4,258,259,260,261,96,14,15,41,262,263,264,265,266,97,267,268,269,270,271,98,272,273,274,275,276,99,277,278,279,100,280,101,281,160,128,20,162,282,163,283,284,285,286,287,5,42,43,45,166,288,167,168,169,170,102,289,103,21,173,290,291,51,54,55,61,62,64,65,66,292,68,69,70,72,24,74,293,294,295,296,297,298,299,300,81,104,105,301,302,303,82,304,29,135,136,137,138,305,88,106,306,307,178,139,31,180,107,308,309,310,311,312,313,314,315,316,317,318,319,140,108,320,321,109,85,322,323,324,325,326,327,110,328,83,208,84,214,111,182,215,183,184,112,113,217,219,114,115,116],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[309,182,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[21,26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:41","sourceCode":"return org.easymock.internal.Results","type":"CtReturnImpl"},"failures":[329,89,123,330,331,124,125,332,144,145,146,147,148,333,149,150,151,152,153,222,223,154,334,224,12,225,226,227,232,335,336,337,234,90,240,241,0,242,243,91,244,245,1,246,247,92,248,249,250,2,3,93,251,252,254,155,156,157,158,159,39,126,6,7,8,255,256,338,261,96,14,15,41,262,339,340,97,267,268,269,270,271,98,272,273,274,275,276,99,277,278,279,100,280,101,281,19,160,127,128,161,9,20,162,341,163,283,342,343,344,345,346,284,285,286,287,5,42,43,45,164,165,166,288,167,168,169,170,102,48,49,50,171,172,347,289,103,132,21,173,348,349,133,134,291,350,52,54,56,57,22,60,61,62,63,351,64,65,66,67,292,68,69,70,72,73,74,75,352,77,78,79,80,353,297,298,299,300,81,104,105,206,354,301,82,355,25,356,174,357,26,27,358,28,175,176,177,29,135,136,137,138,305,88,359,106,306,307,30,178,139,179,11,31,180,107,308,309,310,311,312,313,314,315,316,317,318,319,140,108,320,321,109,85,322,323,324,181,325,326,327,110,328,360,83,208,84,214,111,182,215,216,183,184,112,113,217,219,221,114,115,116],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":310,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":329,"org.easymock.tests2.UsageTest.argumentsOrdered":134,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":86,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":173,"org.easymock.tests2.StubTest.stubWithReturnValue":307,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":1,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":172,"org.easymock.tests2.SerializationTest.testAllMockedMethod":84,"org.easymock.tests2.DelegateToTest.testReturnException":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":229,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":95,"org.easymock.tests.MockingTest.testPartialClassMocking":14,"org.easymock.samples.SupportTest.voteForRemovals":165,"org.easymock.tests.MockClassControlTest.testToString":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":99,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":207,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":97,"org.easymock.tests.UsageExpectAndThrowTest.object":275,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":118,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":129,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":360,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":323,"org.easymock.tests2.DelegateToTest.testWrongClass":359,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":255,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":256,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":316,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":222,"org.easymock.tests2.UsageTest.wrongArguments":132,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":193,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.samples.ConstructorCalledMockTest.testTax":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":265,"org.easymock.samples.ExampleTest.answerVsDelegate":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":60,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":33,"org.easymock.tests2.UsageConstraintsTest.testNull":312,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":276,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":56,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":28,"org.easymock.tests2.CaptureTest.testPrimitive":215,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":281,"org.easymock.tests.UsageTest.moreThanOneArgument":89,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":124,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":258,"org.easymock.tests2.CaptureTest.testCaptureNone":113,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":151,"org.easymock.tests2.ThreadingTest.testThreadSafe":104,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":120,"org.easymock.tests.UsageTest.argumentsOrdered":125,"org.easymock.tests.UsageVarargTest.varargIntAccepted":146,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":157,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":48,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":284,"org.easymock.tests2.CaptureTest.testCapture_2617107":182,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":334,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":201,"org.easymock.tests2.UsageConstraintsTest.any":317,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":55,"org.easymock.tests2.StubTest.stub":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":5,"org.easymock.tests.UsageExpectAndThrowTest.longType":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":230,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":179,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":353,"org.easymock.tests2.SerializationTest.testClass":83,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":352,"org.easymock.tests.LimitationsTest.mockNativeMethod":39,"org.easymock.tests2.AnswerTest.answer":297,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":251,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":44,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":296,"org.easymock.tests2.CaptureTest.testAnd":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":186,"org.easymock.tests2.UsageTest.strictResetToDefault":289,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":180,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":209,"org.easymock.tests2.NameTest.nameForMocksControl":138,"org.easymock.tests2.MockedExceptionTest.testMockedException":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":226,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":331,"org.easymock.tests2.DelegateToTest.testDelegate":106,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":270,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":41,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":141,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":66,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":57,"org.easymock.tests.MockingTest.testNicePartialClassMocking":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":279,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":70,"org.easymock.tests2.CaptureTest.testCaptureLast":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":232,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":143,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":315,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":65,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":324,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":239,"org.easymock.tests.MockingTest.testTwoMocks":40,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":142,"org.easymock.tests2.CaptureTest.testCapture1_2446744":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":273,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":133,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":327,"org.easymock.tests.UsageThrowableTest.throwError":341,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":189,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":195,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":206,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":202,"org.easymock.tests2.MockBuilderTest.testCreateMockString":59,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":212,"org.easymock.tests.UsageExpectAndThrowTest.floatType":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":260,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":321,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":298,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":79,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.MockingTest.testInterfaceMocking":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":285,"org.easymock.samples.ExampleTest.voteAgainstRemoval":168,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":267,"org.easymock.tests2.UsageTest.niceToStrict":21,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":38,"org.easymock.tests2.UsageConstraintsTest.testNotNull":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":346,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":302,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":54,"org.easymock.tests2.UsageTest.defaultResetToNice":290,"org.easymock.tests2.MockBuilderTest.testCreateMock":58,"org.easymock.samples.ExampleTest.voteAgainstRemovals":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":94,"org.easymock.tests.UsageVarargTest.differentLength":333,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":185,"org.easymock.tests2.CallbackTest.callback":29,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":190,"org.easymock.tests.UsageTest.openCallCountByLastCall":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":274,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":26,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":107,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":154,"org.easymock.tests.UsageCallCountTest.tooFewCalls":155,"org.easymock.tests.UsageOverloadedMethodTest.overloading":261,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":337,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":108,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":63,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":140,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":266,"org.easymock.tests.UsageThrowableTest.throwCheckedException":343,"org.easymock.tests2.EasyMockSupportClassTest.testAll":77,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":43,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":237,"org.easymock.tests2.CaptureTest.testCaptureAll":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":62,"org.easymock.tests2.UsageConstraintsTest.testMatches":320,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":351,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":259,"org.easymock.samples.ExampleTest.voteForRemovals":170,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":301,"org.easymock.tests2.NameTest.nameForNiceMock":137,"org.easymock.tests.UsageVarargTest.allKinds":153,"org.easymock.tests2.DependencyTest.testInterfaceMocking":328,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":238,"org.easymock.samples.BasicClassMockTest.testPrintContent":49,"org.easymock.samples.ExampleTest.addDocument":169,"org.easymock.tests2.DelegateToTest.testStubDelegate":88,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":345,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":30,"org.easymock.tests2.AnswerTest.stubAnswer":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":198,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":128,"org.easymock.tests2.UsageConstraintsTest.greaterThan":109,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":75,"org.easymock.tests.UsageVarargTest.varargLongAccepted":150,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":162,"org.easymock.samples.ExampleTest.voteForRemoval":167,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":205,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":105,"org.easymock.tests.UsageExpectAndReturnTest.floatType":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":71,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":47,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":200,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":85,"org.easymock.tests.UsageThrowableTest.noUpperLimit":163,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":308,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":45,"org.easymock.tests2.SerializationTest.test":208,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":356,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":283,"org.easymock.tests2.UsageConstraintsTest.testSame":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":240,"org.easymock.samples.SupportTest.addDocument":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":228,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":87,"org.easymock.tests2.CaptureTest.testCaptureFirst":114,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":23,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":174,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":350,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":244,"org.easymock.tests.GenericTest.testPackageScope":42,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":354,"org.easymock.tests2.CaptureTest.testCapture2_2446744":221,"org.easymock.tests2.UsageTest.moreThanOneArgument":103,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":121,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":22,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":199,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":152,"org.easymock.tests2.NameTest.nameForMock":135,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":158,"org.easymock.tests.UsageExpectAndReturnTest.longType":0,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":355,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":101,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":181,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":242,"org.easymock.tests.UsageCallCountTest.tooManyCalls":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":227,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":254,"org.easymock.tests2.MockedExceptionTest.testRealException":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":271,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":223,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":61,"org.easymock.tests.MockingTest.testNiceClassMocking":18,"org.easymock.tests.MockingTest.testClassMocking":13,"org.easymock.tests2.UsageConstraintsTest.testContains":319,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":253,"org.easymock.tests2.NameTest.nameForStrictMock":136,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":311,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":96,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":115,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":69,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":19,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":116,"org.easymock.tests.UsageExpectAndReturnTest.object":246,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":322,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":72,"org.easymock.tests.ErrorMessageTest.testGetters":10,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":191,"org.easymock.tests2.UsageConstraintsTest.lessThan":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":358,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":197,"org.easymock.tests.UsageTest.exactCallCountByLastCall":332,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":262,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":119,"org.easymock.tests2.CaptureTest.testCaptureRightOne":219,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":339,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":117,"org.easymock.tests2.UsageConstraintsTest.testOr":314,"org.easymock.tests.UsageRangeTest.combination":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":67,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":2,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":144,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":336,"org.easymock.tests.UsageTest.wrongArguments":123,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":194,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":243,"org.easymock.tests2.EasyMockSupportTest.testVerify":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":248,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":340,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":335,"org.easymock.tests.UsageVarargTest.varargShortAccepted":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":293,"org.easymock.tests2.UsageConstraintsTest.cmpTo":318,"org.easymock.tests.UsageVarargTest.varargCharAccepted":147,"org.easymock.tests2.CaptureTest.testCaptureMultiple":213,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":178,"org.easymock.tests2.UsageTest.openCallCountByLastCall":348,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":349,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":176,"org.easymock.tests2.CaptureTest.testCaptureFromStub":220,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":342,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":187,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":249,"org.easymock.tests2.CaptureTest.testCapture":218,"org.easymock.tests2.UsageConstraintsTest.constraints":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":73,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":37,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":98,"org.easymock.samples.ExampleTest.addAndChangeDocument":102,"org.easymock.tests.CapturesMatcherTest.test":211,"org.easymock.tests.UsageStrictMockTest.testVerify":282,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":3,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":80,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":36,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":236,"org.easymock.tests2.CompareToTest.testGreateThan":210,"org.easymock.tests2.UsageTest.resumeIfFailure":291,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":91,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":287,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":27,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":131,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":145}}]
