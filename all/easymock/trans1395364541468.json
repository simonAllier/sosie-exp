[{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,35,1,36,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,0,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,4,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,11,293,12,13,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,14,337,338,15,16,17,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,21,22,23,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,24,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,25,432,433,434,435,436,437,438,439,440,441,442,443,26,27,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[484],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[175,177,276],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[133,134,135,136,137,138,139,140,0,141,142,143,144,145,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[28,31,32,33,35,1,3,37,38,39,40,46,53,54,57,61,64,74,80,83,85,86,88,89,90,91,92,93,94,95,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,125,126,127,128,133,134,135,136,138,139,140,0,141,142,145,151,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,180,185,186,187,188,190,4,192,193,196,199,201,203,204,205,206,208,209,210,212,213,214,216,217,218,219,222,225,227,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,291,11,13,294,295,296,297,298,299,301,303,304,305,306,334,16,353,354,357,21,22,23,358,359,360,361,362,363,364,365,366,367,369,370,373,374,375,377,378,380,381,382,383,384,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,25,444,445,446,448,449,455,460,461,463,467,468,469,470,471,472,477],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[6,486,212,292,11,487,18,21,432,433,434,435,436,437,438,439],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[488,489,490,491,492,493,494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[32,272],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[495,111],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[171,172,173,174,189,195,213,257,258,259,260,261,262,265,338,355,356,22,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,435,447,449,450,451,452,453,454,456],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[38,39,40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[125,497],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[2,191,197,198,292,12,17,20,22,23,24,432,433,436,437],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[28,31,32,33,34,35,1,36,2,3,37,38,39,40,46,53,54,55,56,57,61,64,74,80,83,85,86,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,127,128,131,133,134,135,136,137,138,139,140,0,141,142,144,145,151,158,159,160,161,162,163,164,165,166,167,168,169,170,173,176,177,178,180,189,190,4,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,208,209,210,212,213,214,215,216,217,218,219,222,226,227,228,233,234,235,236,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,261,263,264,265,290,291,292,11,293,12,13,294,295,301,303,304,305,306,334,336,337,338,16,353,354,355,356,357,21,22,23,369,370,373,374,375,377,378,379,380,381,382,383,384,386,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,24,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,25,433,434,435,436,437,438,440,441,445,446,447,448,449,450,451,452,453,454,455,456,460,461,463,467,469,470,471,472,474,475],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[28,32,1,2,3,38,39,46,53,54,55,56,57,61,64,74,80,92,93,94,95,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,122,125,127,128,131,133,134,136,137,140,0,141,142,144,145,151,158,159,160,161,162,163,164,165,166,167,168,169,173,177,189,190,4,192,194,195,196,199,200,201,203,204,205,206,208,209,210,213,214,215,216,217,218,219,222,226,227,228,233,234,235,240,242,244,245,247,252,253,254,255,256,263,264,265,11,12,13,303,304,305,306,334,16,340,350,351,352,353,354,357,21,23,369,373,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,431,25,434,435,438,445,446,447,449,450,451,452,453,454,455,460,461,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[32,1,2,3,38,39,46,53,54,55,56,57,61,64,74,80,92,93,94,95,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,122,125,127,128,131,133,134,136,137,140,0,141,142,144,145,151,158,159,160,161,162,163,164,165,166,167,168,169,173,177,189,190,4,192,194,195,196,199,200,201,203,204,205,206,208,209,210,213,214,215,216,217,218,219,222,226,227,228,233,234,235,240,242,244,245,247,252,253,254,255,256,263,264,265,275,277,286,287,289,11,12,13,303,304,305,306,334,16,340,351,352,353,354,357,21,23,369,371,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,431,25,434,435,438,445,446,447,449,450,451,452,453,454,455,460,461,463],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[190,224],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":95,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":431,"org.easymock.tests2.UsageTest.argumentsOrdered":198,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":276,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":193,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":236,"org.easymock.tests2.DelegateToTest.testReturnException":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":258,"org.easymock.tests.MockingTest.testPartialClassMocking":460,"org.easymock.tests.MockClassControlTest.testToString":478,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":87,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":411,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":64,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":488,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":102,"org.easymock.tests2.UsageTest.wrongArguments":191,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":353,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":298,"org.easymock.samples.ExampleTest.answerVsDelegate":243,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":347,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":465,"org.easymock.tests2.UsageConstraintsTest.testNull":98,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":217,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":483,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":167,"org.easymock.tests2.CaptureTest.testPrimitive":136,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":357,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":430,"org.easymock.tests.UsageTest.moreThanOneArgument":25,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":360,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":439,"org.easymock.tests.UsageTest.argumentsOrdered":437,"org.easymock.tests.UsageVarargTest.varargIntAccepted":375,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":493,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":156,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":256,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":46,"org.easymock.tests.ReplayStateInvalidUsageTest.times":325,"org.easymock.tests2.DependencyTest.testClassMocking":231,"org.easymock.tests2.AnswerTest.answer":28,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":188,"org.easymock.tests2.CaptureTest.testAnd":133,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":344,"org.easymock.tests2.UsageTest.strictResetToDefault":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":305,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":443,"org.easymock.tests2.DelegateToTest.testDelegate":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":426,"org.easymock.tests.LimitationsTest.mockFinalMethod":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":367,"org.easymock.tests2.DependencyTest.testClassMockingSupport":232,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":26,"org.easymock.tests2.CaptureTest.testCapture1_2446744":137,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":186,"org.easymock.tests.UsageThrowableTest.throwError":447,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":319,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":346,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":82,"org.easymock.samples.PartialClassMockTest.testGetArea":235,"org.easymock.tests.MockingTest.testInterfaceMocking":462,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":412,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":69,"org.easymock.tests2.UsageTest.niceToStrict":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":266,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":125,"org.easymock.tests2.MockBuilderTest.testCreateMock":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":420,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":6,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":163,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":467,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":296,"org.easymock.tests.UsageOverloadedMethodTest.overloading":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":79,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":108,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":402,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":107,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":141,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":376,"org.easymock.tests.MockClassControlTest.testEquals":482,"org.easymock.tests2.EasyMockSupportClassTest.testAll":61,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":428,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":187,"org.easymock.tests2.CaptureTest.testCaptureAll":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":365,"org.easymock.tests.MockNameTest.defaultName":300,"org.easymock.tests2.UsageConstraintsTest.testMatches":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":361,"org.easymock.samples.ExampleTest.voteForRemovals":247,"org.easymock.tests.UsageVarargTest.allKinds":384,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":21,"org.easymock.samples.BasicClassMockTest.testPrintContent":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":366,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":453,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":34,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":262,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":494,"org.easymock.tests2.UsageConstraintsTest.greaterThan":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":62,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":304,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":228,"org.easymock.samples.ExampleTest.voteForRemoval":244,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":316,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":54,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":348,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":220,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":189,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":301,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":160,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":257,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":175,"org.easymock.tests2.CaptureTest.testCaptureFirst":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":161,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":17,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":398,"org.easymock.tests2.CaptureTest.testCapture2_2446744":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":4,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":56,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":284,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":383,"org.easymock.tests.GenericTest.testBridgedEquals":372,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":474,"org.easymock.tests.UsageExpectAndReturnTest.longType":394,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":363,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":497,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":429,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":116,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":427,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":358,"org.easymock.tests.UsageCallCountTest.tooManyCalls":475,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":416,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":452,"org.easymock.tests.MockingTest.testNiceClassMocking":466,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":204,"org.easymock.tests.MockingTest.testClassMocking":458,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":468,"org.easymock.tests2.UsageConstraintsTest.testContains":106,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":173,"org.easymock.tests2.UsageConstraintsTest.testFind":97,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":265,"org.easymock.tests.MockTypeTest.fromEasyMockClass":345,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":85,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests.UsageExpectAndReturnTest.object":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":50,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":489,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":378,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":388,"org.easymock.tests.UsageTest.exactCallCountByLastCall":438,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":271,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":440,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":202,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":407,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":337,"org.easymock.tests.MockClassControlTest.testHashCode":481,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":147,"org.easymock.tests2.EasyMockSupportTest.testVerify":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":71,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":441,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":185,"org.easymock.tests.UsageVarargTest.varargCharAccepted":377,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":289,"org.easymock.tests2.UsageTest.openCallCountByLastCall":194,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":169,"org.easymock.tests.DefaultClassInstantiatorTest.object":310,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":307,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":386,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":450,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":44,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":146,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":480,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":226,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":417,"org.easymock.tests.CapturesMatcherTest.test":485,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":408,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":329,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":479,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":80,"org.easymock.tests2.UsageTest.resumeIfFailure":199,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":260,"org.easymock.tests2.StubTest.stubWithReturnValue":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":400,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":117,"org.easymock.tests2.SerializationTest.testAllMockedMethod":40,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":282,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":486,"org.easymock.samples.SupportTest.voteForRemovals":240,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":149,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":423,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":288,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":29,"org.easymock.tests.UsageExpectAndThrowTest.object":421,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":341,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":114,"org.easymock.tests2.DelegateToTest.testWrongClass":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":445,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":446,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.samples.ConstructorCalledMockTest.testTax":237,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":183,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":203,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":498,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":422,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":127,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":297,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":487,"org.easymock.tests2.CaptureTest.testCaptureNone":0,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":352,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":23,"org.easymock.tests.UsageVarargTest.varargByteAccepted":382,"org.easymock.tests2.ThreadingTest.testThreadSafe":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":75,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":472,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":389,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":250,"org.easymock.tests2.CaptureTest.testCapture_2617107":135,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":356,"org.easymock.tests2.UsageConstraintsTest.any":104,"org.easymock.tests2.StubTest.stub":212,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":324,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":331,"org.easymock.tests.UsageExpectAndThrowTest.longType":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":287,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":314,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":323,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":151,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests.LimitationsTest.mockNativeMethod":334,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":410,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":371,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":43,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":37,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":484,"org.easymock.tests2.NameTest.nameForMocksControl":91,"org.easymock.tests2.MockedExceptionTest.testMockedException":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":63,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":435,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":463,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":415,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":84,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":214,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":128,"org.easymock.tests.MockingTest.testNicePartialClassMocking":461,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":219,"org.easymock.tests2.CaptureTest.testCaptureLast":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":210,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":115,"org.easymock.tests.MockingTest.testTwoMocks":459,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":211,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":419,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":197,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":119,"org.easymock.samples.ExampleTest.removeNonExistingDocument":248,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":48,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":148,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":312,"org.easymock.tests2.ConstraintsToStringTest.andToString":9,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":55,"org.easymock.tests2.MockBuilderTest.testCreateMockString":132,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":476,"org.easymock.tests.UsageExpectAndThrowTest.floatType":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":65,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":31,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":74,"org.easymock.samples.ExampleTest.voteAgainstRemoval":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":277,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":350,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":227,"org.easymock.tests.LimitationsTest.privateConstructor":333,"org.easymock.tests2.UsageConstraintsTest.testNotNull":118,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":454,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":171,"org.easymock.tests2.UsageTest.defaultResetToNice":196,"org.easymock.samples.ExampleTest.voteAgainstRemovals":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":278,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":42,"org.easymock.tests.UsageVarargTest.differentLength":379,"org.easymock.tests2.CallbackTest.callback":86,"org.easymock.tests2.UsageConstraintsTest.equals":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":223,"org.easymock.tests.UsageTest.openCallCountByLastCall":434,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":355,"org.easymock.tests.UsageCallCountTest.tooFewCalls":470,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":299,"org.easymock.tests.UsageThrowableTest.throwCheckedException":451,"org.easymock.tests.MockingTest.testStrictClassMocking":457,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":18,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":456,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":205,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":208,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":33,"org.easymock.tests.ObjectMethodsTest.testHashCode":387,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":492,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":57,"org.easymock.tests2.NameTest.nameForNiceMock":90,"org.easymock.tests2.DependencyTest.testInterfaceMocking":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":490,"org.easymock.samples.ExampleTest.addDocument":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":76,"org.easymock.tests2.DelegateToTest.testStubDelegate":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":81,"org.easymock.tests2.AnswerTest.stubAnswer":32,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests.UsageVarargTest.varargLongAccepted":381,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":409,"org.easymock.tests.UsageExpectAndReturnTest.floatType":393,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":201,"org.easymock.tests2.ConstraintsToStringTest.orToString":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":238,"org.easymock.tests.UsageThrowableTest.noUpperLimit":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":155,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":112,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":93,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":181,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":138,"org.easymock.tests2.SerializationTest.test":39,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":392,"org.easymock.tests2.UsageConstraintsTest.testSame":99,"org.easymock.samples.SupportTest.addDocument":239,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":207,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":66,"org.easymock.tests.GenericTest.testPackageScope":369,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":154,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":464,"org.easymock.tests2.NameTest.nameForMock":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":403,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":395,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":425,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":385,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":306,"org.easymock.tests2.MockedExceptionTest.testRealException":174,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":280,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":19,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":279,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":354,"org.easymock.tests2.NameTest.nameForStrictMock":89,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":124,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":218,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":182,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":113,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":313,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":122,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":120,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":491,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":274,"org.easymock.tests2.CaptureTest.testCaptureRightOne":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":70,"org.easymock.tests2.UsageConstraintsTest.testOr":100,"org.easymock.tests.UsageRangeTest.combination":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":215,"org.easymock.tests.UsageTest.wrongArguments":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":67,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":477,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":267,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":315,"org.easymock.tests.UsageVarargTest.varargShortAccepted":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":473,"org.easymock.tests2.UsageConstraintsTest.cmpTo":105,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":269,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":195,"org.easymock.tests2.CaptureTest.testCaptureFromStub":143,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":318,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":123,"org.easymock.tests.UsageTest.unexpectedCallWithArray":432,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":292,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":471,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":405,"org.easymock.tests2.UsageConstraintsTest.constraints":94,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":293,"org.easymock.samples.ExampleTest.addAndChangeDocument":249,"org.easymock.tests2.ConstraintsToStringTest.notToString":7,"org.easymock.tests.UsageStrictMockTest.testVerify":295,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":241,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests2.CompareToTest.testGreateThan":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":364,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":397,"org.easymock.tests.LimitationsTest.abstractClass":332,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":164,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":374}}]
