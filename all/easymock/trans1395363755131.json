[{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:190","failures":[1,9,10,11,6,12,7,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,5,29,30,31,32],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:210","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,32,43,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[45,46,28],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[47,48,49,50,45],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[52,53,54],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[55,11],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[22,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:324","failures":[1,13,14],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[59,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[61,62,63,64,65,66,67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,1,91,92,9,93,94,95,96,97,98,99,100,101,102,103,104,105,3,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,10,125,126,127,128,129,130,11,6,12,7,13,14,15,16,131,132,133,134,17,135,136,137,138,139,18,19,140,141,142,143,144,145,146,20,147,21,148,149,4,150,151,152,153,52,53,54,154,155,156,157,158,159,160,161,162,163,164,165,166,167,50,168,22,23,24,25,169,26,170,27,28,5,171,29,172,30,173,174,175,176,177,31,178,34,179,35,36,38,39,40,180,41,32,44,181,182,183,184,185],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":22,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":166,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":165,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":18,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":20,"org.easymock.samples.ExampleTest.voteForRemovals":77,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":62,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":66,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":72,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":168,"org.easymock.tests2.SerializationTest.testAllMockedMethod":54,"org.easymock.tests.UsageVarargTest.allKinds":90,"org.easymock.tests2.DelegateToTest.testReturnException":182,"org.easymock.tests2.DependencyTest.testInterfaceMocking":141,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":51,"org.easymock.tests.MockingTest.testPartialClassMocking":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":65,"org.easymock.samples.SupportTest.voteForRemovals":70,"org.easymock.samples.BasicClassMockTest.testPrintContent":80,"org.easymock.samples.ExampleTest.addDocument":76,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":15,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":155,"org.easymock.tests.UsageExpectAndThrowTest.object":128,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":48,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":142,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":28,"org.easymock.tests.UsageVarargTest.varargLongAccepted":87,"org.easymock.tests2.DelegateToTest.testWrongClass":183,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":63,"org.easymock.samples.ExampleTest.voteForRemoval":74,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":24,"org.easymock.tests.UsageExpectAndReturnTest.floatType":98,"org.easymock.tests2.UsageTest.wrongArguments":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":108,"org.easymock.tests.UsageStrictMockTest.range":3,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":161,"org.easymock.tests.UsageThrowableTest.noUpperLimit":12,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":116,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":174,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":38,"org.easymock.tests2.SerializationTest.test":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":159,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests2.CaptureTest.testPrimitive":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":134,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":59,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":173,"org.easymock.samples.SupportTest.addDocument":69,"org.easymock.tests2.CaptureTest.testCaptureNone":180,"org.easymock.tests2.CaptureTest.testCaptureFirst":44,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":17,"org.easymock.tests.UsageUnorderedTest.message":11,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":49,"org.easymock.tests.GenericTest.testPackageScope":122,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":50,"org.easymock.tests.UsageVerifyTest.twoReturns":2,"org.easymock.tests.UsageVarargTest.varargByteAccepted":88,"org.easymock.tests.UsageTest.argumentsOrdered":9,"org.easymock.tests.UsageVarargTest.varargIntAccepted":83,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":89,"org.easymock.tests.GenericTest.testBridgedEquals":8,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":119,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":120,"org.easymock.tests2.CaptureTest.testCapture_2617107":35,"org.easymock.tests.UsageExpectAndReturnTest.longType":99,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":67,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":111,"org.easymock.tests2.UsageStrictMockTest.differentMethods":150,"org.easymock.tests2.UsageConstraintsTest.any":25,"org.easymock.tests.UsageExpectAndThrowTest.longType":126,"org.easymock.tests.UsageCallCountTest.tooManyCalls":121,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests2.SerializationTest.testClass":52,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests.LimitationsTest.mockNativeMethod":130,"org.easymock.tests2.CaptureTest.testAnd":34,"org.easymock.tests2.UsageTest.strictResetToDefault":144,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":14,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":135,"org.easymock.tests2.DelegateToTest.testDelegate":184,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":97,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":185,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":172,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":160,"org.easymock.tests.MockingTest.testNicePartialClassMocking":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":129,"org.easymock.tests2.UsageConstraintsTest.testFind":56,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":175,"org.easymock.tests.MockTypeTest.fromEasyMockClass":57,"org.easymock.tests2.CaptureTest.testCaptureLast":40,"org.easymock.tests.UsageExpectAndReturnTest.object":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":167,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":23,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":177,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":5,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":93,"org.easymock.tests2.CaptureTest.testCapture1_2446744":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":64,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":85,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":147,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":133,"org.easymock.tests.UsageThrowableTest.throwError":6,"org.easymock.tests.UsageStrictMockTest.differentMethods":106,"org.easymock.tests2.CaptureTest.testCaptureRightOne":32,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":47,"org.easymock.tests.UsageRangeTest.combination":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":30,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":81,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":113,"org.easymock.tests.UsageTest.wrongArguments":91,"org.easymock.tests.UsageExpectAndThrowTest.floatType":125,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":170,"org.easymock.tests2.EasyMockSupportTest.testVerify":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":100,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":153,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":112,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":60,"org.easymock.tests.UsageVarargTest.varargShortAccepted":86,"org.easymock.tests2.UsageConstraintsTest.cmpTo":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":156,"org.easymock.samples.PartialClassMockTest.testGetArea":71,"org.easymock.tests.UsageVarargTest.varargCharAccepted":84,"org.easymock.tests2.CaptureTest.testCaptureMultiple":33,"org.easymock.samples.ExampleTest.voteAgainstRemoval":75,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":31,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":16,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":19,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":158,"org.easymock.tests2.CaptureTest.testCaptureFromStub":43,"org.easymock.samples.ExampleTest.voteAgainstRemovals":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":102,"org.easymock.tests2.CallbackTest.callback":143,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":136,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":110,"org.easymock.tests.UsageCallCountTest.tooFewCalls":117,"org.easymock.tests2.CaptureTest.testCapture":42,"org.easymock.tests.UsageOverloadedMethodTest.overloading":10,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":105,"org.easymock.samples.ExampleTest.addAndChangeDocument":78,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":164,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":124,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":26,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":41,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":103,"org.easymock.tests.UsageThrowableTest.throwCheckedException":13,"org.easymock.tests2.EasyMockSupportClassTest.testAll":154,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":39,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":123,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":115,"org.easymock.tests2.CaptureTest.testCaptureAll":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":137,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":0,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":82}}]
