[{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[33,34,35,36,37,38,39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[40,41,42,43],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[44,45,46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[65,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,38,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,39,139,140,141,142,143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[144,116,145,146,128,129],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[147,33,34,35,148,149,150,151,152,36,37,153,109,38,110,154,155,156,157,158,159,160,161,138,39,139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[162,163],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[67,164,165,166,166,167,167,168,169,170,73,171,172,78,79,80,173,174,175,176,177,115,116,178,117,118,179,119,180,120,121,122,124,125,126,181,127,182,128,129,130,131,132,133,134,136,137,140,141,142,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:114","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>(java.util.Set<org.easymock.internal.MethodSerializationWrapper>.size())","type":"CtAssignmentImpl"},"failures":[175],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[183,184,185,153,186,187],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[67,164,165,47,166,167,48,188,68,69,189,70,71,190,72,191,192,193,194,195,196,168,169,73,197,197,198,199,200,201,202,203,204,205,206,207,208,209,210,35,171,74,75,76,77,211,212,213,214,215,148,185,149,216,217,150,151,218,219,220,221,222,223,224,225,226,227,228,78,79,80,81,82,83,84,85,86,229,230,87,88,231,89,90,91,232,92,93,94,95,96,97,98,99,100,101,152,36,37,233,234,235,236,237,238,239,240,241,242,243,102,104,105,106,244,245,162,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,107,108,267,268,269,270,271,272,273,274,275,276,153,109,277,38,110,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,174,294,295,296,297,298,299,300,301,302,303,40,304,305,306,307,41,308,309,310,311,312,313,314,315,316,317,318,42,319,320,321,322,111,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,112,113,175,339,176,340,114,341,342,343,344,345,346,177,115,116,178,117,118,179,119,180,347,348,154,155,349,350,351,352,353,156,157,354,355,120,356,357,358,359,360,361,121,122,123,124,125,126,181,127,182,128,129,130,131,132,133,134,135,136,137,163,362,363,364,365,138,366,39,139,367,140,141,142,143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[322],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[67,164,165,166,166,167,167,168,169,170,73,171,172,78,79,80,174,175,176,177,115,368,116,178,117,118,179,119,180,120,145,121,122,124,125,126,181,127,182,128,129,130,131,132,133,134,136,137,140,141,142,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[202,214,215,217,36,162,247,248,251,253,254,255,256,258,259,260,261,263,264,265,266,369,347,352,362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[67,164,165,47,166,167,48,188,68,69,189,70,71,190,72,191,192,193,194,195,196,168,169,73,198,199,200,201,202,203,370,371,204,205,206,207,171,74,75,76,77,211,213,214,148,219,222,223,78,79,80,81,82,83,84,85,86,229,230,87,88,231,89,90,91,232,92,93,94,95,96,97,98,99,100,101,152,36,37,233,234,235,236,237,239,240,241,242,243,173,102,103,104,105,106,244,246,372,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,107,108,373,271,272,273,274,276,109,110,278,374,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,174,294,295,296,297,298,299,300,301,302,303,40,304,305,306,307,41,308,309,310,311,312,313,314,316,317,318,42,319,320,321,323,324,325,326,327,328,330,331,332,333,334,335,338,112,113,175,339,176,340,114,342,343,344,345,346,177,116,178,117,118,348,154,349,350,353,354,120,356,357,358,359,360,361,121,123,124,125,126,127,182,129,131,132,133,134,135,136,137,163,362,363,158,159,160,161,365,138,139,367,140,141,142,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[375,376],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[47,48,188,68,69,189,70,71,190,72,191,377,378,379,380,381,192,193,194,195,196,198,199,200,201,202,203,370,204,205,206,207,208,209,210,35,22,74,75,76,77,211,212,213,214,382,215,148,185,149,216,217,150,151,218,219,220,383,384,385,221,222,223,224,225,226,227,228,386,81,82,83,84,85,86,229,230,87,88,231,89,90,91,232,92,93,94,95,96,97,98,99,100,101,152,36,37,233,234,235,236,237,238,239,240,241,242,243,387,102,103,104,105,106,244,245,162,246,388,389,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,390,107,108,267,391,268,269,392,373,270,393,394,395,271,272,273,274,275,276,153,109,277,38,110,278,374,396,397,398,399,400,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,174,294,295,296,297,298,299,300,301,302,303,40,401,304,305,306,307,41,308,309,310,311,312,313,314,315,316,317,318,42,319,320,321,322,111,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,112,113,175,339,65,340,114,341,66,342,343,344,345,346,347,348,154,155,349,350,351,352,353,156,157,354,355,356,402,403,357,358,359,360,361,121,123,135,163,362,363,158,159,160,161,364,365,138,366,39,139,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[401],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[175,404,405,406,407,408,409,410,411,412,413,414,415,140,416,417,141,418,419,420,421,422,423,424,425,426,142,427,428,429,430,431,143,432,433],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[67,164,165,47,166,166,167,167,48,188,68,69,189,70,71,190,72,434,191,377,378,379,380,381,192,193,194,195,196,435,168,169,170,436,437,438,73,439,198,199,200,201,202,203,370,371,204,205,206,207,208,209,210,35,22,23,24,25,26,440,27,28,29,30,31,32,171,74,75,76,77,211,212,213,214,441,382,442,443,215,148,185,149,216,217,150,151,218,219,220,383,384,385,221,222,223,224,225,226,227,228,386,375,444,445,446,376,447,448,449,172,78,79,450,80,451,452,453,81,82,83,84,85,86,229,230,87,88,231,89,90,91,232,92,93,94,95,96,97,98,99,100,101,152,36,37,233,234,235,454,236,237,238,239,240,241,242,243,387,173,455,456,457,458,459,460,102,103,104,105,106,244,245,162,246,388,389,372,461,462,463,464,465,466,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,390,107,108,267,391,268,269,392,373,270,393,394,395,271,272,273,274,275,276,153,109,277,38,110,278,374,396,397,398,467,468,469,470,471,472,473,474,475,369,476,477,478,479,480,481,482,483,484,485,486,487,399,488,489,490,491,492,400,493,279,280,281,282,283,284,285,286,287,288,289,290,291,494,495,496,497,292,293,174,294,295,296,297,298,498,299,300,301,302,303,40,401,304,305,306,307,41,308,309,310,311,312,313,314,315,316,317,318,42,499,49,50,51,500,52,319,53,54,55,501,502,56,320,321,322,111,323,57,58,59,503,60,324,61,62,63,504,505,64,325,326,327,328,329,330,331,332,333,334,335,336,337,338,506,507,112,113,175,339,176,65,340,114,341,66,342,343,344,345,346,177,115,368,508,116,178,117,118,404,179,119,180,347,348,154,155,349,350,351,352,353,156,157,354,355,120,509,356,402,403,357,358,359,360,510,361,121,122,123,124,125,126,181,511,127,512,513,182,128,129,130,514,515,131,132,133,134,135,136,137,163,362,363,516,158,159,160,161,364,365,138,366,39,139,367,413,414,415,140,416,417,141,418,419,420,421,422,423,424,425,426,142,427,428,429,430,431,143,432,433],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[78,79,80,136,517],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[67,166,166,167,167,68,69,189,70,71,72,191,377,378,379,380,381,192,193,194,195,196,168,170,73,198,199,200,201,202,203,204,35,171,74,75,76,77,211,212,213,214,382,443,215,148,185,149,216,217,150,151,218,219,220,383,384,385,221,222,223,224,225,226,227,228,172,78,79,80,81,82,83,84,85,86,229,230,87,88,231,89,90,91,232,92,93,94,95,96,97,98,99,100,101,152,36,37,243,387,455,456,457,458,102,103,104,105,106,244,245,162,246,388,389,461,462,463,464,465,466,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,390,107,108,267,391,268,269,392,373,270,393,394,395,271,272,273,274,275,153,109,277,38,110,278,396,397,398,468,469,471,472,399,400,279,280,281,282,283,284,285,286,287,288,289,290,292,293,174,294,295,296,297,298,299,300,301,302,303,40,401,304,305,306,307,41,308,309,310,311,312,313,314,315,316,317,318,42,319,53,320,321,322,111,323,324,61,325,326,327,328,329,330,331,332,333,334,335,336,337,338,112,113,175,339,65,340,114,341,66,342,343,344,345,346,177,115,368,116,178,117,118,179,119,180,347,348,154,155,349,350,351,352,353,156,157,354,355,120,356,402,403,357,358,359,360,361,121,122,123,124,125,126,181,127,182,128,129,130,515,131,132,133,134,135,136,137,163,362,363,364,138,366,39,139,367,140,141,142,143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":298,"org.easymock.tests2.UsageTest.argumentsOrdered":157,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":215,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":289,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":482,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":350,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":47,"org.easymock.tests2.DelegateToTest.testReturnException":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":199,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.tests.MockClassControlTest.testToString":455,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":516,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":382,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":247,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":147,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":113,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":40,"org.easymock.tests2.UsageTest.wrongArguments":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":106,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":273,"org.easymock.samples.ExampleTest.answerVsDelegate":189,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":464,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":452,"org.easymock.tests2.UsageConstraintsTest.testNull":300,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":124,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":288,"org.easymock.tests2.CaptureTest.testPrimitive":328,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":246,"org.easymock.tests.UsageTest.moreThanOneArgument":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":266,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":76,"org.easymock.tests.UsageTest.argumentsOrdered":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":377,"org.easymock.tests.UsageVarargTest.varargIntAccepted":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":97,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":475,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":101,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":5,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":46,"org.easymock.tests.ReplayStateInvalidUsageTest.times":29,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":324,"org.easymock.tests2.DependencyTest.testClassMocking":506,"org.easymock.tests2.AnswerTest.answer":356,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":346,"org.easymock.tests2.CaptureTest.testAnd":325,"org.easymock.tests2.UsageTest.strictResetToDefault":348,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":75,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":283,"org.easymock.tests2.DelegateToTest.testDelegate":342,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":381,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":262,"org.easymock.tests.LimitationsTest.mockFinalMethod":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":196,"org.easymock.tests2.DependencyTest.testClassMockingSupport":507,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":388,"org.easymock.tests2.CaptureTest.testCapture1_2446744":329,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":511,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":344,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":24,"org.easymock.tests.UsageThrowableTest.throwError":221,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":463,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":8,"org.easymock.samples.PartialClassMockTest.testGetArea":67,"org.easymock.tests.MockingTest.testInterfaceMocking":450,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":98,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":397,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":422,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":248,"org.easymock.tests2.UsageTest.niceToStrict":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":412,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":116,"org.easymock.tests2.MockBuilderTest.testCreateMock":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":429,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":63,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":186,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":256,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":271,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":409,"org.easymock.tests.UsageOverloadedMethodTest.overloading":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":41,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":89,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":307,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":334,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":454,"org.easymock.tests.MockClassControlTest.testEquals":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":140,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":264,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":194,"org.easymock.tests2.CaptureTest.testCaptureAll":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":345,"org.easymock.tests.MockNameTest.defaultName":443,"org.easymock.tests2.UsageConstraintsTest.testMatches":308,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":77,"org.easymock.samples.ExampleTest.voteForRemovals":72,"org.easymock.tests.UsageVarargTest.allKinds":243,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":152,"org.easymock.samples.BasicClassMockTest.testPrintContent":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":195,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":227,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":54,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":203,"org.easymock.tests2.UsageConstraintsTest.greaterThan":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":416,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":103,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":130,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":447,"org.easymock.samples.ExampleTest.voteForRemoval":70,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":514,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":321,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":181,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":1,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":171,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":347,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":281,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":198,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":65,"org.easymock.tests2.CaptureTest.testCaptureFirst":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":282,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":355,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":230,"org.easymock.tests2.UsageTest.moreThanOneArgument":154,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":111,"org.easymock.tests2.CaptureTest.testCapture2_2446744":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":489,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":119,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":242,"org.easymock.tests.GenericTest.testBridgedEquals":436,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":410,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":407,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":209,"org.easymock.tests.UsageExpectAndReturnTest.longType":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":192,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":279,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":265,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":390,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":315,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":74,"org.easymock.tests.UsageCallCountTest.tooManyCalls":210,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":44,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":430,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":505,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":226,"org.easymock.tests.MockingTest.testNiceClassMocking":453,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":132,"org.easymock.tests.MockingTest.testClassMocking":449,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":144,"org.easymock.tests2.UsageConstraintsTest.testContains":306,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":371,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":174,"org.easymock.tests2.UsageConstraintsTest.testFind":299,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":214,"org.easymock.tests.MockTypeTest.fromEasyMockClass":462,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":361,"org.easymock.tests.UsageExpectAndReturnTest.object":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":504,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":287,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":237,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":470,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":411,"org.easymock.tests.UsageTest.exactCallCountByLastCall":218,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":441,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":509,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":93,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":233,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":268,"org.easymock.tests.MockClassControlTest.testHashCode":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":50,"org.easymock.tests2.EasyMockSupportTest.testVerify":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":424,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":45,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":384,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":343,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":499,"org.easymock.tests.UsageVarargTest.varargCharAccepted":236,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":493,"org.easymock.tests2.UsageTest.openCallCountByLastCall":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":405,"org.easymock.tests.DefaultClassInstantiatorTest.object":386,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":383,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":425,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":503,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":49,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":457,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":128,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":253,"org.easymock.tests.CapturesMatcherTest.test":197,"org.easymock.tests.ReplayStateInvalidCallsTest.times":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":94,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":393,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":14,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":143,"org.easymock.tests2.UsageTest.resumeIfFailure":354,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":201,"org.easymock.tests2.StubTest.stubWithReturnValue":362,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":88,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":316,"org.easymock.tests2.SerializationTest.testAllMockedMethod":176,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":399,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":187,"org.easymock.samples.SupportTest.voteForRemovals":68,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":500,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":259,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":400,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":402,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":442,"org.easymock.tests.UsageExpectAndThrowTest.object":257,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":313,"org.easymock.tests2.DelegateToTest.testWrongClass":341,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":107,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":11,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":108,"org.easymock.samples.ConstructorCalledMockTest.testTax":166,"org.easymock.tests.UsageStrictMockTest.range":38,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":496,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":286,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":131,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":258,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":413,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":150,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":272,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":183,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":398,"org.easymock.tests2.CaptureTest.testCaptureNone":333,"org.easymock.tests.UsageUnorderedTest.message":35,"org.easymock.tests.UsageVerifyTest.twoReturns":37,"org.easymock.tests.UsageVarargTest.varargByteAccepted":241,"org.easymock.tests2.ThreadingTest.testThreadSafe":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":427,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":207,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":471,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":164,"org.easymock.tests2.CaptureTest.testCapture_2617107":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":162,"org.easymock.tests2.UsageConstraintsTest.any":304,"org.easymock.tests2.StubTest.stub":163,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":28,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":200,"org.easymock.tests.UsageExpectAndThrowTest.longType":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":446,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":27,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":366,"org.easymock.tests2.SerializationTest.testClass":175,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":319,"org.easymock.tests.LimitationsTest.mockNativeMethod":73,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":96,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":146,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":59,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":19,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":367,"org.easymock.tests2.NameTest.nameForMocksControl":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":60,"org.easymock.tests2.MockedExceptionTest.testMockedException":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":417,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":510,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":251,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":121,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":118,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":126,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":57,"org.easymock.tests2.CaptureTest.testCaptureLast":332,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":137,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":18,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":303,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":314,"org.easymock.tests.MockingTest.testTwoMocks":172,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":15,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":517,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":255,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":156,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":318,"org.easymock.samples.ExampleTest.removeNonExistingDocument":434,"org.easymock.tests.UsageStrictMockTest.differentMethods":110,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":62,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":51,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":444,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":322,"org.easymock.tests2.MockBuilderTest.testCreateMockString":180,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":418,"org.easymock.tests.UsageExpectAndThrowTest.floatType":249,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":415,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":357,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":142,"org.easymock.samples.ExampleTest.voteAgainstRemoval":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":483,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":396,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":129,"org.easymock.tests.LimitationsTest.privateConstructor":438,"org.easymock.tests2.UsageConstraintsTest.testNotNull":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":228,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":292,"org.easymock.tests2.UsageTest.defaultResetToNice":353,"org.easymock.samples.ExampleTest.voteAgainstRemovals":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":92,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":58,"org.easymock.tests.UsageVarargTest.differentLength":238,"org.easymock.tests2.CallbackTest.callback":363,"org.easymock.tests2.UsageConstraintsTest.equals":498,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":512,"org.easymock.tests.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":245,"org.easymock.tests.UsageCallCountTest.tooFewCalls":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":274,"org.easymock.tests.UsageThrowableTest.throwCheckedException":225,"org.easymock.tests.MockingTest.testStrictClassMocking":448,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":184,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":136,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":220,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":61,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":135,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":359,"org.easymock.tests.ObjectMethodsTest.testHashCode":469,"org.easymock.tests2.CompareToTest.testGreateOrEqual":43,"org.easymock.tests2.NameTest.nameForNiceMock":160,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":17,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":323,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":12,"org.easymock.tests2.DependencyTest.testInterfaceMocking":112,"org.easymock.samples.ExampleTest.addDocument":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":432,"org.easymock.tests2.DelegateToTest.testStubDelegate":114,"org.easymock.tests2.AnswerTest.stubAnswer":358,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":109,"org.easymock.tests.UsageVarargTest.varargLongAccepted":240,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndReturnTest.floatType":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":120,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":501,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests.UsageThrowableTest.noUpperLimit":222,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":311,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":296,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":494,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":330,"org.easymock.tests2.SerializationTest.test":339,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.tests2.UsageConstraintsTest.testSame":301,"org.easymock.samples.SupportTest.addDocument":188,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":2,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":419,"org.easymock.tests.GenericTest.testPackageScope":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":55,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":451,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":0,"org.easymock.tests2.NameTest.nameForMock":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":90,"org.easymock.tests2.UsageStrictMockTest.differentMethods":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":513,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":261,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":467,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":105,"org.easymock.tests2.MockedExceptionTest.testRealException":294,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":485,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":138,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":244,"org.easymock.tests2.NameTest.nameForStrictMock":159,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":508,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":406,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":360,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":125,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":495,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":445,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":33,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":312,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":115,"org.easymock.tests2.UsageStrictMockTest.range":39,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":6,"org.easymock.tests2.UsageConstraintsTest.lessThan":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":423,"org.easymock.tests2.CaptureTest.testCaptureRightOne":335,"org.easymock.tests2.UsageConstraintsTest.testOr":302,"org.easymock.tests.UsageRangeTest.combination":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":122,"org.easymock.tests.UsageTest.wrongArguments":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":420,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":91,"org.easymock.tests.UsageVarargTest.varargShortAccepted":239,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":376,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":208,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":20,"org.easymock.tests2.UsageConstraintsTest.cmpTo":305,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":403,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":352,"org.easymock.tests2.CaptureTest.testCaptureFromStub":336,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":23,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":368,"org.easymock.tests.UsageTest.unexpectedCallWithArray":185,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":206,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":232,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":277,"org.easymock.tests2.UsageConstraintsTest.constraints":297,"org.easymock.samples.ExampleTest.addAndChangeDocument":191,"org.easymock.tests.UsageStrictMockTest.testVerify":374,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":48,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":193,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":99,"org.easymock.tests.LimitationsTest.abstractClass":437,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":100,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":34,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":285}}]
