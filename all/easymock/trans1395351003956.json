[{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,0,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,1,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[22,23,65,66,67,74,140,170,171,173,197,198,199,200,204,205,206,207,208,209,210,211,237,238,239,240,241,242,244,335,336,339,341,343,344,347,350,353,354,357,378,381,421,422,424,425,426,429,431,432,435,436,437,450,454,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[169,170,171,172,173],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[8,8,9,9,12,22,23,57,62,67,68,69,71,140,170,171,172,199,205,316,333,335,339,342,352,358,361,493,363,364,367,368,369,370,373,374,494,376,378,379,380,381,384,385,421,422,424,425,426,427,429,432,433,434,435,495,491],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[7,10,11,12,13,14,15,16,17,18,19,21,22,23,28,29,30,32,33,35,36,37,38,39,43,44,48,51,52,53,68,69,71,77,78,80,85,90,96,97,98,99,100,101,102,112,113,114,115,133,135,136,138,140,163,164,165,167,168,170,171,174,175,179,180,182,187,192,199,203,251,252,253,254,255,256,257,258,269,278,279,280,281,282,283,284,286,287,288,289,290,293,294,295,296,297,299,300,301,305,306,308,310,311,312,313,314,315,316,323,326,333,334,335,339,342,352,358,367,369,370,378,379,380,381,383,384,385,390,391,395,398,401,402,404,405,407,410,413,414,415,416,417,418,421,422,423,424,425,426,429,434,443,457,458,459,460,462,463,464,465,466,467,470,476,484,486,488,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[386],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[411,496],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[402,408,420,497],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[327,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[104,105,106,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[43,44,53,98,253,296,308,311,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[460],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:283","sourceCode":"return ((org.easymock.internal.ClassProxyFactory.MockMethodInterceptor)(net.sf.cglib.proxy.Factory.getCallback(0))).java.lang.reflect.InvocationHandler","type":"CtReturnImpl"},"failures":[57,62,65,66,67,68,69,71,74,140,170,171,199,204,205,206,207,208,209,210,211,237,316,333,335,361,363,364,366,367,368,373,374,376,379,380,384,385,421,422,424,425,426,427,429,431,432,433,434,435,436,451,454,489,490,491],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[39,97,98,110,111,112,113,114,115,116,145,147,148,149,150,151,201,202,203,273,275,311,377,390,392,393,394,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,429,457,458,459,460,461,462,463,464,465,466,467,468,469,470],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[498],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[7,13,438,444,471,477],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[502,503,504,46,47,48,51,52,97,298,299,305,306,505,506,507,508],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[395,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[333,334,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[43,45,50,253,296,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[413],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[241,509,510],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,0,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[394,401],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:94","failures":[394,395,397,398,399,400,401,402,403,404,413,414,418,419,457,458,459,460,467,468],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":395,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests2.UsageTest.argumentsOrdered":306,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":222,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":301,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":13,"org.easymock.tests2.DelegateToTest.testReturnException":484,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":142,"org.easymock.tests.MockingTest.testPartialClassMocking":68,"org.easymock.tests.MockClassControlTest.testToString":206,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":318,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":177,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":342,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":112,"org.easymock.tests2.UsageTest.wrongArguments":299,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":482,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":131,"org.easymock.samples.ExampleTest.answerVsDelegate":15,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":62,"org.easymock.tests2.UsageConstraintsTest.testNull":398,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":424,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":211,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":287,"org.easymock.tests2.CaptureTest.testPrimitive":460,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":116,"org.easymock.tests.UsageTest.moreThanOneArgument":46,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":196,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":266,"org.easymock.tests.UsageTest.argumentsOrdered":52,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":259,"org.easymock.tests.UsageVarargTest.varargIntAccepted":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":361,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":448,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":151,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":476,"org.easymock.tests.ReplayStateInvalidUsageTest.times":125,"org.easymock.tests2.DependencyTest.testClassMocking":291,"org.easymock.tests2.AnswerTest.answer":323,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":332,"org.easymock.tests2.CaptureTest.testAnd":457,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":59,"org.easymock.tests2.UsageTest.strictResetToDefault":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":432,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":271,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":282,"org.easymock.tests2.DelegateToTest.testDelegate":488,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":192,"org.easymock.tests.LimitationsTest.mockFinalMethod":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":156,"org.easymock.tests2.DependencyTest.testClassMockingSupport":292,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":54,"org.easymock.tests2.CaptureTest.testCapture1_2446744":461,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":330,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":119,"org.easymock.tests.UsageThrowableTest.throwError":251,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":61,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":449,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":360,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":120,"org.easymock.tests.MockingTest.testInterfaceMocking":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":178,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":250,"org.easymock.tests2.UsageTest.niceToStrict":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":347,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":367,"org.easymock.tests2.MockBuilderTest.testCreateMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":355,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":479,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":186,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":58,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":129,"org.easymock.tests.UsageOverloadedMethodTest.overloading":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":357,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":408,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":136,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":86,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":509,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":407,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":466,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":31,"org.easymock.tests.MockClassControlTest.testEquals":210,"org.easymock.tests2.EasyMockSupportClassTest.testAll":339,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":171,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":194,"org.easymock.tests2.CaptureTest.testCaptureAll":458,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":154,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":331,"org.easymock.tests.MockNameTest.defaultName":40,"org.easymock.tests2.UsageConstraintsTest.testMatches":409,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":267,"org.easymock.samples.ExampleTest.voteForRemovals":19,"org.easymock.tests.UsageVarargTest.allKinds":39,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":155,"org.easymock.samples.BasicClassMockTest.testPrintContent":23,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":257,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":146,"org.easymock.tests2.UsageConstraintsTest.greaterThan":411,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":340,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":435,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":244,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":436,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":388,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":427,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":140,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":296,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":280,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":141,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":483,"org.easymock.tests2.CaptureTest.testCaptureFirst":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":281,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":308,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":82,"org.easymock.tests2.CaptureTest.testCapture2_2446744":469,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":390,"org.easymock.tests2.UsageTest.moreThanOneArgument":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":230,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":374,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":38,"org.easymock.tests.GenericTest.testBridgedEquals":173,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":167,"org.easymock.tests.UsageExpectAndReturnTest.longType":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":152,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":278,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":494,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":195,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":416,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":264,"org.easymock.tests.UsageCallCountTest.tooManyCalls":168,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":481,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":256,"org.easymock.tests.MockingTest.testNiceClassMocking":74,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":379,"org.easymock.tests.MockingTest.testClassMocking":66,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":493,"org.easymock.tests2.UsageConstraintsTest.testContains":406,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":161,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":491,"org.easymock.tests2.UsageConstraintsTest.testFind":397,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":176,"org.easymock.tests.MockTypeTest.fromEasyMockClass":60,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":95,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":275,"org.easymock.tests.UsageExpectAndReturnTest.object":85,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":429,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":480,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":286,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":248,"org.easymock.tests.UsageTest.exactCallCountByLastCall":53,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":217,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":107,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":260,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":504,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":91,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":135,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":439,"org.easymock.tests.MockClassControlTest.testHashCode":209,"org.easymock.tests2.EasyMockSupportTest.testVerify":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":349,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":133,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":329,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":377,"org.easymock.tests.UsageVarargTest.varargCharAccepted":32,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":236,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":235,"org.easymock.tests2.UsageTest.openCallCountByLastCall":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":499,"org.easymock.tests.DefaultClassInstantiatorTest.object":237,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":289,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":25,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":246,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":474,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":438,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":433,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":183,"org.easymock.tests.CapturesMatcherTest.test":498,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":92,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":157,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":358,"org.easymock.tests2.UsageTest.resumeIfFailure":307,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":144,"org.easymock.tests2.StubTest.stubWithReturnValue":277,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":1,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":417,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":84,"org.easymock.tests2.SerializationTest.testAllMockedMethod":335,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":228,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":507,"org.easymock.samples.SupportTest.voteForRemovals":11,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":189,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":234,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":324,"org.easymock.tests.UsageExpectAndThrowTest.object":187,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":109,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":414,"org.easymock.tests2.DelegateToTest.testWrongClass":486,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":202,"org.easymock.tests.UsageStrictMockTest.range":100,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":455,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":188,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":369,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":127,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":130,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":502,"org.easymock.tests2.CaptureTest.testCaptureNone":465,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":106,"org.easymock.tests.UsageUnorderedTest.message":203,"org.easymock.tests.UsageVerifyTest.twoReturns":44,"org.easymock.tests.UsageVarargTest.varargByteAccepted":37,"org.easymock.tests2.ThreadingTest.testThreadSafe":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":353,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":165,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":22,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":249,"org.easymock.tests2.CaptureTest.testCapture_2617107":459,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":508,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":232,"org.easymock.tests2.UsageConstraintsTest.any":404,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":124,"org.easymock.tests2.StubTest.stub":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":159,"org.easymock.tests.UsageExpectAndThrowTest.longType":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":233,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":241,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":123,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":443,"org.easymock.tests2.SerializationTest.testClass":333,"org.easymock.tests.LimitationsTest.mockNativeMethod":199,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":94,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":473,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":315,"org.easymock.tests2.NameTest.nameForMocksControl":322,"org.easymock.tests2.MockedExceptionTest.testMockedException":490,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":341,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":181,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":71,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":274,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":421,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":370,"org.easymock.tests.MockingTest.testNicePartialClassMocking":69,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":426,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":471,"org.easymock.tests2.CaptureTest.testCaptureLast":464,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":55,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":401,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":385,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":415,"org.easymock.tests.MockingTest.testTwoMocks":67,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":185,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":305,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":419,"org.easymock.samples.ExampleTest.removeNonExistingDocument":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":478,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":121,"org.easymock.tests.UsageStrictMockTest.differentMethods":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":440,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":239,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":389,"org.easymock.tests2.MockBuilderTest.testCreateMockString":376,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":204,"org.easymock.tests.UsageExpectAndThrowTest.floatType":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":343,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":326,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":317,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":352,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":223,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":434,"org.easymock.tests.LimitationsTest.privateConstructor":198,"org.easymock.tests2.UsageConstraintsTest.testNotNull":418,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":489,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":258,"org.easymock.tests2.UsageTest.defaultResetToNice":304,"org.easymock.samples.ExampleTest.voteAgainstRemovals":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":224,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":472,"org.easymock.tests.UsageVarargTest.differentLength":34,"org.easymock.tests2.CallbackTest.callback":295,"org.easymock.tests2.UsageConstraintsTest.equals":396,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":430,"org.easymock.tests.UsageTest.openCallCountByLastCall":49,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":114,"org.easymock.tests.UsageCallCountTest.tooFewCalls":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":132,"org.easymock.tests.UsageThrowableTest.throwCheckedException":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":503,"org.easymock.tests.MockingTest.testStrictClassMocking":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":384,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":477,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":380,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":383,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":328,"org.easymock.tests2.CompareToTest.testGreateOrEqual":497,"org.easymock.tests.ObjectMethodsTest.testHashCode":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":391,"org.easymock.tests2.NameTest.nameForNiceMock":321,"org.easymock.tests2.DependencyTest.testInterfaceMocking":293,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.ExampleTest.addDocument":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":354,"org.easymock.tests2.DelegateToTest.testStubDelegate":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.AnswerTest.stubAnswer":327,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":98,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":371,"org.easymock.tests.UsageVarargTest.varargLongAccepted":36,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":221,"org.easymock.tests.UsageExpectAndReturnTest.floatType":77,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":316,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":447,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":412,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests.UsageThrowableTest.noUpperLimit":252,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":393,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":450,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":462,"org.easymock.tests2.SerializationTest.test":334,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":510,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":238,"org.easymock.tests2.UsageConstraintsTest.testSame":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":76,"org.easymock.samples.SupportTest.addDocument":10,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":382,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":344,"org.easymock.tests.GenericTest.testPackageScope":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":446,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":72,"org.easymock.tests2.NameTest.nameForMock":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":87,"org.easymock.tests2.UsageStrictMockTest.differentMethods":314,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":375,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":431,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":79,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":191,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":245,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":272,"org.easymock.tests2.MockedExceptionTest.testRealException":492,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":225,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":311,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":113,"org.easymock.tests2.NameTest.nameForStrictMock":320,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":500,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":454,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":413,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":240,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":363,"org.easymock.tests2.UsageStrictMockTest.range":313,"org.easymock.tests2.UsageConstraintsTest.lessThan":420,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":220,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":279,"org.easymock.tests2.CaptureTest.testCaptureRightOne":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":348,"org.easymock.tests2.UsageConstraintsTest.testOr":400,"org.easymock.tests.UsageRangeTest.combination":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":422,"org.easymock.tests.UsageTest.wrongArguments":48,"org.easymock.tests2.MockBuilderTest.testWithConstructor":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":345,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":213,"org.easymock.tests.UsageVarargTest.varargShortAccepted":35,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":242,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":166,"org.easymock.tests2.UsageConstraintsTest.cmpTo":405,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":215,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":303,"org.easymock.tests2.CaptureTest.testCaptureFromStub":468,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":118,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":364,"org.easymock.tests.UsageTest.unexpectedCallWithArray":47,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":97,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":89,"org.easymock.tests2.UsageConstraintsTest.constraints":394,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":99,"org.easymock.samples.ExampleTest.addAndChangeDocument":21,"org.easymock.tests.UsageStrictMockTest.testVerify":103,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":7,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":96,"org.easymock.tests2.CompareToTest.testGreateThan":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":153,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":463,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":81,"org.easymock.tests.LimitationsTest.abstractClass":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":150,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":138,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":284}}]
