[{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,7,8,74,75,76,77,14,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,2,131,3,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,4,148,149,150,151,152,5,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,6,172,173,174,175,176,177,178,179,180,181,182,183,184,185,16,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[17,18,19,20,23,24,25,28,29,30,31,32,33,34,35,36,37,43,50,51,52,53,54,55,56,57,58,59,60,61,62,68,70,71,72,73,7,74,75,77,14,78,79,80,81,82,83,84,85,87,88,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,129,2,131,3,132,134,135,136,137,138,139,141,142,143,144,145,146,147,4,148,149,150,151,152,5,153,154,155,157,158,159,160,161,162,163,164,165,166,167,169,6,172,173,174,177,178,181,182,183,184,186,187,188,194,201,202,203,204,208,211,221,227,230,231,232,233,234,235,236,237,238,239,240,241,241,242,242,243,244,245,246,248,249,250,253,260,261,262,263,264,265,266,267,268,269,270,271,272,276,277,278,279,280,285,286,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,309,310,311,312,313,314,315,316,317,342,343,344,345,346,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,374,380,381,383,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,442,443,444,445,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489,499,500,501,502,503,504,506,507,508,509,510,511,512,513,514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[284,288],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[288],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[515,155],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,70,71,72,73,7,8,516,74,75,76,77,14,78,79,80,81,82,83,84,85,87,88,89,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,2,131,3,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,4,148,149,150,151,152,5,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,6,172,173,174,175,176,177,517,178,179,518,180,181,182,183,15,184,16,186,187,519,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,241,242,242,243,244,245,246,247,248,249,250,251,252,520,253,254,255,256,257,258,521,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[522,4],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[523,524,299,525,526,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[29,35,81,111,123,126,302,327,329,338,339,341,343,346,470,475,483],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,70,71,72,73,74,75,76,77,78,80,81,87,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,2,131,3,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,4,148,149,150,151,152,5,153,154,155,156,157,158,159,160,163,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,230,233,234,235,236,237,238,239,240,243,244,245,247,248,249,250,251,252,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,376,382,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,494,495,497,498,499,500,501,502,503,504,505,506,507,509,510,511,512,513,514],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[267],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[98,99,101,102,103,104,105,110,147,152],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[81,273,274,275,345,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,387,390,391,392,393,394,469,504,513],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[26,324],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[64,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[515,155],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[515,145,151,155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[7,74,14,79,82,83,84,85,87,88,89,97,161,162,163,164,165,166,167,169,6,172,173,174,176,177,178,179,181,182,183,184,186,187,188,201,202,203,204,208,211,221,227,230,231,232,233,241,241,242,242,243,246,248,252,253,260,285,286,287,288,289,290,291,292,293,294,295,296,297,374,379,380,381,383,387,491,496,499,508],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[31,34,35,36,51,55,56,59,74,111,114,115,116,120,121,122,123,3,147,162,172,174,178,186,187,188,260,297,299,301,302,303,315,316,317,527,528,458,464,529,530,469,470,475,477,478,481,482,483],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[35,114,120,121,260,299,302,530,469,470,477,478,481,482,507],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[8,531,532,84,89,90,517,518,15,533,519],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[29,72,7,82,83,84,85,87,88,89,126,161,163,164,166,178,181,183,184,187,208,211,221,227,233,235,236,238,241,241,242,242,244,246,276,277,279,374,380,381,383,395,396,397,398,399,403,404,410,411,412,413,414,448,449,451,499,500],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[31,34,35,36,51,55,56,59,74,111,114,115,116,120,121,122,123,3,147,162,172,174,178,186,187,188,260,297,299,301,302,303,315,316,317,527,528,458,464,529,530,469,470,475,477,478,481,482,483],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[267],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[534,523,535,536,537,538,539,540,524,541,542,33,35,36,113,114,120,121,147,260,299,300,302,303,525,543,526,544,545,546,530,468,469,470,476,477,478,481,482,488,489,502,505,506,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[249,289,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[1,2,4,5],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":132,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":475,"org.easymock.tests2.UsageTest.argumentsOrdered":121,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":328,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":116,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":245,"org.easymock.tests2.DelegateToTest.testReturnException":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":510,"org.easymock.tests.MockingTest.testPartialClassMocking":380,"org.easymock.tests.MockClassControlTest.testToString":291,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":156,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":215,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":352,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":24,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":441,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":9,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":139,"org.easymock.tests2.UsageTest.wrongArguments":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":342,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":486,"org.easymock.samples.ExampleTest.answerVsDelegate":234,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":496,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":385,"org.easymock.tests2.UsageConstraintsTest.testNull":135,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":164,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":59,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":296,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":346,"org.easymock.tests.UsageTest.moreThanOneArgument":476,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":371,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":278,"org.easymock.tests.UsageTest.argumentsOrdered":482,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":347,"org.easymock.tests.UsageVarargTest.varargIntAccepted":454,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":541,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":177,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":199,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":451,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":425,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":537,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":43,"org.easymock.tests.ReplayStateInvalidUsageTest.times":269,"org.easymock.tests2.DependencyTest.testClassMocking":21,"org.easymock.tests2.AnswerTest.answer":25,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":20,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":493,"org.easymock.tests2.CaptureTest.testAnd":97,"org.easymock.tests2.UsageTest.strictResetToDefault":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":518,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":6,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":54,"org.easymock.tests2.DelegateToTest.testDelegate":129,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":351,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":367,"org.easymock.tests.LimitationsTest.mockFinalMethod":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":513,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":446,"org.easymock.tests2.DependencyTest.testClassMockingSupport":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":488,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":18,"org.easymock.tests.UsageThrowableTest.throwError":387,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":263,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":495,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":528,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":280,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":531,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":229,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":428,"org.easymock.samples.PartialClassMockTest.testGetArea":246,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":264,"org.easymock.tests.MockingTest.testInterfaceMocking":382,"org.easymock.tests2.CompareToTest.testLessOrEqual":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":448,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":307,"org.easymock.tests2.UsageTest.niceToStrict":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":216,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":353,"org.easymock.tests2.ThreadingTest.testChangeDefault":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":181,"org.easymock.tests2.MockBuilderTest.testCreateMock":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":224,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":46,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":523,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":361,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":55,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":492,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":484,"org.easymock.tests.UsageOverloadedMethodTest.overloading":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":226,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":504,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":145,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":472,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":406,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":144,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":455,"org.easymock.tests2.EasyMockSupportClassTest.testAll":208,"org.easymock.tests.MockClassControlTest.testEquals":295,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":286,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":539,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":369,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":444,"org.easymock.tests2.CaptureTest.testCaptureAll":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":19,"org.easymock.tests.MockNameTest.defaultName":376,"org.easymock.tests2.UsageConstraintsTest.testMatches":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":279,"org.easymock.samples.ExampleTest.voteForRemovals":238,"org.easymock.tests.UsageVarargTest.allKinds":463,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":468,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":445,"org.easymock.samples.BasicClassMockTest.testPrintContent":232,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":393,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":514,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":196,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":521,"org.easymock.tests2.UsageConstraintsTest.greaterThan":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":465,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":174,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":429,"org.easymock.samples.ExampleTest.voteForRemoval":235,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":259,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":175,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":70,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":497,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":167,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":421,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":508,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":52,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":509,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":124,"org.easymock.tests2.CaptureTest.testCaptureFirst":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":53,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":402,"org.easymock.tests2.UsageTest.moreThanOneArgument":113,"org.easymock.tests2.CaptureTest.testCapture2_2446744":109,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":72,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":336,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":462,"org.easymock.tests.GenericTest.testBridgedEquals":288,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":316,"org.easymock.tests.UsageExpectAndReturnTest.longType":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":442,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":370,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":471,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":282,"org.easymock.tests.UsageCallCountTest.tooManyCalls":317,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":543,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":403,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":357,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":392,"org.easymock.tests.MockingTest.testNiceClassMocking":386,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":83,"org.easymock.tests.MockingTest.testClassMocking":378,"org.easymock.tests2.UsageConstraintsTest.testContains":143,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":310,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":203,"org.easymock.tests2.UsageConstraintsTest.testFind":134,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":474,"org.easymock.tests.MockTypeTest.fromEasyMockClass":494,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":77,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndReturnTest.object":405,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":58,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":457,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":10,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":250,"org.easymock.tests.UsageTest.exactCallCountByLastCall":483,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":348,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":546,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":452,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":411,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":503,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":190,"org.easymock.tests.MockClassControlTest.testHashCode":294,"org.easymock.tests2.EasyMockSupportTest.testVerify":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":218,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":536,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":349,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":501,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":274,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":529,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":17,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":130,"org.easymock.tests.UsageVarargTest.varargCharAccepted":456,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":520,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":341,"org.easymock.tests2.UsageTest.openCallCountByLastCall":117,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":61,"org.easymock.tests.DefaultClassInstantiatorTest.object":253,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":273,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":248,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":530,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":359,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":41,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":189,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":427,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":172,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":293,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":358,"org.easymock.tests.ReplayStateInvalidCallsTest.times":433,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":412,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":281,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":434,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":538,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":227,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":292,"org.easymock.tests2.UsageTest.resumeIfFailure":122,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":491,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":512,"org.easymock.tests2.StubTest.stubWithReturnValue":81,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":404,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":5,"org.easymock.tests2.SerializationTest.testAllMockedMethod":79,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":334,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":524,"org.easymock.samples.SupportTest.voteForRemovals":244,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":364,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":340,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":26,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":419,"org.easymock.tests.UsageExpectAndThrowTest.object":362,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":150,"org.easymock.tests2.DelegateToTest.testWrongClass":127,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":499,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":431,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":500,"org.easymock.samples.ConstructorCalledMockTest.testTax":241,"org.easymock.tests.UsageStrictMockTest.range":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":95,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":57,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":363,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":183,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":205,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":485,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":525,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":423,"org.easymock.tests2.CaptureTest.testCaptureNone":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":308,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":64,"org.easymock.tests.UsageUnorderedTest.message":260,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":527,"org.easymock.tests.UsageVerifyTest.twoReturns":470,"org.easymock.tests.UsageVarargTest.varargByteAccepted":461,"org.easymock.tests2.ThreadingTest.testThreadSafe":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":222,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":314,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":231,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":251,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":542,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":338,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":345,"org.easymock.tests2.UsageConstraintsTest.any":141,"org.easymock.tests2.StubTest.stub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":339,"org.easymock.tests.UsageExpectAndThrowTest.longType":355,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":257,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":267,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":34,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests.LimitationsTest.mockNativeMethod":374,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":414,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":287,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":40,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":439,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":37,"org.easymock.tests2.NameTest.nameForMocksControl":160,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":0,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":42,"org.easymock.tests2.MockedExceptionTest.testMockedException":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":210,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":480,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":76,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":356,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":161,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":184,"org.easymock.tests.MockingTest.testNicePartialClassMocking":381,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":166,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":38,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":489,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":438,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":151,"org.easymock.tests.MockingTest.testTwoMocks":379,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":435,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":395,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":360,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":120,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":154,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":67,"org.easymock.samples.ExampleTest.removeNonExistingDocument":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":45,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":265,"org.easymock.tests.UsageStrictMockTest.differentMethods":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":191,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":66,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":255,"org.easymock.tests2.ConstraintsToStringTest.andToString":540,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":71,"org.easymock.tests2.MockBuilderTest.testCreateMockString":188,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":212,"org.easymock.tests.UsageExpectAndThrowTest.floatType":354,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":207,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":28,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":516,"org.easymock.tests.UsageVerifyTest.twoThrows":469,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":221,"org.easymock.samples.ExampleTest.voteAgainstRemoval":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":173,"org.easymock.tests.LimitationsTest.privateConstructor":373,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":532,"org.easymock.tests2.UsageConstraintsTest.testNotNull":153,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":394,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":201,"org.easymock.tests2.UsageTest.defaultResetToNice":119,"org.easymock.samples.ExampleTest.voteAgainstRemovals":233,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":330,"org.easymock.tests.UsageVarargTest.differentLength":458,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":39,"org.easymock.tests2.CallbackTest.callback":74,"org.easymock.tests2.UsageConstraintsTest.equals":133,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":544,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":170,"org.easymock.tests.UsageTest.openCallCountByLastCall":479,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":344,"org.easymock.tests.UsageCallCountTest.tooFewCalls":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":487,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":65,"org.easymock.tests.UsageThrowableTest.throwCheckedException":391,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":526,"org.easymock.tests.MockingTest.testStrictClassMocking":377,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":416,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":44,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":84,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":270,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":87,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":30,"org.easymock.tests.ObjectMethodsTest.testHashCode":249,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":437,"org.easymock.tests2.NameTest.nameForNiceMock":159,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":73,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":432,"org.easymock.tests2.DependencyTest.testInterfaceMocking":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":11,"org.easymock.samples.ExampleTest.addDocument":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":223,"org.easymock.tests2.DelegateToTest.testStubDelegate":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":228,"org.easymock.tests2.AnswerTest.stubAnswer":29,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":300,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":185,"org.easymock.tests.UsageVarargTest.varargLongAccepted":460,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":413,"org.easymock.tests.UsageExpectAndReturnTest.floatType":397,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.tests2.ConstraintsToStringTest.orToString":534,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":242,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":505,"org.easymock.tests.UsageThrowableTest.noUpperLimit":388,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":198,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":131,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":91,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.SerializationTest.test":78,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":396,"org.easymock.tests2.UsageConstraintsTest.testSame":136,"org.easymock.samples.SupportTest.addDocument":243,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":86,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":422,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":213,"org.easymock.tests.GenericTest.testPackageScope":285,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":197,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":384,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":420,"org.easymock.tests2.NameTest.nameForMock":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":407,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":519,"org.easymock.tests2.UsageStrictMockTest.differentMethods":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":399,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":366,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":467,"org.easymock.tests2.MockedExceptionTest.testRealException":204,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":498,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":545,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":331,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":272,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":343,"org.easymock.tests2.NameTest.nameForStrictMock":158,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":180,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":165,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":94,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":149,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":256,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":178,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":426,"org.easymock.tests2.UsageConstraintsTest.lessThan":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":12,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":326,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":217,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":63,"org.easymock.tests2.UsageConstraintsTest.testOr":137,"org.easymock.tests.UsageRangeTest.combination":464,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":162,"org.easymock.tests.UsageTest.wrongArguments":478,"org.easymock.tests2.MockBuilderTest.testWithConstructor":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":214,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":290,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":319,"org.easymock.tests.UsageVarargTest.varargShortAccepted":459,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":258,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":315,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":440,"org.easymock.tests2.UsageConstraintsTest.cmpTo":142,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":27,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":430,"org.easymock.tests2.CompareToTest.testLessThan":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":321,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":118,"org.easymock.tests2.CaptureTest.testCaptureFromStub":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":262,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":179,"org.easymock.tests.UsageTest.unexpectedCallWithArray":477,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":436,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":313,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":533,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":409,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.samples.ExampleTest.addAndChangeDocument":240,"org.easymock.tests2.ConstraintsToStringTest.notToString":535,"org.easymock.tests.UsageStrictMockTest.testVerify":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":230,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests2.CompareToTest.testGreateThan":522,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":443,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":449,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":401,"org.easymock.tests.LimitationsTest.abstractClass":372,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":450,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":56}}]
