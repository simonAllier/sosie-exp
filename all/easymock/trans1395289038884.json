[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[3,4,5,6,6,7,7,8,9,10,11,12,13,14,15,16,17,18,0,2,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[71,72,73,74,75,76,77,78,79,80,81,3,4,5,6,7,8,9,82,83,10,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,11,102,103,12,104,105,106,107,108,109,110,111,112,13,113,114,115,116,117,14,118,119,15,16,17,18,120,121,122,0,1,2,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,19,20,21,22,220,23,24,25,221,26,222,27,223,224,225,28,29,30,226,31,227,228,32,33,229,34,230,231,232,233,234,235,236,237,238,239,240,35,36,37,38,39,40,41,241,42,242,243,43,44,45,46,244,245,246,247,248,249,250,47,251,252,253,254,255,256,257,258,259,260,261,48,262,263,49,264,50,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,51,52,53,296,54,297,298,299,55,300,301,56,57,58,302,59,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,60,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,61,436,437,438,439,440,441,442,62,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,63,64,65,66,67,68,69,70,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[71,72,73,74,75,76,77,78,79,80,81,3,4,5,6,7,8,9,82,83,10,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,11,102,103,12,104,105,106,107,108,109,110,111,112,13,113,114,115,116,117,14,118,119,15,16,17,18,120,121,122,0,1,2,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,19,20,21,22,220,23,24,25,221,26,222,27,223,224,225,28,29,30,226,31,227,228,32,33,229,34,230,231,232,233,234,235,236,237,238,239,240,35,36,37,38,39,40,41,241,42,242,243,43,44,45,46,244,245,246,247,248,249,250,47,251,252,253,254,255,256,257,258,259,260,261,48,262,263,49,264,50,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,51,52,53,296,54,297,298,299,55,300,301,56,57,58,302,59,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,60,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,61,436,437,438,439,440,441,442,62,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,63,64,65,66,67,68,69,70,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[488],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[72,120,122,183,186,188,207,425],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[15,16,17,18,290,375,62,443,444,445,446,447],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[436,440],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[227],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[72,5,84,85,87,89,90,94,98,120,122,123,124,125,128,129,132,134,138,141,142,143,144,145,147,148,149,150,151,152,154,156,157,158,159,160,161,162,163,164,165,167,168,169,170,173,175,176,187,188,190,192,193,196,197,198,199,202,207,28,39,45,257,258,277,278,279,280,283,284,288,289,292,55,300,329,330,333,335,336,337,338,340,341,342,343,345,346,347,348,361,364,365,366,367,368,374,377,378,381,383,384,385,386,388,389,390,391,393,394,395,396,419,421,422,432,433,446,448,449,450,451,452,453,454,455,456],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:83","failures":[10,85,86,89,90,92,93,95,98,138,148,154,160,168,173,174,175,176,179,180,181,182,183,187,190,191,193,194,195,196,197,202,207,278,279,280,282,283,284,285,286,287,289,292,293,363,418,419,420,421,422,432,433,434,446,480],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[490],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[71,72,73,74,75,76,78,9,84,85,87,88,91,94,97,98,15,16,17,18,120,122,0,1,2,137,138,141,142,143,144,145,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,172,173,176,177,179,180,181,182,183,186,187,188,189,190,191,192,194,195,196,197,198,199,202,203,204,205,206,207,20,21,24,25,26,28,29,232,35,37,38,39,40,42,43,45,257,258,261,48,49,50,265,266,267,271,272,273,274,275,277,278,280,288,289,292,52,53,54,55,300,56,57,304,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,362,363,369,370,371,372,373,374,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,407,408,409,410,411,412,417,419,422,423,424,430,432,433,434,62,443,444,445,446,447,448,449,450,451,452,453,454,455,456,469,470,471,473,474,476,477,478,479,480,64],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[85,86,92,93,173,175,176,213,239,47,280,281,282,285,286,293,59,303,376,400,404,418,419,421,422,432,433,434,482,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[5,12,13,14,0,26,491,27,223,28,29,30,31,32,33,492,34,41,44,45,245,58,397,402],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[141],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[162],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[82,493,494,495,496,497,226],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[71,72,73,74,76,78,80,5,6,6,7,7,9,10,84,85,86,87,88,89,90,91,92,93,94,95,97,98,11,12,13,14,15,16,17,18,120,122,0,1,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,213,214,19,20,21,22,23,24,25,26,27,223,28,29,30,31,32,33,34,232,233,35,36,37,38,39,40,41,42,43,44,45,46,245,47,251,257,258,259,260,261,48,49,50,265,266,267,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,51,52,53,54,55,300,56,58,59,303,321,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,400,401,402,403,404,60,405,406,409,416,418,419,420,421,422,423,425,426,427,428,429,430,431,432,433,434,62,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,480,482,483,485,486,63,65,66,67,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[137,139,183,425,427],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[498,499,500],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[85,86,92,93,160,173,175,176,501,502,503,504,505,506,507,508,509,510,511,280,281,282,285,286,293,512,513,514,515,516,517,518,59,303,418,419,421,422,426,429,430,431,432,433,434],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[158,519],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[520],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[10,86,87,88,92,93,94,95,124,128,129,132,144,160,171,174,175,176,207,27,32,33,34,36,44,46,259,279,281,282,285,286,287,293,413,414,415,416,418,420,421,422,433,434,453,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[173,175,176,38,40,418,419,421,422,424],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[146],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[85,86,92,93,173,175,176,213,239,47,280,281,282,285,286,293,59,303,376,400,404,418,419,421,422,432,433,434,482,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[311],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[499,500,521],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:179","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":145,"org.easymock.tests2.UsageTest.argumentsOrdered":93,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":279,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":315,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":88,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":81,"org.easymock.tests2.DelegateToTest.testReturnException":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":443,"org.easymock.tests.MockingTest.testPartialClassMocking":52,"org.easymock.tests.MockClassControlTest.testToString":65,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":178,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":107,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":377,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":152,"org.easymock.tests2.UsageTest.wrongArguments":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":288,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":266,"org.easymock.samples.ExampleTest.answerVsDelegate":72,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":402,"org.easymock.tests2.UsageConstraintsTest.testNull":148,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":298,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":38,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":132,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":70,"org.easymock.tests2.CaptureTest.testPrimitive":192,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":396,"org.easymock.tests.UsageTest.moreThanOneArgument":280,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":371,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":464,"org.easymock.tests.UsageTest.argumentsOrdered":286,"org.easymock.tests.UsageVarargTest.varargIntAccepted":471,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":497,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":218,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":236,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":452,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":505,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":47,"org.easymock.tests.ReplayStateInvalidUsageTest.times":357,"org.easymock.tests2.DependencyTest.testClassMocking":230,"org.easymock.tests2.AnswerTest.answer":183,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":206,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":399,"org.easymock.tests2.CaptureTest.testAnd":189,"org.easymock.tests2.UsageTest.strictResetToDefault":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":370,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":127,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":468,"org.easymock.tests2.DelegateToTest.testDelegate":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":392,"org.easymock.tests.LimitationsTest.mockFinalMethod":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":446,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":275,"org.easymock.tests2.DependencyTest.testClassMockingSupport":231,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":59,"org.easymock.tests2.CaptureTest.testCapture1_2446744":193,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":241,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":204,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":351,"org.easymock.tests.UsageThrowableTest.throwError":361,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":401,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":487,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":119,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.MockingTest.testInterfaceMocking":296,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":449,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":461,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":108,"org.easymock.tests2.UsageTest.niceToStrict":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":28,"org.easymock.tests2.MockBuilderTest.testCreateMock":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":253,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":386,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":398,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":406,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":407,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":50,"org.easymock.tests.UsageOverloadedMethodTest.overloading":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":112,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":428,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":158,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":340,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":157,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":198,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":472,"org.easymock.tests2.EasyMockSupportClassTest.testAll":11,"org.easymock.tests.MockClassControlTest.testEquals":69,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":57,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":394,"org.easymock.tests2.CaptureTest.testCaptureAll":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":273,"org.easymock.tests.MockNameTest.defaultName":376,"org.easymock.tests2.UsageConstraintsTest.testMatches":159,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":372,"org.easymock.samples.ExampleTest.voteForRemovals":76,"org.easymock.tests.UsageVarargTest.allKinds":480,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":432,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":274,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":367,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":447,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":488,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":441,"org.easymock.tests2.UsageConstraintsTest.greaterThan":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":454,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":46,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":442,"org.easymock.samples.ExampleTest.voteForRemoval":73,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":244,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":258,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":403,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":41,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":48,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":125,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":62,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":136,"org.easymock.tests2.CaptureTest.testCaptureFirst":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":126,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":95,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":336,"org.easymock.tests2.UsageTest.moreThanOneArgument":85,"org.easymock.tests2.CaptureTest.testCapture2_2446744":201,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":260,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":323,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":479,"org.easymock.tests.GenericTest.testBridgedEquals":302,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":414,"org.easymock.tests.UsageExpectAndReturnTest.longType":332,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":271,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":492,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":395,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":463,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":166,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":393,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":369,"org.easymock.tests.UsageCallCountTest.tooManyCalls":415,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":513,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":337,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":366,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":20,"org.easymock.tests.MockingTest.testNiceClassMocking":299,"org.easymock.tests.MockingTest.testClassMocking":295,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":491,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":408,"org.easymock.tests2.UsageConstraintsTest.testContains":156,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":17,"org.easymock.tests2.UsageConstraintsTest.testFind":147,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":278,"org.easymock.tests.MockTypeTest.fromEasyMockClass":400,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":416,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":122,"org.easymock.tests.UsageExpectAndReturnTest.object":339,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":494,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":474,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":484,"org.easymock.tests.UsageTest.exactCallCountByLastCall":287,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":465,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":268,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":517,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":82,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":469,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":427,"org.easymock.tests.MockClassControlTest.testHashCode":68,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":209,"org.easymock.tests2.EasyMockSupportTest.testVerify":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":110,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":504,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":466,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":425,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":405,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":203,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":96,"org.easymock.tests.UsageVarargTest.varargCharAccepted":473,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":435,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":328,"org.easymock.tests2.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":134,"org.easymock.tests.DefaultClassInstantiatorTest.object":61,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":60,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":482,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":518,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":364,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":249,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":208,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":44,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":383,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":457,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":14,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":66,"org.easymock.tests2.UsageTest.resumeIfFailure":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":445,"org.easymock.tests2.StubTest.stubWithReturnValue":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":226,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":167,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":338,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":321,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":509,"org.easymock.samples.SupportTest.voteForRemovals":80,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":389,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":327,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":184,"org.easymock.tests.UsageExpectAndThrowTest.object":387,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":270,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":164,"org.easymock.tests2.DelegateToTest.testWrongClass":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":55,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":300,"org.easymock.tests.UsageStrictMockTest.range":421,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":239,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":19,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":388,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":99,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":285,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":265,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":462,"org.easymock.tests2.CaptureTest.testCaptureNone":197,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":499,"org.easymock.tests.UsageUnorderedTest.message":293,"org.easymock.tests.UsageVerifyTest.twoReturns":434,"org.easymock.tests.UsageVarargTest.varargByteAccepted":478,"org.easymock.tests2.ThreadingTest.testThreadSafe":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":113,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":412,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":485,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":191,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":511,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":325,"org.easymock.tests2.UsageConstraintsTest.any":154,"org.easymock.tests2.StubTest.stub":97,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":356,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":326,"org.easymock.tests.UsageExpectAndThrowTest.longType":380,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":439,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":355,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":174,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":213,"org.easymock.tests.LimitationsTest.mockNativeMethod":49,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":248,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.tests2.NameTest.nameForMocksControl":182,"org.easymock.tests2.MockedExceptionTest.testMockedException":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":103,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":284,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":121,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":381,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":35,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":31,"org.easymock.tests.MockingTest.testNicePartialClassMocking":53,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":40,"org.easymock.tests2.CompareToTest.testNotComparable":490,"org.easymock.tests2.CaptureTest.testCaptureLast":196,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":246,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":303,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":25,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":165,"org.easymock.tests.MockingTest.testTwoMocks":51,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":385,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":169,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":521,"org.easymock.samples.ExampleTest.removeNonExistingDocument":77,"org.easymock.tests.UsageStrictMockTest.differentMethods":422,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":252,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":210,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":500,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":437,"org.easymock.tests2.ConstraintsToStringTest.andToString":508,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":259,"org.easymock.tests2.MockBuilderTest.testCreateMockString":34,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":104,"org.easymock.tests.UsageExpectAndThrowTest.floatType":379,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":101,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":186,"org.easymock.tests.UsageVerifyTest.twoThrows":433,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":83,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":13,"org.easymock.samples.ExampleTest.voteAgainstRemoval":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":45,"org.easymock.tests.LimitationsTest.privateConstructor":263,"org.easymock.tests2.UsageConstraintsTest.testNotNull":168,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":368,"org.easymock.tests2.UsageTest.defaultResetToNice":91,"org.easymock.samples.ExampleTest.voteAgainstRemovals":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":344,"org.easymock.tests.UsageVarargTest.differentLength":475,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":247,"org.easymock.tests2.CallbackTest.callback":207,"org.easymock.tests2.UsageConstraintsTest.equals":146,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":515,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":242,"org.easymock.tests.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":290,"org.easymock.tests.UsageCallCountTest.tooFewCalls":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":267,"org.easymock.tests.UsageThrowableTest.throwCheckedException":365,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":514,"org.easymock.tests.MockingTest.testStrictClassMocking":294,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":24,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":375,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":251,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":23,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":188,"org.easymock.tests2.CompareToTest.testGreateOrEqual":519,"org.easymock.tests.ObjectMethodsTest.testHashCode":483,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":496,"org.easymock.tests2.NameTest.nameForNiceMock":181,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":261,"org.easymock.tests2.DependencyTest.testInterfaceMocking":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":495,"org.easymock.samples.ExampleTest.addDocument":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":114,"org.easymock.tests2.DelegateToTest.testStubDelegate":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":118,"org.easymock.tests2.AnswerTest.stubAnswer":187,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":419,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":227,"org.easymock.tests.UsageVarargTest.varargLongAccepted":477,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":314,"org.easymock.tests.UsageExpectAndReturnTest.floatType":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.tests2.ConstraintsToStringTest.orToString":501,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":217,"org.easymock.tests.UsageThrowableTest.noUpperLimit":362,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":143,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":234,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":194,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":520,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":436,"org.easymock.tests2.UsageConstraintsTest.testSame":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":330,"org.easymock.samples.SupportTest.addDocument":79,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":220,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":105,"org.easymock.tests.GenericTest.testPackageScope":56,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":216,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":297,"org.easymock.tests2.NameTest.nameForMock":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":341,"org.easymock.tests2.UsageStrictMockTest.differentMethods":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":229,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":391,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":481,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":456,"org.easymock.tests2.MockedExceptionTest.testRealException":18,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":516,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":289,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":360,"org.easymock.tests2.NameTest.nameForStrictMock":180,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":225,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":120,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":39,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":238,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":438,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":163,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":27,"org.easymock.tests2.UsageStrictMockTest.range":175,"org.easymock.tests2.UsageConstraintsTest.lessThan":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":212,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":109,"org.easymock.tests2.CaptureTest.testCaptureRightOne":199,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":498,"org.easymock.tests2.UsageConstraintsTest.testOr":150,"org.easymock.tests.UsageRangeTest.combination":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageTest.wrongArguments":282,"org.easymock.tests2.MockBuilderTest.testWithConstructor":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":106,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":342,"org.easymock.tests.UsageVarargTest.varargShortAccepted":476,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":440,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":413,"org.easymock.tests2.UsageConstraintsTest.cmpTo":155,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":308,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CaptureTest.testCaptureFromStub":200,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":350,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":223,"org.easymock.tests.UsageTest.unexpectedCallWithArray":281,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":418,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":343,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":420,"org.easymock.tests2.UsageConstraintsTest.constraints":144,"org.easymock.samples.ExampleTest.addAndChangeDocument":78,"org.easymock.tests2.ConstraintsToStringTest.notToString":503,"org.easymock.tests.UsageStrictMockTest.testVerify":424,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":8,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":417,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":272,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":450,"org.easymock.tests.LimitationsTest.abstractClass":262,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":451,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":129}}]
