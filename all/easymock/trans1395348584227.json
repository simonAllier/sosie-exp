[{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[4,5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[8,9,10,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[11,12,13,14,14,15,15,8,16,9,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[11,12,13,96,14,15,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,8,16,9,119,120,121,17,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,65,138,139,140,141,142,143,144,145,146,147,148,149,18,150,151,152,153,154,10,155,156,157,158,159,160,161,71,72,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,19,20,21,190,22,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,73,74,75,219,220,221,222,223,224,225,226,227,228,229,230,231,23,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,76,77,247,24,248,249,250,251,25,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,78,79,293,80,81,294,295,296,297,7,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,26,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,2,3,369,370,371,372,373,374,375,376,377,378,0,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,1,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,27,421,28,422,423,424,425,426,427,428,429,430,431,29,31,32,432,33,34,35,36,433,434,37,38,40,435,436,91,437,438,439,440,441,95,442,443,444,445,41,446,447,448,449,450,451,452,453,454,455,44,45,456,46,47,48,49,457,50,458,459,51,52,53,54,460,461,55,56,57,58,462,463,59,60,464,465,466,467,468,469,470,471,472,473,474,92,475,93,94,476,477,478,479,61,480,481,62,482,483,484,485,486,487,488,489,490,63,491,492,493,494,495,64,496,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:422","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:54","sourceCode":"return new org.easymock.internal.Result(new ThrowingAnswer() , true)","type":"CtReturnImpl"},"failures":[123,124,125,126,127,128,156,161,164,169,173,175,176,177,178,179,180,74,244,245,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,498,280,345,346,26,347,435,441,466],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[170,171,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[140,319,326],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[106,113,114,115,116,117,130,135,138,139,140,141,142,143,144,145,146,147,148,149,72,181,231,23,232,233,234,235,236,237,283,287,288,289,290,295,299,300,301,328,335,340,345,346,380,396,428,429,430,431,29,34,37,40,95,49,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:217","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[11,12,13,96,14,15,97,98,99,100,101,102,103,104,105,107,113,114,115,116,117,8,16,17,123,124,125,126,127,128,131,133,134,65,18,150,151,152,153,154,155,156,161,71,72,162,163,164,165,166,167,168,169,173,174,175,176,177,178,179,180,20,21,22,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,73,74,75,219,220,221,223,224,226,227,228,229,230,238,240,241,242,243,244,245,246,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,287,288,289,291,292,78,79,293,80,81,328,329,330,331,332,333,334,336,337,338,339,340,345,346,26,347,348,349,350,351,353,354,355,356,357,358,360,361,362,363,364,365,366,367,368,2,3,369,371,372,373,374,380,387,388,389,390,391,396,403,404,405,406,407,408,409,410,411,412,413,414,415,416,419,420,27,421,28,423,424,425,427,428,429,430,33,35,36,38,40,435,436,91,437,438,439,440,441,442,443,445,41,447,450,451,452,453,454,455,44,456,46,47,48,50,53,55,56,57,58,463,59,60,466,467,473,474,92,475,93,94,61,62,63,64],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[171,172,285,286],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[114,217],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[499,27,421,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[468],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[364,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[438],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[310,448,451,452],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":351,"org.easymock.tests2.UsageTest.argumentsOrdered":443,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":161,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":314,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":439,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":96,"org.easymock.tests2.DelegateToTest.testReturnException":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":124,"org.easymock.tests.MockingTest.testPartialClassMocking":20,"org.easymock.tests.MockClassControlTest.testToString":232,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":468,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":485,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":254,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":420,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":358,"org.easymock.tests2.UsageTest.wrongArguments":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":242,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":402,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":289,"org.easymock.samples.ExampleTest.answerVsDelegate":101,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":25,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":192,"org.easymock.tests2.UsageConstraintsTest.testNull":354,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":46,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":237,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":337,"org.easymock.tests2.CaptureTest.testPrimitive":406,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":246,"org.easymock.tests.UsageTest.moreThanOneArgument":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":273,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":152,"org.easymock.tests.UsageTest.argumentsOrdered":166,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":108,"org.easymock.tests.UsageVarargTest.varargIntAccepted":221,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":214,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":5,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":218,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":86,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":396,"org.easymock.tests.ReplayStateInvalidUsageTest.times":146,"org.easymock.tests2.DependencyTest.testClassMocking":417,"org.easymock.tests2.AnswerTest.answer":447,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":431,"org.easymock.tests2.CaptureTest.testAnd":403,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":249,"org.easymock.tests2.UsageTest.strictResetToDefault":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":332,"org.easymock.tests2.DelegateToTest.testDelegate":427,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":112,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":269,"org.easymock.tests.LimitationsTest.mockFinalMethod":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":117,"org.easymock.tests2.DependencyTest.testClassMockingSupport":418,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":76,"org.easymock.tests2.CaptureTest.testCapture1_2446744":407,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":429,"org.easymock.tests.UsageThrowableTest.throwError":173,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":140,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":251,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":497,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.MockingTest.testInterfaceMocking":190,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":486,"org.easymock.tests2.UsageTest.niceToStrict":438,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":255,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":33,"org.easymock.tests2.MockBuilderTest.testCreateMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":493,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":399,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":83,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":263,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":333,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":287,"org.easymock.tests.UsageOverloadedMethodTest.overloading":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":490,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":280,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":364,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":205,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":363,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":412,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":222,"org.easymock.tests2.EasyMockSupportClassTest.testAll":61,"org.easymock.tests.MockClassControlTest.testEquals":236,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":271,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":42,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":430,"org.easymock.tests2.CaptureTest.testCaptureAll":404,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":115,"org.easymock.tests.MockNameTest.defaultName":160,"org.easymock.tests2.UsageConstraintsTest.testMatches":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":153,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":138,"org.easymock.samples.ExampleTest.voteForRemovals":105,"org.easymock.tests.UsageVarargTest.allKinds":230,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":116,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":179,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":473,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests2.UsageConstraintsTest.greaterThan":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":480,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":239,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":54,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":187,"org.easymock.samples.ExampleTest.voteForRemoval":102,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":460,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":388,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":252,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":6,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":49,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":435,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":18,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":330,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":123,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":422,"org.easymock.tests2.CaptureTest.testCaptureFirst":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":331,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":445,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":201,"org.easymock.tests2.CaptureTest.testCapture2_2446744":415,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":390,"org.easymock.tests2.UsageTest.moreThanOneArgument":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":322,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":229,"org.easymock.tests.GenericTest.testBridgedEquals":119,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":136,"org.easymock.tests.UsageExpectAndReturnTest.longType":197,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":113,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":328,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":272,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":274,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":285,"org.easymock.tests.UsageCallCountTest.tooManyCalls":137,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":67,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":494,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":401,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":56,"org.easymock.tests.MockingTest.testNiceClassMocking":193,"org.easymock.tests.MockingTest.testClassMocking":189,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":130,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":30,"org.easymock.tests2.UsageConstraintsTest.testContains":362,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":26,"org.easymock.tests2.UsageConstraintsTest.testFind":353,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":156,"org.easymock.tests.MockTypeTest.fromEasyMockClass":250,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":455,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":291,"org.easymock.tests.UsageExpectAndReturnTest.object":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":336,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":224,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":301,"org.easymock.tests.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":157,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":446,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":210,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":219,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":279,"org.easymock.tests.ResultTest.createThrowResultToString":498,"org.easymock.tests.MockClassControlTest.testHashCode":235,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":377,"org.easymock.tests2.EasyMockSupportTest.testVerify":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":488,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":85,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":171,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":428,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":375,"org.easymock.tests.UsageVarargTest.varargCharAccepted":223,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageTest.openCallCountByLastCall":440,"org.easymock.tests.DefaultClassInstantiatorTest.object":181,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":170,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":299,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":489,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":261,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":1,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":376,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":52,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":64,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":87,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":233,"org.easymock.tests2.UsageTest.resumeIfFailure":444,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":24,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":126,"org.easymock.tests2.StubTest.stubWithReturnValue":466,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":203,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":371,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":320,"org.easymock.samples.SupportTest.voteForRemovals":99,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":89,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":266,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":499,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":326,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":448,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":159,"org.easymock.tests.UsageExpectAndThrowTest.object":264,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":3,"org.easymock.tests2.DelegateToTest.testWrongClass":425,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":275,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":276,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests.UsageStrictMockTest.range":80,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":343,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":335,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":265,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":477,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":165,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":66,"org.easymock.tests2.CaptureTest.testCaptureNone":411,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":7,"org.easymock.tests.UsageUnorderedTest.message":65,"org.easymock.tests.UsageVerifyTest.twoReturns":75,"org.easymock.tests.UsageVarargTest.varargByteAccepted":228,"org.easymock.tests2.ThreadingTest.testThreadSafe":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":491,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":134,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":302,"org.easymock.tests2.CaptureTest.testCapture_2617107":405,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":324,"org.easymock.tests2.UsageConstraintsTest.any":360,"org.easymock.tests2.StubTest.stub":465,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":125,"org.easymock.tests.UsageExpectAndThrowTest.longType":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":325,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":185,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":144,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":475,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":380,"org.easymock.tests.LimitationsTest.mockNativeMethod":17,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":9,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":394,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":476,"org.easymock.tests2.NameTest.nameForMocksControl":472,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":395,"org.easymock.tests2.MockedExceptionTest.testMockedException":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":481,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":164,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":454,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":22,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":258,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":36,"org.easymock.tests.MockingTest.testNicePartialClassMocking":21,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":48,"org.easymock.tests2.CaptureTest.testCaptureLast":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":392,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":77,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":60,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":357,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":369,"org.easymock.tests.MockingTest.testTwoMocks":19,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":262,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":442,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":373,"org.easymock.samples.ExampleTest.removeNonExistingDocument":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":398,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":142,"org.easymock.tests.UsageStrictMockTest.differentMethods":81,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":378,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":183,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":389,"org.easymock.tests2.ConstraintsToStringTest.andToString":88,"org.easymock.tests2.MockBuilderTest.testCreateMockString":40,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":482,"org.easymock.tests.UsageExpectAndThrowTest.floatType":256,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":479,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":450,"org.easymock.tests.UsageVerifyTest.twoThrows":74,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":63,"org.easymock.samples.ExampleTest.voteAgainstRemoval":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":53,"org.easymock.tests.LimitationsTest.privateConstructor":121,"org.easymock.tests2.UsageConstraintsTest.testNotNull":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":180,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":345,"org.easymock.tests2.UsageTest.defaultResetToNice":95,"org.easymock.samples.ExampleTest.voteAgainstRemovals":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":393,"org.easymock.tests.UsageVarargTest.differentLength":225,"org.easymock.tests2.CallbackTest.callback":467,"org.easymock.tests2.UsageConstraintsTest.equals":352,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":458,"org.easymock.tests.UsageTest.openCallCountByLastCall":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":348,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":244,"org.easymock.tests.UsageCallCountTest.tooFewCalls":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":290,"org.easymock.tests.UsageThrowableTest.throwCheckedException":177,"org.easymock.tests.MockingTest.testStrictClassMocking":188,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":169,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":397,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":57,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":147,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":463,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":452,"org.easymock.tests2.CompareToTest.testGreateOrEqual":500,"org.easymock.tests.ObjectMethodsTest.testHashCode":300,"org.easymock.tests2.NameTest.nameForNiceMock":471,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":391,"org.easymock.tests2.DependencyTest.testInterfaceMocking":419,"org.easymock.samples.ExampleTest.addDocument":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":496,"org.easymock.tests2.DelegateToTest.testStubDelegate":424,"org.easymock.tests2.AnswerTest.stubAnswer":451,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":79,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":433,"org.easymock.tests.UsageVarargTest.varargLongAccepted":227,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":313,"org.easymock.tests.UsageExpectAndReturnTest.floatType":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":41,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests2.ConstraintsToStringTest.orToString":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":384,"org.easymock.tests.UsageThrowableTest.noUpperLimit":174,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":349,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":341,"org.easymock.tests2.SerializationTest.test":421,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":408,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":195,"org.easymock.tests2.UsageConstraintsTest.testSame":355,"org.easymock.samples.SupportTest.addDocument":98,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":462,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":483,"org.easymock.tests.GenericTest.testPackageScope":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":383,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":191,"org.easymock.tests2.NameTest.nameForMock":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":206,"org.easymock.tests2.UsageStrictMockTest.differentMethods":94,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":459,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":268,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":241,"org.easymock.tests2.MockedExceptionTest.testRealException":347,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":344,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":69,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":243,"org.easymock.tests2.NameTest.nameForStrictMock":470,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":432,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":453,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":342,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":184,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":2,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":93,"org.easymock.tests2.UsageConstraintsTest.lessThan":374,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":312,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":487,"org.easymock.tests2.CaptureTest.testCaptureRightOne":413,"org.easymock.tests2.UsageConstraintsTest.testOr":356,"org.easymock.tests.UsageRangeTest.combination":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":45,"org.easymock.tests.UsageTest.wrongArguments":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":484,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":305,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":186,"org.easymock.tests.UsageVarargTest.varargShortAccepted":226,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":135,"org.easymock.tests2.UsageConstraintsTest.cmpTo":361,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":307,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":441,"org.easymock.tests2.CaptureTest.testCaptureFromStub":414,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":139,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":32,"org.easymock.tests.UsageTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":78,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":208,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":293,"org.easymock.tests2.UsageConstraintsTest.constraints":350,"org.easymock.samples.ExampleTest.addAndChangeDocument":107,"org.easymock.tests2.ConstraintsToStringTest.notToString":84,"org.easymock.tests.UsageStrictMockTest.testVerify":295,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":97,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":114,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":409,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":216,"org.easymock.tests.LimitationsTest.abstractClass":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":217,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":334}}]
