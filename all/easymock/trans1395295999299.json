[{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"result","callCount":"result"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,0,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,329,330,331,332,333,334,335,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,45,46,49,56,57,336,58,59,60,61,62,63,64,65,337,66,67,338,68,69,70,71,72,339,340,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,341,117,118,119,120,121,122,123,342,343,137,138,139,140,144,146,147,148,149,150,151,153,154,344,345,346,347,348,349,350,351,352,163,164,165,166,167,169,171,172,173,174,176,178,179,179,180,180,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,0,217,218,219,220,221,222,223,224,225,226,227,228,229,353,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,354,355,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,356,268,269,270,357,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[358],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[359,360],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[102,105],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[6,10,11,14,79,81,147,185,191,192,197,247,300],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[239,240],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[361,362,363,364,365,366,367],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[193,368],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[228],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[369],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[126,343,305],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[46,336,58,59,60,115,116,341,123,169,179,179,180,180,181,182,198,199,370,200,201,202,203,204,205,206,209,210,212,213,214,215,216,0,217,218,219,257,371,272,274,275,293,294,295,296,307,308,309,310,312,313],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[322],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[6,7,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,55,56,58,59,60,61,62,63,64,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,115,116,121,123,144,145,146,147,148,149,150,151,153,154,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,181,182,183,184,185,186,187,188,189,190,194,195,196,197,199,200,202,203,205,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,257,259,260,261,262,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[223,227,353],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[373,374,46,336,58,59,60,115,116,341,123,156,169,179,179,180,180,181,182,198,375,199,370,200,201,202,203,204,205,376,206,209,210,212,213,214,215,216,0,217,218,219,257,377,272,274,275,293,294,295,296,307,308,309,310,312,313],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[8,9,12,13,378,73,80,81,146,149,188,194,195,302],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[373,374,46,336,58,59,60,115,116,341,123,156,169,179,179,180,180,181,182,198,375,199,370,200,201,202,203,204,205,376,206,209,210,212,213,214,215,216,0,217,218,219,257,371,377,379,380,272,274,275,293,294,295,296,307,308,309,310,312,313],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":223,"org.easymock.tests2.UsageTest.argumentsOrdered":195,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":120,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.tests2.StubTest.stubWithReturnValue":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":361,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":91,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":274,"org.easymock.tests2.DelegateToTest.testReturnException":268,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":118,"org.easymock.tests.MockingTest.testPartialClassMocking":58,"org.easymock.samples.SupportTest.voteForRemovals":184,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":359,"org.easymock.tests.MockClassControlTest.testToString":157,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":27,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":343,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":15,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":354,"org.easymock.tests.UsageExpectAndThrowTest.object":25,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":240,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":362,"org.easymock.tests2.DelegateToTest.testWrongClass":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":153,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":229,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":74,"org.easymock.tests2.UsageTest.wrongArguments":188,"org.easymock.tests.UsageStrictMockTest.range":149,"org.easymock.samples.ConstructorCalledMockTest.testTax":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":139,"org.easymock.samples.ExampleTest.answerVsDelegate":172,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":283,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":374,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":307,"org.easymock.tests2.UsageConstraintsTest.testNull":225,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":26,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":285,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":202,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":162,"org.easymock.tests2.CaptureTest.testPrimitive":317,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":78,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.UsageTest.moreThanOneArgument":7,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":34,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":134,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":346,"org.easymock.tests2.CaptureTest.testCaptureNone":322,"org.easymock.tests.UsageUnorderedTest.message":73,"org.easymock.tests.UsageVerifyTest.twoReturns":81,"org.easymock.tests.UsageVarargTest.varargByteAccepted":43,"org.easymock.tests2.ThreadingTest.testThreadSafe":261,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":348,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageVarargTest.varargIntAccepted":37,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":52,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":358,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":181,"org.easymock.tests2.CaptureTest.testCapture_2617107":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":163,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":366,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":198,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":372,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":77,"org.easymock.tests2.UsageConstraintsTest.any":230,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":201,"org.easymock.tests2.StubTest.stub":305,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":167,"org.easymock.tests.UsageExpectAndThrowTest.longType":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":119,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":130,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.tests2.SerializationTest.testClass":272,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":267,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":297,"org.easymock.tests.LimitationsTest.mockNativeMethod":123,"org.easymock.tests.ReplayStateInvalidUsageTest.times":132,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":341,"org.easymock.tests2.AnswerTest.answer":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":101,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":254,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":379,"org.easymock.tests2.CaptureTest.testAnd":314,"org.easymock.tests2.UsageTest.strictResetToDefault":186,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":0,"org.easymock.tests2.NameTest.nameForMocksControl":292,"org.easymock.tests2.MockedExceptionTest.testMockedException":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":280,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":63,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":352,"org.easymock.tests2.DelegateToTest.testDelegate":271,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":19,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":209,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":203,"org.easymock.tests.MockingTest.testNicePartialClassMocking":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":30,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":214,"org.easymock.tests2.CaptureTest.testCaptureLast":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":121,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":340,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":313,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":228,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":114,"org.easymock.tests.MockingTest.testTwoMocks":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":339,"org.easymock.tests2.CaptureTest.testCapture1_2446744":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":23,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":194,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":245,"org.easymock.tests.UsageThrowableTest.throwError":102,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":126,"org.easymock.samples.ExampleTest.removeNonExistingDocument":177,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":128,"org.easymock.tests.UsageStrictMockTest.differentMethods":150,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":263,"org.easymock.tests2.MockBuilderTest.testCreateMockString":206,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":155,"org.easymock.tests.UsageExpectAndThrowTest.floatType":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":5,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":236,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":248,"org.easymock.tests.UsageVerifyTest.twoThrows":80,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":295,"org.easymock.samples.PartialClassMockTest.testGetArea":169,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":164,"org.easymock.samples.ExampleTest.voteAgainstRemoval":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":345,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":344,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":16,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests2.UsageConstraintsTest.testNotNull":244,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":109,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":200,"org.easymock.tests2.MockBuilderTest.testCreateMock":204,"org.easymock.tests2.UsageTest.defaultResetToNice":193,"org.easymock.samples.ExampleTest.voteAgainstRemovals":171,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":97,"org.easymock.tests.UsageVarargTest.differentLength":40,"org.easymock.tests2.CallbackTest.callback":266,"org.easymock.tests.UsageTest.openCallCountByLastCall":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":24,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":281,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":220,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":335,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":137,"org.easymock.tests.UsageCallCountTest.tooFewCalls":50,"org.easymock.tests.UsageOverloadedMethodTest.overloading":71,"org.easymock.tests2.ConstraintsToStringTest.nullToString":369,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":234,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":67,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":93,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":70,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":233,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":140,"org.easymock.tests.UsageThrowableTest.throwCheckedException":106,"org.easymock.tests2.EasyMockSupportClassTest.testAll":293,"org.easymock.tests.MockClassControlTest.testEquals":161,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":32,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":371,"org.easymock.tests2.CaptureTest.testCaptureAll":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":112,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":312,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":309,"org.easymock.tests2.UsageConstraintsTest.testMatches":235,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":133,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":311,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":4,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":124,"org.easymock.tests.ObjectMethodsTest.testHashCode":142,"org.easymock.samples.ExampleTest.voteForRemovals":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":365,"org.easymock.tests2.NameTest.nameForNiceMock":291,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":265,"org.easymock.tests.UsageVarargTest.allKinds":45,"org.easymock.tests2.DependencyTest.testInterfaceMocking":207,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":364,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":113,"org.easymock.samples.BasicClassMockTest.testPrintContent":182,"org.easymock.samples.ExampleTest.addDocument":175,"org.easymock.tests2.DelegateToTest.testStubDelegate":269,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":108,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":298,"org.easymock.tests2.AnswerTest.stubAnswer":249,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":122,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":147,"org.easymock.tests2.UsageConstraintsTest.greaterThan":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":62,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":219,"org.easymock.tests.UsageVarargTest.varargLongAccepted":42,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":151,"org.easymock.samples.ExampleTest.voteForRemoval":173,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":262,"org.easymock.tests.UsageExpectAndReturnTest.floatType":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":215,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":180,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":238,"org.easymock.tests.UsageThrowableTest.noUpperLimit":103,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":221,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":46,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":319,"org.easymock.tests2.SerializationTest.test":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":278,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":104,"org.easymock.tests2.UsageConstraintsTest.testSame":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":83,"org.easymock.samples.SupportTest.addDocument":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":117,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":356,"org.easymock.tests2.CaptureTest.testCaptureFirst":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":279,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":69,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":129,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":89,"org.easymock.tests.GenericTest.testPackageScope":115,"org.easymock.tests2.CaptureTest.testCapture2_2446744":326,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":264,"org.easymock.tests2.UsageTest.moreThanOneArgument":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":351,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":205,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":44,"org.easymock.tests.GenericTest.testBridgedEquals":360,"org.easymock.tests2.NameTest.nameForMock":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":54,"org.easymock.tests.UsageExpectAndReturnTest.longType":85,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":110,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":376,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":94,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":33,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":347,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":242,"org.easymock.tests2.UsageStrictMockTest.differentMethods":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":1,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":368,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":86,"org.easymock.tests.UsageCallCountTest.tooManyCalls":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":29,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":64,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":49,"org.easymock.tests2.MockedExceptionTest.testRealException":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":90,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":107,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":135,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":308,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":375,"org.easymock.tests2.NameTest.nameForStrictMock":290,"org.easymock.tests2.UsageConstraintsTest.testContains":232,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":48,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":257,"org.easymock.tests2.UsageConstraintsTest.testFind":224,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":72,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":259,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":213,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":260,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":144,"org.easymock.tests.UsageExpectAndReturnTest.object":92,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":239,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":216,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":199,"org.easymock.tests2.UsageStrictMockTest.range":302,"org.easymock.tests2.UsageConstraintsTest.lessThan":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":363,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":39,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":143,"org.easymock.tests.UsageTest.exactCallCountByLastCall":14,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":56,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":277,"org.easymock.tests2.CaptureTest.testCaptureRightOne":324,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":349,"org.easymock.tests2.UsageConstraintsTest.testOr":227,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":367,"org.easymock.tests.UsageRangeTest.combination":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":210,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":98,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":66,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests.MockClassControlTest.testHashCode":160,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":156,"org.easymock.tests2.EasyMockSupportTest.testVerify":288,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":87,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":95,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":350,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":334,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":65,"org.easymock.tests.UsageVarargTest.varargShortAccepted":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":53,"org.easymock.tests2.UsageConstraintsTest.cmpTo":231,"org.easymock.tests.UsageVarargTest.varargCharAccepted":38,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":355,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":299,"org.easymock.tests2.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":287,"org.easymock.tests.DefaultClassInstantiatorTest.object":136,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":333,"org.easymock.tests2.CaptureTest.testCaptureFromStub":325,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":125,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":370,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":141,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":378,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":22,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":380,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":105,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":146,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":51,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":96,"org.easymock.tests2.UsageConstraintsTest.constraints":222,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":217,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":148,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":21,"org.easymock.samples.ExampleTest.addAndChangeDocument":178,"org.easymock.tests2.ConstraintsToStringTest.notToString":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":99,"org.easymock.tests.UsageStrictMockTest.testVerify":152,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":330,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":296,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":145,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":111,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":320,"org.easymock.tests2.UsageTest.resumeIfFailure":196,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":165,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":373,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":88,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":282,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":36}}]
