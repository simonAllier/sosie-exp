[{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[29,30,31,32,33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,2,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,9,19,77,78,79,80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[83,84,85,86,87,88,89,90,38,91,92,39,93,40,41,42,43,44,45,46,47,48,49,50,51,94,95,52,96,97,98,99,100,101,102,2,103,4,104,53,5,6,7,105,106,107,108,109,110,111,112,113,114,115,116,117,54,118,119,120,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,8,141,142,75,76,143,144,145,146,147,148,149,150,151,152,153,154,155,9,10,156,157,11,158,12,159,13,14,15,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,16,191,192,193,194,195,196,197,198,199,200,1,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,19,216,217,20,218,21,219,77,22,23,220,24,0,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,78,79,80,81,238,239,240,241,242,243,244,82,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,25,265,266,26,27,28,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[268,269,270,242,244],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[176],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,17,286,287,18],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[288,289,290,276,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[248],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[302,303,252,262,263],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[2,305,56,62,68,72,74,122,128,134,138,140,8,157,255,263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[30,31,89,90,38,39,40,41,42,43,44,45,306,96,97,98,99,100,101,102,2,103,104,53,7,32,116,117,118,273,307,308,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,309,310,311,141,142,143,144,312,145,146,147,148,149,150,151,313,314,315,155,10,159,14,15,274,162,164,165,167,288,288,289,289,172,175,176,177,178,179,180,181,316,317,182,183,318,319,320,184,321,322,185,186,323,324,189,190,16,191,192,193,194,195,196,197,198,199,200,1,201,202,203,204,205,206,207,208,210,211,212,213,276,214,279,281,283,284,17,19,216,217,218,219,77,325,220,24,0,222,224,225,226,227,228,229,230,231,326,232,233,234,235,237,300,80,239,240,241,242,243,82,245,246,248,251,252,254,255,258,259,260,261,262,263,264,266,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[276,293,294,301,327,328,329,330,331],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[333,334],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[271,272,335,336,116,337,338,118,119,273,120,339,340,341,309,310,311,342,343,333,344,345,346,334,347,348,349,350,351,352,353,152,153,154,274,288,288,289,289,173,174,175,176,178,179,180,275,181,290,354,355,316,317,182,356,357,358,359,360,183,361,362,318,363,364,365,366,367,368,369,370,371,319,372,373,374,375,376,320,377,378,184,321,322,185,323,324,276,215,277,279,280,379,281,282,283,284,294,285,17,18,380,381,382,300,301,78,79,80,383,384],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[203,209,252,253,255,256,257,258,259,264],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[385,386,3,4,5,6,8,9,10,12,14,20,22,23,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:95","sourceCode":"int = java.lang.Integer.int","type":"CtAssignmentImpl"},"failures":[83,93,144,312,145,146,14,15,190,16,192,194,195,200,202,205,212,220,244,27,28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[203],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[189,16,204,210,387],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[191,192],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[333,334],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[388,389,390,391,392,83,84,85,86,393,87,88,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,271,419,420,421,422,272,423,424,29,30,31,89,90,38,91,425,426,92,427,428,429,39,93,40,41,42,43,44,45,430,431,432,433,46,47,48,49,50,51,94,434,95,52,435,306,385,96,97,98,99,100,101,102,436,437,438,439,440,2,103,3,4,104,53,5,6,7,105,106,107,441,108,109,110,111,112,113,114,115,268,32,269,335,336,116,337,117,54,338,118,119,273,120,442,443,444,445,446,447,448,449,450,33,451,34,452,453,454,455,307,456,305,457,35,36,308,37,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,339,340,341,309,310,458,311,459,460,342,8,141,142,75,76,143,343,333,344,345,346,334,347,461,462,463,464,465,270,466,467,468,469,470,471,144,312,145,146,147,148,149,150,151,313,314,315,472,348,349,350,351,352,353,152,153,154,155,9,10,473,156,157,474,475,11,158,12,159,13,14,15,160,161,274,162,163,164,165,166,167,476,168,288,289,169,170,171,172,173,174,175,176,177,178,179,180,275,332,181,290,354,355,316,317,182,356,357,358,359,360,183,361,362,318,363,364,365,366,367,368,369,370,371,319,372,373,374,375,376,320,377,378,184,321,322,185,477,186,323,324,478,187,479,188,189,190,16,191,480,192,193,194,195,196,197,481,198,199,200,1,201,202,203,204,205,206,207,208,209,210,211,212,213,276,214,215,277,279,280,379,281,282,283,284,482,294,285,17,18,19,216,217,20,218,21,219,77,325,22,23,220,24,380,381,483,382,484,485,0,486,487,221,222,223,488,489,490,491,492,493,494,495,496,224,497,498,499,500,501,502,225,226,227,228,229,230,231,326,232,233,234,235,236,503,504,505,506,507,508,509,510,511,512,237,513,514,515,516,517,518,519,520,521,522,523,300,301,78,79,80,81,238,239,524,240,241,242,243,244,82,383,384,245,246,525,247,248,249,526,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,527,25,265,266,26,27,28,267],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[528,529,3,12,530,531],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[204,532],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[528,529,3,12,530,531],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[293,301,327,328,329,330,331],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[103,4,5,6,8,314,315,155,9,10,159,14,15,217,20,22,23,533,534,535,536,531,537,538,266,27,28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[304,539,540],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[391,83,84,393,87,88,271,421,422,272,423,424,425,427,428,429,434,435,306,385,2,103,3,4,5,6,7,110,8,144,314,315,350,351,352,155,9,10,11,12,159,13,14,15,160,176,355,182,357,321,322,323,324,16,203,277,279,280,283,284,285,17,18,19,217,20,218,21,22,23,220,24,224,497,226,228,230,231,232,233,504,505,506,507,237,513,238,25,266,26,27,28,267],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":191,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.UsageTest.argumentsOrdered":23,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":451,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":21,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":169,"org.easymock.tests2.DelegateToTest.testReturnException":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":47,"org.easymock.tests.MockingTest.testPartialClassMocking":309,"org.easymock.tests.MockClassControlTest.testToString":350,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":503,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":55,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":318,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":246,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":415,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":327,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":197,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":141,"org.easymock.tests2.UsageTest.wrongArguments":20,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":518,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":432,"org.easymock.samples.ExampleTest.answerVsDelegate":163,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":272,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":460,"org.easymock.tests2.UsageConstraintsTest.testNull":193,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":178,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":233,"org.easymock.tests2.CaptureTest.testPrimitive":254,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":143,"org.easymock.tests.UsageTest.moreThanOneArgument":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":74,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":149,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":473,"org.easymock.tests.UsageTest.argumentsOrdered":6,"org.easymock.tests.UsageVarargTest.varargIntAccepted":107,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":537,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":98,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":501,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":483,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":444,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":102,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":399,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":535,"org.easymock.tests.ReplayStateInvalidUsageTest.times":468,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":237,"org.easymock.tests2.DependencyTest.testClassMocking":383,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":456,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":491,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":420,"org.easymock.tests2.CaptureTest.testAnd":251,"org.easymock.tests2.UsageTest.strictResetToDefault":216,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":292,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":229,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":475,"org.easymock.tests2.DelegateToTest.testDelegate":250,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":398,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":70,"org.easymock.tests.LimitationsTest.mockFinalMethod":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":440,"org.easymock.tests2.DependencyTest.testClassMockingSupport":384,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":314,"org.easymock.tests2.CaptureTest.testCapture1_2446744":255,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":489,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":463,"org.easymock.tests.UsageThrowableTest.throwError":39,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":422,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":502,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":151,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":402,"org.easymock.samples.PartialClassMockTest.testGetArea":274,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":464,"org.easymock.tests.MockingTest.testInterfaceMocking":458,"org.easymock.tests2.CompareToTest.testLessOrEqual":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":99,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":30,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":428,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":56,"org.easymock.tests2.UsageTest.niceToStrict":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":367,"org.easymock.tests2.ThreadingTest.testChangeDefault":524,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":304,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":281,"org.easymock.tests2.MockBuilderTest.testCreateMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":515,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":530,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":64,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":230,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":391,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":430,"org.easymock.tests.UsageOverloadedMethodTest.overloading":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":376,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":52,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":132,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":89,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":260,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":441,"org.easymock.tests2.EasyMockSupportClassTest.testAll":183,"org.easymock.tests.MockClassControlTest.testEquals":152,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":119,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":72,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":490,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":438,"org.easymock.tests2.CaptureTest.testCaptureAll":252,"org.easymock.tests.MockNameTest.defaultName":429,"org.easymock.tests2.UsageConstraintsTest.testMatches":202,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":461,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":150,"org.easymock.samples.ExampleTest.voteForRemovals":167,"org.easymock.tests.UsageVarargTest.allKinds":115,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":439,"org.easymock.samples.BasicClassMockTest.testPrintContent":174,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":44,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":25,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":526,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":498,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":51,"org.easymock.tests2.UsageConstraintsTest.greaterThan":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":312,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":182,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":403,"org.easymock.samples.ExampleTest.voteForRemoval":164,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":347,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":240,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":356,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":286,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":423,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":275,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":395,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":154,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":227,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":46,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":525,"org.easymock.tests2.CaptureTest.testCaptureFirst":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":228,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":24,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":128,"org.easymock.tests2.UsageTest.moreThanOneArgument":217,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":242,"org.easymock.tests2.CaptureTest.testCapture2_2446744":263,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":305,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":114,"org.easymock.tests.GenericTest.testBridgedEquals":120,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":87,"org.easymock.tests.UsageExpectAndReturnTest.longType":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":436,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":225,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":73,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":287,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":209,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":71,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":417,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":147,"org.easymock.tests.UsageCallCountTest.tooManyCalls":88,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":517,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":43,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":321,"org.easymock.tests.MockingTest.testNiceClassMocking":342,"org.easymock.tests.MockingTest.testClassMocking":340,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":392,"org.easymock.tests2.UsageConstraintsTest.testContains":200,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":278,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":80,"org.easymock.tests2.UsageConstraintsTest.testFind":192,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":38,"org.easymock.tests.MockTypeTest.fromEasyMockClass":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":188,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":11,"org.easymock.tests.UsageExpectAndReturnTest.object":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":516,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":232,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":328,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":92,"org.easymock.tests.UsageTest.exactCallCountByLastCall":7,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":156,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":137,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":105,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":95,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":493,"org.easymock.tests.MockClassControlTest.testHashCode":353,"org.easymock.tests2.EasyMockSupportTest.testVerify":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":369,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":389,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":488,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":527,"org.easymock.tests.UsageVarargTest.varargCharAccepted":108,"org.easymock.tests2.CaptureTest.testCaptureMultiple":303,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":37,"org.easymock.tests2.UsageTest.openCallCountByLastCall":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":539,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":235,"org.easymock.tests.DefaultClassInstantiatorTest.object":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":388,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":425,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":370,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":511,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":492,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":401,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":316,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":61,"org.easymock.tests.CapturesMatcherTest.test":302,"org.easymock.tests.ReplayStateInvalidCallsTest.times":407,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":416,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":320,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":351,"org.easymock.tests2.UsageTest.resumeIfFailure":220,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":271,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":49,"org.easymock.tests2.StubTest.stubWithReturnValue":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":293,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":130,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":210,"org.easymock.tests2.SerializationTest.testAllMockedMethod":215,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":307,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":299,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":531,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":495,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":67,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":308,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":486,"org.easymock.tests.UsageExpectAndThrowTest.object":65,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":269,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":207,"org.easymock.tests2.DelegateToTest.testWrongClass":249,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":405,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":96,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":97,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":288,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":484,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":66,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":283,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":470,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":431,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":528,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":397,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":31,"org.easymock.tests2.CaptureTest.testCaptureNone":259,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":520,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":113,"org.easymock.tests2.ThreadingTest.testThreadSafe":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":372,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":86,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":427,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":173,"org.easymock.tests2.CaptureTest.testCapture_2617107":253,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":538,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":76,"org.easymock.tests2.UsageConstraintsTest.any":198,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":467,"org.easymock.tests2.StubTest.stub":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":48,"org.easymock.tests.UsageExpectAndThrowTest.longType":58,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":346,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":466,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":26,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests2.SerializationTest.testClass":276,"org.easymock.tests.LimitationsTest.mockNativeMethod":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":140,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":273,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":510,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":413,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":267,"org.easymock.tests2.NameTest.nameForMocksControl":507,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":512,"org.easymock.tests2.MockedExceptionTest.testMockedException":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":362,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":479,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":59,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":311,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":175,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":284,"org.easymock.tests.MockingTest.testNicePartialClassMocking":310,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":180,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":508,"org.easymock.tests2.CaptureTest.testCaptureLast":258,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":315,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":412,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":196,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":324,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":208,"org.easymock.tests.MockingTest.testTwoMocks":341,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":409,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":63,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":212,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":523,"org.easymock.samples.ExampleTest.removeNonExistingDocument":476,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":514,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":465,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":494,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":522,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":344,"org.easymock.tests2.ConstraintsToStringTest.andToString":536,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":241,"org.easymock.tests2.MockBuilderTest.testCreateMockString":18,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":348,"org.easymock.tests.UsageExpectAndThrowTest.floatType":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":363,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":221,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":319,"org.easymock.samples.ExampleTest.voteAgainstRemoval":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":34,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":29,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":317,"org.easymock.tests.LimitationsTest.privateConstructor":336,"org.easymock.tests2.UsageConstraintsTest.testNotNull":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":45,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":78,"org.easymock.tests2.UsageTest.defaultResetToNice":325,"org.easymock.samples.ExampleTest.voteAgainstRemovals":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":509,"org.easymock.tests.UsageVarargTest.differentLength":110,"org.easymock.tests2.CallbackTest.callback":238,"org.easymock.tests2.UsageConstraintsTest.equals":480,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":290,"org.easymock.tests.UsageTest.openCallCountByLastCall":104,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":75,"org.easymock.tests.UsageCallCountTest.tooFewCalls":84,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":433,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":521,"org.easymock.tests.UsageThrowableTest.throwCheckedException":42,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":529,"org.easymock.tests.MockingTest.testStrictClassMocking":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":54,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":323,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":513,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":322,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":469,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":223,"org.easymock.tests.ObjectMethodsTest.testHashCode":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":330,"org.easymock.tests2.NameTest.nameForNiceMock":506,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":411,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":243,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":406,"org.easymock.tests2.DependencyTest.testInterfaceMocking":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":329,"org.easymock.samples.ExampleTest.addDocument":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":373,"org.easymock.tests2.DelegateToTest.testStubDelegate":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.stubAnswer":222,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":159,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":482,"org.easymock.tests.UsageVarargTest.varargLongAccepted":112,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":139,"org.easymock.tests.UsageExpectAndReturnTest.floatType":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":300,"org.easymock.tests2.ConstraintsToStringTest.orToString":533,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":289,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":500,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests.UsageThrowableTest.noUpperLimit":93,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":205,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":190,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":380,"org.easymock.tests2.SerializationTest.test":214,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":256,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":122,"org.easymock.tests2.UsageConstraintsTest.testSame":194,"org.easymock.samples.SupportTest.addDocument":171,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":477,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":396,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":364,"org.easymock.tests.GenericTest.testPackageScope":118,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":499,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":459,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":394,"org.easymock.tests2.NameTest.nameForMock":504,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":133,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":296,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":125,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":69,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":146,"org.easymock.tests2.MockedExceptionTest.testRealException":81,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":424,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":453,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":266,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":471,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":142,"org.easymock.tests2.NameTest.nameForStrictMock":505,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":379,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":540,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":179,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":382,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":206,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":345,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":279,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":400,"org.easymock.tests2.UsageConstraintsTest.lessThan":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":226,"org.easymock.tests2.CaptureTest.testCaptureRightOne":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":368,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":519,"org.easymock.tests2.UsageConstraintsTest.testOr":195,"org.easymock.tests.UsageRangeTest.combination":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":176,"org.easymock.tests.UsageTest.wrongArguments":4,"org.easymock.tests2.MockBuilderTest.testWithConstructor":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":365,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":134,"org.easymock.tests.UsageVarargTest.varargShortAccepted":111,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":334,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":393,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":414,"org.easymock.tests2.UsageConstraintsTest.cmpTo":199,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":487,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests2.CaptureTest.testCaptureFromStub":262,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":462,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":280,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":410,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":85,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":135,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":13,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.samples.ExampleTest.addAndChangeDocument":168,"org.easymock.tests2.ConstraintsToStringTest.notToString":534,"org.easymock.tests.UsageStrictMockTest.testVerify":161,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":170,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests2.CompareToTest.testGreateThan":532,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":437,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":100,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":127,"org.easymock.tests.LimitationsTest.abstractClass":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":101,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":231}}]
