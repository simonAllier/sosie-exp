[{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[55],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[56,57,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[6,59,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,57,72,73,74,75,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[5,77,6,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[90,91,92,93,94,95,96,97,98,99,100],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:381","sourceCode":"while (java.lang.Class<?> != null) {\n    for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n        final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n        if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n            java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[104,105,106,107,108,109,110,65,66,67,68,111,112,113,57,114,115,116,117,72,74,75,76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0,0,1,1,2,5,77,118,6,119,24,120,121,122,31,86,123,87,35,124,38,40,41,60,47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[125],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[126,127,128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,0,1,1,2,3,4,5,77,6,7,8,9,10,11,12,13,130,131,132,14,133,134,15,16,17,18,19,20,21,119,135,22,23,24,25,136,120,137,138,26,139,27,28,29,30,140,31,32,33,34,87,35,36,141,37,38,142,143,144,145,146,39,147,148,40,149,150,151,152,153,154,155,156,157,41,158,159,160,161,162,42,163,164,165,166,167,168,169,170,171,172,43,44,60,45,46,47,173,174,175,48,176,177,178,49,50,51,52,179,180,53,181,182,183,184,185,186,54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[187,188],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[189,190,191,192,193,2,194,195,125,196,197,198,199,200,5,104,105,106,6,59,8,9,10,11,201,12,13,202,203,204,205,206,207,208,209,210,211,15,16,212,17,18,19,21,23,24,25,26,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,187,231,232,233,234,235,236,237,238,239,56,240,241,242,243,244,129,245,246,247,248,249,250,94,98,29,31,33,34,36,251,252,65,253,254,255,256,257,258,39,40,41,42,259,127,260,261,111,113,262,263,264,265,266,128,267,268,269,270,271,272,273,114,115,116,45,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,48,295,296,297,298,299,300,301,302,303,50,51,52,304,305,306,307,308,72,309,310,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[77,10,13,101,312,313,121,122,86,314,124],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[196,198,104,315,202,203,316,204,205,317,318,206,207,208,209,319,210,211,21,22,92,93,320,321,228,229,230,187,231,232,233,234,235,236,188,237,238,239,56,240,241,242,243,244,129,245,246,322,247,248,249,250,262,263,264,265,266,57,114,323,324,117,295,325,326,296,297,327,328,298,58,302,303,329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":187,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":308,"org.easymock.tests2.UsageTest.argumentsOrdered":68,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":225,"org.easymock.tests2.StubTest.stubWithReturnValue":227,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":86,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":247,"org.easymock.tests2.SerializationTest.testAllMockedMethod":7,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":89,"org.easymock.tests.MockingTest.testPartialClassMocking":50,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":63,"org.easymock.samples.SupportTest.voteForRemovals":189,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":60,"org.easymock.tests.MockClassControlTest.testToString":181,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":152,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":40,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":95,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":245,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":302,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":303,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":236,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":296,"org.easymock.tests2.UsageTest.wrongArguments":66,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":115,"org.easymock.samples.ExampleTest.answerVsDelegate":90,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":44,"org.easymock.tests2.UsageConstraintsTest.testNull":232,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":17,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":33,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":186,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":130,"org.easymock.tests2.CaptureTest.testPrimitive":204,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":298,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests.UsageTest.moreThanOneArgument":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":144,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":212,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":260,"org.easymock.tests2.CaptureTest.testCaptureNone":207,"org.easymock.tests.UsageUnorderedTest.message":117,"org.easymock.tests.UsageVerifyTest.twoReturns":113,"org.easymock.tests2.ThreadingTest.testThreadSafe":194,"org.easymock.tests.UsageTest.argumentsOrdered":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":158,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":262,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":84,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":328,"org.easymock.tests2.UsageConstraintsTest.any":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":266,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":169,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":315,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":213,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests.LimitationsTest.mockNativeMethod":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":293,"org.easymock.tests2.AnswerTest.answer":94,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":47,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":188,"org.easymock.tests2.CaptureTest.testAnd":202,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":133,"org.easymock.tests2.UsageTest.strictResetToDefault":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":122,"org.easymock.tests2.NameTest.nameForMocksControl":110,"org.easymock.tests2.MockedExceptionTest.testMockedException":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":310,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":52,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":15,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":34,"org.easymock.tests.MockingTest.testNicePartialClassMocking":51,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":19,"org.easymock.tests.LimitationsTest.mockFinalMethod":176,"org.easymock.tests2.CaptureTest.testCaptureLast":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":323,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":235,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":13,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":246,"org.easymock.tests.MockingTest.testTwoMocks":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":55,"org.easymock.tests2.CaptureTest.testCapture1_2446744":205,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":274,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":249,"org.easymock.tests.UsageThrowableTest.throwError":267,"org.easymock.tests.UsageStrictMockTest.differentMethods":116,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":167,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":125,"org.easymock.tests2.MockBuilderTest.testCreateMockString":38,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":149,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":146,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":97,"org.easymock.tests.UsageVerifyTest.twoThrows":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":118,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":41,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":263,"org.easymock.samples.ExampleTest.voteAgainstRemoval":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":259,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":127,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":24,"org.easymock.tests2.UsageTest.niceToStrict":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":153,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":172,"org.easymock.tests.LimitationsTest.privateConstructor":175,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":313,"org.easymock.tests2.UsageConstraintsTest.testNotNull":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":273,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":137,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":31,"org.easymock.tests2.UsageTest.defaultResetToNice":256,"org.easymock.tests2.MockBuilderTest.testCreateMock":35,"org.easymock.samples.ExampleTest.voteAgainstRemovals":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":160,"org.easymock.tests2.CallbackTest.callback":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":119,"org.easymock.tests.UsageTest.openCallCountByLastCall":309,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":61,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":220,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":261,"org.easymock.tests.UsageOverloadedMethodTest.overloading":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":162,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":240,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":11,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":56,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":208,"org.easymock.tests.UsageThrowableTest.throwCheckedException":270,"org.easymock.tests2.EasyMockSupportClassTest.testAll":39,"org.easymock.tests.MockClassControlTest.testEquals":185,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":46,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":70,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":62,"org.easymock.tests.MockingTest.testStrictClassMocking":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":131,"org.easymock.tests2.CaptureTest.testCaptureAll":203,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":325,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":12,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":10,"org.easymock.tests2.UsageConstraintsTest.testMatches":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":99,"org.easymock.samples.ExampleTest.voteForRemovals":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":83,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":197,"org.easymock.tests2.NameTest.nameForNiceMock":109,"org.easymock.tests.UsageVarargTest.allKinds":58,"org.easymock.tests2.DependencyTest.testInterfaceMocking":199,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":81,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":159,"org.easymock.tests2.DelegateToTest.testStubDelegate":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":163,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":272,"org.easymock.tests2.AnswerTest.stubAnswer":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":324,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":114,"org.easymock.tests2.UsageConstraintsTest.greaterThan":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":85,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":171,"org.easymock.samples.ExampleTest.voteForRemoval":191,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":195,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":292,"org.easymock.tests.UsageExpectAndReturnTest.floatType":276,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":20,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":244,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":251,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":229,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":54,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":142,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":317,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":217,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":166,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":268,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":275,"org.easymock.tests2.UsageConstraintsTest.testSame":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":145,"org.easymock.tests2.CaptureTest.testCaptureFirst":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":218,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":150,"org.easymock.tests.GenericTest.testPackageScope":45,"org.easymock.tests2.CaptureTest.testCapture2_2446744":210,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":196,"org.easymock.tests2.UsageTest.moreThanOneArgument":65,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":36,"org.easymock.tests.GenericTest.testBridgedEquals":173,"org.easymock.tests2.NameTest.nameForMock":107,"org.easymock.tests.UsageExpectAndReturnTest.longType":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":326,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":286,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":37,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":322,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":126,"org.easymock.tests2.UsageStrictMockTest.differentMethods":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":282,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":88,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":297,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":271,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":9,"org.easymock.tests.MockingTest.testNiceClassMocking":179,"org.easymock.tests.MockingTest.testClassMocking":178,"org.easymock.tests2.UsageConstraintsTest.testContains":239,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":28,"org.easymock.tests2.NameTest.nameForStrictMock":108,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":26,"org.easymock.tests2.UsageConstraintsTest.testFind":231,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":301,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":140,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":18,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":93,"org.easymock.tests.UsageExpectAndReturnTest.object":284,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":143,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":129,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":29,"org.easymock.tests2.UsageStrictMockTest.range":105,"org.easymock.tests2.UsageConstraintsTest.lessThan":250,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":80,"org.easymock.tests.UsageTest.exactCallCountByLastCall":311,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":295,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":139,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":82,"org.easymock.tests2.CaptureTest.testCaptureRightOne":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":154,"org.easymock.tests2.UsageConstraintsTest.testOr":234,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":71,"org.easymock.tests.UsageRangeTest.combination":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":16,"org.easymock.tests.UsageTest.wrongArguments":74,"org.easymock.tests2.MockBuilderTest.testWithConstructor":121,"org.easymock.tests.MockClassControlTest.testHashCode":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":151,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":155,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":100,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":321,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":320,"org.easymock.tests2.UsageConstraintsTest.cmpTo":238,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":96,"org.easymock.tests2.UsageTest.openCallCountByLastCall":254,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":255,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":226,"org.easymock.tests.DefaultClassInstantiatorTest.object":165,"org.easymock.tests2.CaptureTest.testCaptureFromStub":319,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":30,"org.easymock.tests.UsageTest.unexpectedCallWithArray":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":269,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":57,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":134,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":288,"org.easymock.tests2.CaptureTest.testCapture":102,"org.easymock.tests2.UsageConstraintsTest.constraints":230,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":23,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":183,"org.easymock.tests.CapturesMatcherTest.test":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":42,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":182,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":318,"org.easymock.tests2.UsageTest.resumeIfFailure":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":264,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":280,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":43,"org.easymock.tests.LimitationsTest.abstractClass":174,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":221}}]
