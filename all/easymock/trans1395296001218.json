[{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[19,20,21,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[22,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[24,25,26,27,28,29,30,31,32],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).endsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[24,26,27,28,29,30,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[34,35,36,37,38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[39,40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[41],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[43,31,44,45],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[46,47],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:827","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,22,69,70,71,23,72,73,74,75,76,77,78,79,80,81,82,82,83,83,84,85,86,87,88,89,90,91,92,93,25,94,95,96,97,98,99,19,100,40,101,102,103,104,105,106,107,108,109,110,20,111,112,113,31,45,114,32,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[150],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[151],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[152,153,154,155,156,157,0,158,159,160,161,162,163,164,165,166,167,49,168,169,50,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,51,1,210,2,3,211,212,213,214,215,216,217,218,52,53,54,55,56,219,57,220,221,58,222,223,224,225,226,227,34,228,229,230,231,232,233,234,235,236,151,237,238,239,240,241,242,4,5,6,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,59,60,61,62,63,276,277,278,279,280,281,64,65,66,67,282,283,284,285,286,287,288,289,290,291,292,293,68,22,69,70,71,23,72,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,7,331,332,8,9,333,334,335,336,337,338,339,340,341,342,343,344,73,74,75,76,77,78,79,80,345,346,347,348,349,350,81,351,352,35,353,354,355,356,357,358,82,82,83,83,84,85,359,360,361,362,10,363,364,39,365,366,367,368,369,370,371,86,87,88,89,90,91,92,93,25,94,95,96,372,373,99,19,374,100,40,101,102,103,104,105,106,107,108,109,110,20,375,33,376,377,378,379,380,381,382,48,383,384,385,386,387,388,389,390,41,391,392,393,394,395,396,397,398,399,400,18,401,402,403,404,405,406,407,408,409,111,112,113,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,36,433,37,434,38,31,44,45,114,32,435,436,437,438,439,440,441,442,443,444,445,446,447,11,12,13,14,115,118,448,449,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,450,451,452,453,454,455,456,457,458,459,460,461,462,463,15,464,465,16,17,466,467,468,144,145,146,147,469,148,149,470,471,472,473,474,475,476,46,477,47,478,479,480,481],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:114","sourceCode":"return this","type":"CtReturnImpl"},"failures":[482],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[483],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[412],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[158,159,162,163,484,485,231,237,5,6,330,332,363,368,369,465],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[393],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[300,401,404,405],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[158,159,162,163,485,231,237,5,6,330,332,363,368,369,465],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[152,153,154,155,156,157,0,158,159,160,161,162,163,164,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,209,51,1,210,2,3,211,212,213,214,215,217,218,55,56,57,222,223,224,225,226,227,34,228,230,231,232,233,234,236,237,238,239,240,241,242,4,5,6,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,60,61,276,277,278,279,280,281,66,282,283,284,285,286,287,288,289,290,291,292,293,68,318,319,320,321,323,324,325,328,329,330,7,331,332,8,9,333,334,335,73,74,75,76,77,78,79,80,345,346,347,348,349,350,81,351,352,35,353,354,355,356,357,358,82,82,83,83,84,85,359,360,361,362,10,363,364,39,365,366,367,368,369,370,371,86,87,90,91,92,93,94,95,96,372,373,99,19,374,100,40,101,102,103,106,107,108,109,375,33,376,377,379,380,381,382,48,383,385,386,387,388,389,390,41,391,392,393,394,395,396,397,398,399,400,18,403,404,405,406,407,408,409,111,112,113,410,411,413,414,415,416,417,418,419,425,36,433,37,38,31,44,45,114,435,436,437,438,439,440,441,442,443,444,445,446,447,11,12,13,14,122,125,135,141,455,462,463,15,464,465,16,17,466,467,144,145,146,147,469,148,149,470,471,472,473,474,475,476,46,477,47,478,479,480,481],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[82,83,482,486,24,25,487,488,489,490,491,31,114,32,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,146,149,492],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":377,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":157,"org.easymock.tests2.UsageTest.argumentsOrdered":369,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":445,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":304,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":39,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":351,"org.easymock.tests2.DelegateToTest.testReturnException":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":277,"org.easymock.tests.MockingTest.testPartialClassMocking":55,"org.easymock.tests.MockClassControlTest.testToString":75,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":21,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":178,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":125,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":26,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":383,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":238,"org.easymock.tests2.UsageTest.wrongArguments":363,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":461,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":320,"org.easymock.samples.ExampleTest.answerVsDelegate":35,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":50,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":221,"org.easymock.tests2.UsageConstraintsTest.testNull":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":100,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":444,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":80,"org.easymock.tests2.CaptureTest.testPrimitive":473,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":242,"org.easymock.tests.UsageTest.moreThanOneArgument":0,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":197,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":154,"org.easymock.tests.UsageTest.argumentsOrdered":163,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":340,"org.easymock.tests.UsageVarargTest.varargIntAccepted":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":30,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":117,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":349,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":455,"org.easymock.tests.ReplayStateInvalidUsageTest.times":290,"org.easymock.tests2.DependencyTest.testClassMocking":97,"org.easymock.tests2.AnswerTest.answer":18,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":311,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":409,"org.easymock.tests2.CaptureTest.testAnd":470,"org.easymock.tests2.UsageTest.strictResetToDefault":362,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":224,"org.easymock.tests2.DelegateToTest.testDelegate":38,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":193,"org.easymock.tests.LimitationsTest.mockFinalMethod":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":275,"org.easymock.tests2.DependencyTest.testClassMockingSupport":98,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":235,"org.easymock.tests2.CaptureTest.testCapture1_2446744":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":407,"org.easymock.tests.UsageThrowableTest.throwError":263,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":284,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":169,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":156,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":143,"org.easymock.samples.PartialClassMockTest.testGetArea":81,"org.easymock.tests.MockingTest.testInterfaceMocking":219,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":346,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":130,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":327,"org.easymock.tests2.UsageTest.niceToStrict":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":294,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":90,"org.easymock.tests2.MockBuilderTest.testCreateMock":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":138,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":458,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":187,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":440,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":177,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":1,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":318,"org.easymock.tests.UsageOverloadedMethodTest.overloading":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":134,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":389,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":254,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":388,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":47,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":201,"org.easymock.tests2.EasyMockSupportClassTest.testAll":122,"org.easymock.tests.MockClassControlTest.testEquals":79,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":61,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":195,"org.easymock.tests2.CaptureTest.testCaptureAll":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":408,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":273,"org.easymock.tests.MockNameTest.defaultName":216,"org.easymock.tests2.UsageConstraintsTest.testMatches":390,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":155,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":282,"org.easymock.samples.ExampleTest.voteForRemovals":356,"org.easymock.tests.UsageVarargTest.allKinds":209,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":4,"org.easymock.samples.BasicClassMockTest.testPrintContent":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":274,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":269,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":462,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":281,"org.easymock.tests2.UsageConstraintsTest.greaterThan":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":223,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":109,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":72,"org.easymock.samples.ExampleTest.voteForRemoval":353,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":415,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":110,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":102,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":51,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":361,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":437,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":276,"org.easymock.tests2.CaptureTest.testCaptureFirst":481,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":438,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":371,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":250,"org.easymock.tests2.CaptureTest.testCapture2_2446744":480,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":417,"org.easymock.tests2.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":312,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":208,"org.easymock.tests.GenericTest.testBridgedEquals":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":214,"org.easymock.tests.UsageExpectAndReturnTest.longType":246,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":435,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":271,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":196,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":396,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":152,"org.easymock.tests.UsageCallCountTest.tooManyCalls":215,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":460,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":268,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":145,"org.easymock.tests.MockingTest.testNiceClassMocking":58,"org.easymock.tests.MockingTest.testClassMocking":53,"org.easymock.tests2.UsageConstraintsTest.testContains":387,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":210,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":113,"org.easymock.tests2.UsageConstraintsTest.testFind":379,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":234,"org.easymock.tests.MockTypeTest.fromEasyMockClass":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":413,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":328,"org.easymock.tests.UsageExpectAndReturnTest.object":253,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":443,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":27,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":203,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":325,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":491,"org.easymock.tests.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":299,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":165,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":341,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":32,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":198,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":34,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":421,"org.easymock.tests.MockClassControlTest.testHashCode":78,"org.easymock.tests2.EasyMockSupportTest.testVerify":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":132,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":176,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":406,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":468,"org.easymock.tests.UsageVarargTest.varargCharAccepted":202,"org.easymock.tests2.CaptureTest.testCaptureMultiple":42,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":317,"org.easymock.tests2.UsageTest.openCallCountByLastCall":365,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":446,"org.easymock.tests.DefaultClassInstantiatorTest.object":68,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":175,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":323,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":485,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":133,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":266,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":420,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":107,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":141,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":76,"org.easymock.tests2.UsageTest.resumeIfFailure":370,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":279,"org.easymock.tests2.StubTest.stubWithReturnValue":467,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":24,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":252,"org.easymock.tests2.SerializationTest.testAllMockedMethod":45,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":310,"org.easymock.samples.SupportTest.voteForRemovals":360,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":190,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":43,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":316,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":401,"org.easymock.tests.UsageExpectAndThrowTest.object":188,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":167,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":394,"org.easymock.tests2.DelegateToTest.testWrongClass":37,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":334,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":335,"org.easymock.samples.ConstructorCalledMockTest.testTax":82,"org.easymock.tests.UsageStrictMockTest.range":332,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":448,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":442,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":189,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":92,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":119,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":319,"org.easymock.tests2.CaptureTest.testCaptureNone":477,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":338,"org.easymock.tests.UsageUnorderedTest.message":237,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":207,"org.easymock.tests2.ThreadingTest.testThreadSafe":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":136,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":212,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":84,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":326,"org.easymock.tests2.CaptureTest.testCapture_2617107":472,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":151,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":314,"org.easymock.tests2.UsageConstraintsTest.any":385,"org.easymock.tests2.StubTest.stub":466,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":174,"org.easymock.tests.UsageExpectAndThrowTest.longType":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":315,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":71,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":288,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":464,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":425,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests.LimitationsTest.mockNativeMethod":66,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":262,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":452,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":17,"org.easymock.tests2.NameTest.nameForMocksControl":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":454,"org.easymock.tests2.MockedExceptionTest.testMockedException":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":124,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":161,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":412,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":182,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":57,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":93,"org.easymock.tests.MockingTest.testNicePartialClassMocking":56,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":450,"org.easymock.tests2.CaptureTest.testCaptureLast":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":236,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":149,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":48,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":395,"org.easymock.tests.MockingTest.testTwoMocks":54,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":186,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":368,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":399,"org.easymock.samples.ExampleTest.removeNonExistingDocument":357,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":457,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":422,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":69,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":416,"org.easymock.tests2.MockBuilderTest.testCreateMockString":96,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":73,"org.easymock.tests.UsageExpectAndThrowTest.floatType":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":126,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":121,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":403,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":135,"org.easymock.samples.ExampleTest.voteAgainstRemoval":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":305,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":108,"org.easymock.tests.LimitationsTest.privateConstructor":65,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":490,"org.easymock.tests2.UsageConstraintsTest.testNotNull":398,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":270,"org.easymock.tests2.UsageTest.defaultResetToNice":367,"org.easymock.samples.ExampleTest.voteAgainstRemovals":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":306,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":451,"org.easymock.tests.UsageVarargTest.differentLength":204,"org.easymock.tests2.CallbackTest.callback":419,"org.easymock.tests2.UsageConstraintsTest.equals":378,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":104,"org.easymock.tests.UsageTest.openCallCountByLastCall":160,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":375,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":240,"org.easymock.tests.UsageCallCountTest.tooFewCalls":3,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":321,"org.easymock.tests.UsageThrowableTest.throwCheckedException":267,"org.easymock.tests.MockingTest.testStrictClassMocking":52,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":148,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":456,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":146,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":469,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":405,"org.easymock.tests.ObjectMethodsTest.testHashCode":324,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":29,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":418,"org.easymock.tests2.NameTest.nameForNiceMock":13,"org.easymock.tests2.DependencyTest.testInterfaceMocking":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":28,"org.easymock.samples.ExampleTest.addDocument":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":137,"org.easymock.tests2.DelegateToTest.testStubDelegate":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":142,"org.easymock.tests2.AnswerTest.stubAnswer":404,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":7,"org.easymock.tests.UsageVarargTest.varargLongAccepted":206,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":303,"org.easymock.tests.UsageExpectAndReturnTest.floatType":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":114,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":392,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":229,"org.easymock.tests.UsageThrowableTest.noUpperLimit":264,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":33,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":115,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":475,"org.easymock.tests2.SerializationTest.test":44,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":244,"org.easymock.tests2.UsageConstraintsTest.testSame":381,"org.easymock.samples.SupportTest.addDocument":359,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":127,"org.easymock.tests.GenericTest.testPackageScope":60,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":220,"org.easymock.tests2.NameTest.nameForMock":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":255,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":488,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":105,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":192,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":322,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":225,"org.easymock.tests2.MockedExceptionTest.testRealException":410,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":171,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":484,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":239,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":293,"org.easymock.tests2.NameTest.nameForStrictMock":12,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":89,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":411,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":118,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":393,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":70,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":87,"org.easymock.tests2.UsageStrictMockTest.range":465,"org.easymock.tests2.UsageConstraintsTest.lessThan":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":302,"org.easymock.tests2.CaptureTest.testCaptureRightOne":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":131,"org.easymock.tests2.UsageConstraintsTest.testOr":382,"org.easymock.tests.UsageRangeTest.combination":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":159,"org.easymock.tests2.MockBuilderTest.testWithConstructor":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":128,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":295,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":23,"org.easymock.tests.UsageVarargTest.varargShortAccepted":205,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":213,"org.easymock.tests2.UsageConstraintsTest.cmpTo":386,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":297,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":366,"org.easymock.tests2.CaptureTest.testCaptureFromStub":479,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":283,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":88,"org.easymock.tests.UsageTest.unexpectedCallWithArray":158,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":330,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":211,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":257,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":331,"org.easymock.tests2.UsageConstraintsTest.constraints":376,"org.easymock.samples.ExampleTest.addAndChangeDocument":358,"org.easymock.tests2.ConstraintsToStringTest.notToString":483,"org.easymock.tests.UsageStrictMockTest.testVerify":333,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":350,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":329,"org.easymock.tests2.CompareToTest.testGreateThan":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":272,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":347,"org.easymock.tests.LimitationsTest.abstractClass":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":249,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":441,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":199}}]
