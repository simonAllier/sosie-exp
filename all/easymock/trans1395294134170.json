[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[15,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"toStringMethod"}},{"position":"org.easymock.internal.RecordState:173","failures":[21],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[22,23,3,9,10,12,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[67,21,68],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[69,70,71,72,73,74],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[75,76,77,78],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,15],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[92,93,94,95,22,23,1,3,4,7,8,9,10,12,24,96,26,97,98,99,27,100,28,29,30,31,32,33,34,35,101,102,103,104,105,106,36,107,37,38,108,39,40,109,41,42,43,110,16,111,112,17,113,114,115,116,117,118,119,120,48,49,121,50,51,52,53,54,55,122,56,123,124,125,126,127,128,129,57,58,130,131,132,59,60,61,62,63,133,64,65,66,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[135],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[136],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:70","failures":[137,138,139,140,22,141,142,143,144,145,146,76,147,148,149,150,151,77,152,23,153,154,155,156,157,158,159,160,161,78,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,109,55,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,63,133],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[194,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[196,197,136],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,79,80,214,92,93,94,95,137,215,138,139,140,22,141,216,142,143,144,145,146,76,147,148,149,150,151,77,152,23,153,154,155,156,157,158,159,160,161,78,217,218,219,220,1,3,4,221,5,6,7,8,222,82,9,10,12,162,163,164,165,166,167,168,169,170,171,172,173,174,175,223,24,224,225,226,227,13,228,176,229,230,96,25,231,26,232,97,233,234,235,236,237,238,239,240,241,242,243,244,245,246,98,99,247,248,249,250,251,27,252,100,28,29,30,253,254,255,31,32,33,34,256,257,258,259,35,177,260,261,262,263,264,101,102,265,266,267,268,269,67,270,21,271,272,273,274,275,276,277,278,279,280,103,104,281,282,283,105,106,284,285,36,286,107,287,37,38,288,108,39,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,40,323,109,41,42,43,110,15,19,20,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,16,394,395,111,112,17,113,114,396,115,397,398,116,117,118,119,120,399,400,48,401,402,403,49,121,50,51,404,405,52,53,54,406,407,408,409,410,411,412,413,414,415,416,69,70,71,72,417,73,74,55,418,419,420,178,179,122,421,422,423,424,425,426,427,428,194,429,430,18,195,431,432,433,434,435,436,437,438,439,440,441,442,443,68,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,56,463,464,465,466,180,467,468,123,124,125,469,470,471,472,473,474,475,181,182,183,184,185,476,477,478,479,186,187,188,189,190,480,481,482,483,126,484,485,127,128,486,487,488,489,191,490,129,57,58,130,491,131,132,492,493,59,60,61,192,193,62,494,63,133,64,65,66,134,495,496,497,498],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[80,81,83,86,87,88,499,89,90,91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[194,429,430,18,195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[2,11],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[69,70,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[15,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[501],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[216,31,52],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[0,198,198,199,199,200,201,202,203,205,207,213,79,137,138,139,140,22,141,142,143,144,145,146,76,147,148,149,150,151,77,152,23,153,154,155,156,157,158,159,160,161,78,217,218,219,3,5,7,8,10,12,162,163,164,165,166,167,168,169,170,171,172,173,174,175,223,24,224,225,226,227,13,176,96,25,231,26,233,234,235,236,237,238,239,240,241,98,27,252,100,28,29,30,253,254,255,31,32,33,34,258,259,35,101,67,270,21,271,272,273,278,279,280,103,104,281,283,105,106,285,36,286,107,287,37,38,288,108,39,289,290,295,298,308,314,317,318,319,320,321,322,40,109,41,42,43,110,15,19,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,370,371,373,389,390,391,392,393,396,397,398,117,119,120,400,48,401,402,403,49,121,50,51,404,405,52,53,54,408,409,412,413,414,415,416,55,418,419,420,178,179,421,422,423,424,425,426,427,428,429,430,18,431,432,433,449,455,180,474,181,182,183,184,185,476,477,478,186,187,188,189,190,481,486,487,488,489,191,490,129,57,58,131,192,193,62,63,133,64,65,66,134,496,497,498],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[270,271,317,396,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[92,93,94,95,100,28,31,32,109,43,121,51,52,53,55,57,58,63,133,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[502,503,504,505,50,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[1,6,13,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[278,379,448,455,184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[80,81,86,87,88,89,90],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[198,199,79,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[399],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[0,198,198,199,199,209,210,79,80,1,3,4,221,5,6,7,8,82,9,10,12,223,24,225,226,227,13,176,229,230,96,25,231,26,232,97,238,239,240,274,275,280,103,104,281,105,106,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,15,20,367,368,369,370,371,373,376,16,17,406,69,70,71,72,417,73,74,194,429,430,18,195,467,468,123,124,125,469,470,471,472,473,474,475,128],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[241,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":141,"org.easymock.tests2.UsageTest.argumentsOrdered":32,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":49,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":289,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":68,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":30,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":208,"org.easymock.tests2.DelegateToTest.testReturnException":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":487,"org.easymock.tests.MockingTest.testPartialClassMocking":370,"org.easymock.tests.MockClassControlTest.testToString":123,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":214,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":302,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":324,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":86,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":478,"org.easymock.samples.ExampleTest.answerVsDelegate":201,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":17,"org.easymock.tests2.UsageConstraintsTest.testNull":143,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":375,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":225,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":471,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":39,"org.easymock.tests2.CaptureTest.testPrimitive":165,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":185,"org.easymock.tests.UsageTest.moreThanOneArgument":121,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":343,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":391,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":407,"org.easymock.tests.UsageTest.argumentsOrdered":53,"org.easymock.tests.UsageVarargTest.varargIntAccepted":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":250,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":190,"org.easymock.tests.ReplayStateInvalidUsageTest.times":385,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":101,"org.easymock.tests2.DependencyTest.testClassMocking":256,"org.easymock.tests2.AnswerTest.answer":317,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":450,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":220,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":395,"org.easymock.tests2.CaptureTest.testAnd":162,"org.easymock.tests2.UsageTest.strictResetToDefault":252,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":287,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":411,"org.easymock.tests2.DelegateToTest.testDelegate":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":339,"org.easymock.tests.LimitationsTest.mockFinalMethod":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":416,"org.easymock.tests2.DependencyTest.testClassMockingSupport":257,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":119,"org.easymock.tests2.CaptureTest.testCapture1_2446744":166,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":218,"org.easymock.tests.UsageThrowableTest.throwError":421,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":379,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":112,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":45,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":393,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":316,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":372,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":497,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":128,"org.easymock.tests2.UsageTest.niceToStrict":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":136,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":5,"org.easymock.tests2.MockBuilderTest.testCreateMock":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":266,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":333,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":37,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":394,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":476,"org.easymock.tests.UsageOverloadedMethodTest.overloading":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":313,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":398,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":77,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":358,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":151,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":171,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":460,"org.easymock.tests.MockClassControlTest.testEquals":470,"org.easymock.tests2.EasyMockSupportClassTest.testAll":295,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":430,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":341,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":414,"org.easymock.tests2.CaptureTest.testCaptureAll":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":219,"org.easymock.tests.MockNameTest.defaultName":122,"org.easymock.tests2.UsageConstraintsTest.testMatches":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":392,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":377,"org.easymock.samples.ExampleTest.voteForRemovals":205,"org.easymock.tests.UsageVarargTest.allKinds":180,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":415,"org.easymock.samples.BasicClassMockTest.testPrintContent":210,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":427,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":247,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":272,"org.easymock.tests2.UsageConstraintsTest.greaterThan":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":401,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":26,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":74,"org.easymock.samples.ExampleTest.voteForRemoval":202,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":232,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":234,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":113,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":13,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":406,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":286,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":486,"org.easymock.tests2.CaptureTest.testCaptureFirst":175,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":107,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":354,"org.easymock.tests2.CaptureTest.testCapture2_2446744":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":100,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":451,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":10,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":466,"org.easymock.tests.GenericTest.testBridgedEquals":195,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":60,"org.easymock.tests.UsageExpectAndReturnTest.longType":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":412,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":285,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":342,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":400,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":389,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":345,"org.easymock.tests.UsageCallCountTest.tooManyCalls":61,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":426,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":103,"org.easymock.tests.MockingTest.testNiceClassMocking":376,"org.easymock.tests.MockingTest.testClassMocking":368,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":491,"org.easymock.tests2.UsageConstraintsTest.testContains":150,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":2,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":240,"org.easymock.tests2.UsageConstraintsTest.testFind":142,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":433,"org.easymock.tests.MockTypeTest.fromEasyMockClass":111,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":138,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":62,"org.easymock.tests.UsageExpectAndReturnTest.object":357,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":108,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":462,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":87,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":485,"org.easymock.tests.UsageTest.exactCallCountByLastCall":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":480,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":408,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":80,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":457,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":363,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":397,"org.easymock.tests.MockClassControlTest.testHashCode":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":243,"org.easymock.tests2.EasyMockSupportTest.testVerify":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":305,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":409,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":396,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":217,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":177,"org.easymock.tests.UsageVarargTest.varargCharAccepted":461,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":456,"org.easymock.tests2.UsageTest.openCallCountByLastCall":253,"org.easymock.tests.DefaultClassInstantiatorTest.object":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":196,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":418,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":126,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":424,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":263,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":242,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":125,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":330,"org.easymock.tests.CapturesMatcherTest.test":501,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":364,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":344,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":314,"org.easymock.tests2.UsageTest.resumeIfFailure":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":489,"org.easymock.tests2.StubTest.stubWithReturnValue":279,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":81,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":356,"org.easymock.tests2.SerializationTest.testAllMockedMethod":20,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":449,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":84,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":503,"org.easymock.samples.SupportTest.voteForRemovals":213,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":245,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":336,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":455,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":318,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":482,"org.easymock.tests.UsageExpectAndThrowTest.object":334,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":156,"org.easymock.tests2.DelegateToTest.testWrongClass":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":192,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":193,"org.easymock.tests.UsageStrictMockTest.range":65,"org.easymock.samples.ConstructorCalledMockTest.testTax":198,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":276,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":335,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":7,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":387,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":477,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":504,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":498,"org.easymock.tests2.CaptureTest.testCaptureNone":170,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":44,"org.easymock.tests.UsageVerifyTest.twoReturns":58,"org.easymock.tests.UsageVarargTest.varargByteAccepted":465,"org.easymock.tests2.ThreadingTest.testThreadSafe":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":309,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":493,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":127,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":209,"org.easymock.tests2.CaptureTest.testCapture_2617107":164,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":184,"org.easymock.tests2.UsageConstraintsTest.any":148,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":384,"org.easymock.tests2.StubTest.stub":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndThrowTest.longType":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":417,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":383,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":98,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests.LimitationsTest.mockNativeMethod":474,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":366,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":262,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":110,"org.easymock.tests2.NameTest.nameForMocksControl":95,"org.easymock.tests2.MockedExceptionTest.testMockedException":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":297,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":405,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":328,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":373,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":223,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":8,"org.easymock.tests.MockingTest.testNicePartialClassMocking":371,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":227,"org.easymock.tests2.CaptureTest.testCaptureLast":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":85,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":260,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":120,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":106,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":157,"org.easymock.tests.MockingTest.testTwoMocks":369,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":332,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":161,"org.easymock.samples.ExampleTest.removeNonExistingDocument":206,"org.easymock.tests.UsageStrictMockTest.differentMethods":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":265,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":244,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":71,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":235,"org.easymock.tests2.MockBuilderTest.testCreateMockString":12,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":299,"org.easymock.tests.UsageExpectAndThrowTest.floatType":326,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":294,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":320,"org.easymock.tests.UsageVerifyTest.twoThrows":57,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":308,"org.easymock.samples.ExampleTest.voteAgainstRemoval":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":444,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":231,"org.easymock.tests.LimitationsTest.privateConstructor":473,"org.easymock.tests2.UsageConstraintsTest.testNotNull":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":428,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":238,"org.easymock.tests2.UsageTest.defaultResetToNice":255,"org.easymock.samples.ExampleTest.voteAgainstRemovals":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":362,"org.easymock.tests.UsageVarargTest.differentLength":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":261,"org.easymock.tests2.CallbackTest.callback":35,"org.easymock.tests2.UsageConstraintsTest.equals":216,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":229,"org.easymock.tests.UsageTest.openCallCountByLastCall":404,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":183,"org.easymock.tests.UsageCallCountTest.tooFewCalls":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":281,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":479,"org.easymock.tests.UsageThrowableTest.throwCheckedException":425,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":505,"org.easymock.tests.MockingTest.testStrictClassMocking":367,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":179,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":105,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":102,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":283,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":322,"org.easymock.tests.ObjectMethodsTest.testHashCode":484,"org.easymock.tests2.CompareToTest.testGreateOrEqual":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":89,"org.easymock.tests2.NameTest.nameForNiceMock":94,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":237,"org.easymock.tests2.DependencyTest.testInterfaceMocking":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":88,"org.easymock.samples.ExampleTest.addDocument":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":310,"org.easymock.tests2.DelegateToTest.testStubDelegate":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":315,"org.easymock.tests2.AnswerTest.stubAnswer":321,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":133,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":222,"org.easymock.tests.UsageVarargTest.varargLongAccepted":464,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.floatType":349,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":365,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":79,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":199,"org.easymock.tests.UsageThrowableTest.noUpperLimit":422,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":154,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":249,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":140,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":274,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":167,"org.easymock.tests2.SerializationTest.test":19,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":70,"org.easymock.tests2.UsageConstraintsTest.testSame":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":348,"org.easymock.samples.SupportTest.addDocument":212,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":282,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":300,"org.easymock.tests.GenericTest.testPackageScope":429,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":248,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":374,"org.easymock.tests2.NameTest.nameForMock":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":359,"org.easymock.tests2.UsageStrictMockTest.differentMethods":43,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":351,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":338,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":483,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":403,"org.easymock.tests2.MockedExceptionTest.testRealException":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":277,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":446,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":109,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":388,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":182,"org.easymock.tests2.NameTest.nameForStrictMock":93,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":221,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":137,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":226,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":275,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":155,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":72,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":3,"org.easymock.tests2.UsageStrictMockTest.range":42,"org.easymock.tests2.UsageConstraintsTest.lessThan":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":36,"org.easymock.tests2.CaptureTest.testCaptureRightOne":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":304,"org.easymock.tests2.UsageConstraintsTest.testOr":145,"org.easymock.tests.UsageRangeTest.combination":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":24,"org.easymock.tests.UsageTest.wrongArguments":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":301,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":468,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":360,"org.easymock.tests.UsageVarargTest.varargShortAccepted":463,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":73,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":59,"org.easymock.tests2.UsageConstraintsTest.cmpTo":149,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":254,"org.easymock.tests2.CaptureTest.testCaptureFromStub":173,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":378,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":4,"org.easymock.tests.UsageTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":361,"org.easymock.tests2.UsageConstraintsTest.constraints":22,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":64,"org.easymock.samples.ExampleTest.addAndChangeDocument":207,"org.easymock.tests.UsageStrictMockTest.testVerify":495,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":211,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":494,"org.easymock.tests2.CompareToTest.testGreateThan":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":413,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":188,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":14,"org.easymock.tests.LimitationsTest.abstractClass":472,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":189,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":38}}]
