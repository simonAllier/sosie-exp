[{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[0],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[46,79,173,176,183,196,329,330,331,204,332,215,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[3,17,38,40,41,42,43,44,47,334,53,55,57,58,60,61,70,71,335,74,75,76,77,78,79,81,82,83,84,88,89,90,91,114,115,336,117,118,121,122,130,137,140,337,141,142,143,144,145,338,339,150,151,152,340,341,342,177,178,186,188,189,190,191,192,193,195,196,197,206,215,216,217,218,221,222,223,233,235,236,239,240,241,343,344,345,346,347,348,247,258,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[351],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[352,353,0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[8,11,40,101,107,108,113,169,170,183,189,201,202,203,204,205,253,254,255,256,257,258,280,281],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:42","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n} else {\n    try {\n        org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n        java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n    } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,351,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,40,68,100,101,102,103,104,105,106,107,108,109,110,111,112,113,127,128,136,169,170,183,188,189,201,202,203,204,205,252,253,254,255,256,257,258,280,281],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,50,52,53,54,55,56,57,58,60,61,62,63,64,65,66,68,69,72,74,75,77,78,79,80,81,82,83,84,85,86,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,129,131,132,133,134,136,139,156,169,170,172,173,179,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,198,199,200,201,202,203,204,205,206,215,216,217,218,219,220,221,222,223,228,229,230,231,232,235,237,238,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[354],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[28,29,30,31,32,33,40,42,43,68,71,72,74,75,77,93,99,116,117,118,119,120,121,122,129,130,131,132,133,134,136,138,139,140,156,189,191,192,198,199,200,201,206,207,208,209,228,229,230,231,253,254,255,256,257,260,261,262,263,264,265,268,269,271,272,273,275,276,277,278,279,280,281,313,315,316,318,322,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:1039","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[40,42,43,81,355,356,357,358,189,191,192,195,196,197,216,258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[359],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[360,361],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[87,362],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[363,364,365,366,367,368,369,370,371,372,373,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"matched"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[375],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[376,377,96,99,378,379,380,381,382,383],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":215,"org.easymock.tests2.UsageTest.argumentsOrdered":89,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":182,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":84,"org.easymock.tests2.StubTest.stubWithReturnValue":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":376,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":24,"org.easymock.tests2.SerializationTest.testAllMockedMethod":98,"org.easymock.tests2.DelegateToTest.testReturnException":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":180,"org.easymock.tests.MockingTest.testPartialClassMocking":198,"org.easymock.samples.SupportTest.voteForRemovals":322,"org.easymock.tests.MockClassControlTest.testToString":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":282,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":31,"org.easymock.tests.UsageExpectAndThrowTest.object":292,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":355,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":21,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":379,"org.easymock.tests2.DelegateToTest.testWrongClass":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":281,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":201,"org.easymock.tests2.UsageTest.wrongArguments":82,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":374,"org.easymock.samples.ConstructorCalledMockTest.testTax":326,"org.easymock.tests.UsageStrictMockTest.range":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":226,"org.easymock.samples.ExampleTest.answerVsDelegate":314,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":59,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":116,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":293,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":74,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":61,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":155,"org.easymock.tests2.CaptureTest.testPrimitive":103,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":301,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":221,"org.easymock.tests.UsageTest.moreThanOneArgument":216,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":167,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":225,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":230,"org.easymock.tests2.CaptureTest.testCaptureNone":108,"org.easymock.tests.UsageUnorderedTest.message":258,"org.easymock.tests.UsageVerifyTest.twoReturns":197,"org.easymock.tests.UsageVarargTest.varargByteAccepted":250,"org.easymock.tests2.ThreadingTest.testThreadSafe":65,"org.easymock.tests.UsageTest.argumentsOrdered":222,"org.easymock.tests.UsageVarargTest.varargIntAccepted":244,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":238,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":338,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":253,"org.easymock.tests2.CaptureTest.testCapture_2617107":102,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":204,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":73,"org.easymock.tests2.UsageConstraintsTest.any":11,"org.easymock.tests2.StubTest.stub":45,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":257,"org.easymock.tests.UsageExpectAndThrowTest.longType":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":181,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":352,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":163,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":47,"org.easymock.tests2.SerializationTest.testClass":96,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests.LimitationsTest.mockNativeMethod":156,"org.easymock.tests.ReplayStateInvalidUsageTest.times":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":279,"org.easymock.tests2.AnswerTest.answer":34,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":126,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":370,"org.easymock.tests2.CaptureTest.testAnd":100,"org.easymock.tests2.UsageTest.strictResetToDefault":80,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":44,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":137,"org.easymock.tests2.NameTest.nameForMocksControl":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":229,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":56,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":220,"org.easymock.tests2.DelegateToTest.testDelegate":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":286,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":200,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":75,"org.easymock.tests.MockingTest.testNicePartialClassMocking":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":297,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":134,"org.easymock.tests2.CaptureTest.testCaptureLast":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":183,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":350,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":214,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":349,"org.easymock.tests2.CaptureTest.testCapture1_2446744":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":124,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":26,"org.easymock.tests.UsageThrowableTest.throwError":302,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":159,"org.easymock.samples.ExampleTest.removeNonExistingDocument":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":372,"org.easymock.tests.UsageStrictMockTest.differentMethods":192,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":161,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":364,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":345,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":361,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":67,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":368,"org.easymock.tests2.MockBuilderTest.testCreateMockString":78,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":148,"org.easymock.tests.UsageExpectAndThrowTest.floatType":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":232,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":17,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":35,"org.easymock.tests.UsageVerifyTest.twoThrows":196,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.PartialClassMockTest.testGetArea":328,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":254,"org.easymock.samples.ExampleTest.voteAgainstRemoval":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":139,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":283,"org.easymock.tests2.UsageTest.niceToStrict":83,"org.easymock.tests2.UsageConstraintsTest.testNotNull":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":309,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.UsageTest.defaultResetToNice":87,"org.easymock.tests2.MockBuilderTest.testCreateMock":76,"org.easymock.samples.ExampleTest.voteAgainstRemovals":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":275,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":369,"org.easymock.tests.UsageVarargTest.differentLength":247,"org.easymock.tests2.CallbackTest.callback":114,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":373,"org.easymock.tests.UsageTest.openCallCountByLastCall":219,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":291,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":57,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":203,"org.easymock.tests.UsageCallCountTest.tooFewCalls":236,"org.easymock.tests.UsageOverloadedMethodTest.overloading":172,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":15,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":271,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":119,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":171,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":353,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":14,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":227,"org.easymock.tests.UsageThrowableTest.throwCheckedException":306,"org.easymock.tests2.EasyMockSupportClassTest.testAll":30,"org.easymock.tests.MockClassControlTest.testEquals":154,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":212,"org.easymock.tests2.CaptureTest.testCaptureAll":101,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":125,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":121,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":170,"org.easymock.tests.MockNameTest.defaultName":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":336,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":118,"org.easymock.tests2.UsageConstraintsTest.testMatches":16,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":166,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":120,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":231,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":157,"org.easymock.tests.ObjectMethodsTest.testHashCode":146,"org.easymock.samples.ExampleTest.voteForRemovals":318,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":69,"org.easymock.tests2.NameTest.nameForNiceMock":143,"org.easymock.tests.UsageVarargTest.allKinds":252,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":195,"org.easymock.tests2.DependencyTest.testInterfaceMocking":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":381,"org.easymock.samples.BasicClassMockTest.testPrintContent":324,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":213,"org.easymock.samples.ExampleTest.addDocument":317,"org.easymock.tests2.DelegateToTest.testStubDelegate":93,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":308,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":38,"org.easymock.tests2.AnswerTest.stubAnswer":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":184,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":383,"org.easymock.tests2.UsageConstraintsTest.greaterThan":18,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":207,"org.easymock.tests.UsageVarargTest.varargLongAccepted":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":140,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.samples.ExampleTest.voteForRemoval":315,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":278,"org.easymock.tests.UsageExpectAndReturnTest.floatType":262,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":135,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":327,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests.UsageThrowableTest.noUpperLimit":303,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":19,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":79,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":2,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":185,"org.easymock.tests2.SerializationTest.test":97,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":105,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":377,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":54,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":261,"org.easymock.tests2.UsageConstraintsTest.testSame":7,"org.easymock.samples.SupportTest.addDocument":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":179,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":55,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":162,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":267,"org.easymock.tests.GenericTest.testPackageScope":310,"org.easymock.tests2.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":68,"org.easymock.tests2.CaptureTest.testCapture2_2446744":112,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":77,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":367,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":251,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":240,"org.easymock.tests2.NameTest.nameForMock":141,"org.easymock.tests.UsageExpectAndReturnTest.longType":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":210,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":272,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":298,"org.easymock.tests2.UsageStrictMockTest.differentMethods":43,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":228,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":264,"org.easymock.tests.UsageCallCountTest.tooManyCalls":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":209,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":235,"org.easymock.tests2.MockedExceptionTest.testRealException":51,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":287,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":202,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":168,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":117,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":234,"org.easymock.tests2.UsageConstraintsTest.testContains":13,"org.easymock.tests2.NameTest.nameForStrictMock":142,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":5,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":173,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":127,"org.easymock.tests.MockTypeTest.fromEasyMockClass":344,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":133,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":128,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":186,"org.easymock.tests.UsageExpectAndReturnTest.object":270,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":356,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":136,"org.easymock.tests.ErrorMessageTest.testGetters":357,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":71,"org.easymock.tests2.UsageStrictMockTest.range":42,"org.easymock.tests2.UsageConstraintsTest.lessThan":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":380,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":246,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":365,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":147,"org.easymock.tests.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":382,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":53,"org.easymock.tests2.CaptureTest.testCaptureRightOne":110,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":360,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":378,"org.easymock.tests.UsageRangeTest.combination":206,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":276,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":130,"org.easymock.tests.UsageTest.wrongArguments":218,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":175,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":363,"org.easymock.tests.MockClassControlTest.testHashCode":153,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":265,"org.easymock.tests2.EasyMockSupportTest.testVerify":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":273,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":330,"org.easymock.tests.UsageVarargTest.varargShortAccepted":248,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":174,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":123,"org.easymock.tests2.UsageConstraintsTest.cmpTo":12,"org.easymock.tests.UsageVarargTest.varargCharAccepted":245,"org.easymock.tests2.CaptureTest.testCaptureMultiple":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":332,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":39,"org.easymock.tests2.UsageTest.openCallCountByLastCall":85,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests.DefaultClassInstantiatorTest.object":259,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":63,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":329,"org.easymock.tests2.CaptureTest.testCaptureFromStub":111,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":158,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":335,"org.easymock.tests.UsageTest.unexpectedCallWithArray":217,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":305,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":188,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":237,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":274,"org.easymock.tests2.CaptureTest.testCapture":333,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":138,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":152,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.samples.ExampleTest.addAndChangeDocument":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":277,"org.easymock.tests.UsageStrictMockTest.testVerify":194,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":33,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":151,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":187,"org.easymock.tests2.CompareToTest.testGreateThan":375,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":211,"org.easymock.tests2.UsageTest.resumeIfFailure":90,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":343,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":256,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":358,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":58}}]
