[{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,0,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[7,8,10,168,336,337,341,342,365,449,455,456,476,477,478],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[488,489,92,152,490,491],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[492,293,312,318],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[493],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[14,17,18,36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[1,2,3,6,7,8,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,44,50,53,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,80,81,82,83,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,255,262,263,0,264,265,266,267,270,276,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,344,345,346,347,348,350,354,355,356,358,361,362,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,421,424,434,440,443,444,445,446,447,448,449,451,454,455,456,457,462,463,471,472,473,474,475,476,476,477,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[494,495,496,497,492,293,295,309,312,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,10,13,53,54,55,56,57,58,60,89,109,168,169,170,171,172,173,178,199,200,201,202,212,213,214,215,216,217,218,219,498,499,267,268,290,292,335,336,337,338,341,342,348,500,350,351,353,354,355,356,358,360,361,362,501,364,365,366,367,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,446,447,448,449,451,452,453,454,455,456,457,458,459,464,468,473,474,476,476,477,477,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"this","actual":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[267,268,269,290,349,352,357,359,360,363,452,476,476,477,477],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[502],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[43,50,121,411],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[266],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[503,504],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[169,171,172],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[168,169,170,171,172],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[505,506,507,508,509,268,357],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"position":"org.easymock.internal.LastControl:92","failures":[295,296,301,302,304,314,397,399,407],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:156","sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\")","type":"CtLocalVariableImpl"},"failures":[57,503,504],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[53,54,58],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:127","sourceCode":"for (int int = int ; int <= int ; int++) {\n    final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = java.util.List<org.easymock.internal.UnorderedBehavior>.get(int).getMessages(org.easymock.internal.Invocation);\n    java.util.List<org.easymock.internal.ErrorMessage>.addAll(java.util.List<org.easymock.internal.ErrorMessage>);\n    for (final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage : java.util.List<org.easymock.internal.ErrorMessage>) {\n        if (org.easymock.internal.ErrorMessage.isMatching()) {\n            int++;\n        } \n    }\n}","type":"CtForImpl"},"failures":[2,3,66,92,95,96,153,156,157,287,288,376,382,383],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[457],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[267,268,290,337,342,343,349,352,357,360,510,363,511,512,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,476,477],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[513],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[2,3,7,8,10,23,24,25,26,27,53,66,67,68,69,71,72,73,74,75,76,77,78,80,81,85,86,87,90,91,92,93,94,95,96,97,98,109,110,111,112,113,114,115,116,117,120,121,128,132,133,135,140,145,152,153,156,157,158,159,160,161,162,163,164,165,166,167,169,170,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,201,212,213,214,215,216,217,218,219,223,225,226,228,229,232,233,235,240,245,255,263,264,267,270,276,283,284,285,286,287,288,289,290,291,292,296,302,303,305,306,308,311,314,315,316,317,318,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,344,345,346,347,348,350,354,355,356,358,361,362,364,365,366,367,369,370,372,373,374,376,377,378,381,382,383,385,386,389,393,394,395,396,397,398,399,400,402,403,404,405,406,407,410,411,416,417,421,424,434,440,443,444,445,446,447,448,449,451,454,456,462,463,471,472,473,474,475,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[492,293,295,312,318],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[311],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[1,2,3,7,8,10,19,21,22,23,24,25,26,27,61,62,66,67,68,69,71,72,73,74,75,76,77,78,80,81,82,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,162,163,164,165,166,167,169,170,181,182,183,184,514,514,197,198,201,203,204,205,206,207,208,223,225,226,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,255,263,0,264,266,267,270,276,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,344,345,346,347,348,350,354,355,356,358,361,362,364,365,366,367,368,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,389,390,391,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,421,424,434,440,443,444,445,446,447,448,449,451,454,455,456,457,462,463,471,472,473,474,475,476,477,478,479,480,481,482,483,484,486,487],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[2,3,7,8,10,19,61,62,80,81,93,95,96,99,100,101,102,103,110,112,113,114,115,116,117,118,119,122,132,133,135,140,145,158,169,197,198,201,207,223,225,226,228,232,233,235,240,245,255,263,264,266,267,276,285,287,288,290,291,296,298,299,300,302,303,305,306,308,309,311,312,314,315,316,317,318,319,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,340,341,342,350,354,356,358,362,367,373,374,377,381,385,386,389,391,397,398,399,400,401,404,405,406,407,410,416,417,421,424,434,440,443,444,445,446,447,448,451,455,456,457,462,463,472,478,479,480,481,482,484],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[494,309,316,321],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":296,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests2.UsageTest.argumentsOrdered":383,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":38,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":378,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":475,"org.easymock.tests2.DelegateToTest.testReturnException":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":204,"org.easymock.tests.MockingTest.testPartialClassMocking":7,"org.easymock.tests.MockClassControlTest.testToString":214,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":392,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":130,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":463,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":505,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":118,"org.easymock.tests2.UsageTest.wrongArguments":376,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":183,"org.easymock.samples.ExampleTest.answerVsDelegate":480,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":178,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":12,"org.easymock.tests2.UsageConstraintsTest.testNull":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":446,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":219,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":331,"org.easymock.tests2.CaptureTest.testPrimitive":400,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":122,"org.easymock.tests.UsageTest.moreThanOneArgument":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":149,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":106,"org.easymock.tests.UsageTest.argumentsOrdered":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":14,"org.easymock.tests.UsageVarargTest.varargIntAccepted":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":509,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":260,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":103,"org.easymock.tests.ReplayStateInvalidUsageTest.times":193,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":513,"org.easymock.tests2.DependencyTest.testClassMocking":460,"org.easymock.tests2.AnswerTest.answer":386,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":347,"org.easymock.tests2.CaptureTest.testAnd":397,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":175,"org.easymock.tests2.UsageTest.strictResetToDefault":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":454,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":326,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":18,"org.easymock.tests2.DelegateToTest.testDelegate":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":145,"org.easymock.tests.LimitationsTest.mockFinalMethod":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":27,"org.easymock.tests2.DependencyTest.testClassMockingSupport":461,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":127,"org.easymock.tests2.CaptureTest.testCapture1_2446744":401,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":345,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":187,"org.easymock.tests.UsageThrowableTest.throwError":110,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":177,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":79,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":108,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":442,"org.easymock.samples.PartialClassMockTest.testGetArea":478,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":188,"org.easymock.tests.MockingTest.testInterfaceMocking":9,"org.easymock.tests2.CompareToTest.testLessOrEqual":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":429,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":131,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":89,"org.easymock.tests2.UsageTest.niceToStrict":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":28,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":354,"org.easymock.tests2.MockBuilderTest.testCreateMock":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":279,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":139,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":327,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":174,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":211,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":159,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":181,"org.easymock.tests.UsageOverloadedMethodTest.overloading":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":226,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":309,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":241,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":503,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":308,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":406,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":70,"org.easymock.tests2.EasyMockSupportClassTest.testAll":421,"org.easymock.tests.MockClassControlTest.testEquals":218,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":170,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":147,"org.easymock.tests2.CaptureTest.testCaptureAll":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":346,"org.easymock.tests.MockNameTest.defaultName":123,"org.easymock.tests2.UsageConstraintsTest.testMatches":310,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":107,"org.easymock.samples.ExampleTest.voteForRemovals":484,"org.easymock.tests.UsageVarargTest.allKinds":78,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":1,"org.easymock.samples.BasicClassMockTest.testPrintContent":474,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":26,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":116,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":257,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":265,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":59,"org.easymock.tests2.UsageConstraintsTest.greaterThan":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":20,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":457,"org.easymock.samples.ExampleTest.voteForRemoval":481,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":60,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":458,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":414,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":179,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":449,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":109,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":373,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":324,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":203,"org.easymock.tests2.CaptureTest.testCaptureFirst":410,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":325,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":385,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":229,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":237,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":416,"org.easymock.tests2.CaptureTest.testCapture2_2446744":409,"org.easymock.tests2.UsageTest.moreThanOneArgument":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":46,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":362,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":77,"org.easymock.tests.GenericTest.testBridgedEquals":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":166,"org.easymock.tests.UsageExpectAndReturnTest.longType":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":23,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":322,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":501,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":148,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":83,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":104,"org.easymock.tests.UsageCallCountTest.tooManyCalls":167,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":238,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":115,"org.easymock.tests.MockingTest.testNiceClassMocking":13,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":336,"org.easymock.tests.MockingTest.testClassMocking":5,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":500,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":160,"org.easymock.tests2.UsageConstraintsTest.testContains":307,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":367,"org.easymock.tests2.UsageConstraintsTest.testFind":298,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":82,"org.easymock.tests.MockTypeTest.fromEasyMockClass":176,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":90,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":372,"org.easymock.tests.UsageExpectAndReturnTest.object":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":451,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":280,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":493,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":506,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":72,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":87,"org.easymock.tests.UsageTest.exactCallCountByLastCall":158,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":33,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":15,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":268,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":67,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":246,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":225,"org.easymock.tests.MockClassControlTest.testHashCode":217,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":251,"org.easymock.tests2.EasyMockSupportTest.testVerify":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":431,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":16,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":210,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":223,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":344,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":369,"org.easymock.tests.UsageVarargTest.varargCharAccepted":71,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":52,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":51,"org.easymock.tests2.UsageTest.openCallCountByLastCall":379,"org.easymock.tests.DefaultClassInstantiatorTest.object":53,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":209,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":432,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":274,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":250,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":455,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":216,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":136,"org.easymock.tests.CapturesMatcherTest.test":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":440,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":215,"org.easymock.tests2.UsageTest.resumeIfFailure":384,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":173,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":206,"org.easymock.tests2.StubTest.stubWithReturnValue":412,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":357,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":239,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":318,"org.easymock.tests2.SerializationTest.testAllMockedMethod":292,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":44,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":491,"org.easymock.samples.SupportTest.voteForRemovals":472,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":142,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":50,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":387,"org.easymock.tests.UsageExpectAndThrowTest.object":140,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":222,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":315,"org.easymock.tests2.DelegateToTest.testWrongClass":264,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":197,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":198,"org.easymock.samples.ConstructorCalledMockTest.testTax":476,"org.easymock.tests.UsageStrictMockTest.range":95,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":469,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":329,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":418,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":182,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":488,"org.easymock.tests2.CaptureTest.testCaptureNone":405,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":65,"org.easymock.tests.UsageUnorderedTest.message":66,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":76,"org.easymock.tests2.ThreadingTest.testThreadSafe":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":435,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":164,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":473,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":88,"org.easymock.tests2.CaptureTest.testCapture_2617107":399,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":48,"org.easymock.tests2.UsageConstraintsTest.any":305,"org.easymock.tests2.StubTest.stub":411,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":126,"org.easymock.tests.UsageExpectAndThrowTest.longType":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":205,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":57,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":191,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":286,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":255,"org.easymock.tests2.SerializationTest.testClass":290,"org.easymock.tests.LimitationsTest.mockNativeMethod":201,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":249,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":273,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":289,"org.easymock.tests2.NameTest.nameForMocksControl":396,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":275,"org.easymock.tests2.MockedExceptionTest.testMockedException":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":423,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":134,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":10,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":371,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":443,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":358,"org.easymock.tests.MockingTest.testNicePartialClassMocking":8,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":448,"org.easymock.tests2.CompareToTest.testCompareEqual":496,"org.easymock.tests2.CaptureTest.testCaptureLast":404,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":271,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":128,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":302,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":342,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":316,"org.easymock.tests.MockingTest.testTwoMocks":6,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":138,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":382,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":320,"org.easymock.samples.ExampleTest.removeNonExistingDocument":485,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":189,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":252,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":55,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":415,"org.easymock.tests2.MockBuilderTest.testCreateMockString":364,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":425,"org.easymock.tests.UsageExpectAndThrowTest.floatType":132,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":420,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":389,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":269,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":434,"org.easymock.samples.ExampleTest.voteAgainstRemoval":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":63,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":456,"org.easymock.tests.LimitationsTest.privateConstructor":200,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":512,"org.easymock.tests2.UsageConstraintsTest.testNotNull":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":117,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":365,"org.easymock.tests2.UsageTest.defaultResetToNice":381,"org.easymock.samples.ExampleTest.voteAgainstRemovals":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":245,"org.easymock.tests.UsageVarargTest.differentLength":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":272,"org.easymock.tests2.CallbackTest.callback":270,"org.easymock.tests2.UsageConstraintsTest.equals":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":452,"org.easymock.tests.UsageTest.openCallCountByLastCall":154,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":502,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":120,"org.easymock.tests.UsageCallCountTest.tooFewCalls":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":184,"org.easymock.tests.UsageThrowableTest.throwCheckedException":114,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":489,"org.easymock.tests.MockingTest.testStrictClassMocking":4,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":62,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":277,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":337,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":340,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":391,"org.easymock.tests2.CompareToTest.testGreateOrEqual":497,"org.easymock.tests.ObjectMethodsTest.testHashCode":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":508,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":417,"org.easymock.tests2.NameTest.nameForNiceMock":395,"org.easymock.tests2.DependencyTest.testInterfaceMocking":462,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":507,"org.easymock.samples.ExampleTest.addDocument":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests2.AnswerTest.stubAnswer":390,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":93,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":359,"org.easymock.tests.UsageVarargTest.varargLongAccepted":75,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":37,"org.easymock.tests.UsageExpectAndReturnTest.floatType":232,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":248,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":267,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":477,"org.easymock.tests.UsageThrowableTest.noUpperLimit":111,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":259,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":313,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":294,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":464,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":402,"org.easymock.tests2.SerializationTest.test":291,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":504,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":231,"org.easymock.tests2.UsageConstraintsTest.testSame":300,"org.easymock.samples.SupportTest.addDocument":471,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":339,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":426,"org.easymock.tests.GenericTest.testPackageScope":169,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":32,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":258,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":11,"org.easymock.tests2.NameTest.nameForMock":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":242,"org.easymock.tests2.UsageStrictMockTest.differentMethods":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":363,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":453,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":144,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":22,"org.easymock.tests2.MockedExceptionTest.testRealException":368,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":41,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":285,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":119,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":196,"org.easymock.tests2.NameTest.nameForStrictMock":394,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":353,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":370,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":468,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":56,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":350,"org.easymock.tests2.UsageStrictMockTest.range":287,"org.easymock.tests2.UsageConstraintsTest.lessThan":321,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":36,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":430,"org.easymock.tests2.CaptureTest.testCaptureRightOne":407,"org.easymock.tests2.UsageConstraintsTest.testOr":301,"org.easymock.tests.UsageRangeTest.combination":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":444,"org.easymock.tests.UsageTest.wrongArguments":153,"org.easymock.tests2.MockBuilderTest.testWithConstructor":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":427,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":29,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":243,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":58,"org.easymock.tests.UsageVarargTest.varargShortAccepted":74,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":165,"org.easymock.tests2.UsageConstraintsTest.cmpTo":306,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":388,"org.easymock.tests2.CompareToTest.testLessThan":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":31,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":380,"org.easymock.tests2.CaptureTest.testCaptureFromStub":408,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":186,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":351,"org.easymock.tests.UsageTest.unexpectedCallWithArray":152,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":92,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":163,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":510,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":244,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.tests2.UsageConstraintsTest.constraints":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":486,"org.easymock.tests.UsageStrictMockTest.testVerify":98,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":487,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":91,"org.easymock.tests2.CompareToTest.testGreateThan":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":24,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":403,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":101,"org.easymock.tests.LimitationsTest.abstractClass":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":102,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":328}}]
