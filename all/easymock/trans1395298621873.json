[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:193","sourceCode":"final java.lang.Number java.lang.Number = ((java.lang.Number)(java.lang.Object))","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[66,67,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,68,30,31,33,34,37,38,39,40,42,43,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,45,97,98,99,100,101,102,103,104,46,105,106,107,47,108,109,110,111,112,113,114,115,116,117,118,119,120,52,53,56,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,60,64,141,142],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[143,76,87,144],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[145,145,146,146,2,3,6,7,8,9,15,17,18,20,21,27,28,29,41,46,47,50,51,52,53,56,57,58,59,60,61,64,147,148,149,150,151],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[75,46,105,106,122,128,152,129,62,64,141,142,153,154,155,156],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[157],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[12,13],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[158],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[11,17,29,159],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[160,161,162,163,164,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[14,45,165],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[166,167,168],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[169,170,171,172,173,174,175,176,66,67,177,0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,68,178,179,180,181,182,183,184,30,31,32,33,34,35,36,37,38,39,40,41,42,43,69,70,71,44,72,185,186,187,188,73,74,75,189,76,190,77,78,79,191,192,80,81,193,94,194,195,95,196,197,96,198,199,45,144,98,200,201,202,203,100,204,205,206,104,207,208,46,209,105,106,210,211,107,212,213,214,215,47,48,216,217,218,219,220,221,222,223,108,109,110,224,225,111,112,113,114,115,226,227,228,229,230,231,116,118,119,232,233,234,235,236,237,238,239,240,241,242,49,50,51,243,244,52,53,54,55,56,121,122,245,123,124,246,247,125,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,126,127,128,152,129,133,269,134,135,136,137,138,139,270,271,272,273,140,57,58,59,60,61,274,275,276,277,278,62,279,63,64,280,141,142,281,282,283,284,285,65,286,147,148,149,150,151,287,288,289,290,291,292],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[73,78,121,124,152,134],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[145,146,169,170,171,172,173,174,175,296,297,298,299,300,301,302,176,66,67,177,303,143,304,305,0,1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,68,178,179,180,181,182,183,184,30,31,32,33,34,35,36,37,38,39,40,41,42,43,69,70,71,44,72,185,186,187,188,73,74,75,189,76,190,77,78,79,191,192,80,81,82,83,84,85,86,87,88,89,90,91,92,93,306,193,307,94,194,308,309,310,311,312,195,95,196,197,96,198,199,45,144,97,98,99,313,200,201,314,315,202,203,100,101,102,204,103,205,206,104,207,316,208,46,209,105,106,210,211,107,212,213,214,215,47,48,216,217,218,219,220,221,222,223,108,109,110,224,225,111,112,113,114,115,226,227,228,229,230,116,118,119,232,233,234,235,236,237,238,317,239,240,241,242,49,50,51,243,52,53,54,55,56,121,122,164,245,123,124,246,247,125,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,126,127,128,152,129,318,318,133,269,134,135,136,137,138,139,270,271,272,273,319,57,58,59,60,61,274,275,276,277,278,62,320,279,63,64,280,141,142,281,282,283,284,285,65,286,147,148,149,150,151,287,288,289,290,321,291,292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[169,171,172,173,174,175,296,297,298,299,301,302,177,25,31,32,35,36,37,38,43,189,190,191,192,85,91,92,93,306,94,208,209,105,106,210,322,231,233,234,235,236,237,238,239,240,241,242,49,243,54,245,246,247,269,62,279,63,280,141,142,281,288,289,290,291,292],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[66,67,177,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[66,324,325,326,327,328,329,330,331,332,333,334,204,335],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[336,337,338],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[145,145,146,146,296,297,300,66,177,303,143,304,305,193,307,339,94,194,308,309,310,311,312,195,95,197,96,198,199,45,340,144,97,98,99,341,313,200,201,314,202,203,204,104,342,216,217,218,343,344,345,346,347,348,349,350,351,232,233,352,353,243,354,355,270],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[205,206,104,207,107,48,54,356,357,358,359,282,283,284,285,65,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[4,5,7,9,10,12,22,27,30,32,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[170,176,0,1,68,360,178,180,271,361],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[176,2,3,4,5,6,8,9,10,11,13,15,16,17,18,19,20,21,22,23,24,26,28,29,179,30,31,32,33,34,35,36,37,39,40,41,42,43,189,76,190,191,192,83,84,85,86,87,88,90,91,92,93,311,316,46,105,106,107,47,116,52,55,245,246,247,126,152,133,269,135,136,137,138,139,320,63,64,141,142],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[362,363,364],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[365],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[366],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[170,185,187,367,188,272,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[145,145,146,146,296,297,300,66,177,369,370,371,372,373,303,374,375,143,376,377,378,379,380,381,382,383,384,304,385,386,387,388,389,305,390,391,193,392,307,339,393,94,194,308,309,325,310,311,394,312,195,95,197,96,198,199,45,340,395,144,97,98,99,396,341,313,200,201,314,202,203,397,204,335,205,206,104,362,363,398,399,336,364,400,401,402,342,216,217,218,403,343,344,345,346,347,348,349,350,351,404,232,233,352,353,243,354,355,405,406,270,407],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[145,146,296,297,300,66,177,369,370,371,372,303,375,143,376,377,378,380,381,382,383,304,385,386,387,388,389,305,193,408,307,339,409,393,94,194,308,324,309,325,310,311,410,312,195,95,197,96,198,199,45,340,395,144,97,98,99,396,341,313,200,201,314,202,203,204,335,411,205,206,104,362,363,398,399,336,364,400,401,402,342,216,217,218,403,344,345,346,347,348,349,350,351,404,232,233,352,353,243,354,355,405,406,270,407],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[412],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && ((((java.lang.String)(java.lang.Object)).indexOf(java.lang.String)) >= 0)","type":"CtReturnImpl"},"failures":[4,10,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[66,67,177,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[66,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[145,146,413,414,410,415,416,340],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[404,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[145,146,169,170,171,172,173,174,417,175,296,297,298,299,300,301,302,176,66,67,177,369,418,419,420,370,421,422,371,372,373,303,374,375,143,376,377,378,379,380,381,382,383,384,304,385,386,387,388,389,305,390,391,0,423,1,2,3,4,5,424,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,68,294,360,178,179,180,181,182,183,184,30,31,32,33,34,35,36,37,38,39,40,41,42,43,69,70,71,44,72,425,185,186,187,367,188,73,74,75,189,76,190,77,78,79,191,192,80,81,82,83,84,85,86,87,88,89,90,91,92,93,306,426,193,408,307,339,409,393,94,194,308,324,309,413,325,310,311,410,312,195,95,196,197,96,198,199,427,45,340,395,144,97,98,99,396,341,313,200,201,314,428,315,202,203,429,430,431,100,101,432,433,434,435,436,102,437,438,439,440,441,442,443,444,445,446,447,204,335,411,448,449,450,451,452,103,453,454,455,456,457,458,205,206,104,207,316,208,46,209,105,106,210,211,107,212,213,214,215,459,47,48,460,362,363,398,399,336,364,461,400,401,402,342,216,217,462,218,463,464,403,219,220,221,222,223,108,109,110,224,225,111,112,113,114,115,226,227,228,229,230,322,231,465,466,467,468,469,470,343,116,117,118,119,344,345,346,347,348,349,350,351,404,232,233,352,353,471,120,472,234,235,236,473,237,238,317,239,240,241,242,49,50,51,474,475,243,476,477,478,479,244,480,365,481,482,483,484,485,52,53,54,55,56,121,122,164,245,123,124,246,247,125,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,126,127,128,152,129,130,131,132,354,486,487,488,489,355,490,491,356,357,358,133,269,134,135,136,137,138,139,405,406,270,407,271,492,272,273,493,140,319,57,58,59,60,61,494,495,368,496,497,498,295,359,499,500,501,502,503,361,504,505,506,507,508,509,510,511,512,513,274,275,276,277,278,514,515,516,62,320,279,63,64,280,141,142,281,517,282,283,284,285,65,286,518,519,520,521,522,147,148,149,150,151,523,524,287,288,289,290,321,291,292],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[66,67,177,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[353],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests2.UsageTest.argumentsOrdered":192,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":501,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":299,"org.easymock.tests2.DelegateToTest.testReturnException":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":283,"org.easymock.tests.MockingTest.testPartialClassMocking":216,"org.easymock.tests.MockClassControlTest.testToString":346,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":443,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":509,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":248,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":153,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":329,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":11,"org.easymock.tests2.UsageTest.wrongArguments":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":52,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":442,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":214,"org.easymock.samples.ExampleTest.answerVsDelegate":170,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":355,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":464,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":197,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":91,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":351,"org.easymock.tests2.CaptureTest.testPrimitive":33,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":56,"org.easymock.tests.UsageTest.moreThanOneArgument":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":267,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":149,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":518,"org.easymock.tests.UsageTest.argumentsOrdered":247,"org.easymock.tests.UsageVarargTest.varargIntAccepted":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":505,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":57,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":333,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":419,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":61,"org.easymock.tests.ReplayStateInvalidUsageTest.times":482,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":102,"org.easymock.tests2.DependencyTest.testClassMocking":430,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":416,"org.easymock.tests2.AnswerTest.answer":68,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":507,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":184,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":487,"org.easymock.tests2.CaptureTest.testAnd":30,"org.easymock.tests2.UsageTest.strictResetToDefault":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":86,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":522,"org.easymock.tests2.DelegateToTest.testDelegate":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":263,"org.easymock.tests.LimitationsTest.mockFinalMethod":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":278,"org.easymock.tests2.DependencyTest.testClassMockingSupport":431,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":322,"org.easymock.tests2.CaptureTest.testCapture1_2446744":34,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":182,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":478,"org.easymock.tests.UsageThrowableTest.throwError":133,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":489,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":474,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":151,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":391,"org.easymock.samples.PartialClassMockTest.testGetArea":300,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":479,"org.easymock.tests.MockingTest.testInterfaceMocking":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":131,"org.easymock.tests2.UsageTest.niceToStrict":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":249,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":494,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":166,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":94,"org.easymock.tests2.MockBuilderTest.testCreateMock":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":387,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":439,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":257,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":87,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":516,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":523,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":212,"org.easymock.tests.UsageOverloadedMethodTest.overloading":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":17,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":112,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":268,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":16,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":337,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":39,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":473,"org.easymock.tests2.EasyMockSupportClassTest.testAll":303,"org.easymock.tests.MockClassControlTest.testEquals":350,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":233,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":183,"org.easymock.tests2.CaptureTest.testCaptureAll":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":276,"org.easymock.tests.MockNameTest.defaultName":459,"org.easymock.tests2.UsageConstraintsTest.testMatches":18,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":476,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":150,"org.easymock.samples.ExampleTest.voteForRemovals":174,"org.easymock.tests.UsageVarargTest.allKinds":49,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":277,"org.easymock.samples.BasicClassMockTest.testPrintContent":297,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":138,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":286,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":367,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":461,"org.easymock.tests2.UsageConstraintsTest.greaterThan":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":117,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":99,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":400,"org.easymock.samples.ExampleTest.voteForRemoval":171,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":396,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":70,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":490,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":199,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":243,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":84,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":282,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":425,"org.easymock.tests2.CaptureTest.testCaptureFirst":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":85,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":81,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":110,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":44,"org.easymock.tests2.CaptureTest.testCapture2_2446744":42,"org.easymock.tests2.UsageTest.moreThanOneArgument":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":508,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":311,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":242,"org.easymock.tests.GenericTest.testBridgedEquals":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":291,"org.easymock.tests.UsageExpectAndReturnTest.longType":222,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":274,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":394,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":266,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":475,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":357,"org.easymock.tests.UsageCallCountTest.tooManyCalls":292,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":137,"org.easymock.tests.MockingTest.testNiceClassMocking":403,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":200,"org.easymock.tests.MockingTest.testClassMocking":402,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":524,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":392,"org.easymock.tests2.UsageConstraintsTest.testContains":15,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":104,"org.easymock.tests2.UsageConstraintsTest.testFind":6,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":127,"org.easymock.tests.MockTypeTest.fromEasyMockClass":488,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":1,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":320,"org.easymock.tests.UsageExpectAndReturnTest.object":111,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":440,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":90,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":330,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":469,"org.easymock.tests.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":498,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":519,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":471,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":227,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":234,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":272,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":449,"org.easymock.tests.MockClassControlTest.testHashCode":349,"org.easymock.tests2.EasyMockSupportTest.testVerify":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":382,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":520,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":515,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":426,"org.easymock.tests.UsageVarargTest.varargCharAccepted":237,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":460,"org.easymock.tests2.CaptureTest.testCaptureMultiple":366,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":513,"org.easymock.tests2.UsageTest.openCallCountByLastCall":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":167,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":93,"org.easymock.tests.DefaultClassInstantiatorTest.object":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":514,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":467,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":383,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":448,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":97,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":254,"org.easymock.tests.CapturesMatcherTest.test":318,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":228,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":305,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":347,"org.easymock.tests2.UsageTest.resumeIfFailure":80,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":354,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":285,"org.easymock.tests2.StubTest.stubWithReturnValue":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":324,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":225,"org.easymock.tests2.SerializationTest.testAllMockedMethod":177,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":506,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":327,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":161,"org.easymock.samples.SupportTest.voteForRemovals":302,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":404,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":260,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":323,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":512,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":294,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":472,"org.easymock.tests.UsageExpectAndThrowTest.object":258,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":23,"org.easymock.tests2.DelegateToTest.testWrongClass":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":50,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":51,"org.easymock.samples.ConstructorCalledMockTest.testTax":145,"org.easymock.tests.UsageStrictMockTest.range":141,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":421,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":89,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":259,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":308,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":484,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":213,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":162,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":132,"org.easymock.tests2.CaptureTest.testCaptureNone":38,"org.easymock.tests.UsageUnorderedTest.message":62,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":241,"org.easymock.tests2.ThreadingTest.testThreadSafe":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":385,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":290,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":470,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":296,"org.easymock.tests2.CaptureTest.testCapture_2617107":32,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":510,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":55,"org.easymock.tests2.UsageConstraintsTest.any":13,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":481,"org.easymock.tests2.StubTest.stub":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":511,"org.easymock.tests.UsageExpectAndThrowTest.longType":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":284,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":336,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":365,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":209,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":103,"org.easymock.tests2.SerializationTest.testClass":66,"org.easymock.tests.LimitationsTest.mockNativeMethod":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":230,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":352,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":434,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":210,"org.easymock.tests2.NameTest.nameForMocksControl":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":436,"org.easymock.tests2.MockedExceptionTest.testMockedException":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":375,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":423,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":252,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":309,"org.easymock.tests.MockingTest.testNicePartialClassMocking":217,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":198,"org.easymock.tests2.CompareToTest.testNotComparable":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":432,"org.easymock.tests2.CompareToTest.testCompareEqual":165,"org.easymock.tests2.CaptureTest.testCaptureLast":37,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":231,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":24,"org.easymock.tests.MockingTest.testTwoMocks":342,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":256,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":28,"org.easymock.samples.ExampleTest.removeNonExistingDocument":417,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":438,"org.easymock.tests.UsageStrictMockTest.differentMethods":142,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":244,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":450,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":398,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":71,"org.easymock.tests2.MockBuilderTest.testCreateMockString":312,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":344,"org.easymock.tests.UsageExpectAndThrowTest.floatType":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":376,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":178,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":411,"org.easymock.tests.UsageVerifyTest.twoThrows":152,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":304,"org.easymock.samples.ExampleTest.voteAgainstRemoval":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":502,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":130,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":98,"org.easymock.tests.LimitationsTest.privateConstructor":406,"org.easymock.tests2.UsageConstraintsTest.testNotNull":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":139,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":205,"org.easymock.tests2.UsageTest.defaultResetToNice":79,"org.easymock.samples.ExampleTest.voteAgainstRemovals":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":433,"org.easymock.tests.UsageVarargTest.differentLength":317,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests2.UsageConstraintsTest.equals":424,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":340,"org.easymock.tests.UsageTest.openCallCountByLastCall":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":54,"org.easymock.tests.UsageCallCountTest.tooFewCalls":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":215,"org.easymock.tests.UsageThrowableTest.throwCheckedException":136,"org.easymock.tests.MockingTest.testStrictClassMocking":401,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":163,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":437,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":201,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":483,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":315,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":180,"org.easymock.tests.ObjectMethodsTest.testHashCode":468,"org.easymock.tests2.CompareToTest.testGreateOrEqual":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":332,"org.easymock.tests2.NameTest.nameForNiceMock":446,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":72,"org.easymock.tests2.DependencyTest.testInterfaceMocking":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":331,"org.easymock.samples.ExampleTest.addDocument":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.DelegateToTest.testStubDelegate":186,"org.easymock.tests2.AnswerTest.stubAnswer":179,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":64,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":413,"org.easymock.tests.UsageVarargTest.varargLongAccepted":240,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":500,"org.easymock.tests.UsageExpectAndReturnTest.floatType":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":229,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":204,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":146,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":456,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":21,"org.easymock.tests.UsageThrowableTest.noUpperLimit":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":369,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":35,"org.easymock.tests2.SerializationTest.test":67,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":338,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":363,"org.easymock.tests2.UsageConstraintsTest.testSame":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":220,"org.easymock.samples.SupportTest.addDocument":301,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":428,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":377,"org.easymock.tests.GenericTest.testPackageScope":232,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":497,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":455,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":463,"org.easymock.tests2.NameTest.nameForMock":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":113,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":410,"org.easymock.tests2.UsageStrictMockTest.differentMethods":106,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":262,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":466,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":119,"org.easymock.tests2.MockedExceptionTest.testRealException":207,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":504,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":422,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":326,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":361,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":485,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":53,"org.easymock.tests2.NameTest.nameForStrictMock":445,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":393,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":370,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":399,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":154,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":22,"org.easymock.tests.ErrorMessageTest.testGetters":155,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":307,"org.easymock.tests2.UsageStrictMockTest.range":105,"org.easymock.tests2.UsageConstraintsTest.lessThan":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":499,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":83,"org.easymock.tests2.CaptureTest.testCaptureRightOne":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":381,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":95,"org.easymock.tests.UsageTest.wrongArguments":245,"org.easymock.tests2.MockBuilderTest.testWithConstructor":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":378,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":495,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":114,"org.easymock.tests.UsageVarargTest.varargShortAccepted":239,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":321,"org.easymock.tests2.UsageConstraintsTest.cmpTo":14,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":496,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":78,"org.easymock.tests2.CaptureTest.testCaptureFromStub":41,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":477,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":339,"org.easymock.tests.UsageTest.unexpectedCallWithArray":164,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":289,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":414,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":115,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.samples.ExampleTest.addAndChangeDocument":175,"org.easymock.tests.UsageStrictMockTest.testVerify":517,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":298,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":279,"org.easymock.tests2.CompareToTest.testGreateThan":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":275,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":36,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":59,"org.easymock.tests.LimitationsTest.abstractClass":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":109,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":60,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":88,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":235}}]
