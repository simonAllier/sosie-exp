[{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[4],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[52,160],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,119,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[197,198],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[138,139,140],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[129],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[199,200,201,202,6,7,8,9,10,161,203,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,204,27,28,29,30,31,205,32,33,34,35,36,37,38,206,207,208,39,209,210,40,41,42,211,212,43,44,213,45,214,215,216,217,46,218,219,220,221,47,222,223,224,225,226,48,49,162,50,227,228,51,229,163,164,230,231,232,233,234,53,54,235,55,236,237,238,239,56,240,241,242,243,57,244,245,246,247,248,249,250,251,165,166,167,168,169,252,58,59,170,171,253,60,172,254,61,62,255,63,64,65,66,67,68,256,69,70,71,72,73,74,75,257,76,77,78,258,259,260,261,79,80,81,82,83,84,262,263,264,180,265,266,267,268,85,86,87,88,269,89,90,91,270,271,272,92,93,273,94,95,96,97,98,99,100,101,274,102,275,276,103,104,105,106,107,108,109,277,110,111,112,113,114,278,115,181,116,279,280,117,119,182,281,120,183,184,185,186,121,122,282,123,124,187,125,188,189,126,190,191,127,128,129,130,131,192,193,194,132,133,134,135,283,284,136,137,138,139,140,141,142,143,144,145,146,147,148,285,149,286,150,151,152,153,287,154,155,156,157,158,159,288,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[289,150,151,152,153,287,154,155,156,158,159,195,288,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[290],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[132,291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[292,293,22,206,208,39,40,41,162,227,228,294,52,252,58,59,269,89,92,93,295,296,297,298,299,300,301,181,279,280],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[161,203,11,204,302,36,206,303,49,162,163,164,165,166,167,168,169,252,170,171,253,60,172,79,304,262,263,264,101,305,181,116,118,119,182,281,120,183,184,185,186,121,122,282,123,124,187,125,188,189,126,190,191,127,128,129,130,131,192,193,194,150,151,152,153,287,154,155,156,157,158,159,195,288,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[161,203,204,36,206,49,162,163,164,165,166,167,168,169,170,171,253,60,172,262,263,101,181,118,119,182,281,120,183,184,185,186,121,122,282,123,124,187,125,188,189,126,190,191,127,128,129,130,131,192,193,194,150,151,152,153,287,154,155,156,157,158,159,195,288,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":120,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":207,"org.easymock.tests2.UsageTest.argumentsOrdered":93,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":91,"org.easymock.tests2.StubTest.stubWithReturnValue":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":239,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":72,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":131,"org.easymock.tests2.SerializationTest.testAllMockedMethod":140,"org.easymock.tests2.DelegateToTest.testReturnException":148,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":199,"org.easymock.tests.MockingTest.testPartialClassMocking":23,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":299,"org.easymock.samples.SupportTest.voteForRemovals":71,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":211,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests.UsageExpectAndThrowTest.object":46,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":86,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":128,"org.easymock.tests2.DelegateToTest.testWrongClass":149,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":164,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":122,"org.easymock.tests2.UsageTest.wrongArguments":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":170,"org.easymock.tests.UsageStrictMockTest.range":227,"org.easymock.samples.ConstructorCalledMockTest.testTax":178,"org.easymock.samples.ExampleTest.answerVsDelegate":64,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":141,"org.easymock.tests2.UsageConstraintsTest.testNull":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":218,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests2.CaptureTest.testPrimitive":153,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":225,"org.easymock.tests.UsageTest.moreThanOneArgument":208,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":40,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":175,"org.easymock.tests2.CaptureTest.testCaptureNone":157,"org.easymock.tests.UsageUnorderedTest.message":206,"org.easymock.tests.UsageVerifyTest.twoReturns":59,"org.easymock.tests.UsageVarargTest.varargByteAccepted":34,"org.easymock.tests2.ThreadingTest.testThreadSafe":259,"org.easymock.tests.UsageTest.argumentsOrdered":41,"org.easymock.tests.UsageVarargTest.varargIntAccepted":29,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":7,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":74,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":300,"org.easymock.tests2.CaptureTest.testCapture_2617107":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":165,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":60,"org.easymock.tests2.UsageConstraintsTest.any":123,"org.easymock.tests2.StubTest.stub":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":169,"org.easymock.tests.UsageExpectAndThrowTest.longType":44,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":297,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":116,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":137,"org.easymock.tests2.SerializationTest.testClass":138,"org.easymock.tests.LimitationsTest.mockNativeMethod":26,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests2.DependencyTest.testClassMocking":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":247,"org.easymock.tests2.AnswerTest.answer":134,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":282,"org.easymock.tests2.CaptureTest.testAnd":150,"org.easymock.tests2.UsageTest.strictResetToDefault":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":305,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":117,"org.easymock.tests2.NameTest.nameForMocksControl":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":107,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests2.DelegateToTest.testDelegate":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":213,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":25,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":78,"org.easymock.tests.MockingTest.testNicePartialClassMocking":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":47,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":100,"org.easymock.tests2.CaptureTest.testCaptureLast":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":204,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":52,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":147,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":129,"org.easymock.tests2.DependencyTest.testClassMockingSupport":198,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":294,"org.easymock.tests2.CaptureTest.testCapture1_2446744":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":216,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":193,"org.easymock.tests.UsageThrowableTest.throwError":11,"org.easymock.tests.UsageStrictMockTest.differentMethods":228,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":160,"org.easymock.tests2.ConstraintsToStringTest.andToString":298,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":261,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":254,"org.easymock.tests.UsageExpectAndThrowTest.floatType":43,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":177,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":126,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":135,"org.easymock.tests.UsageVerifyTest.twoThrows":58,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":292,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":83,"org.easymock.samples.PartialClassMockTest.testGetArea":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":166,"org.easymock.samples.ExampleTest.voteAgainstRemoval":66,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":212,"org.easymock.tests2.UsageTest.niceToStrict":90,"org.easymock.tests2.UsageConstraintsTest.testNotNull":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":18,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.UsageTest.defaultResetToNice":272,"org.easymock.samples.ExampleTest.voteAgainstRemovals":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":57,"org.easymock.tests.UsageVarargTest.differentLength":205,"org.easymock.tests2.CallbackTest.callback":276,"org.easymock.tests.UsageTest.openCallCountByLastCall":209,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":217,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":108,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":119,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":253,"org.easymock.tests.UsageCallCountTest.tooFewCalls":202,"org.easymock.tests.UsageOverloadedMethodTest.overloading":62,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":240,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":144,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":125,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":158,"org.easymock.tests.UsageThrowableTest.throwCheckedException":15,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":223,"org.easymock.tests2.CaptureTest.testCaptureAll":151,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":203,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":146,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":143,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":5,"org.easymock.tests2.UsageConstraintsTest.testMatches":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":145,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":176,"org.easymock.samples.ExampleTest.voteForRemovals":68,"org.easymock.tests2.NameTest.nameForNiceMock":267,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":80,"org.easymock.tests.UsageVarargTest.allKinds":36,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":252,"org.easymock.tests2.DependencyTest.testInterfaceMocking":85,"org.easymock.samples.BasicClassMockTest.testPrintContent":75,"org.easymock.samples.ExampleTest.addDocument":67,"org.easymock.tests2.DelegateToTest.testStubDelegate":285,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":17,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests2.AnswerTest.stubAnswer":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":302,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":162,"org.easymock.tests2.UsageConstraintsTest.greaterThan":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":275,"org.easymock.tests.UsageVarargTest.varargLongAccepted":33,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.samples.ExampleTest.voteForRemoval":65,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":246,"org.easymock.tests.UsageExpectAndReturnTest.floatType":53,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":132,"org.easymock.tests2.ConstraintsToStringTest.orToString":295,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":179,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":293,"org.easymock.tests.UsageThrowableTest.noUpperLimit":12,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":191,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":10,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":182,"org.easymock.tests2.SerializationTest.test":139,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":105,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":234,"org.easymock.tests2.UsageConstraintsTest.testSame":185,"org.easymock.samples.SupportTest.addDocument":70,"org.easymock.tests2.CaptureTest.testCaptureFirst":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":106,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":94,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":237,"org.easymock.tests.GenericTest.testPackageScope":37,"org.easymock.tests2.CaptureTest.testCapture2_2446744":288,"org.easymock.tests2.UsageTest.moreThanOneArgument":269,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":79,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":258,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":35,"org.easymock.tests2.NameTest.nameForMock":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":8,"org.easymock.tests.UsageExpectAndReturnTest.longType":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":303,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":224,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":130,"org.easymock.tests2.UsageStrictMockTest.differentMethods":280,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":235,"org.easymock.tests.UsageCallCountTest.tooManyCalls":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":251,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":45,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":142,"org.easymock.tests2.NameTest.nameForStrictMock":266,"org.easymock.tests2.UsageConstraintsTest.testContains":187,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":136,"org.easymock.tests2.UsageConstraintsTest.testFind":183,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":255,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":99,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":263,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":226,"org.easymock.tests.UsageExpectAndReturnTest.object":56,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":257,"org.easymock.tests2.UsageStrictMockTest.range":279,"org.easymock.tests2.UsageConstraintsTest.lessThan":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":31,"org.easymock.tests.UsageTest.exactCallCountByLastCall":42,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":161,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":104,"org.easymock.tests2.CaptureTest.testCaptureRightOne":159,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":231,"org.easymock.tests2.UsageConstraintsTest.testOr":186,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":291,"org.easymock.tests.UsageRangeTest.combination":248,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":244,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":96,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":20,"org.easymock.tests.UsageTest.wrongArguments":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":55,"org.easymock.tests2.EasyMockSupportTest.testVerify":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":242,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":232,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":19,"org.easymock.tests.UsageVarargTest.varargShortAccepted":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":304,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":118,"org.easymock.tests2.UsageConstraintsTest.cmpTo":124,"org.easymock.tests.UsageVarargTest.varargCharAccepted":30,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":115,"org.easymock.tests2.UsageTest.openCallCountByLastCall":270,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests2.CaptureTest.testCaptureFromStub":195,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":230,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":215,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":243,"org.easymock.tests2.UsageConstraintsTest.constraints":281,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":274,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":50,"org.easymock.samples.ExampleTest.addAndChangeDocument":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":214,"org.easymock.tests2.ConstraintsToStringTest.notToString":296,"org.easymock.tests.CapturesMatcherTest.test":289,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":245,"org.easymock.tests.UsageStrictMockTest.testVerify":229,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":84,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":48,"org.easymock.tests2.CompareToTest.testGreateThan":196,"org.easymock.tests2.UsageTest.resumeIfFailure":273,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":167,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":236,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":168,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":109}}]
