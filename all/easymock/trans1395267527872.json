[{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,176,177,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[329,325,326,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[330,331,332,178,231,232,333,233,235,236,238,239,241,242,243,250,253,254,334,325],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[329,325,326,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[335,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[258,259],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[176,176,177,177,337,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[12,13,330,32,79,339,109,110,111,331,332,121,176,176,177,177,178,181,182,340,341,342,343,197,198,199,200,202,203,219,226,231,344,232,333,233,234,235,236,237,238,345,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,325,327],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[19,38,346,347,156,157,192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"position":"org.easymock.EasyMock:557","failures":[1,2,348,349,350,5,12,330,14,15,16,17,18,19,25,32,36,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,351,352,353,354,70,71,74,75,78,355,336,356,357,358,79,80,81,82,83,84,90,91,92,93,359,360,361,362,109,110,111,112,113,114,115,116,117,363,364,365,366,367,118,119,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,163,164,165,166,167,168,169,170,171,173,175,176,176,177,177,178,184,185,186,187,190,192,193,195,196,197,198,199,200,201,202,203,204,205,206,208,210,211,212,215,216,217,218,219,220,221,222,223,224,225,226,232,233,235,236,238,240,241,242,243,244,245,246,247,248,249,251,253,254,255,256,368,369,257,258,259,260,261,370,262,263,264,371,265,266,267,269,270,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,328],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[205,372],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[373,374],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[2,16,375,356,357,358,112,113,114,115,116,117,196,217,218,219,220],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[17,42,44,45,46,47,48,49,70,75,92,116,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,156,196,204,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[2,16,17,44,48,49,70,75,92,112,113,114,115,116,117,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,196,204,211,217,218,219,220],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[1,2,3,4,5,6,7,8,12,13,14,15,16,17,18,19,24,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,351,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,96,97,98,99,101,102,103,104,105,109,110,111,112,113,114,115,116,117,118,119,121,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,175,186,188,189,190,191,192,193,194,195,196,198,199,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,238,239,244,245,246,247,248,249,251,252,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,376,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[377],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[35,378,379,72,380,381],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[382],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[199,203,383,384,385,386,387,337,388,389,390],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[373,374],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[199,203,383,384,385,386,387,337,388,389,390],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[382,391],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[38,39,54,58,59,61,64,392,135,139,140,142,145,192,193],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[42,45],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[393,394,395],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[325,326,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[330,331,332,178,231,232,333,233,234,235,236,237,238,239,241,242,243,250,253,254,334,325],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[35,378,379,72,380,381],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":301,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":70,"org.easymock.tests2.UsageTest.argumentsOrdered":214,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":290,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":209,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":179,"org.easymock.tests2.DelegateToTest.testReturnException":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":113,"org.easymock.tests.MockingTest.testPartialClassMocking":109,"org.easymock.tests.MockClassControlTest.testToString":122,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":131,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":241,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":187,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":14,"org.easymock.tests2.UsageTest.wrongArguments":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":160,"org.easymock.samples.ExampleTest.answerVsDelegate":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":332,"org.easymock.tests2.UsageConstraintsTest.testNull":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":247,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":289,"org.easymock.tests2.CaptureTest.testPrimitive":269,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":18,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":150,"org.easymock.tests.UsageTest.moreThanOneArgument":71,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":165,"org.easymock.tests.UsageTest.argumentsOrdered":77,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":363,"org.easymock.tests.UsageVarargTest.varargIntAccepted":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":80,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":231,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":84,"org.easymock.tests.ReplayStateInvalidUsageTest.times":28,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":293,"org.easymock.tests2.AnswerTest.answer":256,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":297,"org.easymock.tests2.CaptureTest.testAnd":266,"org.easymock.tests2.UsageTest.strictResetToDefault":205,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":284,"org.easymock.tests2.DelegateToTest.testDelegate":265,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":367,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":89,"org.easymock.tests2.CaptureTest.testCapture1_2446744":270,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":295,"org.easymock.tests.UsageThrowableTest.throwError":42,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":167,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":389,"org.easymock.samples.PartialClassMockTest.testGetArea":178,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":81,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":132,"org.easymock.tests2.UsageTest.niceToStrict":208,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":395,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":233,"org.easymock.tests2.MockBuilderTest.testCreateMock":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":140,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":380,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":285,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":350,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":3,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":158,"org.easymock.tests.UsageOverloadedMethodTest.overloading":129,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":92,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":312,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":61,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":311,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":275,"org.easymock.tests.MockClassControlTest.testEquals":126,"org.easymock.tests2.EasyMockSupportClassTest.testAll":240,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":148,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":340,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":87,"org.easymock.tests2.CaptureTest.testCaptureAll":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":296,"org.easymock.tests2.UsageConstraintsTest.testMatches":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":166,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":20,"org.easymock.samples.ExampleTest.voteForRemovals":173,"org.easymock.tests.UsageVarargTest.allKinds":105,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":155,"org.easymock.samples.BasicClassMockTest.testPrintContent":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":88,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":48,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":117,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":371,"org.easymock.tests2.UsageConstraintsTest.greaterThan":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":255,"org.easymock.samples.ExampleTest.voteForRemoval":170,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":250,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":79,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":282,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":112,"org.easymock.tests2.CaptureTest.testCaptureFirst":279,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":283,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":94,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":57,"org.easymock.tests2.UsageTest.moreThanOneArgument":206,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":224,"org.easymock.tests2.CaptureTest.testCapture2_2446744":278,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":238,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":104,"org.easymock.tests.GenericTest.testBridgedEquals":391,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":10,"org.easymock.tests.UsageExpectAndReturnTest.longType":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":85,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":280,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":149,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":345,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":320,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":357,"org.easymock.tests.UsageCallCountTest.tooManyCalls":11,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":47,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":198,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":4,"org.easymock.tests2.UsageConstraintsTest.testContains":310,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":344,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":219,"org.easymock.tests2.UsageConstraintsTest.testFind":302,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":130,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":261,"org.easymock.tests.UsageExpectAndReturnTest.object":60,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":288,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":99,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":108,"org.easymock.tests.UsageTest.exactCallCountByLastCall":78,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":1,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":352,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":364,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":384,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":66,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":95,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":91,"org.easymock.tests.MockClassControlTest.testHashCode":125,"org.easymock.tests2.EasyMockSupportTest.testVerify":292,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":90,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":349,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":294,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":376,"org.easymock.tests.UsageVarargTest.varargCharAccepted":98,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests2.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":393,"org.easymock.tests.DefaultClassInstantiatorTest.object":162,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":348,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":45,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":343,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":124,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":356,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":243,"org.easymock.tests2.UsageTest.resumeIfFailure":215,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":115,"org.easymock.tests2.StubTest.stubWithReturnValue":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":387,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":59,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":321,"org.easymock.tests2.SerializationTest.testAllMockedMethod":327,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":355,"org.easymock.samples.SupportTest.voteForRemovals":184,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":381,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":143,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":329,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":336,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":368,"org.easymock.tests.UsageExpectAndThrowTest.object":141,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":354,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":318,"org.easymock.tests2.DelegateToTest.testWrongClass":264,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":119,"org.easymock.samples.ConstructorCalledMockTest.testTax":176,"org.easymock.tests.UsageStrictMockTest.range":38,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":142,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":235,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":30,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":378,"org.easymock.tests2.CaptureTest.testCaptureNone":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":361,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":0,"org.easymock.tests.UsageUnorderedTest.message":19,"org.easymock.tests.UsageVerifyTest.twoReturns":157,"org.easymock.tests.UsageVarargTest.varargByteAccepted":103,"org.easymock.tests2.ThreadingTest.testThreadSafe":221,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":8,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":181,"org.easymock.tests2.CaptureTest.testCapture_2617107":268,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":17,"org.easymock.tests2.UsageConstraintsTest.any":308,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":27,"org.easymock.tests2.StubTest.stub":195,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":358,"org.easymock.tests.UsageExpectAndThrowTest.longType":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":114,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":26,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":185,"org.easymock.tests2.SerializationTest.testClass":325,"org.easymock.tests.LimitationsTest.mockNativeMethod":32,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":69,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":330,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":342,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests2.NameTest.nameForMocksControl":230,"org.easymock.tests2.MockedExceptionTest.testMockedException":218,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":135,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":111,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":244,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":236,"org.easymock.tests.MockingTest.testNicePartialClassMocking":110,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":249,"org.easymock.tests2.CaptureTest.testCaptureLast":273,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":351,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":306,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":319,"org.easymock.tests.MockingTest.testTwoMocks":339,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":383,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":139,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":213,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":323,"org.easymock.samples.ExampleTest.removeNonExistingDocument":174,"org.easymock.tests.UsageStrictMockTest.differentMethods":39,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":24,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":223,"org.easymock.tests2.MockBuilderTest.testCreateMockString":239,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":120,"org.easymock.tests.UsageExpectAndThrowTest.floatType":133,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":314,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":257,"org.easymock.tests.UsageVerifyTest.twoThrows":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":242,"org.easymock.samples.ExampleTest.voteAgainstRemoval":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":359,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":254,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":390,"org.easymock.tests2.UsageConstraintsTest.testNotNull":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":49,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":217,"org.easymock.tests2.UsageTest.defaultResetToNice":212,"org.easymock.samples.ExampleTest.voteAgainstRemovals":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":65,"org.easymock.tests.UsageVarargTest.differentLength":100,"org.easymock.tests2.CallbackTest.callback":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":338,"org.easymock.tests.UsageTest.openCallCountByLastCall":74,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":16,"org.easymock.tests.UsageCallCountTest.tooFewCalls":6,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":161,"org.easymock.tests.UsageThrowableTest.throwCheckedException":46,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":379,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":2,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":202,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":199,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":259,"org.easymock.tests.ObjectMethodsTest.testHashCode":107,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":225,"org.easymock.tests2.NameTest.nameForNiceMock":229,"org.easymock.tests2.DependencyTest.testInterfaceMocking":186,"org.easymock.samples.ExampleTest.addDocument":172,"org.easymock.tests2.DelegateToTest.testStubDelegate":263,"org.easymock.tests2.AnswerTest.stubAnswer":258,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":36,"org.easymock.tests.UsageVarargTest.varargLongAccepted":102,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":40,"org.easymock.tests.UsageExpectAndReturnTest.floatType":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":68,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":226,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":177,"org.easymock.tests.UsageThrowableTest.noUpperLimit":43,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":316,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":299,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":271,"org.easymock.tests2.SerializationTest.test":326,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":51,"org.easymock.tests2.UsageConstraintsTest.testSame":304,"org.easymock.samples.SupportTest.addDocument":183,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":25,"org.easymock.tests.GenericTest.testPackageScope":12,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":366,"org.easymock.tests2.NameTest.nameForMock":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":388,"org.easymock.tests2.UsageStrictMockTest.differentMethods":193,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":372,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":154,"org.easymock.tests2.MockedExceptionTest.testRealException":220,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":190,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":15,"org.easymock.tests2.NameTest.nameForStrictMock":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":260,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":248,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":317,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":346,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":232,"org.easymock.tests2.UsageStrictMockTest.range":192,"org.easymock.tests2.UsageConstraintsTest.lessThan":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":281,"org.easymock.tests2.CaptureTest.testCaptureRightOne":276,"org.easymock.tests2.UsageConstraintsTest.testOr":305,"org.easymock.tests.UsageRangeTest.combination":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":245,"org.easymock.tests.UsageTest.wrongArguments":73,"org.easymock.tests2.MockBuilderTest.testWithConstructor":385,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":63,"org.easymock.tests.UsageVarargTest.varargShortAccepted":101,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":374,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":9,"org.easymock.tests2.UsageConstraintsTest.cmpTo":309,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests2.CaptureTest.testCaptureFromStub":277,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":21,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":333,"org.easymock.tests.UsageTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":7,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":337,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":64,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":37,"org.easymock.tests2.UsageConstraintsTest.constraints":300,"org.easymock.samples.ExampleTest.addAndChangeDocument":175,"org.easymock.tests.UsageStrictMockTest.testVerify":41,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":180,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":86,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":82,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":83,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":286,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":347}}]
