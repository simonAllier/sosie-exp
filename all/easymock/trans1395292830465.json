[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[49,50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[53,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,9,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,10,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,52,171,172,173,174,175,176,177,178,179,180,181,54,55,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,11,209,210,211,212,213,214,215,216,217,218,219,12,13,220,221,14,15,16,17,222,223,224,225,226,18,227,19,20,228,21,22,229,230,231,232,233,23,24,25,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,3,26,257,258,259,260,261,27,28,262,263,29,30,31,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,4,320,321,322,323,324,325,326,327,328,329,330,331,32,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,49,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,38,39,40,41,42,43,44,45,46,47,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,48,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[360,363],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[291],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[7,7,8,8,57,59,60,72,73,75,76,77,78,80,82,83,84,85,90,155,435,156,157,159,160,161,162,163,164,436,165,437,438,439,166,167,168,440,169,441,442,53,55,193,195,200,206,249,250,443,444,326,329,337,393,395,396,397,407],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[7,7,8,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[7,7,8,8,57,59,60,72,73,75,76,77,78,80,445,81,82,83,84,85,86,87,88,89,90,155,435,156,157,158,159,160,161,162,446,163,164,436,165,438,166,447,167,168,440,169,441,442,171,172,53,55,191,192,448,193,449,194,195,196,197,450,451,198,452,453,199,454,200,201,202,203,204,205,206,455,456,247,248,249,250,443,444,254,326,329,336,337,338,339,340,341,342,343,457,359,360,361,362,49,363,365,393,394,395,396,397,398,406,458,407,459],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:112","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[359,360,361,362,363,365],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[80,226],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[103,105,113,220,221,15,17,222,224,229,23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[57,159,161,162,436],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[378,411],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:280","failures":[62,210,211,212,214,242],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[460,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[383,389,390],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,80,85,88,89,90,91,92,93,9,94,95,96,97,103,104,105,106,107,108,109,110,111,112,113,10,114,115,120,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,167,169,170,175,178,179,180,54,55,186,193,207,208,11,210,211,212,214,215,216,217,218,219,12,13,220,221,14,15,16,17,222,223,225,226,18,227,19,20,228,21,22,229,230,231,232,233,23,24,25,236,237,238,462,239,240,242,243,255,256,3,26,257,258,259,260,261,27,28,262,263,29,30,31,278,279,280,281,283,284,286,287,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,342,343,344,346,347,350,351,352,353,356,367,368,369,370,371,372,373,374,375,376,377,381,382,383,384,385,386,387,388,389,390,391,392,38,39,40,41,42,43,44,45,46,47,393,395,396,398,400,401,402,403,404,405,407,48,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[216,217,273],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[463],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[7,8,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,445,81,82,83,84,85,86,87,88,89,90,91,92,93,9,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,10,114,115,116,117,118,460,119,120,121,122,123,464,465,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,466,156,157,467,158,159,160,161,468,162,469,446,163,164,470,165,471,472,473,474,475,476,166,447,477,478,167,168,440,169,479,170,441,442,52,171,480,481,172,173,174,175,176,177,178,179,180,181,53,54,55,182,183,184,461,185,186,187,188,189,482,483,190,191,192,448,193,449,194,195,196,197,450,451,198,452,453,199,454,200,201,202,203,204,205,206,455,456,207,208,11,209,210,211,212,213,214,215,484,216,217,218,219,12,13,220,221,485,14,15,16,17,222,223,224,225,226,18,227,19,20,228,21,22,229,230,231,232,233,23,24,25,234,235,236,237,238,462,239,240,241,242,243,244,245,246,247,248,249,250,443,251,444,252,253,254,255,256,3,26,257,258,259,260,261,27,28,262,263,29,30,31,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,4,320,321,322,323,324,325,326,486,487,327,328,329,330,331,32,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,33,488,489,490,34,35,491,492,493,494,495,496,497,498,36,499,348,500,501,37,502,503,349,504,350,351,352,353,354,355,356,357,457,358,359,360,361,362,49,363,364,365,366,367,368,369,505,370,371,372,373,374,375,376,377,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,38,39,40,41,42,43,44,45,46,47,393,394,395,396,397,398,528,399,529,400,401,402,403,404,405,406,458,407,459,408,409,410,411,412,413,48,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[95,96,135,136,17,22,258,259,278,286,287,321,322,344,488,352,382,386],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[530],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[49,50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[88,89,90,91,262,400,401,402,403,404,405,414],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[16],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":221,"org.easymock.tests2.UsageTest.argumentsOrdered":139,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":318,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":495,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":134,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":58,"org.easymock.tests2.DelegateToTest.testReturnException":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":401,"org.easymock.tests.MockingTest.testPartialClassMocking":250,"org.easymock.tests.MockClassControlTest.testToString":338,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":98,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":451,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":298,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":237,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":527,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":223,"org.easymock.tests2.UsageTest.wrongArguments":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":27,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":334,"org.easymock.samples.ExampleTest.answerVsDelegate":62,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":329,"org.easymock.tests2.UsageConstraintsTest.testNull":15,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":253,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":75,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":151,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":343,"org.easymock.tests2.CaptureTest.testPrimitive":106,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":317,"org.easymock.tests.UsageTest.moreThanOneArgument":319,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":40,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":285,"org.easymock.tests.UsageTest.argumentsOrdered":324,"org.easymock.tests.UsageVarargTest.varargIntAccepted":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":43,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":483,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":481,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":47,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":511,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":120,"org.easymock.tests.ReplayStateInvalidUsageTest.times":272,"org.easymock.tests2.DependencyTest.testClassMocking":234,"org.easymock.tests2.AnswerTest.answer":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":500,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":128,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":487,"org.easymock.tests2.CaptureTest.testAnd":103,"org.easymock.tests2.UsageTest.strictResetToDefault":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":146,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":346,"org.easymock.tests2.DelegateToTest.testDelegate":214,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":289,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":510,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":313,"org.easymock.tests.LimitationsTest.mockFinalMethod":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":404,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":297,"org.easymock.tests2.DependencyTest.testClassMockingSupport":235,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":290,"org.easymock.tests2.CaptureTest.testCapture1_2446744":107,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":311,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":126,"org.easymock.tests.UsageThrowableTest.throwError":385,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":266,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":328,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":456,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":514,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.MockingTest.testInterfaceMocking":251,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":44,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":409,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":457,"org.easymock.tests2.UsageTest.niceToStrict":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":299,"org.easymock.tests2.ThreadingTest.testChangeDefault":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":33,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":159,"org.easymock.tests2.MockBuilderTest.testCreateMock":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":203,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":123,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":307,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":147,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":332,"org.easymock.tests.UsageOverloadedMethodTest.overloading":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":19,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":426,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":350,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":50,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":227,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":112,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":505,"org.easymock.tests2.EasyMockSupportClassTest.testAll":193,"org.easymock.tests.MockClassControlTest.testEquals":342,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":396,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":315,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":437,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":530,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":127,"org.easymock.tests2.CaptureTest.testCaptureAll":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":295,"org.easymock.tests.MockNameTest.defaultName":366,"org.easymock.tests2.UsageConstraintsTest.testMatches":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":41,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":264,"org.easymock.samples.ExampleTest.voteForRemovals":66,"org.easymock.tests.UsageVarargTest.allKinds":377,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":382,"org.easymock.samples.BasicClassMockTest.testPrintContent":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":296,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":391,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":188,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":213,"org.easymock.tests2.UsageConstraintsTest.greaterThan":21,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":345,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":85,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":515,"org.easymock.samples.ExampleTest.voteForRemoval":63,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":365,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":86,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":78,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":507,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":393,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":129,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":492,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":144,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":400,"org.easymock.tests2.CaptureTest.testCaptureFirst":115,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":491,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":145,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":141,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":422,"org.easymock.tests2.UsageTest.moreThanOneArgument":131,"org.easymock.tests2.CaptureTest.testCapture2_2446744":114,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":501,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":164,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":376,"org.easymock.tests.GenericTest.testBridgedEquals":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":283,"org.easymock.tests.UsageExpectAndReturnTest.longType":418,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":293,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":436,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":316,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":32,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":38,"org.easymock.tests.UsageCallCountTest.tooManyCalls":284,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":204,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":390,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":168,"org.easymock.tests.MockingTest.testNiceClassMocking":254,"org.easymock.tests.MockingTest.testClassMocking":248,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":435,"org.easymock.tests2.UsageConstraintsTest.testContains":18,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":277,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":90,"org.easymock.tests2.UsageConstraintsTest.testFind":14,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":352,"org.easymock.tests.MockTypeTest.fromEasyMockClass":327,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":239,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":255,"org.easymock.tests.UsageExpectAndReturnTest.object":425,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":150,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":371,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":356,"org.easymock.tests.UsageTest.exactCallCountByLastCall":325,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":35,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":528,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":447,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":431,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":367,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":183,"org.easymock.tests.MockClassControlTest.testHashCode":341,"org.easymock.tests2.EasyMockSupportTest.testVerify":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":453,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":240,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":125,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":181,"org.easymock.tests.UsageVarargTest.varargCharAccepted":370,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":358,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":504,"org.easymock.tests2.UsageTest.openCallCountByLastCall":135,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":153,"org.easymock.tests.DefaultClassInstantiatorTest.object":359,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":378,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":305,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":460,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":182,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":513,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":83,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":304,"org.easymock.tests.ReplayStateInvalidCallsTest.times":519,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":432,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":411,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":520,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":206,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":339,"org.easymock.tests2.UsageTest.resumeIfFailure":140,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":326,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":403,"org.easymock.tests2.StubTest.stubWithReturnValue":11,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":468,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":424,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":233,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":348,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.samples.SupportTest.voteForRemovals":70,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":394,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":310,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":56,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":349,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":176,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":529,"org.easymock.tests.UsageExpectAndThrowTest.object":308,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":230,"org.easymock.tests2.DelegateToTest.testWrongClass":212,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":517,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":30,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":31,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests.UsageStrictMockTest.range":258,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":173,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":149,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":167,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":309,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":191,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":274,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":333,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":5,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":509,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":410,"org.easymock.tests2.CaptureTest.testCaptureNone":111,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":472,"org.easymock.tests.UsageUnorderedTest.message":381,"org.easymock.tests.UsageVerifyTest.twoReturns":384,"org.easymock.tests.UsageVarargTest.varargByteAccepted":375,"org.easymock.tests2.ThreadingTest.testThreadSafe":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":201,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":281,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":59,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":357,"org.easymock.tests2.CaptureTest.testCapture_2617107":105,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":502,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":263,"org.easymock.tests2.UsageConstraintsTest.any":225,"org.easymock.tests2.StubTest.stub":208,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":271,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":503,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":402,"org.easymock.tests.UsageExpectAndThrowTest.longType":301,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":49,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":270,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests2.SerializationTest.testClass":53,"org.easymock.tests.LimitationsTest.mockNativeMethod":407,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":434,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":397,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":439,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":118,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":525,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":473,"org.easymock.tests2.NameTest.nameForMocksControl":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":119,"org.easymock.tests2.MockedExceptionTest.testMockedException":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":194,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":322,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":462,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":444,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":302,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":72,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":162,"org.easymock.tests.MockingTest.testNicePartialClassMocking":443,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":77,"org.easymock.tests2.CompareToTest.testCompareEqual":463,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":116,"org.easymock.tests2.CaptureTest.testCaptureLast":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":291,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":524,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":442,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":222,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":231,"org.easymock.tests.MockingTest.testTwoMocks":249,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":521,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":306,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":138,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":24,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":476,"org.easymock.samples.ExampleTest.removeNonExistingDocument":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":122,"org.easymock.tests.UsageStrictMockTest.differentMethods":259,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":268,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":184,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":475,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":361,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":217,"org.easymock.tests2.MockBuilderTest.testCreateMockString":165,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":196,"org.easymock.tests.UsageExpectAndThrowTest.floatType":300,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":448,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":178,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":477,"org.easymock.tests.UsageVerifyTest.twoThrows":383,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":200,"org.easymock.samples.ExampleTest.voteAgainstRemoval":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":408,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests.LimitationsTest.privateConstructor":458,"org.easymock.tests2.UsageConstraintsTest.testNotNull":23,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":392,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":88,"org.easymock.tests2.UsageTest.defaultResetToNice":137,"org.easymock.samples.ExampleTest.voteAgainstRemovals":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":430,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":117,"org.easymock.tests.UsageVarargTest.differentLength":372,"org.easymock.tests2.CallbackTest.callback":207,"org.easymock.tests2.UsageConstraintsTest.equals":485,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":445,"org.easymock.tests.UsageTest.openCallCountByLastCall":321,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":262,"org.easymock.tests.UsageCallCountTest.tooFewCalls":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":169,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":335,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":474,"org.easymock.tests.UsageThrowableTest.throwCheckedException":389,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":6,"org.easymock.tests.MockingTest.testStrictClassMocking":247,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":441,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":414,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":121,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":170,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":180,"org.easymock.tests.ObjectMethodsTest.testHashCode":355,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":523,"org.easymock.tests2.NameTest.nameForNiceMock":101,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":219,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":518,"org.easymock.tests2.DependencyTest.testInterfaceMocking":236,"org.easymock.samples.ExampleTest.addDocument":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.DelegateToTest.testStubDelegate":211,"org.easymock.tests2.AnswerTest.stubAnswer":179,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":26,"org.easymock.tests2.MocksControlTest.testCreateOldMockTypeFromNewMockType":478,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":469,"org.easymock.tests.UsageVarargTest.varargLongAccepted":374,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":494,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":433,"org.easymock.tests.UsageExpectAndReturnTest.floatType":417,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":166,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":482,"org.easymock.tests.UsageThrowableTest.noUpperLimit":386,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":22,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":171,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":108,"org.easymock.tests2.SerializationTest.test":54,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":51,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":416,"org.easymock.tests2.UsageConstraintsTest.testSame":16,"org.easymock.samples.SupportTest.addDocument":69,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":479,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":508,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":197,"org.easymock.tests.GenericTest.testPackageScope":395,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":34,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":189,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":252,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":506,"org.easymock.tests2.NameTest.nameForMock":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":427,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":470,"org.easymock.tests2.UsageStrictMockTest.differentMethods":96,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":419,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":312,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":347,"org.easymock.tests2.MockedExceptionTest.testRealException":91,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":498,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":28,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":275,"org.easymock.tests2.NameTest.nameForStrictMock":100,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":158,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":172,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":229,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":362,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":156,"org.easymock.tests2.UsageStrictMockTest.range":95,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":512,"org.easymock.tests2.UsageConstraintsTest.lessThan":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":493,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":452,"org.easymock.tests2.CaptureTest.testCaptureRightOne":113,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":471,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":344,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":73,"org.easymock.tests.UsageTest.wrongArguments":320,"org.easymock.tests2.MockBuilderTest.testWithConstructor":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":450,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":488,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":428,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":363,"org.easymock.tests.UsageVarargTest.varargShortAccepted":373,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":282,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":526,"org.easymock.tests2.UsageConstraintsTest.cmpTo":226,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":177,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":490,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":136,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":265,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":157,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":522,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":429,"org.easymock.tests2.UsageConstraintsTest.constraints":220,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.samples.ExampleTest.addAndChangeDocument":68,"org.easymock.tests.UsageStrictMockTest.testVerify":261,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":71,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":294,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":109,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":438,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":421,"org.easymock.tests.LimitationsTest.abstractClass":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":46,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":148,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":368}}]
