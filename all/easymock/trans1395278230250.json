[{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:414","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[34,35,36,37,38,39,40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[4,5,43,34,44,45,46,47,48,49,24,25,50,51,6,26,52,35,7,53,54,55,56,57,58,59,60,61,27,62,63,28,64,65,8,66,67,68,69,70,71,72,73,74,9,75,76,77,78,79,80,81,82,36,83,37,84,85,86,87,22,88,89,90,91,23,92,93,94,95,96,97,0,98,99,100,101,102,103,1,104,105,106,107,2,38,108,42,39,109,40,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,29,159,160,30,161,31,162,163,164,165,166,167,168,10,169,170,171,172,11,12,13,173,174,14,175,176,177,178,179,180,181,182,183,15,184,185,186,16,187,188,17,189,190,191,192,193,194,195,196,197,198,32,199,33,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,18,19,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,20,310,311,21,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,41,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[4,4,5,5,24,25,6,7,54,55,56,57,59,27,62,63,28,64,65,8,66,67,68,69,70,71,72,73,74,9,75,76,77,78,79,80,81,82,163,165,166,168,10,169,170,172,12,13,173,14,175,176,178,179,180,181,183,15,184,185,186,16,187,188,17,189,190,191,192,195,196,198,32,18,19,230,231,232,251,252,253,254,255,256,258,259,260,261,262,263,265,268,302,303,304,305,306,307,308,309,20,310,311,21,312,332,388,393,407,408,409,410],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[289,290,438],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[89,93,102,106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[35,86,99,139,142,143,144,148,149,150,151,153,157,158,160,165,13,173,14,176,186,187,234,237,238,239,489,490,298,322,491,330,350,352,353,356,357,358,383,384,454,455,457,459,460,461,486,487,488],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[4,5,43,34,44,45,46,47,48,49,24,25,50,51,6,26,52,35,7,53,54,55,56,57,58,59,60,61,27,62,63,28,64,65,8,66,67,68,69,70,71,72,73,74,9,75,76,77,78,79,80,81,82,36,83,37,84,85,86,87,22,88,89,90,91,23,92,93,94,95,96,97,0,98,99,100,101,102,103,1,104,105,106,107,2,38,108,42,39,109,40,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,29,159,160,30,161,31,162,163,164,165,166,167,168,10,169,170,171,172,11,12,13,173,174,14,175,176,177,178,179,180,181,182,183,15,184,185,186,16,187,188,17,189,190,191,192,193,194,195,196,197,198,32,199,33,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,18,19,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,20,310,311,21,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,41,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[238,239,273,277,278,280,283,363,367,368,370,373,430,460,461],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[35,99,139,151,237,238,298,350,358,383,384,454,459,460,493,494,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[100,495],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:99","failures":[44,45,47,49,6,52,94,160,161,10,298,497],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[498,499,500,501,352,457],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[498,499,500,501,352,457],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[238,239,460,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[4,5,43,34,44,45,46,47,48,49,24,25,50,51,6,26,52,35,7,53,54,55,56,57,59,60,61,27,62,63,28,64,65,8,66,67,68,69,70,71,72,73,74,9,75,76,77,78,79,80,81,82,36,83,37,84,85,86,87,22,88,89,90,91,23,92,93,94,95,96,97,0,98,99,100,101,102,103,1,104,105,106,107,2,38,108,42,39,109,40,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,502,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,29,159,160,30,161,31,162,503,163,165,166,168,10,169,170,172,11,12,13,173,14,175,176,177,178,179,180,181,182,183,15,184,185,186,16,187,188,17,189,190,191,192,193,194,195,196,197,198,32,199,33,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,18,19,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,20,310,311,21,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,41,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[526,114,116,117,118,119,120,121,123,527,124,125,127],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[7,53,54,528],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[36,37,84,85,86,87,88,89,90,91,23,92,93,94,95,96,97,0,98,99,100,101,102,103,1,104,105,106,107,2,114,115,116,117,118,119,120,121,122,123,124,125,126,127,162,183,236,248,249,327,328,329,345,346,347,348,349,417,418,419,420,421,454,457,458,468],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[498,499,500,501,352,457],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[171,529,530,531,532,533,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[7,171,12,529,530,531,534,535,18,19],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.RecordState:153","failures":[230,231,232,233,249,347,464,465,466,467,468,469],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[22,327],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[230,231,232,233,242,249,396,397,398,464,465,466,467,468,469],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[162],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[141,236,239,240,291,351,382,383,384,415,458,461,462],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[233,413],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":87,"org.easymock.tests2.UsageTest.argumentsOrdered":149,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":350,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":432,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":144,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":51,"org.easymock.tests2.DelegateToTest.testReturnException":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":465,"org.easymock.tests.MockingTest.testPartialClassMocking":262,"org.easymock.tests.MockClassControlTest.testToString":304,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":212,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":69,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":359,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":33,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":525,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":529,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":92,"org.easymock.tests2.UsageTest.wrongArguments":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":345,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":245,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":393,"org.easymock.tests2.UsageConstraintsTest.testNull":89,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":267,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":178,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":160,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":309,"org.easymock.tests2.CaptureTest.testPrimitive":117,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":349,"org.easymock.tests.UsageTest.moreThanOneArgument":351,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":378,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":477,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":470,"org.easymock.tests.UsageTest.argumentsOrdered":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":318,"org.easymock.tests.InvocationTest.testEquals":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":417,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":533,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":163,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":228,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":421,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":509,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests.ReplayStateInvalidUsageTest.times":341,"org.easymock.tests2.DependencyTest.testClassMocking":198,"org.easymock.tests2.AnswerTest.answer":38,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":439,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":113,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":390,"org.easymock.tests2.CaptureTest.testAnd":114,"org.easymock.tests2.UsageTest.strictResetToDefault":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":185,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":156,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":300,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":474,"org.easymock.tests2.DelegateToTest.testDelegate":138,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":508,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":374,"org.easymock.tests.LimitationsTest.mockFinalMethod":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":468,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":450,"org.easymock.tests2.DependencyTest.testClassMockingSupport":32,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":289,"org.easymock.tests2.CaptureTest.testCapture1_2446744":118,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":111,"org.easymock.tests.UsageThrowableTest.throwError":399,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":335,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":392,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":229,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":82,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":512,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.MockingTest.testInterfaceMocking":264,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":418,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":386,"org.easymock.tests2.UsageTest.niceToStrict":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":70,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":360,"org.easymock.tests2.ThreadingTest.testChangeDefault":502,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":208,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":368,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":157,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":389,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":243,"org.easymock.tests.UsageOverloadedMethodTest.overloading":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":79,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":0,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":280,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":379,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":97,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":123,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":319,"org.easymock.tests2.EasyMockSupportClassTest.testAll":28,"org.easymock.tests.MockClassControlTest.testEquals":308,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":376,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":448,"org.easymock.tests2.CaptureTest.testCaptureAll":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":112,"org.easymock.tests.MockNameTest.defaultName":247,"org.easymock.tests2.UsageConstraintsTest.testMatches":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":478,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":333,"org.easymock.samples.ExampleTest.voteForRemovals":47,"org.easymock.tests.UsageVarargTest.allKinds":327,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":382,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":449,"org.easymock.samples.BasicClassMockTest.testPrintContent":25,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":405,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":469,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":535,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":64,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":187,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":513,"org.easymock.samples.ExampleTest.voteForRemoval":44,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":258,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":188,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":58,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":181,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":505,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":332,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":154,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":464,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":133,"org.easymock.tests2.CaptureTest.testCaptureFirst":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":155,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":416,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":276,"org.easymock.tests2.UsageTest.moreThanOneArgument":141,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":131,"org.easymock.tests2.CaptureTest.testCapture2_2446744":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":440,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":173,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":326,"org.easymock.tests.GenericTest.testBridgedEquals":312,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":487,"org.easymock.tests.UsageExpectAndReturnTest.longType":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":446,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":377,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":104,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":475,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.UsageCallCountTest.tooManyCalls":488,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":404,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":190,"org.easymock.tests.MockingTest.testNiceClassMocking":268,"org.easymock.tests.MockingTest.testClassMocking":260,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":481,"org.easymock.tests2.UsageConstraintsTest.testContains":96,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":232,"org.easymock.tests2.UsageConstraintsTest.testFind":88,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":381,"org.easymock.tests.MockTypeTest.fromEasyMockClass":391,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":455,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":37,"org.easymock.tests.UsageExpectAndReturnTest.object":279,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":530,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":321,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":295,"org.easymock.tests.UsageTest.exactCallCountByLastCall":358,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":471,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":313,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":285,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":316,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":412,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":219,"org.easymock.tests.MockClassControlTest.testHashCode":307,"org.easymock.tests2.EasyMockSupportTest.testVerify":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":72,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":472,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":452,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":41,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":489,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":162,"org.easymock.tests.UsageVarargTest.varargCharAccepted":320,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":250,"org.easymock.tests2.CaptureTest.testCaptureMultiple":526,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastCall":145,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":161,"org.easymock.tests.DefaultClassInstantiatorTest.object":251,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":451,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":293,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":73,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":402,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":203,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":218,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":511,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":186,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":365,"org.easymock.tests.ReplayStateInvalidCallsTest.times":517,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":396,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":518,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":80,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":305,"org.easymock.tests2.UsageTest.resumeIfFailure":150,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":388,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":467,"org.easymock.tests2.StubTest.stubWithReturnValue":242,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":171,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":278,"org.easymock.tests2.SerializationTest.testAllMockedMethod":54,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":438,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":52,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":371,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":528,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":444,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":108,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":315,"org.easymock.tests.UsageExpectAndThrowTest.object":369,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":103,"org.easymock.tests2.DelegateToTest.testWrongClass":136,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":515,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":328,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":329,"org.easymock.tests.UsageStrictMockTest.range":460,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":60,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":370,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":27,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":343,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":244,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":500,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":387,"org.easymock.tests2.CaptureTest.testCaptureNone":122,"org.easymock.tests.UsageUnorderedTest.message":454,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":491,"org.easymock.tests.UsageVerifyTest.twoReturns":384,"org.easymock.tests.UsageVarargTest.varargByteAccepted":325,"org.easymock.tests2.ThreadingTest.testThreadSafe":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":75,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":485,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":24,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":296,"org.easymock.tests2.CaptureTest.testCapture_2617107":116,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":348,"org.easymock.tests2.UsageConstraintsTest.any":94,"org.easymock.tests2.StubTest.stub":241,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndThrowTest.longType":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":255,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":339,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":237,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests.LimitationsTest.mockNativeMethod":409,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":202,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":523,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":240,"org.easymock.tests2.NameTest.nameForMocksControl":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":204,"org.easymock.tests2.MockedExceptionTest.testMockedException":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":65,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":355,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":83,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":363,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":175,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":172,"org.easymock.tests.MockingTest.testNicePartialClassMocking":263,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":180,"org.easymock.tests2.CaptureTest.testCaptureLast":121,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":200,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":290,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":522,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":23,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":196,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":1,"org.easymock.tests.MockingTest.testTwoMocks":261,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":519,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":367,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":148,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":107,"org.easymock.samples.ExampleTest.removeNonExistingDocument":48,"org.easymock.tests.UsageStrictMockTest.differentMethods":461,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":207,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":220,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":503,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":253,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":130,"org.easymock.tests2.MockBuilderTest.testCreateMockString":14,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":66,"org.easymock.tests.UsageExpectAndThrowTest.floatType":361,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":63,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":39,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":217,"org.easymock.tests.UsageVerifyTest.twoThrows":383,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":9,"org.easymock.samples.ExampleTest.voteAgainstRemoval":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":433,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":385,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":16,"org.easymock.tests.LimitationsTest.privateConstructor":408,"org.easymock.tests2.UsageConstraintsTest.testNotNull":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":406,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":230,"org.easymock.tests2.UsageTest.defaultResetToNice":147,"org.easymock.samples.ExampleTest.voteAgainstRemovals":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":284,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":201,"org.easymock.tests.UsageVarargTest.differentLength":322,"org.easymock.tests2.CallbackTest.callback":35,"org.easymock.tests2.UsageConstraintsTest.equals":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":15,"org.easymock.tests.UsageTest.openCallCountByLastCall":354,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":347,"org.easymock.tests.UsageCallCountTest.tooFewCalls":483,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":246,"org.easymock.tests.UsageThrowableTest.throwCheckedException":403,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":501,"org.easymock.tests.MockingTest.testStrictClassMocking":259,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":195,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":249,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":206,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":194,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":40,"org.easymock.tests.ObjectMethodsTest.testHashCode":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":532,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":521,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":132,"org.easymock.tests2.NameTest.nameForNiceMock":215,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":516,"org.easymock.tests2.DependencyTest.testInterfaceMocking":199,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":531,"org.easymock.samples.ExampleTest.addDocument":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":76,"org.easymock.tests2.DelegateToTest.testStubDelegate":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":81,"org.easymock.tests2.AnswerTest.stubAnswer":109,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":458,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":11,"org.easymock.tests.UsageVarargTest.varargLongAccepted":324,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.floatType":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":414,"org.easymock.tests.UsageThrowableTest.noUpperLimit":400,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":227,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":85,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":55,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":119,"org.easymock.tests2.SerializationTest.test":53,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":252,"org.easymock.tests2.UsageConstraintsTest.testSame":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":270,"org.easymock.samples.SupportTest.addDocument":26,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":193,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":506,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":67,"org.easymock.tests.GenericTest.testPackageScope":310,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":226,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":266,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":504,"org.easymock.tests2.NameTest.nameForMock":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":281,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":174,"org.easymock.tests2.UsageStrictMockTest.differentMethods":239,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":273,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":373,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":292,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":301,"org.easymock.tests2.MockedExceptionTest.testRealException":233,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":435,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":236,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":346,"org.easymock.tests2.NameTest.nameForStrictMock":214,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":36,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":179,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":59,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":493,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":165,"org.easymock.tests2.UsageStrictMockTest.range":238,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":510,"org.easymock.tests2.UsageConstraintsTest.lessThan":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":534,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":153,"org.easymock.tests2.CaptureTest.testCaptureRightOne":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":71,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":492,"org.easymock.tests2.UsageConstraintsTest.testOr":91,"org.easymock.tests.UsageRangeTest.combination":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":176,"org.easymock.tests.UsageTest.wrongArguments":353,"org.easymock.tests2.MockBuilderTest.testWithConstructor":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":68,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":282,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":256,"org.easymock.tests.UsageVarargTest.varargShortAccepted":323,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":486,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":524,"org.easymock.tests2.UsageConstraintsTest.cmpTo":95,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":42,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":514,"org.easymock.tests2.CompareToTest.testLessThan":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":425,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.CaptureTest.testCaptureFromStub":125,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":334,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":166,"org.easymock.tests.UsageTest.unexpectedCallWithArray":352,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":520,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":457,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":283,"org.easymock.tests2.CaptureTest.testCapture":527,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":459,"org.easymock.tests2.UsageConstraintsTest.constraints":86,"org.easymock.samples.ExampleTest.addAndChangeDocument":49,"org.easymock.tests.UsageStrictMockTest.testVerify":463,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":50,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":456,"org.easymock.tests2.CompareToTest.testGreateThan":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":447,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":419,"org.easymock.tests.LimitationsTest.abstractClass":407,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":420,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":415,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":158,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":317}}]
