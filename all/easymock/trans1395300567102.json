[{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:557","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,134,135,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:70","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[40,257,44,45,46,96,258,97,104,127,134,134,135,135,259,260,261,146,262,147,263,148,149,264,150,265,153,154,156,157,158,266,159,267,160,161,162,197,268,214,269,216,229,230,231,232,239,240,241,242,244,245],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,270,271,8,9,272,273,10,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,274,275,276,277,278,279,280,281,282,283,284,40,41,285,286,287,288,289,290,42,43,44,45,46,47,49,50,51,52,53,291,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,292,293,294,295,296,96,258,98,99,100,101,102,103,104,297,298,299,300,301,302,303,108,304,109,110,305,111,112,122,123,124,125,126,306,127,307,128,129,130,131,308,132,133,134,135,259,260,309,136,137,138,139,310,140,311,141,142,143,312,313,144,145,261,146,147,263,148,149,264,150,265,151,152,153,154,155,156,157,158,266,159,267,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,314,185,186,187,188,189,192,193,194,315,316,317,318,195,196,197,198,199,319,200,201,202,203,204,205,206,207,209,210,211,213,214,215,269,216,217,218,219,220,221,222,223,224,225,226,227,228,320,229,230,231,232,233,321,322,234,323,235,236,324,237,238,239,240,241,242,243,244,245,246,247,325,248,249,326,327,250,251,252,253,254,255,256],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[328,329,330,331,332,333,334],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[6,7,271,8,9,272,273,10,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,45,46,47,49,50,54,56,57,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,104,301,303,108,304,109,110,305,111,112,118,119,122,123,124,125,126,127,128,129,130,131,132,136,137,138,139,310,140,311,141,142,312,313,145,147,148,149,150,151,152,153,155,156,158,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,193,194,197,199,200,201,203,204,205,206,207,209,210,211,213,214,215,216,217,219,220,221,222,225,227,228,230,231,232,233,321,234,323,235,236,324,238,239,240,241,242,243,244,245,246,247,325,248,249,326,327,252,253],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[1,2,3,4,5,6,7,270,271,8,9,272,273,10,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,274,275,276,277,278,279,280,281,282,283,284,40,335,336,41,285,286,287,288,289,290,42,43,44,45,46,47,48,49,50,51,52,53,54,291,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,292,293,294,295,296,96,258,98,99,100,101,102,103,104,337,338,339,340,341,105,342,343,344,345,346,347,348,297,298,299,300,349,350,351,301,302,303,108,304,109,110,305,352,111,112,353,354,355,356,357,358,359,360,122,123,124,125,126,306,127,307,128,129,130,131,308,132,361,133,134,134,135,135,259,260,309,136,137,138,139,310,140,311,141,142,143,312,313,144,145,261,146,147,263,148,149,264,150,265,151,152,153,154,155,156,157,158,266,159,267,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,314,185,186,187,188,189,192,193,194,315,316,317,318,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,213,214,215,269,216,217,218,219,220,221,222,223,224,225,226,227,228,320,362,363,364,365,229,230,231,232,233,321,322,234,323,235,236,324,237,238,366,239,240,241,242,243,244,245,246,247,325,248,249,326,327,250,251,252,253,254,255,256],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[367,97,127,134,135,147,368,369,264,265,370,161,371,214,216,334,230,231],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[113],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[124,128,130,131,132,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.RecordState:274","failures":[51,129,189,192,193,194,199,200,206],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[372,214,215,269],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[367,373],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[270,271,272,273,374,375,59,66,67,303,109,310,312,313,235],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[376],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[12,114,116],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[369,214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[1,2,3,4,5,6,7,8,9,10,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,274,275,276,277,278,280,281,282,283,284,42,51,52,53,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,258,98,99,100,101,102,103,302,108,304,109,110,305,111,112,122,123,124,125,126,306,307,128,129,130,131,308,132,133,259,260,309,136,137,138,139,140,311,141,142,144,145,147,148,149,151,152,154,157,161,166,168,170,171,186,189,192,193,201,202,203,205,206,207,209,210,211,213,214,215,217,218,219,220,221,222,223,225,226,227,228,233,322,234,323,235,236,324,237,238,246,247,250,251,253,256],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[377,378],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[270,379,380,303,381,382],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[97],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[42,173],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[270,379,380,303,381,382],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[166,167,170,171],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[165,172,177,188,383],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[162],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:79","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[270,271,272,273,375,291,59,66,67,303,109,310,312,313,235],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":166,"org.easymock.tests2.UsageTest.argumentsOrdered":313,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":101,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":311,"org.easymock.tests2.StubTest.stubWithReturnValue":238,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":328,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":307,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":77,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":185,"org.easymock.tests2.SerializationTest.testAllMockedMethod":269,"org.easymock.tests2.DelegateToTest.testReturnException":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":99,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":106,"org.easymock.tests.MockingTest.testPartialClassMocking":44,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":382,"org.easymock.samples.SupportTest.voteForRemovals":136,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":367,"org.easymock.tests.MockClassControlTest.testToString":355,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":32,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":372,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":20,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":107,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":190,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":13,"org.easymock.tests.UsageExpectAndThrowTest.object":30,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":152,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":329,"org.easymock.tests2.DelegateToTest.testWrongClass":211,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":111,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":112,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":172,"org.easymock.tests2.UsageTest.wrongArguments":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":60,"org.easymock.tests.UsageStrictMockTest.range":109,"org.easymock.samples.ConstructorCalledMockTest.testTax":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":299,"org.easymock.samples.ExampleTest.answerVsDelegate":129,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":239,"org.easymock.tests2.UsageConstraintsTest.testNull":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":156,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":360,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":148,"org.easymock.tests2.CaptureTest.testPrimitive":248,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":346,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":272,"org.easymock.tests.UsageTest.moreThanOneArgument":7,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":39,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":298,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":155,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":3,"org.easymock.tests2.CaptureTest.testCaptureNone":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":115,"org.easymock.tests.UsageUnorderedTest.message":59,"org.easymock.tests.UsageVerifyTest.twoReturns":67,"org.easymock.tests.UsageVarargTest.varargByteAccepted":282,"org.easymock.tests2.ThreadingTest.testThreadSafe":201,"org.easymock.tests.UsageTest.argumentsOrdered":273,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":117,"org.easymock.tests.UsageVarargTest.varargIntAccepted":276,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":287,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":259,"org.easymock.tests2.CaptureTest.testCapture_2617107":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":333,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":263,"org.easymock.tests2.UsageConstraintsTest.any":173,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":343,"org.easymock.tests2.StubTest.stub":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":126,"org.easymock.tests.UsageExpectAndThrowTest.longType":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":100,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":323,"org.easymock.tests2.SerializationTest.testClass":214,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.ReplayStateInvalidUsageTest.times":344,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests.LimitationsTest.mockNativeMethod":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":87,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":97,"org.easymock.tests2.AnswerTest.answer":189,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":318,"org.easymock.tests2.CaptureTest.testAnd":246,"org.easymock.tests2.UsageTest.strictResetToDefault":138,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":267,"org.easymock.tests2.NameTest.nameForMocksControl":365,"org.easymock.tests2.MockedExceptionTest.testMockedException":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":49,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests2.DelegateToTest.testDelegate":213,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":121,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":319,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":24,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":46,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":149,"org.easymock.tests.MockingTest.testNicePartialClassMocking":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":35,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":158,"org.easymock.tests2.CaptureTest.testCaptureLast":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":102,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":58,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":245,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":296,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":184,"org.easymock.tests.MockingTest.testTwoMocks":257,"org.easymock.tests2.CaptureTest.testCapture1_2446744":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":68,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":28,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":312,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":187,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":339,"org.easymock.tests.UsageThrowableTest.throwError":88,"org.easymock.samples.ExampleTest.removeNonExistingDocument":361,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":341,"org.easymock.tests.UsageStrictMockTest.differentMethods":110,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":203,"org.easymock.tests2.MockBuilderTest.testCreateMockString":265,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":353,"org.easymock.tests.UsageExpectAndThrowTest.floatType":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":5,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":179,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":192,"org.easymock.tests.UsageVerifyTest.twoThrows":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":231,"org.easymock.samples.PartialClassMockTest.testGetArea":127,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":123,"org.easymock.samples.ExampleTest.voteAgainstRemoval":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":113,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":114,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":21,"org.easymock.tests2.UsageTest.niceToStrict":140,"org.easymock.tests2.UsageConstraintsTest.testNotNull":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":195,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":95,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":147,"org.easymock.tests2.MockBuilderTest.testCreateMock":264,"org.easymock.tests2.UsageTest.defaultResetToNice":143,"org.easymock.samples.ExampleTest.voteAgainstRemovals":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":83,"org.easymock.tests.UsageVarargTest.differentLength":279,"org.easymock.tests2.CallbackTest.callback":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":370,"org.easymock.tests.UsageTest.openCallCountByLastCall":8,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":29,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":222,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":62,"org.easymock.tests.UsageCallCountTest.tooFewCalls":285,"org.easymock.tests.UsageOverloadedMethodTest.overloading":56,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":53,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":79,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":55,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":176,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":300,"org.easymock.tests.UsageThrowableTest.throwCheckedException":92,"org.easymock.tests.MockClassControlTest.testEquals":359,"org.easymock.tests2.EasyMockSupportClassTest.testAll":229,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":258,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":37,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":317,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":294,"org.easymock.tests2.CaptureTest.testCaptureAll":247,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":244,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":43,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":241,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":345,"org.easymock.tests2.UsageConstraintsTest.testMatches":178,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":243,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":194,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":4,"org.easymock.tests2.CompareToTest.testGreateOrEqual":383,"org.easymock.tests.ObjectMethodsTest.testHashCode":350,"org.easymock.samples.ExampleTest.voteForRemovals":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":332,"org.easymock.tests2.NameTest.nameForNiceMock":364,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":205,"org.easymock.tests.UsageVarargTest.allKinds":284,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":65,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":295,"org.easymock.samples.BasicClassMockTest.testPrintContent":260,"org.easymock.samples.ExampleTest.addDocument":308,"org.easymock.tests2.DelegateToTest.testStubDelegate":210,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":94,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":321,"org.easymock.tests2.AnswerTest.stubAnswer":193,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":103,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":108,"org.easymock.tests2.UsageConstraintsTest.greaterThan":180,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":48,"org.easymock.tests.UsageVarargTest.varargLongAccepted":281,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":162,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":305,"org.easymock.samples.ExampleTest.voteForRemoval":130,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":86,"org.easymock.tests.UsageExpectAndReturnTest.floatType":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":266,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":216,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":135,"org.easymock.tests.UsageThrowableTest.noUpperLimit":89,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":181,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":40,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":137,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":164,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":326,"org.easymock.tests2.SerializationTest.test":215,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":369,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":219,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":69,"org.easymock.tests2.UsageConstraintsTest.testSame":169,"org.easymock.samples.SupportTest.addDocument":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":98,"org.easymock.tests2.CaptureTest.testCaptureFirst":256,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":220,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":75,"org.easymock.tests.GenericTest.testPackageScope":96,"org.easymock.tests2.CaptureTest.testCapture2_2446744":255,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":204,"org.easymock.tests2.UsageTest.moreThanOneArgument":139,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":120,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":150,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":283,"org.easymock.tests.GenericTest.testBridgedEquals":373,"org.easymock.tests2.NameTest.nameForMock":362,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":289,"org.easymock.tests.UsageExpectAndReturnTest.longType":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":292,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":38,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":314,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":116,"org.easymock.tests2.UsageStrictMockTest.differentMethods":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":36,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":72,"org.easymock.tests.UsageCallCountTest.tooManyCalls":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":34,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":50,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":41,"org.easymock.tests2.MockedExceptionTest.testRealException":198,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":76,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":374,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":234,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":347,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":61,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":240,"org.easymock.tests2.NameTest.nameForStrictMock":363,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":336,"org.easymock.tests2.UsageConstraintsTest.testContains":175,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":197,"org.easymock.tests2.UsageConstraintsTest.testFind":167,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":57,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":157,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":200,"org.easymock.tests.UsageExpectAndReturnTest.object":78,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":182,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":159,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":146,"org.easymock.tests2.UsageStrictMockTest.range":235,"org.easymock.tests2.UsageConstraintsTest.lessThan":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":330,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":278,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":351,"org.easymock.tests.UsageTest.exactCallCountByLastCall":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":42,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":218,"org.easymock.tests2.CaptureTest.testCaptureRightOne":253,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":11,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":118,"org.easymock.tests2.UsageConstraintsTest.testOr":170,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":334,"org.easymock.tests.UsageRangeTest.combination":47,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":154,"org.easymock.tests.UsageTest.wrongArguments":271,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":52,"org.easymock.tests.MockClassControlTest.testHashCode":358,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":81,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":119,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":378,"org.easymock.tests.UsageVarargTest.varargShortAccepted":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":51,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":18,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":315,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":288,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":366,"org.easymock.tests2.UsageConstraintsTest.cmpTo":174,"org.easymock.tests.UsageVarargTest.varargCharAccepted":277,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":191,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":322,"org.easymock.tests2.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests.DefaultClassInstantiatorTest.object":348,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":17,"org.easymock.tests2.CaptureTest.testCaptureFromStub":254,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":338,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":262,"org.easymock.tests.UsageTest.unexpectedCallWithArray":270,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":349,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":375,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":27,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":91,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":82,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":357,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":304,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":160,"org.easymock.tests2.UsageConstraintsTest.constraints":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":26,"org.easymock.samples.ExampleTest.addAndChangeDocument":133,"org.easymock.tests2.ConstraintsToStringTest.notToString":376,"org.easymock.tests.UsageStrictMockTest.testVerify":352,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":14,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":306,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":356,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":293,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":327,"org.easymock.tests2.UsageTest.resumeIfFailure":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":124,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":74,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":125,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":223}}]
