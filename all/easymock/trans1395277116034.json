[{"position":"org.easymock.internal.MockBuilder:205","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[0,37,38,39,1,2,40,41,42,43,44,45,46,4,47,48,49,50,51,52,53,54,55,5,56,57,58,59,60,6,61,62,8,11,16,19,63,22,64,65,66,67,68,69,70,71,30,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[0,1,2,16,19,73,74,75,76,77],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,30,30,31,31,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[111,112,113,114,115,116,117,118,119,120,121,122,0,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,37,175,176,177,178,38,39,1,2,41,42,43,44,45,46,4,47,48,49,50,51,52,53,54,55,5,56,57,58,59,60,6,61,62,179,180,181,182,183,184,185,7,9,10,12,13,14,15,17,19,20,21,23,186,187,188,189,190,191,192,193,194,195,196,78,197,198,199,200,201,202,203,204,24,205,206,25,207,208,26,27,209,210,28,79,80,211,212,213,81,82,83,84,214,215,216,217,218,85,219,86,87,220,88,89,221,222,223,224,225,90,91,92,29,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,93,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,30,31,32,270,271,272,273,274,94,275,276,277,278,279,280,281,282,283,95,96,284,285,97,33,286,287,288,289,34,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,98,99,100,101,102,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,103,104,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,35,441,442,36,443,444,445,446,447,448,449,450,451,452,453,454,105,106,107,108,109,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,110,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[186,188,196,211,212,84,214,216,221],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[220],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[0,1,2,13,18,19,20,23,25,27,28,35,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[116,0,123,124,125,126,127,128,129,132,133,134,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,37,175,177,178,38,1,44,4,5,6,184,185,7,9,13,14,15,17,20,21,23,186,187,188,189,190,191,192,193,194,195,196,78,197,198,199,200,201,202,203,204,24,206,208,26,27,209,79,80,211,212,81,82,83,84,214,215,217,218,85,219,86,87,220,88,89,221,222,223,224,225,90,91,92,29,226,227,228,234,242,243,244,246,247,248,249,250,251,252,253,93,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,30,31,32,270,271,94,275,276,277,278,279,280,281,282,95,96,284,285,97,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,327,328,329,330,331,332,333,98,99,100,101,102,334,357,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,382,383,384,385,386,387,388,389,103,104,423,424,425,426,427,428,429,430,431,433,434,435,436,437,438,439,440,441,442,452,453,454,105,106,107,108,109,455,457,458,461,465,466,467,468,469,470,472,473,497,497,474,475,476,110,477,478,479,480,485,486,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[0,1,2,16,19,73,74,75,77],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[144,145,151,152,180,181,182,183,93,255,256,314,316,319,320,334,498,499,500,452,453,454,476,110,478,479],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,30,30,31,31,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[205,501,502,503,504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[323,324,463,464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[129,133,142,144,145,148,149,151,152,154,172,180,181,182,183,185,187,188,190,191,192,193,194,198,82,217,220,90,243,93,254,255,256,278,96,97,313,314,316,317,318,319,320,321,334,384,427,440,452,453,454,476,110,477,478,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[212,216],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[242,244,246,262,457],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[145,151,152,255,315,316,319,320,334,453,454,461,505,476,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[114,232],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[186,188,196,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[221],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[186,188,196,211,212,82,84,214,216,221,90],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[116,0,123,124,129,132,133,134,137,138,139,141,142,143,144,145,146,147,151,152,153,154,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,37,175,177,178,38,1,44,4,5,6,180,181,182,183,184,185,9,13,15,17,21,186,187,188,189,191,192,193,194,195,196,198,199,200,201,202,203,204,206,26,27,209,79,80,211,212,81,82,83,84,214,215,217,218,85,219,86,87,220,88,89,221,222,223,225,90,91,92,227,234,242,243,246,247,248,251,252,253,93,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,32,270,271,94,277,278,95,96,284,285,97,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,319,320,321,325,327,328,329,330,332,333,98,99,100,101,102,334,357,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,383,384,103,104,427,429,430,431,433,434,435,436,437,438,439,440,441,442,452,453,454,460,470,471,472,473,474,475,476,110,477,478,479,480,485,486,488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[144,145,151,152,506,507,508,509,510,511,512,513,514,515,516,93,255,256,314,315,316,319,320,334,379,380,452,453,454,456,459,460,461,517,518,519,520,521,505,476,110,478,479],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[522,40,71],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[501],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:157","sourceCode":"break","type":"CtBreakImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[2,16,73,74,75,523,524],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:85","sourceCode":"return java.util.List<T>.get(0)","type":"CtReturnImpl"},"failures":[186,188,189,190,191,192,193,195,525,196,78,198],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[116,0,123,124,125,126,127,128,129,132,133,134,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,37,175,177,178,38,1,44,4,5,6,180,181,182,183,184,185,7,9,13,14,15,17,20,21,23,526,186,187,188,189,190,191,192,193,194,195,196,78,197,198,199,200,201,202,203,204,24,206,208,26,27,209,79,80,211,212,81,82,83,84,214,215,217,218,85,219,86,87,220,88,89,221,222,223,224,225,90,91,92,29,226,227,228,234,242,243,244,246,247,248,249,250,251,252,253,93,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,30,30,31,31,32,270,271,94,275,276,277,278,279,280,281,282,95,96,284,285,97,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,325,326,327,328,329,330,331,332,333,98,99,100,101,102,334,335,343,344,345,346,347,348,349,350,351,352,353,354,357,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,382,383,384,385,386,387,388,389,103,104,418,419,420,423,424,425,426,427,428,429,430,431,433,434,435,436,437,438,439,440,441,442,444,445,446,447,448,449,450,451,452,453,454,105,106,107,108,109,455,457,458,460,461,465,466,467,468,469,470,471,472,473,474,475,476,110,477,478,479,480,481,485,486,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[72],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[13,527,528,529,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":212,"org.easymock.tests2.UsageTest.argumentsOrdered":152,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":313,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":400,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":147,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":260,"org.easymock.tests2.DelegateToTest.testReturnException":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":424,"org.easymock.tests.MockingTest.testPartialClassMocking":485,"org.easymock.tests.MockClassControlTest.testToString":446,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":179,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":50,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":359,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":498,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":73,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":215,"org.easymock.tests2.UsageTest.wrongArguments":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":95,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":281,"org.easymock.samples.ExampleTest.answerVsDelegate":262,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":34,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":490,"org.easymock.tests2.UsageConstraintsTest.testNull":82,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":202,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":451,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":168,"org.easymock.tests2.CaptureTest.testPrimitive":189,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":97,"org.easymock.tests.UsageTest.moreThanOneArgument":314,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":378,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":107,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":492,"org.easymock.tests.UsageTest.argumentsOrdered":320,"org.easymock.tests.UsageVarargTest.varargIntAccepted":431,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":524,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":239,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":102,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":510,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":116,"org.easymock.tests.ReplayStateInvalidUsageTest.times":351,"org.easymock.tests2.DependencyTest.testClassMocking":135,"org.easymock.tests2.AnswerTest.answer":129,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":407,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":128,"org.easymock.tests2.CaptureTest.testAnd":186,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":287,"org.easymock.tests2.UsageTest.strictResetToDefault":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":11,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":163,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":496,"org.easymock.tests2.DelegateToTest.testDelegate":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":374,"org.easymock.tests.LimitationsTest.mockFinalMethod":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":427,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":469,"org.easymock.tests2.DependencyTest.testClassMockingSupport":136,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":379,"org.easymock.tests2.CaptureTest.testCapture1_2446744":190,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":126,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":345,"org.easymock.tests.UsageThrowableTest.throwError":382,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":289,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":109,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":62,"org.easymock.samples.PartialClassMockTest.testGetArea":32,"org.easymock.tests.MockingTest.testInterfaceMocking":487,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":99,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":273,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":422,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":360,"org.easymock.tests2.ThreadingTest.testChangeDefault":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":71,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":13,"org.easymock.tests2.MockBuilderTest.testCreateMock":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":119,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":368,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":164,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":464,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":279,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":68,"org.easymock.tests.UsageOverloadedMethodTest.overloading":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":60,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":458,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":303,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":219,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":195,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":432,"org.easymock.tests.MockClassControlTest.testEquals":450,"org.easymock.tests2.EasyMockSupportClassTest.testAll":44,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":442,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":512,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":376,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":527,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":467,"org.easymock.tests2.CaptureTest.testCaptureAll":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":127,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":72,"org.easymock.tests.MockNameTest.defaultName":342,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":108,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":343,"org.easymock.samples.ExampleTest.voteForRemovals":266,"org.easymock.tests.UsageVarargTest.allKinds":440,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":468,"org.easymock.samples.BasicClassMockTest.testPrintContent":271,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":388,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":428,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":236,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":77,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":45,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":471,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":209,"org.easymock.samples.ExampleTest.voteForRemoval":263,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":341,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":210,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":248,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":24,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":312,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":161,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":423,"org.easymock.tests2.CaptureTest.testCaptureFirst":198,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":162,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":154,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":299,"org.easymock.tests2.UsageTest.moreThanOneArgument":144,"org.easymock.tests2.CaptureTest.testCapture2_2446744":197,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":408,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":439,"org.easymock.tests.GenericTest.testBridgedEquals":443,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":69,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":332,"org.easymock.tests.UsageExpectAndReturnTest.longType":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":465,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":377,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":224,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":323,"org.easymock.tests.UsageCallCountTest.tooManyCalls":333,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":518,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":387,"org.easymock.tests.MockingTest.testNiceClassMocking":491,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":174,"org.easymock.tests.MockingTest.testClassMocking":483,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":326,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":227,"org.easymock.tests2.UsageConstraintsTest.testFind":81,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":278,"org.easymock.tests.MockTypeTest.fromEasyMockClass":288,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":474,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":141,"org.easymock.tests.UsageExpectAndReturnTest.object":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":167,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":434,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":74,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":420,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":70,"org.easymock.tests.UsageTest.exactCallCountByLastCall":321,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":493,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":414,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":521,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":2,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":429,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":457,"org.easymock.tests.MockClassControlTest.testHashCode":449,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":230,"org.easymock.tests2.EasyMockSupportTest.testVerify":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":53,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":509,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":494,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":463,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":455,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":125,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":526,"org.easymock.tests.UsageVarargTest.varargCharAccepted":433,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastCall":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":522,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":170,"org.easymock.tests.DefaultClassInstantiatorTest.object":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":462,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":418,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":366,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":529,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":385,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":114,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":229,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":448,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":365,"org.easymock.tests.CapturesMatcherTest.test":497,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":322,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":511,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":6,"org.easymock.tests2.UsageTest.resumeIfFailure":153,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":426,"org.easymock.tests2.StubTest.stubWithReturnValue":185,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":225,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":301,"org.easymock.tests2.SerializationTest.testAllMockedMethod":124,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":406,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":514,"org.easymock.samples.SupportTest.voteForRemovals":259,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":371,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":412,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":130,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":416,"org.easymock.tests.UsageExpectAndThrowTest.object":369,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":222,"org.easymock.tests2.DelegateToTest.testWrongClass":244,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":104,"org.easymock.tests.UsageStrictMockTest.range":478,"org.easymock.samples.ConstructorCalledMockTest.testTax":30,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":157,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":166,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":173,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":370,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":41,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":319,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":517,"org.easymock.tests2.CaptureTest.testCaptureNone":194,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":274,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":501,"org.easymock.tests.UsageUnorderedTest.message":334,"org.easymock.tests.UsageVerifyTest.twoReturns":454,"org.easymock.tests.UsageVarargTest.varargByteAccepted":438,"org.easymock.tests2.ThreadingTest.testThreadSafe":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":56,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":330,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":270,"org.easymock.tests2.CaptureTest.testCapture_2617107":188,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":516,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":285,"org.easymock.tests2.UsageConstraintsTest.any":217,"org.easymock.tests2.StubTest.stub":184,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndThrowTest.longType":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":339,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":254,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests.LimitationsTest.mockNativeMethod":357,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":311,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":528,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":113,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":257,"org.easymock.tests2.NameTest.nameForMocksControl":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":115,"org.easymock.tests2.MockedExceptionTest.testMockedException":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":46,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":318,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":488,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":363,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":17,"org.easymock.tests.MockingTest.testNicePartialClassMocking":486,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":111,"org.easymock.tests2.CaptureTest.testCaptureLast":193,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":380,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":38,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":214,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":223,"org.easymock.tests.MockingTest.testTwoMocks":484,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":367,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":151,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":91,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":503,"org.easymock.samples.ExampleTest.removeNonExistingDocument":267,"org.easymock.tests.UsageStrictMockTest.differentMethods":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":118,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":231,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":502,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":337,"org.easymock.tests2.ConstraintsToStringTest.andToString":513,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":249,"org.easymock.tests2.MockBuilderTest.testCreateMockString":23,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":47,"org.easymock.tests.UsageExpectAndThrowTest.floatType":361,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":43,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":132,"org.easymock.tests.UsageVerifyTest.twoThrows":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":5,"org.easymock.samples.ExampleTest.voteAgainstRemoval":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":272,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests.LimitationsTest.privateConstructor":356,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":65,"org.easymock.tests2.UsageConstraintsTest.testNotNull":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":389,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":29,"org.easymock.tests2.UsageTest.defaultResetToNice":150,"org.easymock.samples.ExampleTest.voteAgainstRemovals":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":307,"org.easymock.tests.UsageVarargTest.differentLength":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":112,"org.easymock.tests2.CallbackTest.callback":172,"org.easymock.tests2.UsageConstraintsTest.equals":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":25,"org.easymock.tests.UsageTest.openCallCountByLastCall":317,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":284,"org.easymock.tests.UsageCallCountTest.tooFewCalls":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":282,"org.easymock.tests.UsageThrowableTest.throwCheckedException":386,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":519,"org.easymock.tests.MockingTest.testStrictClassMocking":482,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":117,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":37,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":177,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":134,"org.easymock.tests.ObjectMethodsTest.testHashCode":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":523,"org.easymock.tests2.NameTest.nameForNiceMock":182,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":251,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":75,"org.easymock.samples.ExampleTest.addDocument":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":61,"org.easymock.tests2.DelegateToTest.testStubDelegate":243,"org.easymock.tests2.AnswerTest.stubAnswer":133,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":110,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":18,"org.easymock.tests.UsageVarargTest.varargLongAccepted":437,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndReturnTest.floatType":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":1,"org.easymock.tests2.ConstraintsToStringTest.orToString":506,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":31,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":238,"org.easymock.tests.UsageThrowableTest.noUpperLimit":383,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":80,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":155,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":191,"org.easymock.tests2.SerializationTest.test":123,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":336,"org.easymock.tests2.UsageConstraintsTest.testSame":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":293,"org.easymock.samples.SupportTest.addDocument":258,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":176,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":48,"org.easymock.tests.GenericTest.testPackageScope":441,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":237,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":489,"org.easymock.tests2.NameTest.nameForMock":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":304,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":22,"org.easymock.tests2.UsageStrictMockTest.differentMethods":256,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":373,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":473,"org.easymock.tests2.MockedExceptionTest.testRealException":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":158,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":403,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":96,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":354,"org.easymock.tests2.NameTest.nameForStrictMock":181,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":12,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":139,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":203,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":156,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":499,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":221,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":338,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":9,"org.easymock.tests2.UsageStrictMockTest.range":255,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":52,"org.easymock.tests2.CaptureTest.testCaptureRightOne":196,"org.easymock.tests2.UsageConstraintsTest.testOr":84,"org.easymock.tests.UsageRangeTest.combination":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":200,"org.easymock.tests.UsageTest.wrongArguments":316,"org.easymock.tests2.MockBuilderTest.testWithConstructor":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":49,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":445,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":305,"org.easymock.tests.UsageVarargTest.varargShortAccepted":436,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":340,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":331,"org.easymock.tests2.UsageConstraintsTest.cmpTo":218,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":393,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests2.CaptureTest.testCaptureFromStub":78,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":344,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":10,"org.easymock.tests.UsageTest.unexpectedCallWithArray":315,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":476,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":329,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":63,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":306,"org.easymock.tests2.CaptureTest.testCapture":525,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":477,"org.easymock.tests2.UsageConstraintsTest.constraints":211,"org.easymock.samples.ExampleTest.addAndChangeDocument":268,"org.easymock.tests2.ConstraintsToStringTest.notToString":508,"org.easymock.tests.UsageStrictMockTest.testVerify":481,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":269,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":466,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":100,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":298,"org.easymock.tests.LimitationsTest.abstractClass":355,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":101,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":500,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":165}}]
