[{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[18,18,19,19,5,20,21,22,23,24,3,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,12,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[51,52],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[54,55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[28,58],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[5,59,6,7,60,61,62,8,9,10,11,63,12,64,13,14,15,16,17,65,66,67,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[59,64,15,16,69,70,71],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[59,6,72,60,61,62,63,64,13,15,16,73,74,75,65,66,67,71,76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,60,61,62,77,78,79,80,63,81,82,83,17,75,65,66,67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[84,85,86],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:109","sourceCode":"final java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"failures":[87,88,89,90,91,92,93,94,18,18,19,19,95,96,97,98,99,100,101,102,103,104,105,106,107,5,108,59,6,109,110,111,112,113,114,20,21,115,2,22,23,24,3,116,117,118,119,25,120,26,27,121,28,29,30,122,123,124,125,31,32,33,126,127,128,129,130,131,132,133,134,135,136,34,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,53,156,157,51,52,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,72,181,182,7,60,183,184,185,186,187,61,62,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,8,9,10,11,0,209,1,210,211,212,213,214,215,216,217,218,219,220,221,222,35,36,37,38,39,223,224,225,63,12,226,64,13,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,14,15,16,40,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,54,55,311,17,75,65,312,313,66,67,314,315,316,317,318,319,320,321,322,323,324,325,41,42,43,44,45,326,327,46,47,328,329,48,49,50,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,71,355,356,357,358,359,360,361,362,363,364,365,366,367,368,56,57,369,370,371,372,373,374,76],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[375,376,377,378,379,380,381],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":311,"org.easymock.tests2.UsageTest.argumentsOrdered":62,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":252,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":184,"org.easymock.tests2.StubTest.stubWithReturnValue":215,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":376,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":238,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":125,"org.easymock.tests2.SerializationTest.testAllMockedMethod":204,"org.easymock.tests2.DelegateToTest.testReturnException":209,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":250,"org.easymock.tests.MockingTest.testPartialClassMocking":268,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":79,"org.easymock.samples.SupportTest.voteForRemovals":99,"org.easymock.tests.MockClassControlTest.testToString":304,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":335,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":266,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":206,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":140,"org.easymock.tests.UsageExpectAndThrowTest.object":345,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":261,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":68,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":103,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":377,"org.easymock.tests2.DelegateToTest.testWrongClass":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":49,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":50,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":117,"org.easymock.tests2.UsageTest.wrongArguments":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":46,"org.easymock.tests.UsageStrictMockTest.range":64,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":218,"org.easymock.samples.ExampleTest.answerVsDelegate":88,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":167,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":195,"org.easymock.tests2.UsageConstraintsTest.testNull":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":346,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":148,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":309,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":169,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":177,"org.easymock.tests2.CaptureTest.testPrimitive":129,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":48,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":354,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":300,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":66,"org.easymock.tests.UsageTest.moreThanOneArgument":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":217,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":147,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":37,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":273,"org.easymock.tests2.CaptureTest.testCaptureNone":134,"org.easymock.tests.UsageUnorderedTest.message":71,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":73,"org.easymock.tests.UsageVerifyTest.twoReturns":16,"org.easymock.tests.UsageVarargTest.varargByteAccepted":323,"org.easymock.tests2.ThreadingTest.testThreadSafe":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":363,"org.easymock.tests.UsageTest.argumentsOrdered":67,"org.easymock.tests.UsageVarargTest.varargIntAccepted":317,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":286,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":41,"org.easymock.tests2.CaptureTest.testCapture_2617107":128,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":381,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":329,"org.easymock.tests2.UsageConstraintsTest.any":118,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":176,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":297,"org.easymock.tests2.StubTest.stub":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":45,"org.easymock.tests.UsageExpectAndThrowTest.longType":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":251,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":84,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":296,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":108,"org.easymock.tests2.SerializationTest.testClass":202,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests.ReplayStateInvalidUsageTest.times":298,"org.easymock.tests.LimitationsTest.mockNativeMethod":280,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":114,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":248,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":222,"org.easymock.tests2.AnswerTest.answer":139,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":113,"org.easymock.tests2.CaptureTest.testAnd":126,"org.easymock.tests2.UsageTest.strictResetToDefault":182,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":153,"org.easymock.tests2.NameTest.nameForMocksControl":11,"org.easymock.tests2.MockedExceptionTest.testMockedException":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":36,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":164,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":313,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":367,"org.easymock.tests2.DelegateToTest.testDelegate":212,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":339,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":270,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":178,"org.easymock.tests.MockingTest.testNicePartialClassMocking":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":350,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":150,"org.easymock.tests2.CaptureTest.testCaptureLast":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":253,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":264,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":201,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":334,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":123,"org.easymock.tests.MockingTest.testTwoMocks":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":263,"org.easymock.tests2.CaptureTest.testCapture1_2446744":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":111,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":32,"org.easymock.tests.UsageThrowableTest.throwError":355,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":292,"org.easymock.samples.ExampleTest.removeNonExistingDocument":93,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":294,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":52,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":74,"org.easymock.tests2.MockBuilderTest.testCreateMockString":72,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":302,"org.easymock.tests.UsageExpectAndThrowTest.floatType":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":39,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":121,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":142,"org.easymock.tests.UsageVerifyTest.twoThrows":15,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":207,"org.easymock.samples.PartialClassMockTest.testGetArea":96,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":42,"org.easymock.samples.ExampleTest.voteAgainstRemoval":90,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":272,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":271,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":336,"org.easymock.tests2.UsageTest.niceToStrict":183,"org.easymock.tests2.UsageConstraintsTest.testNotNull":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":362,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":190,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":175,"org.easymock.tests2.MockBuilderTest.testCreateMock":179,"org.easymock.tests2.UsageTest.defaultResetToNice":187,"org.easymock.samples.ExampleTest.voteAgainstRemovals":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":244,"org.easymock.tests.UsageVarargTest.differentLength":320,"org.easymock.tests2.CallbackTest.callback":213,"org.easymock.tests.UsageTest.openCallCountByLastCall":312,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":344,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":77,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":165,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":57,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":281,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":216,"org.easymock.tests.UsageCallCountTest.tooFewCalls":284,"org.easymock.tests.UsageOverloadedMethodTest.overloading":275,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":372,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":26,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":198,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":85,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":120,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":219,"org.easymock.tests.UsageThrowableTest.throwCheckedException":359,"org.easymock.tests.MockClassControlTest.testEquals":308,"org.easymock.tests2.EasyMockSupportClassTest.testAll":205,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":221,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":352,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":82,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":112,"org.easymock.tests2.CaptureTest.testCaptureAll":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":262,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":200,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":197,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":299,"org.easymock.tests2.UsageConstraintsTest.testMatches":27,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":199,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":144,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":38,"org.easymock.tests.ObjectMethodsTest.testHashCode":278,"org.easymock.samples.ExampleTest.voteForRemovals":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":380,"org.easymock.tests2.NameTest.nameForNiceMock":10,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":159,"org.easymock.tests.UsageVarargTest.allKinds":325,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":14,"org.easymock.tests2.DependencyTest.testInterfaceMocking":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":379,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":333,"org.easymock.samples.BasicClassMockTest.testPrintContent":101,"org.easymock.samples.ExampleTest.addDocument":91,"org.easymock.tests2.DelegateToTest.testStubDelegate":1,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":361,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":106,"org.easymock.tests2.AnswerTest.stubAnswer":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":254,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":211,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.UsageConstraintsTest.greaterThan":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":256,"org.easymock.tests.UsageVarargTest.varargLongAccepted":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":53,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":227,"org.easymock.samples.ExampleTest.voteForRemoval":89,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.floatType":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":156,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests.UsageThrowableTest.noUpperLimit":356,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":327,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":21,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests2.SerializationTest.test":203,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":131,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":162,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":230,"org.easymock.tests2.UsageConstraintsTest.testSame":24,"org.easymock.samples.SupportTest.addDocument":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":249,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":0,"org.easymock.tests2.CaptureTest.testCaptureFirst":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":163,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":295,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":236,"org.easymock.tests.GenericTest.testPackageScope":220,"org.easymock.tests2.UsageTest.moreThanOneArgument":7,"org.easymock.tests2.CaptureTest.testCapture2_2446744":137,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":366,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":180,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":288,"org.easymock.tests2.NameTest.nameForMock":8,"org.easymock.tests.UsageExpectAndReturnTest.longType":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":330,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":241,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":326,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":124,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":351,"org.easymock.tests2.UsageStrictMockTest.differentMethods":6,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":35,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":233,"org.easymock.tests.UsageCallCountTest.tooManyCalls":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":258,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":283,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":340,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":360,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":47,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":196,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":282,"org.easymock.tests2.NameTest.nameForStrictMock":9,"org.easymock.tests2.UsageConstraintsTest.testContains":25,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":192,"org.easymock.tests2.UsageConstraintsTest.testFind":22,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":276,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":149,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":224,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":105,"org.easymock.tests.UsageExpectAndReturnTest.object":239,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":69,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":174,"org.easymock.tests2.UsageStrictMockTest.range":59,"org.easymock.tests2.UsageConstraintsTest.lessThan":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":378,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":319,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":279,"org.easymock.tests.UsageTest.exactCallCountByLastCall":314,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":40,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":161,"org.easymock.tests2.CaptureTest.testCaptureRightOne":136,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":364,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":259,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":83,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":375,"org.easymock.tests.UsageRangeTest.combination":255,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":315,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":146,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":371,"org.easymock.tests.UsageTest.wrongArguments":65,"org.easymock.tests.MockClassControlTest.testHashCode":307,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":234,"org.easymock.tests2.EasyMockSupportTest.testVerify":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":242,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":369,"org.easymock.tests.UsageVarargTest.varargShortAccepted":321,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":56,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageConstraintsTest.cmpTo":119,"org.easymock.tests.UsageVarargTest.varargCharAccepted":318,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":141,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":107,"org.easymock.tests2.UsageTest.openCallCountByLastCall":185,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":186,"org.easymock.tests.DefaultClassInstantiatorTest.object":223,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":368,"org.easymock.tests2.CaptureTest.testCaptureFromStub":34,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":291,"org.easymock.tests.UsageTest.unexpectedCallWithArray":75,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":277,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":358,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":285,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":243,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":306,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":226,"org.easymock.tests2.UsageConstraintsTest.constraints":115,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":154,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":341,"org.easymock.samples.ExampleTest.addAndChangeDocument":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":246,"org.easymock.tests.UsageStrictMockTest.testVerify":228,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":310,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":95,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":305,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":331,"org.easymock.tests2.CompareToTest.testGreateThan":58,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":132,"org.easymock.tests2.UsageTest.resumeIfFailure":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":235,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":44,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":316,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":166}}]
