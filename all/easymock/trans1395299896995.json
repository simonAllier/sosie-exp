[{"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[0],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[46,47,48,49],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[50,51],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"methodName"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[53,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[57],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[10,11,12,13,14,74,15,16,17,18,19,75,76,20,37,38,39,77,40,41,42,43,44,78,79,45],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[83,84,71,85,86,87,88,89,90,91,27,92,93,94,28,95,96,97,98,99,29,100,101,102,103,104,105,106,107,108,109,110,111,112,54],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[113,114,115,116,117,66,70],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[118,119],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[120,121,122,123,124,125,126,127,128,129,130,50,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,82,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,63,63,64,64,247,248,16,249,250,251,252,253,51,254,21,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,65,279,280,281,282,283,88,91,99,104,284,30,285,286,287,288,289,290,291,32,292,293,294,295,62,296,46,47,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,34,317,318,35,319,36,320,321,322,41,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,49,346,347,54,55,348],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[121,130,349,350,173,174,175,193,194,195,196,197,198,254,270,271,272,273],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[351,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","bridgeMethod":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[54,55,56],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[132,1,135,352,4,353,354,355,356,234,235,252,357,358,359],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[112],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[360,323,340,343],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[186],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[361,362,363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"position":"org.easymock.internal.RecordState:305","failures":[364,165,172],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[120,126,128,129,131,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,168,169,170,171,177,178,179,180,181,185,365,190,191,192,204,205,206,207,208,229,230,231,232,233,235,241,243,244,245,247,248,16,249,250,251,252,253,254,21,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,272,274,275,276,277,278,65,279,280,281,282,283,88,91,99,104,284,30,285,286,287,288,289,290,291,32,292,62,299,303,304,305,306,307,308,309,310,312,313,314,315,316,34,317,318,35,319,36,320,321,322,41,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,49,346,347,54,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"position":"org.easymock.internal.RecordState:233","failures":[120,121,122,123,124,366,125,367,368,369,370,371,126,372,127,128,129,130,50,131,132,133,373,374,1,134,375,135,136,376,377,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,353,169,170,354,355,171,378,379,380,381,382,383,384,350,385,386,387,388,389,390,391,81,172,392,393,394,395,396,82,397,173,174,175,176,177,178,179,180,181,182,183,184,185,398,399,400,401,402,403,404,405,406,407,408,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,409,245,246,63,63,64,64,247,10,11,410,411,412,248,16,249,250,413,414,251,415,252,253,416,51,254,21,255,256,257,258,259,260,261,262,263,357,264,417,265,266,267,358,359,268,269,270,271,272,273,274,275,276,277,278,65,23,24,25,26,279,280,281,282,283,88,91,99,104,284,30,285,286,287,288,289,290,291,32,292,293,294,295,62,296,46,47,297,298,299,300,301,302,303,304,418,305,306,419,420,307,308,309,310,311,312,313,314,315,316,34,317,318,35,319,36,320,321,322,421,41,323,324,325,326,327,328,329,330,331,332,422,333,334,335,336,337,338,339,340,341,342,343,344,48,345,49,346,347,54,55,56,348],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[303,418,310,325,326,328,330,331,422,342,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[118],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[118,127,423,424,63,63,64,64,247,270,65,66,425,279,426,427,280,281,282,428,71,283,429,91,99,104,430,73,290,291,33,54],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[387,297,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":326,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":167,"org.easymock.tests2.UsageTest.argumentsOrdered":359,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":387,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":417,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testReturnException":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":194,"org.easymock.tests.MockingTest.testPartialClassMocking":190,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":22,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":94,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":209,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":113,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":128,"org.easymock.tests2.UsageTest.wrongArguments":357,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":45,"org.easymock.samples.ExampleTest.answerVsDelegate":242,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":424,"org.easymock.tests2.UsageConstraintsTest.testNull":328,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":286,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":320,"org.easymock.tests2.CaptureTest.testPrimitive":305,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":131,"org.easymock.tests.UsageTest.moreThanOneArgument":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":228,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":238,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":199,"org.easymock.tests.UsageTest.argumentsOrdered":355,"org.easymock.tests.UsageVarargTest.varargIntAccepted":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":177,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":425,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":181,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":41,"org.easymock.tests2.AnswerTest.answer":292,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":392,"org.easymock.tests2.CaptureTest.testAnd":303,"org.easymock.tests2.UsageTest.strictResetToDefault":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":31,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":317,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":203,"org.easymock.tests2.DelegateToTest.testDelegate":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":364,"org.easymock.tests2.CaptureTest.testCapture1_2446744":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":222,"org.easymock.tests.UsageThrowableTest.throwError":137,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":80,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":8,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":106,"org.easymock.samples.PartialClassMockTest.testGetArea":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":210,"org.easymock.tests2.UsageTest.niceToStrict":264,"org.easymock.tests2.ThreadingTest.testChangeDefault":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":44,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":218,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":124,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":366,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":109,"org.easymock.tests.UsageOverloadedMethodTest.overloading":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":98,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":184,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":156,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":206,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":336,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":309,"org.easymock.tests2.EasyMockSupportClassTest.testAll":88,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":372,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":226,"org.easymock.tests2.CaptureTest.testCaptureAll":304,"org.easymock.tests2.UsageConstraintsTest.testMatches":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":239,"org.easymock.samples.ExampleTest.voteForRemovals":245,"org.easymock.tests.UsageVarargTest.allKinds":408,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":233,"org.easymock.samples.BasicClassMockTest.testPrintContent":411,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":143,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":198,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":301,"org.easymock.tests2.UsageConstraintsTest.greaterThan":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":230,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":32,"org.easymock.samples.ExampleTest.voteForRemoval":243,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":275,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":52,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":430,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":176,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":261,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":316,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":193,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":297,"org.easymock.tests2.CaptureTest.testCaptureFirst":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":34,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":269,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":152,"org.easymock.tests2.UsageTest.moreThanOneArgument":263,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":277,"org.easymock.tests2.CaptureTest.testCapture2_2446744":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":283,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":407,"org.easymock.tests.GenericTest.testBridgedEquals":119,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":110,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":107,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":370,"org.easymock.tests.UsageExpectAndReturnTest.longType":148,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":314,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":227,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":189,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":48,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":236,"org.easymock.tests.UsageCallCountTest.tooManyCalls":371,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":255,"org.easymock.tests2.UsageConstraintsTest.testContains":335,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":272,"org.easymock.tests2.UsageConstraintsTest.testFind":327,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":208,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":47,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":373,"org.easymock.tests.UsageExpectAndReturnTest.object":155,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":36,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":114,"org.easymock.tests.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":111,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":66,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":398,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":161,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":183,"org.easymock.tests.ResultTest.createThrowResultToString":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests2.EasyMockSupportTest.testVerify":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":96,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":123,"org.easymock.tests.UsageVarargTest.varargCharAccepted":401,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":397,"org.easymock.tests2.UsageTest.openCallCountByLastCall":265,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":83,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":322,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":122,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":365,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":97,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":77,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":162,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":104,"org.easymock.tests2.UsageTest.resumeIfFailure":268,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":196,"org.easymock.tests2.StubTest.stubWithReturnValue":254,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":345,"org.easymock.tests2.SerializationTest.testAllMockedMethod":56,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":172,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.samples.SupportTest.voteForRemovals":248,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":221,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":53,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":82,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":293,"org.easymock.tests.UsageExpectAndThrowTest.object":219,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":343,"org.easymock.tests2.DelegateToTest.testWrongClass":300,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":205,"org.easymock.tests.UsageStrictMockTest.range":135,"org.easymock.samples.ConstructorCalledMockTest.testTax":63,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":21,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":85,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":349,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":188,"org.easymock.tests2.CaptureTest.testCaptureNone":308,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":59,"org.easymock.tests.UsageUnorderedTest.message":132,"org.easymock.tests.UsageVerifyTest.twoReturns":235,"org.easymock.tests.UsageVarargTest.varargByteAccepted":406,"org.easymock.tests2.ThreadingTest.testThreadSafe":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":29,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":369,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":410,"org.easymock.tests2.CaptureTest.testCapture_2617107":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":50,"org.easymock.tests2.UsageConstraintsTest.any":333,"org.easymock.tests2.StubTest.stub":51,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":195,"org.easymock.tests.UsageExpectAndThrowTest.longType":212,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":415,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":16,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests.LimitationsTest.mockNativeMethod":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":164,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":39,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":416,"org.easymock.tests2.NameTest.nameForMocksControl":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":40,"org.easymock.tests2.MockedExceptionTest.testMockedException":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":90,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":170,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":213,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":284,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":282,"org.easymock.tests.MockingTest.testNicePartialClassMocking":191,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":288,"org.easymock.tests2.CompareToTest.testNotComparable":57,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":37,"org.easymock.tests2.CaptureTest.testCaptureLast":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":260,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":331,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":217,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":358,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":346,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":61,"org.easymock.tests.UsageStrictMockTest.differentMethods":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":43,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":276,"org.easymock.tests2.MockBuilderTest.testCreateMockString":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":27,"org.easymock.tests.UsageExpectAndThrowTest.floatType":211,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":295,"org.easymock.tests.ResultTest.createReturnResultToString":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":67,"org.easymock.tests.UsageVerifyTest.twoThrows":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":99,"org.easymock.tests.ResultTest.createDelegateResultToString":361,"org.easymock.samples.ExampleTest.voteAgainstRemoval":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":388,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":186,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":291,"org.easymock.tests2.UsageConstraintsTest.testNotNull":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":144,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":270,"org.easymock.tests2.UsageTest.defaultResetToNice":267,"org.easymock.samples.ExampleTest.voteAgainstRemovals":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":160,"org.easymock.tests.UsageVarargTest.differentLength":403,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":38,"org.easymock.tests2.CallbackTest.callback":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":73,"org.easymock.tests.UsageTest.openCallCountByLastCall":169,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":323,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":130,"org.easymock.tests.UsageCallCountTest.tooFewCalls":367,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":257,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":60,"org.easymock.tests.UsageThrowableTest.throwCheckedException":141,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":121,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":258,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":296,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":116,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":0,"org.easymock.tests2.NameTest.nameForNiceMock":25,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":278,"org.easymock.tests2.DependencyTest.testInterfaceMocking":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":115,"org.easymock.samples.ExampleTest.addDocument":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":105,"org.easymock.tests2.DelegateToTest.testStubDelegate":299,"org.easymock.tests2.AnswerTest.stubAnswer":62,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":134,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":428,"org.easymock.tests.UsageVarargTest.varargLongAccepted":405,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":163,"org.easymock.tests.UsageExpectAndReturnTest.floatType":147,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":65,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":64,"org.easymock.tests.UsageThrowableTest.noUpperLimit":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":75,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":324,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":419,"org.easymock.tests2.SerializationTest.test":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":146,"org.easymock.tests2.UsageConstraintsTest.testSame":329,"org.easymock.samples.SupportTest.addDocument":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":92,"org.easymock.tests.GenericTest.testPackageScope":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":19,"org.easymock.tests2.NameTest.nameForMock":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":72,"org.easymock.tests2.UsageStrictMockTest.differentMethods":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":232,"org.easymock.tests2.MockedExceptionTest.testRealException":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":390,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":129,"org.easymock.tests2.NameTest.nameForStrictMock":24,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":427,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":84,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":287,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":342,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":279,"org.easymock.tests2.UsageStrictMockTest.range":252,"org.easymock.tests2.UsageConstraintsTest.lessThan":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":95,"org.easymock.tests2.CaptureTest.testCaptureRightOne":310,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":58,"org.easymock.tests2.UsageConstraintsTest.testOr":330,"org.easymock.tests.UsageRangeTest.combination":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":30,"org.easymock.tests.UsageTest.wrongArguments":353,"org.easymock.tests2.MockBuilderTest.testWithConstructor":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":379,"org.easymock.tests.UsageVarargTest.varargShortAccepted":404,"org.easymock.tests2.UsageConstraintsTest.cmpTo":334,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":381,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":266,"org.easymock.tests2.CaptureTest.testCaptureFromStub":311,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":7,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":426,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":368,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":159,"org.easymock.tests2.UsageConstraintsTest.constraints":325,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":375,"org.easymock.samples.ExampleTest.addAndChangeDocument":246,"org.easymock.tests.UsageStrictMockTest.testVerify":377,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":11,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":374,"org.easymock.tests2.CompareToTest.testGreateThan":360,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":151,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":180,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":35}}]
