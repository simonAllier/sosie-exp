[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[2],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[4,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[8,9,10,11],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,4,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,5,74,75,76,77,78,79,6,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,2,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,0,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,7,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,1,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,9,10,11,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,3,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,12,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,13,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[8,9,10,11],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,4,44,45,46,47,48,49,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,5,74,75,76,77,78,79,6,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,2,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,0,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,266,267,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,7,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,1,313,314,315,316,317,318,319,320,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,341,342,343,344,345,346,347,348,349,350,351,9,10,11,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,3,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,12,420,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,13,487,488,489,490,491,492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[311,314,413,424],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[280,282,290,373,374,377,379,3,381,391,396],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[374,379,381],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[199,297],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[4,49,62,87,92,143,144,147,149,150,151,152,154,155,156,157,159,160,161,162,246,251,298,470,477],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:508","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[494,495,496,497,498,499],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[380,386,398,500],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[65,489,492,493],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[33,34,35,36,37,41,42,43,4,44,86,87,88,89,91,92,94,96,97,98,99,100,102,104,105,107,129,130,131,132,133,134,135,136,137,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,170,171,172,173,174,175,176,180,189,190,191,192,194,195,206,207,209,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,250,251,254,263,264,265,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,285,286,287,288,289,290,293,296,7,298,299,301,302,304,327,329,330,331,332,333,334,335,337,338,339,346,347,348,349,350,351,9,10,11,352,354,355,356,357,360,361,362,363,364,366,367,368,370,371,372,373,374,376,377,378,379,3,380,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,404,417,419,420,432,445,455,461,466,467,469,470,471,472,474,475,476,477,482,483,485,486,488,491,492,493],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[280,282,290,373,374,379,3,381,391],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[381],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[280,282,290,373,374,377,379,3,381,391,396],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[371,373,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"result","maximum":"result"}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":374,"org.easymock.tests2.UsageTest.argumentsOrdered":480,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":246,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":362,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":69,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":475,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":269,"org.easymock.tests2.DelegateToTest.testReturnException":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":46,"org.easymock.tests.MockingTest.testPartialClassMocking":206,"org.easymock.tests.MockClassControlTest.testToString":112,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":315,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":445,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":143,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":380,"org.easymock.tests2.UsageTest.wrongArguments":473,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":41,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":438,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":257,"org.easymock.samples.ExampleTest.answerVsDelegate":271,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":56,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":211,"org.easymock.tests2.UsageConstraintsTest.testNull":377,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":302,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":361,"org.easymock.tests2.CaptureTest.testPrimitive":283,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":162,"org.easymock.tests.UsageTest.moreThanOneArgument":247,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":184,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":28,"org.easymock.tests.UsageTest.argumentsOrdered":253,"org.easymock.tests.UsageVarargTest.varargIntAccepted":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":33,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":411,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":322,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":37,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":432,"org.easymock.tests.ReplayStateInvalidUsageTest.times":125,"org.easymock.tests2.DependencyTest.testClassMocking":464,"org.easymock.tests2.AnswerTest.answer":488,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":344,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":53,"org.easymock.tests2.CaptureTest.testAnd":280,"org.easymock.tests2.UsageTest.strictResetToDefault":471,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":183,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":356,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":32,"org.easymock.tests2.DelegateToTest.testDelegate":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":158,"org.easymock.tests.LimitationsTest.mockFinalMethod":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":85,"org.easymock.tests2.DependencyTest.testClassMockingSupport":465,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":38,"org.easymock.tests2.CaptureTest.testCapture1_2446744":284,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":342,"org.easymock.tests.UsageThrowableTest.throwError":129,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":120,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":55,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":410,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":463,"org.easymock.samples.PartialClassMockTest.testGetArea":268,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":0,"org.easymock.tests.MockingTest.testInterfaceMocking":208,"org.easymock.tests2.CompareToTest.testLessOrEqual":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":34,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":215,"org.easymock.tests2.UsageTest.niceToStrict":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":450,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":144,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":59,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":417,"org.easymock.tests2.MockBuilderTest.testCreateMock":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":458,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":435,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":152,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":357,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":52,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":261,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":255,"org.easymock.tests.UsageOverloadedMethodTest.overloading":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":386,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":199,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":237,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":385,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":289,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":166,"org.easymock.tests2.EasyMockSupportClassTest.testAll":442,"org.easymock.tests.MockClassControlTest.testEquals":116,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":83,"org.easymock.tests2.CaptureTest.testCaptureAll":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":343,"org.easymock.tests.MockNameTest.defaultName":138,"org.easymock.tests2.UsageConstraintsTest.testMatches":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":185,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":118,"org.easymock.samples.ExampleTest.voteForRemovals":275,"org.easymock.tests.UsageVarargTest.allKinds":174,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":84,"org.easymock.samples.BasicClassMockTest.testPrintContent":265,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":135,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":345,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":50,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":369,"org.easymock.tests2.UsageConstraintsTest.greaterThan":389,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":103,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":1,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":225,"org.easymock.samples.ExampleTest.voteForRemoval":272,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":313,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":328,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":305,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":470,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":89,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":354,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":45,"org.easymock.tests2.CaptureTest.testCaptureFirst":293,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":355,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":482,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":233,"org.easymock.tests2.UsageTest.moreThanOneArgument":472,"org.easymock.tests2.CaptureTest.testCapture2_2446744":292,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":330,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":76,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":173,"org.easymock.tests.GenericTest.testBridgedEquals":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":194,"org.easymock.tests.UsageExpectAndReturnTest.longType":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":81,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":352,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":161,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":394,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":178,"org.easymock.tests.UsageCallCountTest.tooManyCalls":195,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":459,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":437,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":134,"org.easymock.tests.MockingTest.testNiceClassMocking":212,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":333,"org.easymock.tests.MockingTest.testClassMocking":204,"org.easymock.tests2.UsageConstraintsTest.testContains":384,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":188,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":296,"org.easymock.tests2.UsageConstraintsTest.testFind":376,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":92,"org.easymock.tests.MockTypeTest.fromEasyMockClass":54,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":485,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":93,"org.easymock.tests.UsageExpectAndReturnTest.object":236,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":360,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":15,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":22,"org.easymock.tests.UsageTest.exactCallCountByLastCall":254,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":64,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":29,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":25,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":242,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":198,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":400,"org.easymock.tests.MockClassControlTest.testHashCode":115,"org.easymock.tests2.EasyMockSupportTest.testVerify":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":452,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":30,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":341,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":468,"org.easymock.tests.UsageVarargTest.varargCharAccepted":167,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":217,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":80,"org.easymock.tests2.UsageTest.openCallCountByLastCall":476,"org.easymock.tests.DefaultClassInstantiatorTest.object":218,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":363,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":259,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":453,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":399,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":114,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":311,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":461,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":113,"org.easymock.tests2.UsageTest.resumeIfFailure":481,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":51,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":48,"org.easymock.tests2.StubTest.stubWithReturnValue":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":12,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":395,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":235,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":74,"org.easymock.samples.SupportTest.voteForRemovals":279,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":155,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":6,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":489,"org.easymock.tests.UsageExpectAndThrowTest.object":153,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":27,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":392,"org.easymock.tests2.DelegateToTest.testWrongClass":368,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":176,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.samples.ConstructorCalledMockTest.testTax":266,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":325,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":439,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":127,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":256,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":216,"org.easymock.tests2.CaptureTest.testCaptureNone":288,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":495,"org.easymock.tests.UsageUnorderedTest.message":137,"org.easymock.tests.UsageVerifyTest.twoReturns":88,"org.easymock.tests.UsageVarargTest.varargByteAccepted":172,"org.easymock.tests2.ThreadingTest.testThreadSafe":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":456,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":192,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":23,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":264,"org.easymock.tests2.CaptureTest.testCapture_2617107":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":78,"org.easymock.tests2.UsageConstraintsTest.any":382,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":124,"org.easymock.tests2.StubTest.stub":7,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":179,"org.easymock.tests.UsageExpectAndThrowTest.longType":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":79,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":222,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":123,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":348,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":404,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests.LimitationsTest.mockNativeMethod":141,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":245,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":429,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":351,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":496,"org.easymock.tests2.NameTest.nameForMocksControl":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":431,"org.easymock.tests2.MockedExceptionTest.testMockedException":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":444,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":251,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":484,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":147,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":209,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":299,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":420,"org.easymock.tests.MockingTest.testNicePartialClassMocking":207,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":304,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":427,"org.easymock.tests2.CaptureTest.testCaptureLast":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":39,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":339,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":393,"org.easymock.tests.MockingTest.testTwoMocks":205,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":340,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":151,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":479,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":397,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":499,"org.easymock.samples.ExampleTest.removeNonExistingDocument":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":434,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":121,"org.easymock.tests.UsageStrictMockTest.differentMethods":99,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":401,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":498,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":220,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":329,"org.easymock.tests2.MockBuilderTest.testCreateMockString":426,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":446,"org.easymock.tests.UsageExpectAndThrowTest.floatType":145,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":491,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":487,"org.easymock.tests.UsageVerifyTest.twoThrows":87,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":455,"org.easymock.samples.ExampleTest.voteAgainstRemoval":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":70,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":214,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":312,"org.easymock.tests.LimitationsTest.privateConstructor":140,"org.easymock.tests2.UsageConstraintsTest.testNotNull":396,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":136,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":294,"org.easymock.tests2.UsageTest.defaultResetToNice":478,"org.easymock.samples.ExampleTest.voteAgainstRemovals":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":241,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":428,"org.easymock.tests.UsageVarargTest.differentLength":169,"org.easymock.tests2.CallbackTest.callback":469,"org.easymock.tests2.UsageConstraintsTest.equals":375,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":308,"org.easymock.tests.UsageTest.openCallCountByLastCall":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":371,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":43,"org.easymock.tests.UsageCallCountTest.tooFewCalls":190,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":258,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":497,"org.easymock.tests.UsageThrowableTest.throwCheckedException":133,"org.easymock.tests.MockingTest.testStrictClassMocking":203,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":181,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":338,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":433,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":337,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":493,"org.easymock.tests2.CompareToTest.testGreateOrEqual":500,"org.easymock.tests.ObjectMethodsTest.testHashCode":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":17,"org.easymock.tests2.NameTest.nameForNiceMock":318,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":331,"org.easymock.tests2.DependencyTest.testInterfaceMocking":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":16,"org.easymock.samples.ExampleTest.addDocument":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":462,"org.easymock.tests2.DelegateToTest.testStubDelegate":367,"org.easymock.tests2.AnswerTest.stubAnswer":492,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":96,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":421,"org.easymock.tests.UsageVarargTest.varargLongAccepted":171,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":68,"org.easymock.tests.UsageExpectAndReturnTest.floatType":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":486,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":408,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":390,"org.easymock.tests.UsageThrowableTest.noUpperLimit":130,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":372,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":320,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":285,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":219,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":227,"org.easymock.tests2.UsageConstraintsTest.testSame":378,"org.easymock.samples.SupportTest.addDocument":278,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":336,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":447,"org.easymock.tests.GenericTest.testPackageScope":106,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":63,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":407,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":210,"org.easymock.tests2.NameTest.nameForMock":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":238,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":425,"org.easymock.tests2.UsageStrictMockTest.differentMethods":350,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":309,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":230,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":157,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":19,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":105,"org.easymock.tests2.MockedExceptionTest.testRealException":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":73,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":72,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":347,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":42,"org.easymock.tests2.NameTest.nameForStrictMock":317,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":416,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":483,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":303,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":324,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":391,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":413,"org.easymock.tests2.UsageStrictMockTest.range":349,"org.easymock.tests2.UsageConstraintsTest.lessThan":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":67,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":451,"org.easymock.tests2.CaptureTest.testCaptureRightOne":290,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":494,"org.easymock.tests2.UsageConstraintsTest.testOr":379,"org.easymock.tests.UsageRangeTest.combination":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":300,"org.easymock.tests.UsageTest.wrongArguments":249,"org.easymock.tests2.MockBuilderTest.testWithConstructor":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":448,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":60,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":239,"org.easymock.tests.UsageVarargTest.varargShortAccepted":170,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":193,"org.easymock.tests2.UsageConstraintsTest.cmpTo":383,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":62,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":477,"org.easymock.tests2.CaptureTest.testCaptureFromStub":291,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":119,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":414,"org.easymock.tests.UsageTest.unexpectedCallWithArray":248,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":95,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":191,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":240,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":97,"org.easymock.tests2.UsageConstraintsTest.constraints":373,"org.easymock.samples.ExampleTest.addAndChangeDocument":277,"org.easymock.tests.UsageStrictMockTest.testVerify":101,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":263,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":82,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":35,"org.easymock.tests.LimitationsTest.abstractClass":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":36,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":201,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":358}}]
