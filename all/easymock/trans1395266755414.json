[{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[21,22,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[80,81,82,83,84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[85,86,87,88,89,90,91,92,6,93,94,95,44,96,97,7,98,99,100,8,9,101,102,103,104,105,106,107,108,109,110,111,112,10,113,11,114,115,116,117,118,12,119,120,121,122,123,14,15,124,17,18,19,20,125],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[85,127,128,129,130,131,132,86,87,133,88,134,135,136,89,137,90,91,138,139,92,6,93,140,141,23,24,142,25,143,144,26,145,27,146,28,29,147,148,30,149,150,31,151,152,32,33,153,154,34,155,156,157,158,159,160,161,162,94,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,80,179,180,181,182,183,35,184,185,36,186,187,188,189,190,191,192,193,5,194,195,196,197,198,37,38,199,39,40,41,95,200,42,201,43,44,202,203,45,46,47,204,1,205,206,207,208,209,210,211,212,213,2,3,214,215,216,217,218,219,220,48,221,222,223,96,126,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,97,249,250,7,98,99,251,252,100,8,9,253,101,254,255,102,256,103,104,257,105,106,258,259,260,261,49,50,262,263,264,265,266,267,268,269,107,108,109,110,270,271,272,273,274,111,275,276,277,278,279,280,51,52,53,281,282,283,284,285,286,54,112,287,10,288,113,11,114,289,290,291,292,293,294,21,22,295,296,297,298,115,116,117,118,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,12,55,56,57,58,320,59,60,61,62,63,64,321,65,322,323,324,325,326,327,328,13,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,81,383,384,385,386,387,388,82,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,83,422,423,424,119,120,121,122,123,425,14,15,426,427,428,429,430,431,432,433,434,435,436,437,66,67,68,69,70,71,72,73,74,438,439,440,441,442,84,443,444,445,446,447,448,449,450,451,124,452,17,18,453,454,19,20,125,455,75,76,456,77,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,78,79,485,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[133,135,487,488,489,490,491,216,217,219],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[139,92,172,191,193,5,42,44,204,1,205,206,207,208,209,210,211,212,213,2,3,214,215,222,223,96,126,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,97,10,288,297,298,12,338,339,394,395,396,397,398,399,419,420,421,83,422,423,424,119,471],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[139,92,172,191,193,5,42,44,204,1,205,206,207,208,209,210,211,212,213,2,3,214,215,222,223,96,126,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,97,10,288,297,298,12,338,339,394,395,396,397,398,399,419,420,421,83,422,423,424,119,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[141,23,24,142,179,97,252,293,295,296,312,326,334,335,336,337,338,339,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,421,83,424,124,454],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[5,197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[492,493,10,494,495,17],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[219,220,48],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[456],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[496],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[216,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:191","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>;\n    try {\n        java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n    }\n    T T;\n    try {\n        java.lang.reflect.Constructor<?>.setAccessible(true);\n        T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n    } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n    }\n    return T;\n} else {\n    net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory;\n    try {\n        net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n    }\n    net.sf.cglib.proxy.Factory.getCallback(0);\n    return ((T)(net.sf.cglib.proxy.Factory));\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[204,205,213,96,126,226,228,229,231,241,246],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[6,7,8,9,10,11,12,13,14,15,497,16,17,18,19,20],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[177,44,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[455,77],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[139,179,2,222,223,225,226,227,228,234,236,237,239,240,246,247,248,288,297,298,299,300,301,302,303,322,368,372,373,382,386,394,395,396,397,398,419,420,422,423,472,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[496],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[85,132,86,87,88,89,90,91,138,139,92,6,93,140,141,23,24,142,26,146,152,155,94,169,170,171,172,173,175,176,177,178,80,179,182,183,35,184,185,36,187,188,189,191,193,194,195,196,198,37,38,199,39,40,41,42,44,203,204,1,205,206,207,208,209,210,211,212,213,2,3,214,216,219,220,48,221,222,223,96,126,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,97,249,250,7,98,99,251,252,100,8,9,253,101,254,255,102,256,103,104,257,105,106,258,259,260,261,264,267,268,269,107,108,109,110,111,281,282,284,112,287,10,288,113,11,114,289,290,291,292,293,294,21,22,295,296,297,298,115,116,117,118,299,300,301,302,303,311,312,313,314,315,316,12,57,328,334,335,336,337,338,339,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,83,422,423,424,119,120,121,122,123,425,14,15,426,427,428,429,430,431,67,74,442,443,444,446,449,451,124,452,17,18,453,454,19,20,125,75,76,460,461,462,464,465,467,468,469,470,471,472,472,473,473,474,475,476,477,478,479,480,481,482,484,78,79,485,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":126,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":124,"org.easymock.tests2.UsageTest.argumentsOrdered":9,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":378,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":99,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":485,"org.easymock.tests2.DelegateToTest.testReturnException":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":335,"org.easymock.tests.MockingTest.testPartialClassMocking":281,"org.easymock.tests.MockClassControlTest.testToString":68,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":174,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":348,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":487,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":419,"org.easymock.tests2.UsageTest.wrongArguments":7,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":117,"org.easymock.samples.ExampleTest.answerVsDelegate":478,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":345,"org.easymock.tests2.UsageConstraintsTest.testNull":226,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":39,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":73,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":258,"org.easymock.tests2.CaptureTest.testPrimitive":206,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":422,"org.easymock.tests.UsageTest.moreThanOneArgument":452,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":367,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":301,"org.easymock.tests.UsageTest.argumentsOrdered":20,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":329,"org.easymock.tests.UsageVarargTest.varargIntAccepted":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":394,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":167,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":398,"org.easymock.tests.ReplayStateInvalidUsageTest.times":448,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests2.DependencyTest.testClassMocking":180,"org.easymock.tests2.AnswerTest.answer":264,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":110,"org.easymock.tests2.CaptureTest.testAnd":204,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":342,"org.easymock.tests2.UsageTest.strictResetToDefault":249,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":315,"org.easymock.tests2.DelegateToTest.testDelegate":198,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":333,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":363,"org.easymock.tests.LimitationsTest.mockFinalMethod":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":338,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":123,"org.easymock.tests2.DependencyTest.testClassMockingSupport":181,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":317,"org.easymock.tests2.CaptureTest.testCapture1_2446744":207,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":108,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":84,"org.easymock.tests.UsageThrowableTest.throwError":291,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":344,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":157,"org.easymock.samples.PartialClassMockTest.testGetArea":474,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":443,"org.easymock.tests.MockingTest.testInterfaceMocking":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":395,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":436,"org.easymock.tests2.UsageTest.niceToStrict":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":30,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":132,"org.easymock.tests2.MockBuilderTest.testCreateMock":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":277,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":357,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":104,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":440,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":426,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":115,"org.easymock.tests.UsageOverloadedMethodTest.overloading":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":34,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":236,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":410,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":310,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":235,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":212,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":463,"org.easymock.tests2.EasyMockSupportClassTest.testAll":26,"org.easymock.tests.MockClassControlTest.testEquals":72,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":365,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":109,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests.MockNameTest.defaultName":393,"org.easymock.tests2.UsageConstraintsTest.testMatches":237,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":441,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":302,"org.easymock.samples.ExampleTest.voteForRemovals":482,"org.easymock.tests.UsageVarargTest.allKinds":471,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":425,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":122,"org.easymock.samples.BasicClassMockTest.testPrintContent":79,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":295,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":164,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":491,"org.easymock.tests2.UsageConstraintsTest.greaterThan":239,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":314,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":45,"org.easymock.samples.ExampleTest.voteForRemoval":479,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":65,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":170,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":46,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":346,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":95,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":74,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":102,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":334,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":5,"org.easymock.tests2.CaptureTest.testCaptureFirst":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":256,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":406,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":172,"org.easymock.tests2.CaptureTest.testCapture2_2446744":3,"org.easymock.tests2.UsageTest.moreThanOneArgument":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":89,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":470,"org.easymock.tests.GenericTest.testBridgedEquals":77,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":433,"org.easymock.tests.UsageExpectAndReturnTest.longType":402,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":119,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":366,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":244,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":364,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":299,"org.easymock.tests.UsageCallCountTest.tooManyCalls":434,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":154,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":407,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":279,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":22,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":184,"org.easymock.tests.MockingTest.testNiceClassMocking":54,"org.easymock.tests.MockingTest.testClassMocking":52,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":427,"org.easymock.tests2.UsageConstraintsTest.testContains":234,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":24,"org.easymock.tests2.UsageConstraintsTest.testFind":225,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":312,"org.easymock.tests.MockTypeTest.fromEasyMockClass":343,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":112,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":193,"org.easymock.tests.UsageExpectAndReturnTest.object":409,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":488,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":465,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":307,"org.easymock.tests.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":390,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":217,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":460,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":415,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":325,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":159,"org.easymock.tests.MockClassControlTest.testHashCode":71,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":150,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":439,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":323,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":497,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":107,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":215,"org.easymock.tests.UsageVarargTest.varargCharAccepted":464,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":320,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastCall":251,"org.easymock.tests.DefaultClassInstantiatorTest.object":59,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":438,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":305,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":31,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":355,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":273,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":158,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":70,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":354,"org.easymock.tests.CapturesMatcherTest.test":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":416,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":155,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":69,"org.easymock.tests2.UsageTest.resumeIfFailure":253,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":337,"org.easymock.tests2.StubTest.stubWithReturnValue":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":133,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":408,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":245,"org.easymock.tests2.SerializationTest.testAllMockedMethod":48,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":383,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":476,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":455,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":360,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":82,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":265,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":392,"org.easymock.tests.UsageExpectAndThrowTest.object":358,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":242,"org.easymock.tests2.DelegateToTest.testWrongClass":196,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":297,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":298,"org.easymock.samples.ConstructorCalledMockTest.testTax":472,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":262,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":105,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":359,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":25,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":116,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":494,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":437,"org.easymock.tests2.CaptureTest.testCaptureNone":211,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":469,"org.easymock.tests2.ThreadingTest.testThreadSafe":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":32,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":431,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":78,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":308,"org.easymock.tests2.CaptureTest.testCapture_2617107":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":83,"org.easymock.tests2.UsageConstraintsTest.any":232,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":447,"org.easymock.tests2.StubTest.stub":80,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":336,"org.easymock.tests.UsageExpectAndThrowTest.longType":351,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":63,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":446,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":92,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests2.SerializationTest.testClass":219,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":456,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":418,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":272,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":140,"org.easymock.tests2.NameTest.nameForMocksControl":178,"org.easymock.tests2.MockedExceptionTest.testMockedException":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":27,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":454,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":192,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":352,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":88,"org.easymock.tests.MockingTest.testNicePartialClassMocking":282,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":41,"org.easymock.tests2.CaptureTest.testCaptureLast":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":270,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":318,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":189,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":229,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":243,"org.easymock.tests.MockingTest.testTwoMocks":53,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":399,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":356,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":247,"org.easymock.samples.ExampleTest.removeNonExistingDocument":483,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":444,"org.easymock.tests.UsageStrictMockTest.differentMethods":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":160,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":61,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":171,"org.easymock.tests2.MockBuilderTest.testCreateMockString":90,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":28,"org.easymock.tests.UsageExpectAndThrowTest.floatType":350,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":144,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":267,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":218,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":152,"org.easymock.samples.ExampleTest.voteAgainstRemoval":480,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":203,"org.easymock.tests.LimitationsTest.privateConstructor":56,"org.easymock.tests2.UsageConstraintsTest.testNotNull":246,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":296,"org.easymock.tests2.UsageTest.defaultResetToNice":100,"org.easymock.samples.ExampleTest.voteAgainstRemovals":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":380,"org.easymock.tests.UsageVarargTest.differentLength":466,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":271,"org.easymock.tests2.CallbackTest.callback":221,"org.easymock.tests2.UsageConstraintsTest.equals":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":201,"org.easymock.tests.UsageTest.openCallCountByLastCall":453,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":421,"org.easymock.tests.UsageCallCountTest.tooFewCalls":429,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":118,"org.easymock.tests.UsageThrowableTest.throwCheckedException":21,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":495,"org.easymock.tests.MockingTest.testStrictClassMocking":51,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":424,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":188,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":275,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":449,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":187,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":269,"org.easymock.tests.ObjectMethodsTest.testHashCode":306,"org.easymock.tests2.NameTest.nameForNiceMock":177,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":173,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":489,"org.easymock.samples.ExampleTest.addDocument":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":156,"org.easymock.tests2.DelegateToTest.testStubDelegate":195,"org.easymock.tests2.AnswerTest.stubAnswer":268,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":288,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":134,"org.easymock.tests.UsageVarargTest.varargLongAccepted":468,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":377,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":417,"org.easymock.tests.UsageExpectAndReturnTest.floatType":401,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":216,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":166,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":240,"org.easymock.tests.UsageThrowableTest.noUpperLimit":292,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":223,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":49,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":208,"org.easymock.tests2.SerializationTest.test":220,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":400,"org.easymock.tests2.UsageConstraintsTest.testSame":227,"org.easymock.samples.SupportTest.addDocument":475,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":186,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":29,"org.easymock.tests.GenericTest.testPackageScope":75,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":165,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":285,"org.easymock.tests2.NameTest.nameForMock":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":411,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":137,"org.easymock.tests2.UsageStrictMockTest.differentMethods":93,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":403,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":362,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":316,"org.easymock.tests2.MockedExceptionTest.testRealException":142,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":381,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":420,"org.easymock.tests2.NameTest.nameForStrictMock":176,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":131,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":50,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":62,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":241,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":128,"org.easymock.tests2.UsageStrictMockTest.range":6,"org.easymock.tests2.UsageConstraintsTest.lessThan":248,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":490,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":149,"org.easymock.tests2.CaptureTest.testCaptureRightOne":213,"org.easymock.tests2.UsageConstraintsTest.testOr":228,"org.easymock.tests.UsageRangeTest.combination":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.UsageTest.wrongArguments":18,"org.easymock.tests2.MockBuilderTest.testWithConstructor":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":147,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":369,"org.easymock.tests.UsageVarargTest.varargShortAccepted":467,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":64,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":432,"org.easymock.tests2.UsageConstraintsTest.cmpTo":233,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":371,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":252,"org.easymock.tests2.CaptureTest.testCaptureFromStub":2,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":442,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":129,"org.easymock.tests.UsageTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":430,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":413,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":113,"org.easymock.tests2.UsageConstraintsTest.constraints":96,"org.easymock.samples.ExampleTest.addAndChangeDocument":484,"org.easymock.tests2.ConstraintsToStringTest.notToString":496,"org.easymock.tests.UsageStrictMockTest.testVerify":290,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":486,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":287,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":120,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":405,"org.easymock.tests.LimitationsTest.abstractClass":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":397,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":257}}]
