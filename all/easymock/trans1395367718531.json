[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"result","callCount":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,17,141,0,1,142,143,144,145,146,2,3,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,18,178,179,180,181,182,183,184,185,186,187,188,189,190,191,8,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,19,222,223,224,225,226,227,20,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,22,12,13,14,270,271,15,16,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[48,194,20,228,336,337,322],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[339,340,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[342,343,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[109,232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[82,346],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:71","sourceCode":"return org.easymock.MockType","type":"CtReturnImpl"},"failures":[347,348,349,231,232,350,233,351,352,353,354,355,356,357,358,359,360,361],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[362],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[339,340,341],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[23,24,25,26,27,28,29,30,31,31,32,32,33,34,35,36,37,38,39,40,41,42,43,46,56,57,58,59,60,61,62,63,64,65,363,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,364,108,118,8,192,19,229,230,283,284,285,286,287,288,290,291,292,293,294,295,296,322],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[72,105,143],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[23,24,25,26,27,28,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,136,137,139,17,141,0,1,142,143,144,145,146,2,3,147,148,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,18,182,183,190,191,8,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,223,224,225,226,227,20,228,366,367,368,231,232,233,234,235,236,240,241,243,244,245,246,248,249,22,12,14,270,271,15,16,272,273,274,275,276,277,278,279,280,281,282,283,289,291,292,293,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,369,370,331,371,332,333,372,334],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[61,363,75,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[46,97,17,144,145,148,192,227,228,22,270,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[374,375],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[90,92],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":59,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":22,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":143,"org.easymock.tests2.StubTest.stubWithReturnValue":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":207,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":79,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":35,"org.easymock.tests2.SerializationTest.testAllMockedMethod":163,"org.easymock.tests2.DelegateToTest.testReturnException":172,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests.MockingTest.testPartialClassMocking":231,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.samples.SupportTest.voteForRemovals":37,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":374,"org.easymock.tests.MockClassControlTest.testToString":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":314,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":302,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":165,"org.easymock.tests.UsageExpectAndThrowTest.object":312,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":76,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":41,"org.easymock.tests2.DelegateToTest.testWrongClass":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":295,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":296,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":290,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageStrictMockTest.range":194,"org.easymock.samples.ConstructorCalledMockTest.testTax":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":180,"org.easymock.samples.ExampleTest.answerVsDelegate":24,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":126,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":154,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":352,"org.easymock.tests2.UsageConstraintsTest.testNull":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":313,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":269,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":128,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":136,"org.easymock.tests2.CaptureTest.testPrimitive":86,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":294,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":321,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":260,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests.UsageTest.moreThanOneArgument":12,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":103,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":179,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":186,"org.easymock.tests2.CaptureTest.testCaptureNone":91,"org.easymock.tests.UsageUnorderedTest.message":322,"org.easymock.tests.UsageVerifyTest.twoReturns":228,"org.easymock.tests.UsageVarargTest.varargByteAccepted":281,"org.easymock.tests2.ThreadingTest.testThreadSafe":114,"org.easymock.tests.UsageTest.argumentsOrdered":16,"org.easymock.tests.UsageVarargTest.varargIntAccepted":275,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":246,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":284,"org.easymock.tests2.CaptureTest.testCapture_2617107":85,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":7,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":293,"org.easymock.tests2.UsageConstraintsTest.any":66,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":135,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":257,"org.easymock.tests2.StubTest.stub":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":288,"org.easymock.tests.UsageExpectAndThrowTest.longType":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":339,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":256,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":153,"org.easymock.tests2.SerializationTest.testClass":161,"org.easymock.tests.ReplayStateInvalidUsageTest.times":258,"org.easymock.tests.LimitationsTest.mockNativeMethod":240,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":217,"org.easymock.tests2.AnswerTest.answer":97,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":54,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":356,"org.easymock.tests2.CaptureTest.testAnd":83,"org.easymock.tests2.UsageTest.strictResetToDefault":141,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":109,"org.easymock.tests2.NameTest.nameForMocksControl":171,"org.easymock.tests2.MockedExceptionTest.testMockedException":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":123,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":271,"org.easymock.tests2.DelegateToTest.testDelegate":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":306,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":233,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":137,"org.easymock.tests.MockingTest.testNicePartialClassMocking":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":317,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":106,"org.easymock.tests2.CaptureTest.testCaptureLast":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":367,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":64,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":301,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":77,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":366,"org.easymock.tests2.CaptureTest.testCapture1_2446744":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":315,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":310,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":52,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":81,"org.easymock.tests.UsageThrowableTest.throwError":323,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":252,"org.easymock.samples.ExampleTest.removeNonExistingDocument":29,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":254,"org.easymock.tests.UsageStrictMockTest.differentMethods":195,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":358,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":116,"org.easymock.tests2.MockBuilderTest.testCreateMockString":140,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":262,"org.easymock.tests.UsageExpectAndThrowTest.floatType":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":188,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":72,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":98,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":166,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests.MockingTest.testInterfaceMocking":350,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":285,"org.easymock.samples.ExampleTest.voteAgainstRemoval":26,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":303,"org.easymock.tests2.UsageTest.niceToStrict":142,"org.easymock.tests2.UsageConstraintsTest.testNotNull":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":330,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":149,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":134,"org.easymock.tests2.MockBuilderTest.testCreateMock":138,"org.easymock.tests2.UsageTest.defaultResetToNice":146,"org.easymock.samples.ExampleTest.voteAgainstRemovals":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":213,"org.easymock.tests.UsageVarargTest.differentLength":278,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests.UsageTest.openCallCountByLastCall":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":311,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":124,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":355,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":178,"org.easymock.tests.UsageCallCountTest.tooFewCalls":244,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":333,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":70,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":157,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":340,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":69,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":181,"org.easymock.tests.UsageThrowableTest.throwCheckedException":327,"org.easymock.tests.MockClassControlTest.testEquals":268,"org.easymock.tests2.EasyMockSupportClassTest.testAll":164,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":183,"org.easymock.tests.MockingTest.testStrictClassMocking":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":319,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":5,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":299,"org.easymock.tests2.CaptureTest.testCaptureAll":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":53,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":230,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":159,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":156,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":259,"org.easymock.tests2.UsageConstraintsTest.testMatches":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":158,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":187,"org.easymock.tests.ObjectMethodsTest.testHashCode":238,"org.easymock.samples.ExampleTest.voteForRemovals":28,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":118,"org.easymock.tests2.NameTest.nameForNiceMock":170,"org.easymock.tests.UsageVarargTest.allKinds":283,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":227,"org.easymock.tests2.DependencyTest.testInterfaceMocking":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":300,"org.easymock.samples.BasicClassMockTest.testPrintContent":39,"org.easymock.samples.ExampleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testStubDelegate":173,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":329,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests2.AnswerTest.stubAnswer":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":222,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":192,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":343,"org.easymock.tests2.UsageConstraintsTest.greaterThan":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":224,"org.easymock.tests.UsageVarargTest.varargLongAccepted":280,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":112,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.samples.ExampleTest.voteForRemoval":25,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":115,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":216,"org.easymock.tests.UsageExpectAndReturnTest.floatType":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":360,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":113,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":32,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests.UsageThrowableTest.noUpperLimit":324,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":74,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":289,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":57,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":17,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":88,"org.easymock.tests2.SerializationTest.test":162,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":121,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.tests2.UsageConstraintsTest.testSame":62,"org.easymock.samples.SupportTest.addDocument":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":362,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":344,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":122,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":255,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":205,"org.easymock.tests.GenericTest.testPackageScope":182,"org.easymock.tests2.CaptureTest.testCapture2_2446744":95,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":117,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":139,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":351,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":282,"org.easymock.tests.GenericTest.testBridgedEquals":375,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":248,"org.easymock.tests2.NameTest.nameForMock":168,"org.easymock.tests.UsageExpectAndReturnTest.longType":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":297,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":210,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":318,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":202,"org.easymock.tests.UsageCallCountTest.tooManyCalls":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":226,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":243,"org.easymock.tests2.MockedExceptionTest.testRealException":152,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":206,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":307,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":291,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":261,"org.easymock.tests.MockingTest.testNiceClassMocking":353,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":155,"org.easymock.tests.MockingTest.testClassMocking":349,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":242,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests2.NameTest.nameForStrictMock":169,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":151,"org.easymock.tests2.UsageConstraintsTest.testFind":60,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":42,"org.easymock.tests.MockTypeTest.fromEasyMockClass":357,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":43,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":190,"org.easymock.tests.UsageExpectAndReturnTest.object":208,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":336,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":108,"org.easymock.tests.ErrorMessageTest.testGetters":338,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":133,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.UsageConstraintsTest.lessThan":82,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":127,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":277,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":239,"org.easymock.tests.UsageTest.exactCallCountByLastCall":272,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":229,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":120,"org.easymock.tests2.CaptureTest.testCaptureRightOne":93,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":369,"org.easymock.tests2.UsageConstraintsTest.testOr":63,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":11,"org.easymock.tests.UsageRangeTest.combination":223,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":273,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":102,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":332,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests.MockClassControlTest.testHashCode":267,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":203,"org.easymock.tests2.EasyMockSupportTest.testVerify":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":211,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":370,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":331,"org.easymock.tests.UsageVarargTest.varargShortAccepted":279,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":51,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":364,"org.easymock.tests2.UsageConstraintsTest.cmpTo":67,"org.easymock.tests.UsageVarargTest.varargCharAccepted":276,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":342,"org.easymock.tests2.CompareToTest.testLessThan":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":21,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":45,"org.easymock.tests2.UsageTest.openCallCountByLastCall":144,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":130,"org.easymock.tests.DefaultClassInstantiatorTest.object":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":94,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":251,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":237,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":326,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":212,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":266,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":193,"org.easymock.tests2.UsageConstraintsTest.constraints":58,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":308,"org.easymock.samples.ExampleTest.addAndChangeDocument":30,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":215,"org.easymock.tests.UsageStrictMockTest.testVerify":197,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":33,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":167,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":298,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":89,"org.easymock.tests2.UsageTest.resumeIfFailure":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":286,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":204,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":287,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":337,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":125}}]
