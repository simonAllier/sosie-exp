[{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,0,37,38,39,40,41,42,43,44,45,46,1,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,2,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,3,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,251,252,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,4,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,5,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[371,479],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,0,37,38,480,481,39,40,41,42,43,44,45,46,1,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,2,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,3,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,504,505,506,507,508,279,280,281,282,283,4,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,509,510,307,308,309,310,511,311,312,313,314,315,316,317,318,512,319,320,321,513,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399,401,402,403,404,406,514,407,408,409,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,5,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,473,474,475,476,477,478],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[455],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[333,405,471,515,516,517,518,519,520,521],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,28,29,30,31,32,33,34,35,36,0,37,67,68,69,70,71,72,2,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,90,92,93,116,117,118,119,120,121,122,123,124,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,167,168,169,170,171,172,173,176,177,178,179,180,181,182,183,185,186,189,193,194,196,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,3,232,233,234,235,236,237,238,239,240,241,242,243,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,4,284,285,286,287,288,289,290,292,295,296,297,298,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,354,355,356,357,358,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,389,396,398,402,403,404,406,408,409,411,417,427,430,440,446,451,452,454,5,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,473,476,477,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[366,367],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[12,14,109,313],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[522],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[405,471,516,517,518,519,520],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"failures":[16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,0,37,67,68,69,70,71,72,2,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,97,105,107,108,110,113,115,116,117,118,119,120,121,122,123,124,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,157,158,159,160,161,162,163,167,168,169,170,171,172,173,174,175,176,177,178,179,182,188,193,194,196,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,3,232,233,234,235,236,237,238,239,240,241,242,243,248,249,250,251,251,252,252,253,254,255,256,257,258,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,4,284,285,286,287,288,289,292,295,296,297,298,302,303,304,305,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,354,355,356,357,358,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,389,396,398,402,403,404,406,409,411,417,427,430,440,446,451,452,453,454,5,455,456,457,458,459,460,461,462,463,464,465,466,467,469,470,473,476,477,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[80,83,84,233,330,331],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[523,524,525,526,72,2,73,81,83,84,124,232,328,330,331,456],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[2,73,78,80,82,83,84,87,124,156,180,181,182,527,528,529,530,3,233,234,237,238,239,285,296,298,326,329,330,331,337,341,342,345,357,373,398,408,409,411,454,5,457,458,459,463,464,465,466],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[72,77,83,84,235,236,330,331,460,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[38,41,74,92,93,94,97,128,192,193,194,196,249,250,251,251,252,252,253,281,284,285,287,288,289,290,292,295,296,297,298,315,316,317,318,320,321,333,335,396,531,398,399,402,403,404,406,408,409,532,411,427,430,440,446,470,533],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[83,84,330,331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[72,83,84,330,331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[534,333,334,335],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"i","callCount":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[164,244],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[21,128,193,194,196,253,284,286,287,289,313,315,316,317,318,319,320,321,351,398,402,404,406,409,427,430,440,446,470],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[72,73,81,3,235,236,239,328,5,460,461,466,473],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[535,536,537],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[270,271,272,274,538,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[405,471,516,517,518,519,520],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exception":"parameterType","throwableClass":"parameterType"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[405,471,516,517,518,519,520],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":358,"org.easymock.tests2.UsageTest.argumentsOrdered":464,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":53,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":459,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":254,"org.easymock.tests2.DelegateToTest.testReturnException":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":34,"org.easymock.tests.MockingTest.testPartialClassMocking":193,"org.easymock.tests.MockClassControlTest.testToString":98,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":301,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":430,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":130,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":523,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":452,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":503,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":516,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":365,"org.easymock.tests2.UsageTest.wrongArguments":457,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":28,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":423,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":242,"org.easymock.samples.ExampleTest.answerVsDelegate":256,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":41,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":198,"org.easymock.tests2.UsageConstraintsTest.testNull":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":287,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":345,"org.easymock.tests2.CaptureTest.testPrimitive":268,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":32,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":149,"org.easymock.tests.UsageTest.moreThanOneArgument":232,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":171,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":15,"org.easymock.tests.UsageTest.argumentsOrdered":238,"org.easymock.tests.UsageVarargTest.varargIntAccepted":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":520,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":510,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":394,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":24,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":487,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":417,"org.easymock.tests.ReplayStateInvalidUsageTest.times":112,"org.easymock.tests2.DependencyTest.testClassMocking":449,"org.easymock.tests2.AnswerTest.answer":473,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":325,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":481,"org.easymock.tests2.CaptureTest.testAnd":265,"org.easymock.tests2.UsageTest.strictResetToDefault":455,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":340,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":19,"org.easymock.tests2.DelegateToTest.testDelegate":354,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":486,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":145,"org.easymock.tests.LimitationsTest.mockFinalMethod":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":71,"org.easymock.tests2.DependencyTest.testClassMockingSupport":450,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":25,"org.easymock.tests2.CaptureTest.testCapture1_2446744":269,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":323,"org.easymock.tests.UsageThrowableTest.throwError":116,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":106,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":40,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":530,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":448,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":490,"org.easymock.samples.PartialClassMockTest.testGetArea":253,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":107,"org.easymock.tests.MockingTest.testInterfaceMocking":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":21,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":201,"org.easymock.tests2.UsageTest.niceToStrict":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":435,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":131,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":11,"org.easymock.tests2.ThreadingTest.testChangeDefault":511,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":535,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":44,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":402,"org.easymock.tests2.MockBuilderTest.testCreateMock":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":443,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":420,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":139,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":341,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":480,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":174,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":240,"org.easymock.tests.UsageOverloadedMethodTest.overloading":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":439,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":186,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":371,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":223,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":370,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":274,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":153,"org.easymock.tests2.EasyMockSupportClassTest.testAll":427,"org.easymock.tests.MockClassControlTest.testEquals":102,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":93,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":69,"org.easymock.tests2.CaptureTest.testCaptureAll":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":324,"org.easymock.tests.MockNameTest.defaultName":125,"org.easymock.tests2.UsageConstraintsTest.testMatches":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":172,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":104,"org.easymock.samples.ExampleTest.voteForRemovals":260,"org.easymock.tests.UsageVarargTest.allKinds":161,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":70,"org.easymock.samples.BasicClassMockTest.testPrintContent":250,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":122,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":37,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":353,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":521,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":210,"org.easymock.tests2.UsageConstraintsTest.greaterThan":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":298,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":491,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":211,"org.easymock.samples.ExampleTest.voteForRemoval":257,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":299,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":311,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":290,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":483,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":74,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":50,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":338,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":33,"org.easymock.tests2.CaptureTest.testCaptureFirst":278,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":339,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":466,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":219,"org.easymock.tests2.UsageTest.moreThanOneArgument":456,"org.easymock.tests2.CaptureTest.testCapture2_2446744":277,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":313,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":61,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":160,"org.easymock.tests.GenericTest.testBridgedEquals":95,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":181,"org.easymock.tests.UsageExpectAndReturnTest.longType":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":67,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":336,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":532,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":148,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":247,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":165,"org.easymock.tests.UsageCallCountTest.tooManyCalls":182,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":121,"org.easymock.tests.MockingTest.testNiceClassMocking":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":316,"org.easymock.tests.MockingTest.testClassMocking":191,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":531,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":175,"org.easymock.tests2.UsageConstraintsTest.testContains":369,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":281,"org.easymock.tests2.UsageConstraintsTest.testFind":360,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":77,"org.easymock.tests.MockTypeTest.fromEasyMockClass":39,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":469,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":78,"org.easymock.tests.UsageExpectAndReturnTest.object":222,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":421,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":522,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":344,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":517,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":155,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":9,"org.easymock.tests.UsageTest.exactCallCountByLastCall":239,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":48,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":12,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":16,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":471,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":228,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":185,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":385,"org.easymock.tests.MockClassControlTest.testHashCode":101,"org.easymock.tests2.EasyMockSupportTest.testVerify":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":437,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":17,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":245,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":527,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":322,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":453,"org.easymock.tests.UsageVarargTest.varargCharAccepted":154,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":203,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":66,"org.easymock.tests2.UsageTest.openCallCountByLastCall":460,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":536,"org.easymock.tests.DefaultClassInstantiatorTest.object":204,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":244,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":7,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":528,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":438,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":384,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":489,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":100,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":136,"org.easymock.tests.ReplayStateInvalidCallsTest.times":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":164,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":446,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":99,"org.easymock.tests2.UsageTest.resumeIfFailure":465,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":509,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":36,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":405,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":380,"org.easymock.tests2.SerializationTest.testAllMockedMethod":335,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":59,"org.easymock.samples.SupportTest.voteForRemovals":264,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":387,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":142,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":534,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":65,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":474,"org.easymock.tests.UsageExpectAndThrowTest.object":140,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":14,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":377,"org.easymock.tests2.DelegateToTest.testWrongClass":352,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":493,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":162,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":163,"org.easymock.tests.UsageStrictMockTest.range":83,"org.easymock.samples.ConstructorCalledMockTest.testTax":251,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":308,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":424,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":114,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":241,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":485,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":202,"org.easymock.tests2.CaptureTest.testCaptureNone":273,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":505,"org.easymock.tests.UsageUnorderedTest.message":124,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":529,"org.easymock.tests.UsageVerifyTest.twoReturns":73,"org.easymock.tests.UsageVarargTest.varargByteAccepted":159,"org.easymock.tests2.ThreadingTest.testThreadSafe":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":441,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":179,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":10,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":249,"org.easymock.tests2.CaptureTest.testCapture_2617107":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":63,"org.easymock.tests2.UsageConstraintsTest.any":367,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":111,"org.easymock.tests2.StubTest.stub":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":166,"org.easymock.tests.UsageExpectAndThrowTest.longType":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":64,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":208,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":110,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":389,"org.easymock.tests2.SerializationTest.testClass":333,"org.easymock.tests.LimitationsTest.mockNativeMethod":128,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":414,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":501,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":332,"org.easymock.tests2.NameTest.nameForMocksControl":305,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":416,"org.easymock.tests2.MockedExceptionTest.testMockedException":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":429,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":236,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":468,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":134,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":196,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":284,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":406,"org.easymock.tests.MockingTest.testNicePartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":515,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":412,"org.easymock.tests2.CaptureTest.testCaptureLast":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":26,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":500,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":321,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":364,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":378,"org.easymock.tests.MockingTest.testTwoMocks":192,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":497,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":513,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":138,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":463,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":382,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":508,"org.easymock.samples.ExampleTest.removeNonExistingDocument":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":419,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":108,"org.easymock.tests.UsageStrictMockTest.differentMethods":84,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":386,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":507,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":206,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":312,"org.easymock.tests2.MockBuilderTest.testCreateMockString":411,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":431,"org.easymock.tests.UsageExpectAndThrowTest.floatType":132,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":476,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":472,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":440,"org.easymock.samples.ExampleTest.voteAgainstRemoval":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":54,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":200,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":297,"org.easymock.tests.LimitationsTest.privateConstructor":127,"org.easymock.tests2.UsageConstraintsTest.testNotNull":381,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":123,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":279,"org.easymock.tests2.UsageTest.defaultResetToNice":462,"org.easymock.samples.ExampleTest.voteAgainstRemovals":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":227,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":413,"org.easymock.tests.UsageVarargTest.differentLength":156,"org.easymock.tests2.CallbackTest.callback":454,"org.easymock.tests2.UsageConstraintsTest.equals":359,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":293,"org.easymock.tests.UsageTest.openCallCountByLastCall":235,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":355,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":30,"org.easymock.tests.UsageCallCountTest.tooFewCalls":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":243,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":506,"org.easymock.tests.UsageThrowableTest.throwCheckedException":120,"org.easymock.tests.MockingTest.testStrictClassMocking":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":418,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":317,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":319,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":478,"org.easymock.tests2.CompareToTest.testGreateOrEqual":479,"org.easymock.tests.ObjectMethodsTest.testHashCode":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":519,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":499,"org.easymock.tests2.NameTest.nameForNiceMock":304,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":314,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":494,"org.easymock.tests2.DependencyTest.testInterfaceMocking":451,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":518,"org.easymock.samples.ExampleTest.addDocument":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":447,"org.easymock.tests2.DelegateToTest.testStubDelegate":351,"org.easymock.tests2.AnswerTest.stubAnswer":477,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":81,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":514,"org.easymock.tests.UsageVarargTest.varargLongAccepted":158,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":52,"org.easymock.tests.UsageExpectAndReturnTest.floatType":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":470,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":393,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageThrowableTest.noUpperLimit":117,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":356,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":306,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":270,"org.easymock.tests2.SerializationTest.test":334,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":213,"org.easymock.tests2.UsageConstraintsTest.testSame":362,"org.easymock.samples.SupportTest.addDocument":263,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":512,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":484,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":432,"org.easymock.tests.GenericTest.testPackageScope":92,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":47,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":392,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":197,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":482,"org.easymock.tests2.NameTest.nameForMock":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":224,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":410,"org.easymock.tests2.UsageStrictMockTest.differentMethods":331,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":216,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":144,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":6,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":90,"org.easymock.tests2.MockedExceptionTest.testRealException":282,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":56,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":328,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":29,"org.easymock.tests2.NameTest.nameForStrictMock":303,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":401,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":537,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":467,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":307,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":524,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":207,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":376,"org.easymock.tests.ErrorMessageTest.testGetters":525,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":398,"org.easymock.tests2.UsageStrictMockTest.range":330,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":488,"org.easymock.tests2.UsageConstraintsTest.lessThan":383,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":51,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":436,"org.easymock.tests2.CaptureTest.testCaptureRightOne":275,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":504,"org.easymock.tests2.UsageConstraintsTest.testOr":363,"org.easymock.tests.UsageRangeTest.combination":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":285,"org.easymock.tests.UsageTest.wrongArguments":234,"org.easymock.tests2.MockBuilderTest.testWithConstructor":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":433,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":225,"org.easymock.tests.UsageVarargTest.varargShortAccepted":157,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":209,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":180,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":502,"org.easymock.tests2.UsageConstraintsTest.cmpTo":368,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":475,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":1,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":461,"org.easymock.tests2.CaptureTest.testCaptureFromStub":276,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":105,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":399,"org.easymock.tests.UsageTest.unexpectedCallWithArray":233,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":498,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":178,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":226,"org.easymock.tests2.CaptureTest.testCapture":538,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":82,"org.easymock.tests2.UsageConstraintsTest.constraints":357,"org.easymock.samples.ExampleTest.addAndChangeDocument":262,"org.easymock.tests.UsageStrictMockTest.testVerify":86,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":248,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":68,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":271,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":533,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":22,"org.easymock.tests.LimitationsTest.abstractClass":126,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":218,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":23,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":526,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":342}}]
