[{"position":"org.easymock.internal.RecordState:262","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.RecordState:117","failures":[57,58,59,60,61,62,63,64],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[65,66],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,65,87,88,89,90,55,91,92,56,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,66,114,115,116,117,48,49,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,139,140,140,141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[142,143,144,145,146,129,139,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[84,147],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1621","sourceCode":"return null","type":"CtReturnImpl"},"failures":[148,149],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[150,151,152,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[153],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,155,86,147,65,87,88,89,90,156,55,157,91,158,92,56,93,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,66,159,114,115,117,47,48,49,160,161,162,118,163,164,119,165,166,167,168,169,170,171,172,173,120,174,175,176,177,178,121,179,180,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,181,182,137,183,138,184,185,139,139,140,140,141],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,155,86,147,65,87,88,89,90,156,55,157,91,158,92,56,93,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,66,159,114,115,117,47,48,49,160,161,162,118,163,164,119,165,166,167,168,169,170,171,172,173,120,174,175,176,177,178,121,179,180,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,181,182,137,183,186,138,184,185,139,139,140,140,141],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[147],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[187],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[188,189,190],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[191,192,193,194,195,196,150,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[212,213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[214,215,216,217,218,219],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[220,0,221,68,69,70,71,72,222,73,223,224,74,225,226,227,228,229,230,231,232,233,234,235,236,237,238,191,192,193,194,195,196,150,197,198,199,200,201,202,203,204,205,239,206,207,208,209,210,187,211,75,76,77,78,79,80,81,240,1,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,2,259,260,261,54,262,263,82,264,265,216,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,83,3,282,4,5,6,7,8,9,283,284,10,11,285,286,12,13,14,287,288,289,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,35,312,217,313,314,36,315,316,317,318,319,320,321,322,323,324,325,326,84,85,155,86,147,65,327,328,329,330,87,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,88,89,90,156,37,38,39,40,41,42,43,44,45,55,157,91,158,92,56,93,94,351,352,353,57,354,355,46,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,97,98,58,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,99,422,100,423,424,425,426,427,428,154,429,430,431,432,433,434,435,436,148,149,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,101,102,103,104,462,463,105,106,464,465,466,467,468,107,108,109,110,111,112,113,66,142,159,114,115,117,47,48,49,50,469,59,470,60,51,471,472,473,474,475,476,52,477,478,479,480,481,61,151,482,62,152,63,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,212,213,53,501,502,503,504,505,506,160,161,162,118,163,164,119,165,166,167,168,169,170,171,172,173,120,174,175,176,177,178,121,179,180,122,123,507,124,125,126,127,508,128,129,130,131,132,133,134,135,136,181,182,509,510,137,183,186,138,511,512,513,514,184,185,515,139,140,141,516,64,517,518,519,520,521,522,523],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[425,431],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[76,80],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[84],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[524,525,526,111,132,133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[527],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":426,"org.easymock.tests2.UsageTest.argumentsOrdered":479,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":200,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":475,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":515,"org.easymock.tests2.DelegateToTest.testReturnException":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":38,"org.easymock.tests.MockingTest.testPartialClassMocking":71,"org.easymock.tests.MockClassControlTest.testToString":91,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":483,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":168,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":15,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":510,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":311,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":432,"org.easymock.tests2.UsageTest.wrongArguments":473,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":283,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":335,"org.easymock.samples.ExampleTest.answerVsDelegate":64,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":87,"org.easymock.tests2.UsageConstraintsTest.testNull":154,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":224,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":124,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":458,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":94,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":95,"org.easymock.tests2.CaptureTest.testPrimitive":491,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":34,"org.easymock.tests.UsageTest.moreThanOneArgument":312,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":507,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":279,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":225,"org.easymock.tests.UsageTest.argumentsOrdered":316,"org.easymock.tests.UsageVarargTest.varargIntAccepted":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":190,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":276,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":295,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":408,"org.easymock.tests.ReplayStateInvalidUsageTest.times":345,"org.easymock.tests2.DependencyTest.testClassMocking":181,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":146,"org.easymock.tests2.AnswerTest.answer":61,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":468,"org.easymock.tests2.CaptureTest.testAnd":488,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":328,"org.easymock.tests2.UsageTest.strictResetToDefault":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":453,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":232,"org.easymock.tests2.DelegateToTest.testDelegate":396,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":229,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":30,"org.easymock.tests.LimitationsTest.mockFinalMethod":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":238,"org.easymock.tests2.DependencyTest.testClassMockingSupport":182,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":287,"org.easymock.tests2.CaptureTest.testCapture1_2446744":492,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":508,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":466,"org.easymock.tests.UsageThrowableTest.throwError":3,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":339,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":330,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":390,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":281,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":180,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":298,"org.easymock.samples.PartialClassMockTest.testGetArea":141,"org.easymock.tests.MockingTest.testInterfaceMocking":222,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":273,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":242,"org.easymock.tests2.UsageTest.niceToStrict":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":16,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":82,"org.easymock.tests2.ThreadingTest.testChangeDefault":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":191,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.MockBuilderTest.testCreateMock":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":176,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":411,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":24,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":218,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":454,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":333,"org.easymock.tests.UsageOverloadedMethodTest.overloading":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":173,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":149,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":46,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":370,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":148,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":497,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":248,"org.easymock.tests2.EasyMockSupportClassTest.testAll":118,"org.easymock.tests.MockClassControlTest.testEquals":93,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":155,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":32,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":524,"org.easymock.tests2.CaptureTest.testCaptureAll":489,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":467,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":236,"org.easymock.tests.MockNameTest.defaultName":286,"org.easymock.tests2.UsageConstraintsTest.testMatches":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":280,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":337,"org.easymock.samples.ExampleTest.voteForRemovals":520,"org.easymock.tests.UsageVarargTest.allKinds":256,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":220,"org.easymock.samples.BasicClassMockTest.testPrintContent":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":237,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":8,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":415,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":395,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":42,"org.easymock.tests2.UsageConstraintsTest.greaterThan":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":231,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":134,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":299,"org.easymock.samples.ExampleTest.voteForRemoval":517,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":81,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":503,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":135,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":116,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":127,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":291,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":451,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":37,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":391,"org.easymock.tests2.CaptureTest.testCaptureFirst":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":452,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":481,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":366,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":505,"org.easymock.tests2.CaptureTest.testCapture2_2446744":500,"org.easymock.tests2.UsageTest.moreThanOneArgument":472,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":207,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":255,"org.easymock.tests.GenericTest.testBridgedEquals":147,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":325,"org.easymock.tests.UsageExpectAndReturnTest.longType":362,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":449,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":33,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":444,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":277,"org.easymock.tests.UsageCallCountTest.tooManyCalls":326,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":367,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":102,"org.easymock.tests.MockingTest.testNiceClassMocking":74,"org.easymock.tests.MockingTest.testClassMocking":69,"org.easymock.tests2.UsageConstraintsTest.testContains":436,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":319,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":49,"org.easymock.tests2.UsageConstraintsTest.testFind":428,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":2,"org.easymock.tests.MockTypeTest.fromEasyMockClass":329,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":60,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests.UsageExpectAndReturnTest.object":369,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":457,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":250,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":262,"org.easymock.tests.UsageTest.exactCallCountByLastCall":317,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":196,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":226,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":98,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":245,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":375,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":355,"org.easymock.tests.MockClassControlTest.testHashCode":56,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":380,"org.easymock.tests2.EasyMockSupportTest.testVerify":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":171,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":227,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":44,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":465,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":469,"org.easymock.tests.UsageVarargTest.varargCharAccepted":249,"org.easymock.tests2.CaptureTest.testCaptureMultiple":153,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":211,"org.easymock.tests2.UsageTest.openCallCountByLastCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":460,"org.easymock.tests.DefaultClassInstantiatorTest.object":75,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":43,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":22,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":526,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":5,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":132,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":92,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":21,"org.easymock.tests.ReplayStateInvalidCallsTest.times":303,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":376,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":12,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":304,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":121,"org.easymock.tests2.UsageTest.resumeIfFailure":480,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":40,"org.easymock.tests2.StubTest.stubWithReturnValue":53,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":445,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":368,"org.easymock.tests2.SerializationTest.testAllMockedMethod":100,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":239,"org.easymock.samples.SupportTest.voteForRemovals":514,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":219,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":27,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":187,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":151,"org.easymock.tests.UsageExpectAndThrowTest.object":25,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":353,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":442,"org.easymock.tests2.DelegateToTest.testWrongClass":394,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":301,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":349,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":350,"org.easymock.samples.ConstructorCalledMockTest.testTax":139,"org.easymock.tests.UsageStrictMockTest.range":268,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":511,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":456,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":101,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":160,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":315,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":334,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":214,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":293,"org.easymock.tests2.CaptureTest.testCaptureNone":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":243,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":398,"org.easymock.tests.UsageUnorderedTest.message":244,"org.easymock.tests.UsageVerifyTest.twoReturns":221,"org.easymock.tests.UsageVarargTest.varargByteAccepted":254,"org.easymock.tests2.ThreadingTest.testThreadSafe":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":174,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":323,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":184,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":263,"org.easymock.tests2.CaptureTest.testCapture_2617107":490,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":209,"org.easymock.tests2.UsageConstraintsTest.any":434,"org.easymock.tests2.StubTest.stub":213,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":39,"org.easymock.tests.UsageExpectAndThrowTest.longType":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":210,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":79,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":343,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":418,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":384,"org.easymock.tests2.SerializationTest.testClass":99,"org.easymock.tests.LimitationsTest.mockNativeMethod":90,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":378,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":525,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":309,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":421,"org.easymock.tests2.NameTest.nameForMocksControl":487,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests2.MockedExceptionTest.testMockedException":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":164,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":470,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":19,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":73,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":122,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":66,"org.easymock.tests.MockingTest.testNicePartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":126,"org.easymock.tests2.CaptureTest.testCaptureLast":495,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":188,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":288,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":431,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":106,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":308,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":443,"org.easymock.tests.MockingTest.testTwoMocks":70,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":305,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":23,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":478,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":447,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":402,"org.easymock.samples.ExampleTest.removeNonExistingDocument":521,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":410,"org.easymock.tests.UsageStrictMockTest.differentMethods":269,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":381,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":401,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":77,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":504,"org.easymock.tests2.MockBuilderTest.testCreateMockString":117,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":165,"org.easymock.tests.UsageExpectAndThrowTest.floatType":17,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":162,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":62,"org.easymock.tests.UsageVerifyTest.twoThrows":0,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":120,"org.easymock.samples.ExampleTest.voteAgainstRemoval":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":201,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":241,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":133,"org.easymock.tests.LimitationsTest.privateConstructor":89,"org.easymock.tests2.UsageConstraintsTest.testNotNull":446,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":9,"org.easymock.tests2.UsageTest.defaultResetToNice":477,"org.easymock.samples.ExampleTest.voteAgainstRemovals":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":202,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.UsageVarargTest.differentLength":251,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests2.UsageConstraintsTest.equals":427,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":129,"org.easymock.tests.UsageTest.openCallCountByLastCall":314,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":423,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":10,"org.easymock.tests.UsageCallCountTest.tooFewCalls":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":336,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":400,"org.easymock.tests.UsageThrowableTest.throwCheckedException":6,"org.easymock.tests.MockingTest.testStrictClassMocking":68,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":215,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":105,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":409,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":103,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":463,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":63,"org.easymock.tests.ObjectMethodsTest.testHashCode":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":189,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":506,"org.easymock.tests2.NameTest.nameForNiceMock":486,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":307,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":302,"org.easymock.tests2.DependencyTest.testInterfaceMocking":509,"org.easymock.samples.ExampleTest.addDocument":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":175,"org.easymock.tests2.DelegateToTest.testStubDelegate":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":179,"org.easymock.tests2.AnswerTest.stubAnswer":152,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":266,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":142,"org.easymock.tests.UsageVarargTest.varargLongAccepted":253,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":199,"org.easymock.tests.UsageExpectAndReturnTest.floatType":361,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":97,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":140,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":388,"org.easymock.tests.UsageThrowableTest.noUpperLimit":282,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":424,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":137,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":493,"org.easymock.tests2.SerializationTest.test":422,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":76,"org.easymock.tests2.UsageConstraintsTest.testSame":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":360,"org.easymock.samples.SupportTest.addDocument":513,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":462,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":292,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":166,"org.easymock.tests.GenericTest.testPackageScope":85,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":387,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":223,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":290,"org.easymock.tests2.NameTest.nameForMock":484,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":371,"org.easymock.tests2.UsageStrictMockTest.differentMethods":420,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":144,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":29,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":260,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":233,"org.easymock.tests2.MockedExceptionTest.testRealException":50,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":332,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":204,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":284,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":348,"org.easymock.tests2.NameTest.nameForStrictMock":485,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":110,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":125,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":138,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":441,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":78,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":108,"org.easymock.tests2.UsageStrictMockTest.range":419,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":296,"org.easymock.tests2.UsageConstraintsTest.lessThan":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":383,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":198,"org.easymock.tests2.CaptureTest.testCaptureRightOne":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":170,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":397,"org.easymock.tests2.UsageConstraintsTest.testOr":430,"org.easymock.tests.UsageRangeTest.combination":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":123,"org.easymock.tests.UsageTest.wrongArguments":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":167,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":372,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":80,"org.easymock.tests.UsageVarargTest.varargShortAccepted":252,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":324,"org.easymock.tests2.UsageConstraintsTest.cmpTo":435,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":310,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":482,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":194,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":52,"org.easymock.tests2.CaptureTest.testCaptureFromStub":499,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":338,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":109,"org.easymock.tests.UsageTest.unexpectedCallWithArray":217,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":306,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":216,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":322,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":143,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":373,"org.easymock.tests2.UsageConstraintsTest.constraints":425,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":267,"org.easymock.samples.ExampleTest.addAndChangeDocument":522,"org.easymock.tests2.ConstraintsToStringTest.containsToString":527,"org.easymock.tests.UsageStrictMockTest.testVerify":271,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":523,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":235,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":494,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":96,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":274,"org.easymock.tests.LimitationsTest.abstractClass":88,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":275,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":455,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":246}}]
