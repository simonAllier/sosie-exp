[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[31,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[33],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[34,35,36,37,38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:131","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[39,40,41,42,32,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:538","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.getControlForLastCall()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[31,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[48,49,50,51,52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[20,53,23,24,25,26,27,54,55,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[39,0,56,2,3,4,5,6,7,8,9,10,11,13,14,15,16,57,58,59,60,42,43,61,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[62,63,64,65,66,66,67,67,68,69,70,71,39,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,49,50,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,36,210,211,51,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,29,30,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,2,3,4,5,6,7,8,9,10,11,13,14,15,16,264,265,19,266,267,57,58,59,60,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,17,283,284,285,286,287,288,289,290,22,42,43,61,44,45,46,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,47,309,310,311,312,313,314,315,316,52,317,318,319,320,321,322],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:65","sourceCode":"final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\")","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[19,266,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[243],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[76,97,111,113,134,140,146,150,152,181,187,193,197,199,323,324,232,244,247,255,258,259,3,9,10,16,60,281,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[97,325,114,115,118,119,49,50,326,36,51,282,287,288,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[97,327,325,114,115,118,119,49,50,326,36,51,282,287,288,52],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[63,64,65,68,69,70,71,72,73,74,75,76,83,94,95,96,328,329,97,104,115,118,119,124,160,161,162,163,164,165,166,167,168,169,177,330,180,209,36,211,51,212,213,218,224,225,226,227,331,3,4,7,8,9,10,16,267,273,282,283,287,288,314,316,52,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[332,19,266,267],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:95","sourceCode":"int = java.lang.Integer.int","type":"CtAssignmentImpl"},"failures":[93,124,171,172,173,174,51,212,233,234,30,236,237,242,245,248,254,289,307,52,317],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests2.UsageTest.argumentsOrdered":288,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":112,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":88,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":283,"org.easymock.tests2.StubTest.stubWithReturnValue":308,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":20,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":252,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":143,"org.easymock.tests2.SerializationTest.testAllMockedMethod":267,"org.easymock.tests2.DelegateToTest.testReturnException":57,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":86,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.samples.SupportTest.voteForRemovals":70,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":38,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":193,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":332,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":181,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":31,"org.easymock.tests.UsageExpectAndThrowTest.object":191,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":265,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":250,"org.easymock.tests2.DelegateToTest.testWrongClass":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":202,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":239,"org.easymock.tests2.UsageTest.wrongArguments":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":175,"org.easymock.samples.ConstructorCalledMockTest.testTax":66,"org.easymock.tests.UsageStrictMockTest.range":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":206,"org.easymock.samples.ExampleTest.answerVsDelegate":39,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":300,"org.easymock.tests2.UsageConstraintsTest.testNull":235,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":294,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":275,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":224,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":200,"org.easymock.tests.UsageTest.moreThanOneArgument":113,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":118,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":205,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":107,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests.UsageUnorderedTest.message":97,"org.easymock.tests.UsageVerifyTest.twoReturns":50,"org.easymock.tests.UsageVarargTest.varargByteAccepted":167,"org.easymock.tests2.ThreadingTest.testThreadSafe":258,"org.easymock.tests.UsageTest.argumentsOrdered":119,"org.easymock.tests.UsageVarargTest.varargIntAccepted":162,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":96,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":63,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":154,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":178,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":274,"org.easymock.tests2.UsageConstraintsTest.any":240,"org.easymock.tests2.StubTest.stub":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":87,"org.easymock.tests.UsageExpectAndThrowTest.longType":184,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":101,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":257,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":263,"org.easymock.tests.LimitationsTest.mockNativeMethod":84,"org.easymock.tests2.AnswerTest.answer":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":271,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":280,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":318,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":298,"org.easymock.tests2.NameTest.nameForMocksControl":312,"org.easymock.tests2.MockedExceptionTest.testMockedException":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":173,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.DelegateToTest.testDelegate":60,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":185,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":291,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":276,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":196,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":296,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":306,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":238,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":81,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":330,"org.easymock.tests2.CaptureTest.testCapture1_2446744":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":189,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":287,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":254,"org.easymock.tests.UsageThrowableTest.throwError":123,"org.easymock.tests.UsageStrictMockTest.differentMethods":212,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":100,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":260,"org.easymock.tests2.MockBuilderTest.testCreateMockString":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":109,"org.easymock.tests.UsageExpectAndThrowTest.floatType":183,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":246,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":43,"org.easymock.tests.UsageVerifyTest.twoThrows":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":321,"org.easymock.samples.PartialClassMockTest.testGetArea":62,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":155,"org.easymock.samples.ExampleTest.voteAgainstRemoval":73,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":299,"org.easymock.tests2.UsageTest.niceToStrict":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":182,"org.easymock.tests2.UsageConstraintsTest.testNotNull":253,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":130,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":273,"org.easymock.tests2.UsageTest.defaultResetToNice":286,"org.easymock.samples.ExampleTest.voteAgainstRemovals":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":323,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":149,"org.easymock.tests2.CallbackTest.callback":47,"org.easymock.tests.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":190,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":220,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":91,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":177,"org.easymock.tests.UsageCallCountTest.tooFewCalls":94,"org.easymock.tests.UsageOverloadedMethodTest.overloading":110,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":145,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":243,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":207,"org.easymock.tests.UsageThrowableTest.throwCheckedException":127,"org.easymock.tests2.EasyMockSupportClassTest.testAll":319,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":83,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":198,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":79,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":305,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":122,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":302,"org.easymock.tests2.UsageConstraintsTest.testMatches":245,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":304,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":108,"org.easymock.samples.ExampleTest.voteForRemovals":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":54,"org.easymock.tests2.NameTest.nameForNiceMock":311,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":262,"org.easymock.tests.UsageVarargTest.allKinds":169,"org.easymock.tests2.DependencyTest.testInterfaceMocking":264,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":80,"org.easymock.samples.BasicClassMockTest.testPrintContent":64,"org.easymock.samples.ExampleTest.addDocument":74,"org.easymock.tests2.DelegateToTest.testStubDelegate":58,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":129,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":313,"org.easymock.tests2.AnswerTest.stubAnswer":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":90,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":210,"org.easymock.tests2.UsageConstraintsTest.greaterThan":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":172,"org.easymock.tests.UsageVarargTest.varargLongAccepted":166,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":213,"org.easymock.samples.ExampleTest.voteForRemoval":72,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":259,"org.easymock.tests.UsageExpectAndReturnTest.floatType":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":152,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":67,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":248,"org.easymock.tests.UsageThrowableTest.noUpperLimit":124,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":279,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":233,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":104,"org.easymock.tests2.SerializationTest.test":266,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":7,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":217,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":125,"org.easymock.tests2.UsageConstraintsTest.testSame":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":135,"org.easymock.samples.SupportTest.addDocument":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":85,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":218,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":290,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":141,"org.easymock.tests.GenericTest.testPackageScope":82,"org.easymock.tests2.UsageTest.moreThanOneArgument":281,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":261,"org.easymock.tests2.CaptureTest.testCapture2_2446744":15,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":277,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":168,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":328,"org.easymock.tests2.NameTest.nameForMock":309,"org.easymock.tests.UsageExpectAndReturnTest.longType":137,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":146,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":331,"org.easymock.tests2.UsageStrictMockTest.differentMethods":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":105,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":138,"org.easymock.tests.UsageCallCountTest.tooManyCalls":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":195,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":174,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":93,"org.easymock.tests2.MockedExceptionTest.testRealException":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":53,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":186,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":103,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":176,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":301,"org.easymock.tests2.NameTest.nameForStrictMock":310,"org.easymock.tests2.UsageConstraintsTest.testContains":242,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":92,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":230,"org.easymock.tests2.UsageConstraintsTest.testFind":30,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":111,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":295,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":46,"org.easymock.tests.UsageExpectAndReturnTest.object":144,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":297,"org.easymock.tests2.UsageStrictMockTest.range":52,"org.easymock.tests2.UsageConstraintsTest.lessThan":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":25,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":164,"org.easymock.tests.UsageTest.exactCallCountByLastCall":120,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":27,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.UsageConstraintsTest.testOr":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":23,"org.easymock.tests.UsageRangeTest.combination":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":292,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":150,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":160,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":56,"org.easymock.tests.UsageTest.wrongArguments":115,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":170,"org.easymock.tests2.EasyMockSupportTest.testVerify":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":147,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":40,"org.easymock.tests.UsageVarargTest.varargShortAccepted":165,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":268,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":256,"org.easymock.tests2.UsageConstraintsTest.cmpTo":241,"org.easymock.tests.UsageVarargTest.varargCharAccepted":163,"org.easymock.tests2.CaptureTest.testCaptureMultiple":1,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":32,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests2.UsageTest.openCallCountByLastCall":284,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":285,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":226,"org.easymock.tests2.CaptureTest.testCaptureFromStub":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":98,"org.easymock.tests.UsageTest.unexpectedCallWithArray":114,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":188,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":126,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":95,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":148,"org.easymock.tests2.CaptureTest.testCapture":12,"org.easymock.tests2.UsageConstraintsTest.constraints":234,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.samples.ExampleTest.addAndChangeDocument":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":187,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageStrictMockTest.testVerify":214,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":151,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":322,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":78,"org.easymock.tests2.UsageTest.resumeIfFailure":289,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":156,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":140,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":221,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":48,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":161}}]
