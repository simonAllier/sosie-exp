[{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[93,94,95,96,16,18,97,98,99,100,101,102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[103,104,105],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[107,108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[121,122,123,124,125],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[126,1,3,4,19,20,21,127,128,24,25,27,129,130,131,132,133,134,135,30,31,32,33,136,51,56,57,59,60,64,137,67,138,139,140,141,142,70,71,72,73,143,74,75,77,144,145,78,79,80],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[146,147,126,148,1,3,4,6,149,8,150,9,151,10,11,152,12,13,153,154,155,156,157,158,159,160,161,162,163,164,15,16,165,166,17,18,167,168,169,170,171,172,173,174,175,176,177,19,178,20,22,127,128,179,26,27,180,181,182,28,183,184,130,131,185,186,187,132,133,188,189,190,191,29,192,193,194,195,196,197,198,134,135,199,200,34,201,202,203,204,205,206,207,36,39,208,41,42,44,46,209,210,211,212,213,214,215,216,217,218,219,122,57,59,60,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,140,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,141,70,270,271,272,71,73,273,274,143,74,75,144,145,80,275,276,91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:333","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int));\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[155,156,157,14,277,278,168,172,173,177,20,129,181,190,192,199,279,51,280,281,282,283,284,285,242,248,254,258,260,143,75],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[286,287,288,289,290,291,146,147,126,292,107,293,148,294,0,295,1,2,3,4,5,109,110,111,296,297,6,7,298,112,299,300,113,149,8,150,9,151,10,11,152,12,13,153,154,301,155,156,157,158,159,160,93,302,14,277,303,278,161,162,304,305,163,164,15,16,165,306,166,17,18,97,307,308,309,310,311,312,313,167,168,169,170,171,314,315,172,173,174,175,316,176,177,19,178,20,21,22,23,127,128,179,24,25,26,27,317,318,180,319,320,129,321,181,182,28,183,322,184,130,131,185,186,187,323,132,133,188,189,190,191,29,192,193,194,195,196,197,198,134,135,199,324,30,31,32,33,200,34,201,202,203,204,325,326,205,327,328,35,206,207,36,329,37,38,98,39,40,99,330,208,331,41,100,42,332,333,43,44,102,45,114,115,116,334,335,46,47,336,117,337,338,118,339,340,209,341,342,343,344,210,345,346,211,347,348,349,350,351,352,353,354,355,212,356,357,358,359,360,213,361,362,119,363,364,214,136,215,216,365,217,366,279,367,368,369,218,120,219,370,48,371,372,49,50,373,374,375,376,377,378,379,380,381,51,382,383,384,385,386,387,388,389,390,280,391,392,393,394,395,396,397,398,399,400,401,402,403,121,122,123,124,125,404,405,52,53,54,406,407,408,55,409,56,57,58,59,60,61,410,220,221,222,62,411,63,64,412,137,65,66,67,413,414,415,416,417,418,419,420,421,223,422,224,423,108,424,425,426,427,428,429,225,226,430,227,228,229,431,432,230,231,138,139,433,434,281,435,436,437,438,439,282,440,441,442,443,444,283,445,446,447,284,448,285,449,450,451,232,452,453,68,454,455,456,233,234,457,235,458,459,460,236,461,140,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,462,264,463,464,465,466,467,468,265,266,267,268,269,141,469,470,471,472,473,69,474,475,476,477,142,70,270,271,272,71,72,73,478,273,274,143,74,75,76,77,144,145,78,79,80,479,480,481,482,81,82,483,83,484,485,84,85,86,87,88,275,276,486,89,487,488,90,91,92,489,490,491,492,493,494,495],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[375,379],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[183],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[3,59,496,72,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[93,497,498,499,500,501,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"position":"org.easymock.internal.RecordState:305","failures":[426,81,82],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[146,126,293,148,294,0,1,2,3,4,5,155,157,158,159,160,14,277,278,161,162,163,15,16,17,18,167,168,169,170,171,314,315,172,174,175,316,176,177,19,178,20,21,22,23,127,128,24,25,27,318,180,319,129,181,182,28,183,184,130,131,185,186,187,132,133,188,189,190,191,29,192,193,194,195,196,198,134,135,199,200,201,202,204,208,44,45,136,215,217,51,386,396,397,398,399,400,55,56,57,58,59,60,61,228,229,431,432,230,281,435,436,437,438,439,282,440,441,442,443,444,283,445,446,447,284,448,285,449,232,233,234,235,236,140,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,70,71,72,73,274,143,74,75,76,77,144,145,78,79,80,82,275,276,91,490,491,492,493,495],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[502,503,56,504,505,76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[506,507,508,509,510,511],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[186],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[502,503,56,504,505,76],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[512],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[146,147,126,293,294,0,295,1,2,3,4,5,6,149,8,150,9,151,10,11,152,12,13,153,154,301,158,159,160,14,161,162,304,164,15,16,165,166,17,18,167,168,169,170,171,314,315,172,173,174,175,177,19,178,21,22,23,179,24,25,27,318,319,129,183,184,130,131,186,187,323,132,133,189,190,29,192,194,195,196,197,198,134,30,31,32,33,200,34,201,202,203,204,205,206,207,36,39,208,41,42,44,46,209,210,211,212,213,119,363,364,214,136,215,216,365,217,279,369,218,120,219,51,382,122,123,55,409,56,57,58,59,60,61,410,62,64,412,137,66,67,228,229,431,432,230,231,436,437,439,443,447,232,233,234,235,236,461,140,237,238,239,240,241,244,245,247,252,257,262,263,265,266,267,268,269,141,469,470,472,473,69,474,475,476,477,142,70,72,73,273,274,77,78,79,80,275,276,486,487,488,91,489,494],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[7,47,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","type":"type","this":"this"}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[325,37,38,331,339,211],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:109","sourceCode":"final java.lang.Object[] java.lang.Object[] = new java.lang.Object[java.lang.Class<?>[].int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[1,158,277,278,167,168,169,170,171,314,315,172,173,174,175,316,176,177,181,182,28,183,184,130,131,185,186,187,323,132,133,188,189,190,191,29,192,193,194,195,196,197,198,134,135,199,205,51,56,57,228,229,431,432,230,262,263,265,266,267,268,269,142,275,276,494],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[1,4,5,20,57,60,61,71,72,73,75,483,91],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[146,147,1,3,4,158,160,164,15,16,165,166,17,18,180,200,34,201,202,203,204,205,206,207,36,39,208,41,42,44,210,211,212,213,214,215,216,217,218,219,396,397,398,399,57,59,60,228,232,233,234,235,242,243,244,245,246,247,250,251,253,254,255,257,258,259,260,261,265,266,267,268,269,70,270,271,272,275,276],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[388],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[332],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[502,503,56,504,505,76],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":183,"org.easymock.tests2.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":422,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":120,"org.easymock.tests2.DelegateToTest.testReturnException":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":491,"org.easymock.tests.MockingTest.testPartialClassMocking":233,"org.easymock.tests.MockClassControlTest.testToString":52,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":324,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":281,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":187,"org.easymock.tests2.UsageTest.wrongArguments":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":228,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":113,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":481,"org.easymock.samples.ExampleTest.answerVsDelegate":136,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":86,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":459,"org.easymock.tests2.UsageConstraintsTest.testNull":130,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":202,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":13,"org.easymock.tests2.CaptureTest.testPrimitive":170,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":449,"org.easymock.tests.UsageTest.moreThanOneArgument":75,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":398,"org.easymock.tests.UsageTest.argumentsOrdered":79,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":231,"org.easymock.tests.UsageVarargTest.varargIntAccepted":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":501,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":338,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":269,"org.easymock.tests.ReplayStateInvalidUsageTest.times":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":6,"org.easymock.tests2.DependencyTest.testClassMocking":290,"org.easymock.tests2.AnswerTest.answer":126,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":289,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":485,"org.easymock.tests2.CaptureTest.testAnd":167,"org.easymock.tests2.UsageTest.strictResetToDefault":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":271,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":434,"org.easymock.tests2.DelegateToTest.testDelegate":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":447,"org.easymock.tests.LimitationsTest.mockFinalMethod":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":494,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":468,"org.easymock.tests2.DependencyTest.testClassMockingSupport":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":81,"org.easymock.tests2.CaptureTest.testCapture1_2446744":171,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":445,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":287,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.UsageThrowableTest.throwError":236,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":85,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":453,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":400,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":362,"org.easymock.samples.PartialClassMockTest.testGetArea":219,"org.easymock.tests.MockingTest.testInterfaceMocking":457,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":435,"org.easymock.tests2.UsageTest.niceToStrict":22,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":105,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":208,"org.easymock.tests2.MockBuilderTest.testCreateMock":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":112,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":442,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":10,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":484,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":395,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":479,"org.easymock.tests.UsageOverloadedMethodTest.overloading":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":360,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":488,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":253,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":189,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":174,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":471,"org.easymock.tests.MockClassControlTest.testEquals":407,"org.easymock.tests2.EasyMockSupportClassTest.testAll":210,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":448,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":466,"org.easymock.tests2.CaptureTest.testCaptureAll":168,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":288,"org.easymock.tests.MockNameTest.defaultName":68,"org.easymock.tests2.UsageConstraintsTest.testMatches":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":399,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":382,"org.easymock.samples.ExampleTest.voteForRemovals":217,"org.easymock.tests.UsageVarargTest.allKinds":142,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":467,"org.easymock.samples.BasicClassMockTest.testPrintContent":364,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":240,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":495,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":336,"org.easymock.tests2.UsageConstraintsTest.greaterThan":192,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":36,"org.easymock.samples.ExampleTest.voteForRemoval":215,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":381,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":329,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":325,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":489,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":150,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":490,"org.easymock.tests2.CaptureTest.testCaptureFirst":177,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":9,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":27,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":249,"org.easymock.tests2.CaptureTest.testCapture2_2446744":176,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":158,"org.easymock.tests2.UsageTest.moreThanOneArgument":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":44,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":477,"org.easymock.tests.GenericTest.testBridgedEquals":125,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":96,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":66,"org.easymock.tests.UsageExpectAndReturnTest.longType":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":464,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":285,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":478,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":284,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":396,"org.easymock.tests.UsageCallCountTest.tooManyCalls":67,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":439,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":239,"org.easymock.tests.MockingTest.testNiceClassMocking":460,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":15,"org.easymock.tests.MockingTest.testClassMocking":455,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":411,"org.easymock.tests2.UsageConstraintsTest.testContains":188,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":209,"org.easymock.tests2.UsageConstraintsTest.testFind":184,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":143,"org.easymock.tests.MockTypeTest.fromEasyMockClass":84,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":55,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":278,"org.easymock.tests.UsageExpectAndReturnTest.object":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":473,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":372,"org.easymock.tests.UsageTest.exactCallCountByLastCall":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":93,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":258,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":487,"org.easymock.tests.MockClassControlTest.testHashCode":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":115,"org.easymock.tests2.EasyMockSupportTest.testVerify":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":139,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":394,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":286,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":321,"org.easymock.tests.UsageVarargTest.varargCharAccepted":472,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":373,"org.easymock.tests2.CaptureTest.testCaptureMultiple":512,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":227,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":103,"org.easymock.tests.DefaultClassInstantiatorTest.object":374,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":393,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":48,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":114,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":54,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":282,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":401,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":213,"org.easymock.tests2.UsageTest.resumeIfFailure":26,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":83,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":493,"org.easymock.tests2.StubTest.stubWithReturnValue":163,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":198,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":251,"org.easymock.tests2.SerializationTest.testAllMockedMethod":304,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":426,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":503,"org.easymock.samples.SupportTest.voteForRemovals":218,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":283,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":430,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":292,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":463,"org.easymock.tests.UsageExpectAndThrowTest.object":443,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":195,"org.easymock.tests2.DelegateToTest.testWrongClass":319,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":275,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":276,"org.easymock.tests.UsageStrictMockTest.range":59,"org.easymock.samples.ConstructorCalledMockTest.testTax":367,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":312,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":164,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":444,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":41,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":391,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":480,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":504,"org.easymock.tests2.CaptureTest.testCaptureNone":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":222,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":507,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.UsageVerifyTest.twoReturns":73,"org.easymock.tests.UsageVarargTest.varargByteAccepted":476,"org.easymock.tests2.ThreadingTest.testThreadSafe":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":356,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":137,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":49,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":363,"org.easymock.tests2.CaptureTest.testCapture_2617107":169,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":483,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":225,"org.easymock.tests2.UsageConstraintsTest.any":132,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":389,"org.easymock.tests2.StubTest.stub":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":492,"org.easymock.tests.UsageExpectAndThrowTest.longType":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":226,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":2,"org.easymock.tests2.SerializationTest.testClass":161,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":46,"org.easymock.tests.LimitationsTest.mockNativeMethod":232,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":261,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":111,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":5,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":508,"org.easymock.tests2.NameTest.nameForMocksControl":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":297,"org.easymock.tests2.MockedExceptionTest.testMockedException":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":346,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":438,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":235,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":303,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":200,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":42,"org.easymock.tests.MockingTest.testNicePartialClassMocking":234,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":204,"org.easymock.tests2.CaptureTest.testCaptureLast":172,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":82,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":18,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":196,"org.easymock.tests.MockingTest.testTwoMocks":456,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":441,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":135,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":511,"org.easymock.samples.ExampleTest.removeNonExistingDocument":366,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests.UsageStrictMockTest.differentMethods":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":298,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":116,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":510,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":376,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":157,"org.easymock.tests2.MockBuilderTest.testCreateMockString":45,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":404,"org.easymock.tests.UsageExpectAndThrowTest.floatType":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":293,"org.easymock.tests.UsageVerifyTest.twoThrows":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":302,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":212,"org.easymock.samples.ExampleTest.voteAgainstRemoval":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":224,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":207,"org.easymock.tests.LimitationsTest.privateConstructor":451,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":95,"org.easymock.tests2.UsageConstraintsTest.testNotNull":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":241,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":339,"org.easymock.tests2.UsageTest.defaultResetToNice":179,"org.easymock.samples.ExampleTest.voteAgainstRemovals":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":110,"org.easymock.tests.UsageVarargTest.differentLength":69,"org.easymock.tests2.CallbackTest.callback":14,"org.easymock.tests2.UsageConstraintsTest.equals":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":327,"org.easymock.tests.UsageTest.openCallCountByLastCall":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":431,"org.easymock.tests.UsageCallCountTest.tooFewCalls":64,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":165,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":482,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":509,"org.easymock.tests.UsageThrowableTest.throwCheckedException":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":505,"org.easymock.tests.MockingTest.testStrictClassMocking":454,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":17,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":7,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":16,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":166,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":294,"org.easymock.tests.ObjectMethodsTest.testHashCode":371,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":500,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":159,"org.easymock.tests2.NameTest.nameForNiceMock":32,"org.easymock.tests2.DependencyTest.testInterfaceMocking":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.AnswerTest.stubAnswer":148,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":57,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":332,"org.easymock.tests.UsageVarargTest.varargLongAccepted":475,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":223,"org.easymock.tests.UsageExpectAndReturnTest.floatType":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":160,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":368,"org.easymock.tests.UsageThrowableTest.noUpperLimit":461,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":90,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":182,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":307,"org.easymock.tests2.SerializationTest.test":162,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":314,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":375,"org.easymock.tests2.UsageConstraintsTest.testSame":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":243,"org.easymock.samples.SupportTest.addDocument":369,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":306,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":122,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":117,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":458,"org.easymock.tests2.NameTest.nameForMock":30,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":254,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":102,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":328,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":246,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":446,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":370,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":272,"org.easymock.tests2.MockedExceptionTest.testRealException":341,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":108,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":229,"org.easymock.tests2.NameTest.nameForStrictMock":31,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":104,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":203,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":311,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":194,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":377,"org.easymock.tests.ErrorMessageTest.testGetters":106,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":39,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":8,"org.easymock.tests2.CaptureTest.testCaptureRightOne":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":506,"org.easymock.tests2.UsageConstraintsTest.testOr":185,"org.easymock.tests.UsageRangeTest.combination":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":34,"org.easymock.tests.UsageTest.wrongArguments":77,"org.easymock.tests2.MockBuilderTest.testWithConstructor":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":255,"org.easymock.tests.UsageVarargTest.varargShortAccepted":474,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":65,"org.easymock.tests2.UsageConstraintsTest.cmpTo":133,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.CaptureTest.testCaptureFromStub":316,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":383,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":40,"org.easymock.tests.UsageTest.unexpectedCallWithArray":76,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":412,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":256,"org.easymock.tests2.UsageConstraintsTest.constraints":28,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":58,"org.easymock.samples.ExampleTest.addAndChangeDocument":279,"org.easymock.tests.UsageStrictMockTest.testVerify":410,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":119,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":409,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":465,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":267,"org.easymock.tests.LimitationsTest.abstractClass":450,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":248,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":268,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":496,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":11}}]
