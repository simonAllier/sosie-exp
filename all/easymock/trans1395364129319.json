[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[4,5,6,7,8,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[28],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[29,30,31,2,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,51,96,97,98,99],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[100,53,101,4,102,103,54,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,55,56,120,121,122,123,124,57,58,59,60,61,62,125,126,127,128,129,130,131,132,133,134,135,63,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,64,177,178,179,180,181,182,183,184,185,186,187,65,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,66,204,205,206,207,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,208,209,7,210,211,212,213,214,215,216,87,217,88,89,90,91,92,93,218,219,220,221,222,0,1,223,224,225,226,227,228,229,230,231,94,232,233,234,52,235,236,95,237,238,239,240,241,33,34,37,38,41,42,43,242,243,244,245,246,247,248,249,250,251,44,252,253,45,46,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,51,96,97,98,270,271,272,273,274,275,276,277,278,279,99,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[334,335,336],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[337,338],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[339,340,341,342,343,100,53,101,4,102,103,54,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,55,56,120,121,122,123,124,57,58,59,60,61,62,125,133,134,135,63,344,136,137,345,346,347,334,138,139,140,141,142,348,349,350,143,144,351,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,352,353,335,176,64,177,178,179,180,181,182,183,184,185,186,187,65,354,203,66,204,205,206,207,355,356,357,358,359,360,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,208,209,7,210,211,212,213,214,215,87,217,88,89,90,91,92,93,218,219,220,221,222,361,336,362,363,364,224,225,226,227,228,229,231,10,11,94,232,233,234,52,235,236,95,237,238,239,240,241,365,248,366,16,367,24,255,256,257,258,259,368,369,260,261,262,265,266,267,268,269,51,96,97,98,370,371,372,373,374,375,376,377,378,379,380,381,382,270,271,272,273,274,383,275,276,277,384,278,279,99,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,385,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,386,315,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[387,315,316],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[388],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[334,335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[125,126,127,128,129,130,131,132,389,390,175,391,392,393,354,188,189,190,394,216,337,395,396,397,338,398,31,0,1,3,223,399,400,401,402,32,403,404,405,242,243,406,244,245,246,247,249,250,251,44,252,407,253,45,46,254,408,47,409,410,411,412,413,414,415,416,417,418,51,96,97,317],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[306,307],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[419,420],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[421],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[422],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[56,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[53,101,103,54,106,118,119,120,121,122,123,124,136,334,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,423,424,425,426,427,175,176,177,179,180,186,187,65,188,189,190,203,66,210,212,213,87,88,89,90,91,92,93,218,219,220,221,222,0,361,336,362,364,224,226,227,229,32,94,232,233,52,236,95,237,240,241,34,37,39,40,42,405,242,243,406,365,244,245,246,247,248,249,250,251,252,45,46,254,366,410,48,49,50,367,259,261,264,265,266,267,268,269,97,370,371,372,373,374,375,376,377,378,379,380,381,276,99,282,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,386,315,316,318,319,320,321,322,325,326,327,328,330,331,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[428,429,430,431,432,433,434,435],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[101,176,64,177,178,210,212,213,436,437,438,439,233,282,284,285],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":290,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":53,"org.easymock.tests2.UsageTest.argumentsOrdered":239,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":380,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":24,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":235,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testReturnException":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":58,"org.easymock.tests.MockingTest.testPartialClassMocking":188,"org.easymock.tests.MockClassControlTest.testToString":127,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":47,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":67,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":436,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":386,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":118,"org.easymock.tests2.UsageTest.wrongArguments":234,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":206,"org.easymock.samples.ExampleTest.answerVsDelegate":225,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":30,"org.easymock.tests2.UsageConstraintsTest.testNull":292,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":249,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":132,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":379,"org.easymock.tests2.CaptureTest.testPrimitive":321,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":120,"org.easymock.tests.UsageTest.moreThanOneArgument":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":86,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":183,"org.easymock.tests.UsageTest.argumentsOrdered":105,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":356,"org.easymock.tests.UsageVarargTest.varargIntAccepted":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":218,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":33,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":222,"org.easymock.tests.ReplayStateInvalidUsageTest.times":199,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":366,"org.easymock.tests2.DependencyTest.testClassMocking":419,"org.easymock.tests2.AnswerTest.answer":259,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":258,"org.easymock.tests2.CaptureTest.testAnd":318,"org.easymock.tests2.UsageTest.strictResetToDefault":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":374,"org.easymock.tests2.DelegateToTest.testDelegate":278,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":82,"org.easymock.tests.LimitationsTest.mockFinalMethod":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":142,"org.easymock.tests2.DependencyTest.testClassMockingSupport":420,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":343,"org.easymock.tests2.CaptureTest.testCapture1_2446744":322,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":256,"org.easymock.tests.UsageThrowableTest.throwError":87,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":193,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":340,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":185,"org.easymock.samples.PartialClassMockTest.testGetArea":32,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":219,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":414,"org.easymock.tests2.UsageTest.niceToStrict":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":68,"org.easymock.tests2.ThreadingTest.testChangeDefault":435,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":37,"org.easymock.tests2.MockBuilderTest.testCreateMock":41,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":18,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":76,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":375,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":350,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":204,"org.easymock.tests.UsageOverloadedMethodTest.overloading":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":418,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":63,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":301,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":186,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":157,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":300,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":327,"org.easymock.tests2.EasyMockSupportClassTest.testAll":410,"org.easymock.tests.MockClassControlTest.testEquals":131,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":257,"org.easymock.tests2.CaptureTest.testCaptureAll":319,"org.easymock.tests.MockNameTest.defaultName":355,"org.easymock.tests2.UsageConstraintsTest.testMatches":302,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":184,"org.easymock.samples.ExampleTest.voteForRemovals":229,"org.easymock.tests.UsageVarargTest.allKinds":117,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":176,"org.easymock.samples.BasicClassMockTest.testPrintContent":402,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":141,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":92,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":62,"org.easymock.tests2.UsageConstraintsTest.greaterThan":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":254,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":398,"org.easymock.samples.ExampleTest.voteForRemoval":226,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":408,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":266,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":341,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":44,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":94,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":372,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":57,"org.easymock.tests2.CaptureTest.testCaptureFirst":331,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":373,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":241,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":153,"org.easymock.tests2.UsageTest.moreThanOneArgument":233,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":268,"org.easymock.tests2.CaptureTest.testCapture2_2446744":330,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":42,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":116,"org.easymock.tests.GenericTest.testBridgedEquals":3,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":421,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":173,"org.easymock.tests.UsageExpectAndReturnTest.longType":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":138,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":370,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":85,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":309,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":181,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":346,"org.easymock.tests.UsageCallCountTest.tooManyCalls":174,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":91,"org.easymock.tests.MockingTest.testNiceClassMocking":394,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":242,"org.easymock.tests.MockingTest.testClassMocking":393,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":167,"org.easymock.tests2.UsageConstraintsTest.testContains":299,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":291,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":65,"org.easymock.tests.MockTypeTest.fromEasyMockClass":339,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":333,"org.easymock.tests.UsageExpectAndReturnTest.object":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":378,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":111,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":145,"org.easymock.tests.UsageTest.exactCallCountByLastCall":106,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":203,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":357,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":162,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":107,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":135,"org.easymock.tests.MockClassControlTest.testHashCode":130,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":21,"org.easymock.tests2.EasyMockSupportTest.testVerify":382,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":358,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":133,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":349,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":255,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":263,"org.easymock.tests.UsageVarargTest.varargCharAccepted":110,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":427,"org.easymock.tests2.UsageTest.openCallCountByLastCall":236,"org.easymock.tests.DefaultClassInstantiatorTest.object":216,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":348,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":415,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":89,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":20,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":129,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":73,"org.easymock.tests.CapturesMatcherTest.test":422,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":345,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":50,"org.easymock.tests2.UsageTest.resumeIfFailure":240,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":60,"org.easymock.tests2.StubTest.stubWithReturnValue":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":310,"org.easymock.tests2.SerializationTest.testAllMockedMethod":317,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":352,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":9,"org.easymock.samples.SupportTest.voteForRemovals":364,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":79,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":387,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":353,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":368,"org.easymock.tests.UsageExpectAndThrowTest.object":77,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":307,"org.easymock.tests2.DelegateToTest.testWrongClass":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":180,"org.easymock.samples.ConstructorCalledMockTest.testTax":399,"org.easymock.tests.UsageStrictMockTest.range":212,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":377,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":405,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":409,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":104,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":205,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":5,"org.easymock.tests2.CaptureTest.testCaptureNone":326,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":362,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":429,"org.easymock.tests.UsageUnorderedTest.message":178,"org.easymock.tests.UsageVerifyTest.twoReturns":177,"org.easymock.tests.UsageVarargTest.varargByteAccepted":115,"org.easymock.tests2.ThreadingTest.testThreadSafe":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":416,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":171,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":401,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":351,"org.easymock.tests2.CaptureTest.testCapture_2617107":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":56,"org.easymock.tests2.UsageConstraintsTest.any":297,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":198,"org.easymock.tests2.StubTest.stub":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":59,"org.easymock.tests.UsageExpectAndThrowTest.longType":70,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":397,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":197,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":283,"org.easymock.tests2.SerializationTest.testClass":315,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":367,"org.easymock.tests.LimitationsTest.mockNativeMethod":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":165,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":2,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":430,"org.easymock.tests2.NameTest.nameForMocksControl":274,"org.easymock.tests2.MockedExceptionTest.testMockedException":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":411,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":190,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":71,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":246,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":40,"org.easymock.tests.MockingTest.testNicePartialClassMocking":189,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":251,"org.easymock.tests2.CompareToTest.testNotComparable":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests2.CaptureTest.testCaptureLast":325,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":245,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":295,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":308,"org.easymock.tests.MockingTest.testTwoMocks":354,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":75,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":238,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":312,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":433,"org.easymock.samples.ExampleTest.removeNonExistingDocument":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":17,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":195,"org.easymock.tests.UsageStrictMockTest.differentMethods":213,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":22,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":432,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":395,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":267,"org.easymock.tests2.MockBuilderTest.testCreateMockString":43,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":412,"org.easymock.tests.UsageExpectAndThrowTest.floatType":69,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":303,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":260,"org.easymock.tests.UsageVerifyTest.twoThrows":64,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":49,"org.easymock.samples.ExampleTest.voteAgainstRemoval":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":361,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests.LimitationsTest.privateConstructor":390,"org.easymock.tests2.UsageConstraintsTest.testNotNull":311,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":93,"org.easymock.tests2.UsageTest.defaultResetToNice":237,"org.easymock.samples.ExampleTest.voteAgainstRemovals":224,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":161,"org.easymock.tests.UsageVarargTest.differentLength":112,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests2.CallbackTest.callback":270,"org.easymock.tests.UsageTest.openCallCountByLastCall":103,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":55,"org.easymock.tests.UsageCallCountTest.tooFewCalls":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":207,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":431,"org.easymock.tests.UsageThrowableTest.throwCheckedException":90,"org.easymock.tests.MockingTest.testStrictClassMocking":392,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":6,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":66,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":16,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":243,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":200,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":365,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":262,"org.easymock.tests.ObjectMethodsTest.testHashCode":144,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":269,"org.easymock.tests2.NameTest.nameForNiceMock":273,"org.easymock.tests2.DependencyTest.testInterfaceMocking":314,"org.easymock.samples.ExampleTest.addDocument":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":417,"org.easymock.tests2.DelegateToTest.testStubDelegate":276,"org.easymock.tests2.AnswerTest.stubAnswer":261,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":210,"org.easymock.tests.UsageVarargTest.varargLongAccepted":114,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":164,"org.easymock.tests.UsageExpectAndReturnTest.floatType":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":264,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":400,"org.easymock.tests.UsageThrowableTest.noUpperLimit":217,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":305,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":288,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":403,"org.easymock.tests2.SerializationTest.test":316,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":323,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":337,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":147,"org.easymock.tests2.UsageConstraintsTest.testSame":293,"org.easymock.samples.SupportTest.addDocument":363,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":413,"org.easymock.tests.GenericTest.testPackageScope":0,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":26,"org.easymock.tests2.NameTest.nameForMock":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":158,"org.easymock.tests2.UsageStrictMockTest.differentMethods":285,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":407,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":81,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":124,"org.easymock.tests2.MockedExceptionTest.testRealException":98,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":342,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":119,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":202,"org.easymock.tests2.NameTest.nameForStrictMock":272,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":36,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":332,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":250,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":404,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":437,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":396,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":306,"org.easymock.tests.ErrorMessageTest.testGetters":438,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":34,"org.easymock.tests2.UsageStrictMockTest.range":284,"org.easymock.tests2.UsageConstraintsTest.lessThan":313,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":371,"org.easymock.tests2.CaptureTest.testCaptureRightOne":328,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":428,"org.easymock.tests2.UsageConstraintsTest.testOr":294,"org.easymock.tests.UsageRangeTest.combination":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":247,"org.easymock.tests.UsageTest.wrongArguments":102,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":159,"org.easymock.tests.UsageVarargTest.varargShortAccepted":113,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":338,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":172,"org.easymock.tests2.UsageConstraintsTest.cmpTo":298,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests2.CaptureTest.testCaptureFromStub":329,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":192,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":35,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":170,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":160,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.UsageConstraintsTest.constraints":289,"org.easymock.samples.ExampleTest.addAndChangeDocument":231,"org.easymock.tests.UsageStrictMockTest.testVerify":215,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":10,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":139,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":220,"org.easymock.tests.LimitationsTest.abstractClass":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":152,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":221,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":439,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":376}}]
