[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[3,4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,0,21,22,23,1,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,4,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"position":"org.easymock.internal.Range:83","failures":[175,176,177,178,22,26,32,39,60,62,179,64,180,181,65,66,70,73,75,182,76,77,83,85,183,87,88,184,185,90,91,4,186,107,121,187,129,130,188,189,142,190,143,144,145,146,191,147,148,192,193,149,194,170,195,171],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[196,197,198,199,45,200,201,202,203,204,205,206,74,207],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[61,179,63,64,180,181,65,67,208,68,209,70],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[8,12,13,15,20,32,210,211,212,213,48,214,215,57,216,182,76,77,83,183,86,217,184,185,89,90,186,218,124,219,220,221,188,222,189,190,143,144,145,223,191,192,193,149,195,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[224],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"answer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[226,227],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[228,229,230],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[45,46,231],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[25,30,41,232],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[10,15,16,17,233,234,42,231,62,179,180,181,65,66,70,235,182,76,77,236,183,217,184,185,237,238,239,240,241,101,102,103,104,242,105,243,244,245,246,247,248,249,250,251,252,253,187,254,255,256,257,258,220,221,188,259,189,190,143,144,260,261,191,192,193,262,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.RecordState:126","failures":[264,265,266,267,268],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[269,270,271,272,189,223],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[273,274],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[226,60,275],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[25,30,41,232],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[200,204,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[276,277,278,279,196,197,280,281,45,74,207,282,283,284,78,285,286,79,287,288,289,290,291,292,293,294,295,80,296,297,298,299,300,81,301,302,95,99,303,304,305],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[269,270,271,272,189,223],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[175,176,177,178,7,8,9,10,11,12,13,306,14,15,16,17,233,18,19,20,0,21,22,23,1,24,25,2,26,27,28,29,30,31,32,33,34,35,36,37,234,38,39,40,41,53,59,61,62,179,63,64,180,181,65,66,67,68,209,69,70,307,71,72,75,308,309,113,114,115,116,117,187,127,310,128,129,255,311,130,131,132,188,189,142,194],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":145,"org.easymock.tests2.UsageTest.argumentsOrdered":185,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":275,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":217,"org.easymock.tests2.StubTest.stubWithReturnValue":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":196,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":239,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":38,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":159,"org.easymock.tests2.SerializationTest.testAllMockedMethod":231,"org.easymock.tests2.DelegateToTest.testReturnException":264,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":199,"org.easymock.tests.MockingTest.testPartialClassMocking":172,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":270,"org.easymock.samples.SupportTest.voteForRemovals":101,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":290,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":79,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":3,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":72,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":36,"org.easymock.tests2.DelegateToTest.testWrongClass":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":128,"org.easymock.tests2.UsageTest.wrongArguments":183,"org.easymock.samples.ConstructorCalledMockTest.testTax":304,"org.easymock.tests.UsageStrictMockTest.range":143,"org.easymock.samples.ExampleTest.answerVsDelegate":267,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":93,"org.easymock.tests2.UsageConstraintsTest.testNull":22,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":50,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":15,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":43,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":282,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":192,"org.easymock.tests.UsageTest.moreThanOneArgument":146,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":49,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":271,"org.easymock.tests2.CaptureTest.testCaptureNone":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":136,"org.easymock.tests.UsageUnorderedTest.message":188,"org.easymock.tests.UsageVerifyTest.twoReturns":171,"org.easymock.tests.UsageVarargTest.varargByteAccepted":252,"org.easymock.tests2.ThreadingTest.testThreadSafe":55,"org.easymock.tests.UsageTest.argumentsOrdered":193,"org.easymock.tests.UsageVarargTest.varargIntAccepted":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":296,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":258,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":113,"org.easymock.tests2.CaptureTest.testCapture_2617107":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":139,"org.easymock.tests2.UsageConstraintsTest.any":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":229,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":92,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":82,"org.easymock.tests.LimitationsTest.mockNativeMethod":133,"org.easymock.tests2.AnswerTest.answer":91,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":169,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":279,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":236,"org.easymock.tests2.NameTest.nameForMocksControl":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":11,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":125,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":148,"org.easymock.tests2.DelegateToTest.testDelegate":266,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":174,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":44,"org.easymock.tests.MockingTest.testNicePartialClassMocking":173,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":52,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":200,"org.easymock.tests2.CaptureTest.testCaptureLast":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":194,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":263,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":24,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":99,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":262,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":303,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":150,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":184,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":40,"org.easymock.tests.UsageThrowableTest.throwError":106,"org.easymock.tests.UsageStrictMockTest.differentMethods":144,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":57,"org.easymock.tests2.MockBuilderTest.testCreateMockString":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":287,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":284,"org.easymock.tests.UsageVerifyTest.twoThrows":195,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":80,"org.easymock.samples.PartialClassMockTest.testGetArea":100,"org.easymock.tests.ResultTest.createDelegateResultToString":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":114,"org.easymock.samples.ExampleTest.voteAgainstRemoval":104,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":134,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":138,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":291,"org.easymock.tests2.UsageTest.niceToStrict":86,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":277,"org.easymock.tests2.UsageConstraintsTest.testNotNull":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":112,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":42,"org.easymock.tests2.MockBuilderTest.testCreateMock":211,"org.easymock.samples.ExampleTest.voteAgainstRemovals":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":298,"org.easymock.tests.UsageVarargTest.differentLength":218,"org.easymock.tests2.CallbackTest.callback":186,"org.easymock.tests.UsageTest.openCallCountByLastCall":147,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":269,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":12,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":255,"org.easymock.tests.UsageCallCountTest.tooFewCalls":256,"org.easymock.tests.UsageOverloadedMethodTest.overloading":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":295,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":96,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":161,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":273,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":29,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":67,"org.easymock.tests.UsageThrowableTest.throwCheckedException":109,"org.easymock.tests2.EasyMockSupportClassTest.testAll":78,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":272,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":310,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":98,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":95,"org.easymock.tests2.UsageConstraintsTest.testMatches":31,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":97,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.tests2.CompareToTest.testGreateOrEqual":232,"org.easymock.samples.ExampleTest.voteForRemovals":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":204,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":59,"org.easymock.tests2.NameTest.nameForNiceMock":177,"org.easymock.tests.UsageVarargTest.allKinds":187,"org.easymock.tests2.DependencyTest.testInterfaceMocking":71,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":203,"org.easymock.samples.BasicClassMockTest.testPrintContent":238,"org.easymock.samples.ExampleTest.addDocument":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":301,"org.easymock.tests2.DelegateToTest.testStubDelegate":60,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":111,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":216,"org.easymock.tests2.AnswerTest.stubAnswer":4,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":227,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":206,"org.easymock.tests2.UsageConstraintsTest.greaterThan":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":285,"org.easymock.tests.UsageVarargTest.varargLongAccepted":251,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":215,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.samples.ExampleTest.voteForRemoval":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":137,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":56,"org.easymock.tests.UsageExpectAndReturnTest.floatType":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":74,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":305,"org.easymock.tests.UsageThrowableTest.noUpperLimit":244,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":34,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":261,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":19,"org.easymock.tests2.SerializationTest.test":46,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":180,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":197,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":9,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":107,"org.easymock.tests2.UsageConstraintsTest.testSame":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":283,"org.easymock.samples.SupportTest.addDocument":241,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":226,"org.easymock.tests2.CaptureTest.testCaptureFirst":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":10,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":288,"org.easymock.tests.GenericTest.testPackageScope":122,"org.easymock.tests2.UsageTest.moreThanOneArgument":85,"org.easymock.tests2.CaptureTest.testCapture2_2446744":69,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":58,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":212,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":220,"org.easymock.tests2.NameTest.nameForMock":175,"org.easymock.tests.UsageExpectAndReturnTest.longType":153,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":7,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":162,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":234,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":281,"org.easymock.tests2.UsageStrictMockTest.differentMethods":77,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":154,"org.easymock.tests.UsageCallCountTest.tooManyCalls":221,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":230,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":198,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":129,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":94,"org.easymock.tests2.UsageConstraintsTest.testContains":28,"org.easymock.tests2.NameTest.nameForStrictMock":176,"org.easymock.tests2.UsageConstraintsTest.testFind":21,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":121,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":308,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":51,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":309,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":222,"org.easymock.tests.UsageExpectAndReturnTest.object":160,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":210,"org.easymock.tests2.UsageStrictMockTest.range":76,"org.easymock.tests2.UsageConstraintsTest.lessThan":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":14,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":202,"org.easymock.tests.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":292,"org.easymock.tests2.CaptureTest.testCaptureRightOne":68,"org.easymock.tests2.UsageConstraintsTest.testOr":1,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":207,"org.easymock.tests.UsageRangeTest.combination":124,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":48,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":166,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":268,"org.easymock.tests.UsageTest.wrongArguments":191,"org.easymock.tests2.MockBuilderTest.testWithConstructor":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":289,"org.easymock.tests2.EasyMockSupportTest.testVerify":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":293,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":228,"org.easymock.tests.UsageVarargTest.varargShortAccepted":250,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":219,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":307,"org.easymock.tests2.UsageConstraintsTest.cmpTo":27,"org.easymock.tests.UsageVarargTest.varargCharAccepted":248,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":141,"org.easymock.tests2.UsageTest.openCallCountByLastCall":87,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":17,"org.easymock.tests2.CaptureTest.testCaptureFromStub":209,"org.easymock.tests.UsageTest.unexpectedCallWithArray":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":294,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":108,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":257,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":164,"org.easymock.tests2.CaptureTest.testCapture":208,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":214,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.samples.ExampleTest.addAndChangeDocument":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":167,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":240,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":81,"org.easymock.tests2.UsageTest.resumeIfFailure":89,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":115,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":116,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":13}}]
