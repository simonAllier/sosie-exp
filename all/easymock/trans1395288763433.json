[{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[24],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[25],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.LastControl:94","failures":[76,77,78,27,79,80,81,82,83,84,85,86,87,88,89,90,91,23,92,93],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[76,78,79,81,82,86,87,89,91],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[95,0,96,97,1,98,99,2,3,100,101,102,103,104,105,106,32,107,108,4,109,110,111,112,113,5,114,6,7,115,8,116,117,118,119,120,121,9,122,123,124,125,126,127,128,11,81,129,130,131,132,133,18,134,135,136,19,20,137,138,139,140,141,142,143,144,145,58,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,21,161,162,163,164,165,166,167,61,168],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[76,78,79,81,87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[25],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,95,187,188,189,190,191,192,193,194,195,0,196,197,96,198,97,28,29,30,31,1,199,98,99,2,3,100,200,101,102,103,104,76,77,78,27,201,202,203,204,205,206,79,80,207,208,209,210,211,212,213,105,106,214,215,216,217,218,219,220,221,222,32,223,107,108,4,109,224,33,225,110,111,112,113,226,5,227,114,228,6,7,229,115,8,230,231,232,116,233,117,118,234,235,236,237,119,238,120,239,240,121,9,241,122,94,242,243,244,123,124,245,10,246,125,126,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,127,128,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,11,300,34,301,302,303,304,305,306,307,308,309,310,311,312,313,81,82,314,83,84,85,86,87,88,89,90,315,316,317,318,319,129,320,321,91,23,322,323,324,92,93,325,326,327,328,329,330,331,332,333,130,334,35,131,132,133,335,12,336,13,14,15,337,338,16,17,18,339,134,135,136,19,20,137,340,341,342,36,37,343,344,345,346,347,348,24,349,350,351,352,353,354,355,356,138,357,139,140,358,359,141,142,143,360,361,362,363,364,144,145,365,366,367,368,369,370,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,146,147,148,371,59,149,150,151,152,372,373,153,154,155,156,157,374,375,376,377,378,379,380,158,159,160,381,382,383,21,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,60,413,161,414,415,162,163,416,417,418,419,420,421,422,423,424,164,425,426,427,428,429,430,165,431,432,433,434,435,436,437,438,439,166,167,61,168,62,440,63,64,65,66,67,68,441,442,443,444,445,446,447,448,449,450,451,25,452,453,454,455,456,457,458,69,70,71,72,73,74,459,460,461,462,463,464,26,465,466,467,468,75,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[489,88,318,325],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[417,418,419,420,422,424],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[169,170,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,95,187,188,189,190,191,193,0,196,197,96,28,29,30,31,1,199,98,99,2,3,100,76,77,78,27,201,202,203,204,205,206,79,80,207,208,105,219,220,221,222,32,223,107,108,4,109,224,33,225,110,111,112,113,226,5,227,114,228,6,7,229,115,8,230,231,232,116,117,236,237,119,120,121,9,122,94,244,123,124,245,246,125,126,255,258,259,260,262,263,264,127,278,281,291,297,11,300,34,302,303,304,306,307,308,309,310,311,312,313,81,82,83,84,85,86,87,88,90,315,316,317,318,319,129,320,321,91,23,322,323,324,92,93,325,328,329,330,332,333,334,35,133,13,14,337,18,339,134,135,136,19,20,137,341,342,36,37,343,344,345,139,140,358,359,141,142,143,366,367,368,369,370,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,146,147,148,371,59,149,150,151,375,376,377,378,21,385,386,411,412,60,425,426,427,429,430,165,431,432,433,434,435,166,167,61,168,62,440,63,64,65,66,67,68,441,442,443,444,445,446,447,448,449,450,451,452,453,490,490,69,70,71,72,73,74,461,468,75,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[175,176,177,178,179,180,182,186,187,188,189,190,193,0,197,28,29,30,31,199,98,3,100,101,102,103,104,76,77,78,27,202,203,204,205,206,79,208,219,220,221,222,223,107,4,109,225,112,116,236,237,94,123,124,125,126,255,258,259,260,262,263,264,11,300,34,302,303,306,307,308,311,312,313,81,82,83,84,85,86,87,88,90,315,316,317,318,319,129,320,321,91,23,322,324,92,93,325,328,330,332,132,13,14,337,339,135,20,137,340,341,342,343,344,345,138,357,139,140,358,359,366,367,368,369,370,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,146,375,376,377,378,380,21,384,385,386,412,60,425,426,427,429,430,431,432,433,434,435,167,61,168,440,63,441,442,443,444,445,446,447,448,449,450,451,452,453,69,70,71,72,73,74,461,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[417,418,419,420,422,424],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[191,97,116,237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[196,97,117,9],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[76,77,78,27,201,202,203,204,206,79,80,207,208,490],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","type":"type","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":82,"org.easymock.tests2.UsageTest.argumentsOrdered":111,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":58,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":397,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":109,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":172,"org.easymock.tests2.DelegateToTest.testReturnException":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":70,"org.easymock.tests.MockingTest.testPartialClassMocking":13,"org.easymock.tests.MockClassControlTest.testToString":158,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":200,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":38,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":281,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":329,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests2.UsageTest.wrongArguments":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":341,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":377,"org.easymock.samples.ExampleTest.answerVsDelegate":176,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":155,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":16,"org.easymock.tests2.UsageConstraintsTest.testNull":84,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":188,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":8,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":383,"org.easymock.tests2.CaptureTest.testPrimitive":27,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":343,"org.easymock.tests.UsageTest.moreThanOneArgument":146,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":57,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":443,"org.easymock.tests.UsageTest.argumentsOrdered":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":360,"org.easymock.tests.UsageVarargTest.varargIntAccepted":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":402,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":446,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":273,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests.ReplayStateInvalidUsageTest.times":353,"org.easymock.tests2.DependencyTest.testClassMocking":326,"org.easymock.tests2.AnswerTest.answer":255,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":404,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":222,"org.easymock.tests2.CaptureTest.testAnd":76,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":373,"org.easymock.tests2.UsageTest.strictResetToDefault":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":228,"org.easymock.tests2.DelegateToTest.testDelegate":306,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":53,"org.easymock.tests.LimitationsTest.mockFinalMethod":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":370,"org.easymock.tests2.DependencyTest.testClassMockingSupport":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":144,"org.easymock.tests2.CaptureTest.testCapture1_2446744":201,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":220,"org.easymock.tests.UsageThrowableTest.throwError":62,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":348,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":154,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":439,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":299,"org.easymock.samples.PartialClassMockTest.testGetArea":171,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":24,"org.easymock.tests.MockingTest.testInterfaceMocking":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":447,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":464,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":39,"org.easymock.tests2.UsageTest.niceToStrict":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":236,"org.easymock.tests2.MockBuilderTest.testCreateMock":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":294,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":47,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":6,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":438,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":375,"org.easymock.tests.UsageOverloadedMethodTest.overloading":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":296,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":35,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":480,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":411,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":317,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":206,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":428,"org.easymock.tests2.EasyMockSupportClassTest.testAll":278,"org.easymock.tests.MockClassControlTest.testEquals":382,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":453,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":55,"org.easymock.tests2.CaptureTest.testCaptureAll":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":368,"org.easymock.tests.MockNameTest.defaultName":164,"org.easymock.tests2.UsageConstraintsTest.testMatches":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":444,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":346,"org.easymock.samples.ExampleTest.voteForRemovals":180,"org.easymock.tests.UsageVarargTest.allKinds":435,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":167,"org.easymock.samples.BasicClassMockTest.testPrintContent":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":369,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":67,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":270,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":305,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":423,"org.easymock.tests2.UsageConstraintsTest.greaterThan":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":279,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":384,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":96,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":424,"org.easymock.samples.ExampleTest.voteForRemoval":177,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":198,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":308,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":156,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":191,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":451,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":32,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":394,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":227,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":69,"org.easymock.tests2.CaptureTest.testCaptureFirst":208,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":114,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":476,"org.easymock.tests2.UsageTest.moreThanOneArgument":107,"org.easymock.tests2.CaptureTest.testCapture2_2446744":207,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":405,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":9,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":434,"org.easymock.tests.GenericTest.testBridgedEquals":455,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":142,"org.easymock.tests.UsageExpectAndReturnTest.longType":472,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":366,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":56,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":374,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":54,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":466,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":441,"org.easymock.tests.UsageCallCountTest.tooManyCalls":143,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":295,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":477,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":66,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":123,"org.easymock.tests.MockingTest.testNiceClassMocking":17,"org.easymock.tests.MockingTest.testClassMocking":12,"org.easymock.tests2.UsageConstraintsTest.testContains":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":357,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":30,"org.easymock.tests2.UsageConstraintsTest.testFind":83,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":60,"org.easymock.tests.MockTypeTest.fromEasyMockClass":153,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":18,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":332,"org.easymock.tests.UsageExpectAndReturnTest.object":479,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":115,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":430,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":415,"org.easymock.tests.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":242,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":485,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":425,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":266,"org.easymock.tests.MockClassControlTest.testHashCode":381,"org.easymock.tests2.EasyMockSupportTest.testVerify":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":288,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":437,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":219,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":261,"org.easymock.tests.UsageVarargTest.varargCharAccepted":429,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":416,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":410,"org.easymock.tests2.UsageTest.openCallCountByLastCall":224,"org.easymock.tests.DefaultClassInstantiatorTest.object":417,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":231,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":436,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":212,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":265,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":160,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":44,"org.easymock.tests.CapturesMatcherTest.test":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":486,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":465,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":297,"org.easymock.tests2.UsageTest.resumeIfFailure":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":72,"org.easymock.tests2.StubTest.stubWithReturnValue":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":238,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":478,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":324,"org.easymock.tests2.SerializationTest.testAllMockedMethod":264,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":403,"org.easymock.samples.SupportTest.voteForRemovals":184,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":268,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":50,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":409,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":256,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":458,"org.easymock.tests.UsageExpectAndThrowTest.object":48,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":23,"org.easymock.tests2.DelegateToTest.testWrongClass":304,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":344,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":345,"org.easymock.samples.ConstructorCalledMockTest.testTax":169,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":253,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":244,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":119,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":275,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":376,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":26,"org.easymock.tests2.CaptureTest.testCaptureNone":205,"org.easymock.tests.UsageUnorderedTest.message":166,"org.easymock.tests.UsageVerifyTest.twoReturns":168,"org.easymock.tests.UsageVarargTest.varargByteAccepted":433,"org.easymock.tests2.ThreadingTest.testThreadSafe":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":292,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":359,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":173,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":162,"org.easymock.tests2.CaptureTest.testCapture_2617107":78,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":407,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":37,"org.easymock.tests2.UsageConstraintsTest.any":90,"org.easymock.tests2.StubTest.stub":300,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":352,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndThrowTest.longType":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":71,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":421,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":351,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":99,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests2.SerializationTest.testClass":262,"org.easymock.tests.LimitationsTest.mockNativeMethod":461,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":488,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":454,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":211,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":100,"org.easymock.tests2.NameTest.nameForMocksControl":104,"org.easymock.tests2.MockedExceptionTest.testMockedException":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":280,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":42,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":331,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":120,"org.easymock.tests.MockingTest.testNicePartialClassMocking":14,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":190,"org.easymock.tests2.CaptureTest.testCaptureLast":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":145,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":126,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":322,"org.easymock.tests.MockingTest.testTwoMocks":336,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":46,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":110,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":93,"org.easymock.samples.ExampleTest.removeNonExistingDocument":181,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":214,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":267,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":419,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":309,"org.easymock.tests2.MockBuilderTest.testCreateMockString":122,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":379,"org.easymock.tests.UsageExpectAndThrowTest.floatType":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":282,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":277,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":258,"org.easymock.tests.UsageVerifyTest.twoThrows":61,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":243,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":291,"org.easymock.samples.ExampleTest.voteAgainstRemoval":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":398,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":197,"org.easymock.tests.LimitationsTest.privateConstructor":460,"org.easymock.tests2.UsageConstraintsTest.testNotNull":92,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":68,"org.easymock.tests2.UsageTest.defaultResetToNice":225,"org.easymock.samples.ExampleTest.voteAgainstRemovals":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":399,"org.easymock.tests.UsageVarargTest.differentLength":165,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":210,"org.easymock.tests2.CallbackTest.callback":11,"org.easymock.tests2.UsageConstraintsTest.equals":314,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":194,"org.easymock.tests.UsageTest.openCallCountByLastCall":371,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":36,"org.easymock.tests.UsageCallCountTest.tooFewCalls":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":245,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":378,"org.easymock.tests.UsageThrowableTest.throwCheckedException":65,"org.easymock.tests.MockingTest.testStrictClassMocking":335,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":75,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":106,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":354,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":246,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":260,"org.easymock.tests2.CompareToTest.testGreateOrEqual":489,"org.easymock.tests.ObjectMethodsTest.testHashCode":414,"org.easymock.tests2.NameTest.nameForNiceMock":103,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":311,"org.easymock.tests2.DependencyTest.testInterfaceMocking":328,"org.easymock.samples.ExampleTest.addDocument":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":298,"org.easymock.tests2.DelegateToTest.testStubDelegate":303,"org.easymock.tests2.AnswerTest.stubAnswer":259,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":135,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":239,"org.easymock.tests.UsageVarargTest.varargLongAccepted":432,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":487,"org.easymock.tests.UsageExpectAndReturnTest.floatType":471,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":94,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":170,"org.easymock.tests.UsageThrowableTest.noUpperLimit":440,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":272,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":321,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":313,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":248,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":202,"org.easymock.tests2.SerializationTest.test":263,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":470,"org.easymock.tests2.UsageConstraintsTest.testSame":85,"org.easymock.samples.SupportTest.addDocument":183,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":10,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":283,"org.easymock.tests.GenericTest.testPackageScope":452,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":271,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":338,"org.easymock.tests2.NameTest.nameForMock":101,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":481,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":241,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":473,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":52,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":413,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":386,"org.easymock.tests2.MockedExceptionTest.testRealException":31,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":400,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":342,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":356,"org.easymock.tests2.NameTest.nameForStrictMock":102,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":235,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":252,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":420,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests.ErrorMessageTest.testGetters":491,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":117,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":395,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":5,"org.easymock.tests2.CaptureTest.testCaptureRightOne":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":287,"org.easymock.tests2.UsageConstraintsTest.testOr":86,"org.easymock.tests.UsageRangeTest.combination":21,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":95,"org.easymock.tests.UsageTest.wrongArguments":148,"org.easymock.tests2.MockBuilderTest.testWithConstructor":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":284,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":388,"org.easymock.tests.UsageVarargTest.varargShortAccepted":431,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":422,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":141,"org.easymock.tests2.UsageConstraintsTest.cmpTo":315,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":390,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":33,"org.easymock.tests2.CaptureTest.testCaptureFromStub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":347,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":118,"org.easymock.tests.UsageTest.unexpectedCallWithArray":147,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":483,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":136,"org.easymock.tests2.UsageConstraintsTest.constraints":81,"org.easymock.samples.ExampleTest.addAndChangeDocument":182,"org.easymock.tests2.ConstraintsToStringTest.notToString":22,"org.easymock.tests.UsageStrictMockTest.testVerify":340,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":185,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":367,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":448,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":475,"org.easymock.tests.LimitationsTest.abstractClass":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":449,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":7}}]
