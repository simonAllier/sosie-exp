[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[13,32,38,44,48,50,89,92,101,107,113,117,119,304,305,140,182,187,201,216,219,228,243,244,245,246,250,258,291,297,298,303],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[306,307,308,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[81,84,90,91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[224,226,243,244],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[331,332,333,334,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[12,13,14,15,18,19,20,336,22,23,337,24,25,57,64,65,66,69,70,71,72,76,81,84,85,86,90,91,92,98,99,100,146,148,338,149,151,152,153,154,155,156,339,340,341,185,187,188,189,190,194,195,196,197,342,343,344,345,346,347,348,349,350,351,352,353,203,218,250,251,252,262,264,266,267,269,270,274,275,276,277,278,279,280,282,283,284,285,286,354,355,356,357],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[358,359,360,361,362,363,364,259,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[18,19,52,53,54,55,56,58,59,60,61,62,66,68,71,90,92,95,149,150,153,154,155,156,176,178,179,181,182,184,190,194,195,392,224,264,270,271,272,280,281,283,284,285,286,291,292,295,296,297,298,303],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,393,21,394,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,395,55,56,57,58,59,60,61,62,64,396,65,66,67,68,69,70,71,72,73,74,397,398,399,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,400,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,401,402,403,404,405,406,407,408,304,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,305,424,425,426,140,427,428,429,430,431,141,432,142,143,144,145,433,146,147,434,148,338,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,435,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,436,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,437,244,245,246,247,248,249,250,438,439,440,441,442,251,252,443,444,445,446,447,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,448,274,275,276,277,449,450,451,452,453,454,455,278,279,456,457,458,459,460,280,281,282,283,284,285,286,287,288,461,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[13,14,15,18,19,462,463,464,151,465,466,467,468,187,188,194,195],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[469,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[82,414,254,256,257,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[212],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[14,151,154,155,284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[470],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[14,462,463,151,465,467],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[14,462,463,151,465,467],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[203,204,205,206,207,208,209,210,211,212,221,222,226,227,290,291,292,293,300,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,358,1,2,3,471,472,259,469,6],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:47","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,13,16,17,20,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,73,74,473,474,475,76,80,82,83,87,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,332,134,135,136,137,138,139,476,143,144,145,152,155,158,159,169,170,171,172,173,477,176,177,178,179,181,478,479,184,185,186,187,189,191,192,193,196,197,342,392,480,345,346,198,199,481,200,482,483,484,201,202,203,204,205,206,207,208,209,210,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,254,255,256,258,259,260,469,261,262,263,264,265,266,267,268,269,270,271,272,370,373,383,389,278,282,285,288,485,354,355,486,289,356,357,290,291,293,294,297,298,299,300,301,302,303],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"failures":[487],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[13,64,65,66,98,99,100,152,155,156,187,274,275,276,277,282,285,286],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[203,204,208,209,211,221,290,292,300],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":204,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.UsageTest.argumentsOrdered":195,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":422,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":175,"org.easymock.tests2.DelegateToTest.testReturnException":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":135,"org.easymock.tests.MockingTest.testPartialClassMocking":473,"org.easymock.tests.MockClassControlTest.testToString":339,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":448,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":32,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":373,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":199,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":1,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":210,"org.easymock.tests2.UsageTest.wrongArguments":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":93,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":144,"org.easymock.samples.ExampleTest.answerVsDelegate":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":337,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":399,"org.easymock.tests2.UsageConstraintsTest.testNull":206,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":482,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":270,"org.easymock.tests2.CaptureTest.testPrimitive":293,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":97,"org.easymock.tests.UsageTest.moreThanOneArgument":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":51,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":9,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":164,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageVarargTest.varargIntAccepted":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":5,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":342,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":446,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":173,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":314,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":278,"org.easymock.tests.ReplayStateInvalidUsageTest.times":304,"org.easymock.tests2.AnswerTest.answer":229,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":238,"org.easymock.tests2.CaptureTest.testAnd":290,"org.easymock.tests2.UsageTest.strictResetToDefault":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":8,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":265,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":168,"org.easymock.tests2.DelegateToTest.testDelegate":258,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":133,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":90,"org.easymock.tests2.CaptureTest.testCapture1_2446744":294,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":236,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":403,"org.easymock.tests.UsageThrowableTest.throwError":121,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":23,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":317,"org.easymock.samples.PartialClassMockTest.testGetArea":477,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":404,"org.easymock.tests.MockingTest.testInterfaceMocking":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":161,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":33,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":364,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":392,"org.easymock.tests2.MockBuilderTest.testCreateMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":386,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":457,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":465,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":41,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":31,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":142,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":361,"org.easymock.tests.UsageOverloadedMethodTest.overloading":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":382,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":83,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":112,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":87,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":215,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":299,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":395,"org.easymock.tests2.EasyMockSupportClassTest.testAll":370,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":333,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":466,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":237,"org.easymock.tests2.CaptureTest.testCaptureAll":291,"org.easymock.tests.MockNameTest.defaultName":72,"org.easymock.tests2.UsageConstraintsTest.testMatches":217,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":10,"org.easymock.samples.ExampleTest.voteForRemovals":181,"org.easymock.tests.UsageVarargTest.allKinds":62,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":132,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":127,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":139,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":472,"org.easymock.tests2.UsageConstraintsTest.greaterThan":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":371,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":77,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":352,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":318,"org.easymock.samples.ExampleTest.voteForRemoval":178,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":246,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":24,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":484,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":310,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":263,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":134,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":253,"org.easymock.tests2.CaptureTest.testCaptureFirst":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":264,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":108,"org.easymock.tests2.UsageTest.moreThanOneArgument":187,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":248,"org.easymock.tests2.CaptureTest.testCapture2_2446744":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":348,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":61,"org.easymock.tests.GenericTest.testBridgedEquals":335,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":362,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":70,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":359,"org.easymock.tests.UsageExpectAndReturnTest.longType":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":129,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":50,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":163,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":224,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":48,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":7,"org.easymock.tests.UsageCallCountTest.tooManyCalls":71,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":126,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":354,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":396,"org.easymock.tests2.UsageConstraintsTest.testContains":214,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":241,"org.easymock.tests2.UsageConstraintsTest.testFind":205,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":89,"org.easymock.tests.MockTypeTest.fromEasyMockClass":22,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":149,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":244,"org.easymock.tests.UsageExpectAndReturnTest.object":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":2,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":56,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":434,"org.easymock.tests.UsageTest.exactCallCountByLastCall":20,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":363,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":165,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":464,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":117,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":52,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":82,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":439,"org.easymock.tests2.EasyMockSupportTest.testVerify":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":380,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":166,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":30,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":235,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":461,"org.easymock.tests.UsageVarargTest.varargCharAccepted":55,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":432,"org.easymock.tests2.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":29,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":146,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":381,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":438,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":316,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":38,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":118,"org.easymock.tests.ReplayStateInvalidCallsTest.times":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":26,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":389,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":340,"org.easymock.tests2.UsageTest.resumeIfFailure":196,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":137,"org.easymock.tests2.StubTest.stubWithReturnValue":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":110,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":225,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":140,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":307,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":467,"org.easymock.samples.SupportTest.voteForRemovals":184,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":44,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":141,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":230,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":394,"org.easymock.tests.UsageExpectAndThrowTest.object":42,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":222,"org.easymock.tests2.DelegateToTest.testWrongClass":256,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":158,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":320,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":159,"org.easymock.samples.ConstructorCalledMockTest.testTax":478,"org.easymock.tests.UsageStrictMockTest.range":154,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":449,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":485,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":345,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":410,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":143,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":462,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":312,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":162,"org.easymock.tests2.CaptureTest.testCaptureNone":298,"org.easymock.tests.UsageUnorderedTest.message":92,"org.easymock.tests.UsageVerifyTest.twoReturns":100,"org.easymock.tests.UsageVarargTest.varargByteAccepted":60,"org.easymock.tests2.ThreadingTest.testThreadSafe":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":384,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":68,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":148,"org.easymock.tests2.CaptureTest.testCapture_2617107":292,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":468,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":96,"org.easymock.tests2.UsageConstraintsTest.any":212,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":408,"org.easymock.tests2.StubTest.stub":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":136,"org.easymock.tests.UsageExpectAndThrowTest.longType":35,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":407,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":283,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":251,"org.easymock.tests2.SerializationTest.testClass":259,"org.easymock.tests.LimitationsTest.mockNativeMethod":476,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":120,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":334,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":453,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":328,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests2.NameTest.nameForMocksControl":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":455,"org.easymock.tests2.MockedExceptionTest.testMockedException":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":372,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":475,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":437,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":36,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":481,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":346,"org.easymock.tests.MockingTest.testNicePartialClassMocking":474,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":483,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":451,"org.easymock.tests2.CaptureTest.testCaptureLast":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":91,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":209,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":327,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":357,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":223,"org.easymock.tests.MockingTest.testTwoMocks":75,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":40,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":194,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":227,"org.easymock.samples.ExampleTest.removeNonExistingDocument":435,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":456,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":405,"org.easymock.tests.UsageStrictMockTest.differentMethods":155,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":440,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":247,"org.easymock.tests2.MockBuilderTest.testCreateMockString":349,"org.easymock.tests.UsageExpectAndThrowTest.floatType":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":374,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":369,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":232,"org.easymock.tests.UsageVerifyTest.twoThrows":99,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":383,"org.easymock.samples.ExampleTest.voteAgainstRemoval":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":160,"org.easymock.tests2.UsageConstraintsTest.testNotNull":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":128,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":239,"org.easymock.tests2.UsageTest.defaultResetToNice":193,"org.easymock.samples.ExampleTest.voteAgainstRemovals":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":305,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":452,"org.easymock.tests.UsageVarargTest.differentLength":57,"org.easymock.tests2.CallbackTest.callback":250,"org.easymock.tests2.UsageConstraintsTest.equals":436,"org.easymock.tests.UsageTest.openCallCountByLastCall":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":95,"org.easymock.tests.UsageCallCountTest.tooFewCalls":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":486,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":145,"org.easymock.tests.UsageThrowableTest.throwCheckedException":125,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":463,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":74,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":356,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":355,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":409,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":289,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":234,"org.easymock.tests.ObjectMethodsTest.testHashCode":147,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":4,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":249,"org.easymock.tests2.NameTest.nameForNiceMock":276,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":326,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":321,"org.easymock.tests2.DependencyTest.testInterfaceMocking":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":3,"org.easymock.samples.ExampleTest.addDocument":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.DelegateToTest.testStubDelegate":255,"org.easymock.tests2.AnswerTest.stubAnswer":233,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":152,"org.easymock.tests.UsageVarargTest.varargLongAccepted":59,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":119,"org.easymock.tests.UsageExpectAndReturnTest.floatType":103,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":469,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":445,"org.easymock.tests.UsageThrowableTest.noUpperLimit":122,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":84,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":220,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":202,"org.easymock.tests2.SerializationTest.test":260,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":295,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":102,"org.easymock.tests2.UsageConstraintsTest.testSame":207,"org.easymock.samples.SupportTest.addDocument":183,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":311,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":375,"org.easymock.tests.GenericTest.testPackageScope":332,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":444,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":398,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":309,"org.easymock.tests2.NameTest.nameForMock":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":113,"org.easymock.tests2.UsageStrictMockTest.differentMethods":285,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":105,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":46,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":433,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":79,"org.easymock.tests2.MockedExceptionTest.testRealException":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":25,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":424,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":282,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":411,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":94,"org.easymock.tests2.NameTest.nameForStrictMock":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":366,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":343,"org.easymock.tests2.UsageStrictMockTest.range":284,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":315,"org.easymock.tests2.UsageConstraintsTest.lessThan":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":442,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":262,"org.easymock.tests2.CaptureTest.testCaptureRightOne":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":379,"org.easymock.tests2.UsageConstraintsTest.testOr":208,"org.easymock.tests.UsageRangeTest.combination":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":350,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":376,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":487,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":114,"org.easymock.tests.UsageVarargTest.varargShortAccepted":58,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":69,"org.easymock.tests2.UsageConstraintsTest.cmpTo":213,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":329,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":231,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.CaptureTest.testCaptureFromStub":301,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":402,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":344,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":325,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":151,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":115,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":153,"org.easymock.tests2.UsageConstraintsTest.constraints":203,"org.easymock.samples.ExampleTest.addAndChangeDocument":182,"org.easymock.tests.UsageStrictMockTest.testVerify":157,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":174,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":130,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":172,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":85,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":267}}]
