[{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[16,17,18,19],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,2,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,4,209,5,210,211,212,213,214,215,6,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,7,8,237,9,238,10,11,239,240,241,242,243,244,245,246,247,248,13,249,250,251,14,252,253,17,18,19,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"message","methodName":"message"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[16,17,18,19],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[256,257,258],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[259],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[260,247],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,150,152,153,154,155,156,157,159,160,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,4,209,5,210,211,212,213,214,215,6,216,231,232,233,234,235,236,7,8,237,9,238,10,11,239,240,241,242,243,244,245,246,247,248,13,249,250,251,14,252,253,17,18,19,254],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7,11],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[16,17,18,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[261,262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[0,263,1],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[20,264,29,30,265,266,31,261,34,62,63,64,65,66,90,92,93,153,209,213,214,216,10,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[267,268,269,270,271,272],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[202,203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[27,28,273,32,61,274,83,84,85,275,276,94,140,140,141,141,142,145,146,277,158,159,160,161,163,164,173,178,183,278,279,280,184,185,186,187,281,282,283,284,188,189,190,191,192,285,194,195,196,286,197,198,287,199,288,17,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[289],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[267,34,268,269,270,290,291,292,293,294,295,271,272,179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[274],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[264,265,86,87,88,89,90,91,157,171,172,173,174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[261,267,34,296,35,297,298,268,299,269,300,301,302,303,60,270,290,293,294,304,305,72,306,121,122,123,153,307,154,166,308,309,310,311,271,312,313,314,315,316,317,272,318,319,246],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[64,67,133,135,136,138,148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[293,309,320],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":8,"org.easymock.tests2.UsageTest.argumentsOrdered":310,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":89,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":168,"org.easymock.tests2.StubTest.stubWithReturnValue":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":251,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":49,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":143,"org.easymock.tests2.SerializationTest.testAllMockedMethod":19,"org.easymock.tests2.DelegateToTest.testReturnException":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":87,"org.easymock.tests.MockingTest.testPartialClassMocking":83,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":272,"org.easymock.samples.SupportTest.voteForRemovals":148,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":109,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":97,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":189,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":3,"org.easymock.tests.UsageExpectAndThrowTest.object":107,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":249,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":151,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":93,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":239,"org.easymock.tests2.UsageTest.wrongArguments":308,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":29,"org.easymock.tests.UsageStrictMockTest.range":296,"org.easymock.samples.ConstructorCalledMockTest.testTax":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":126,"org.easymock.samples.ExampleTest.answerVsDelegate":134,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":224,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":158,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":108,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":186,"org.easymock.tests2.CaptureTest.testPrimitive":210,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":31,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests.UsageTest.moreThanOneArgument":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":116,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":125,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":130,"org.easymock.tests2.CaptureTest.testCaptureNone":214,"org.easymock.tests.UsageUnorderedTest.message":261,"org.easymock.tests.UsageVerifyTest.twoReturns":123,"org.easymock.tests.UsageVarargTest.varargByteAccepted":80,"org.easymock.tests2.ThreadingTest.testThreadSafe":175,"org.easymock.tests.UsageTest.argumentsOrdered":294,"org.easymock.tests.UsageVarargTest.varargIntAccepted":75,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":26,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":145,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":62,"org.easymock.tests2.CaptureTest.testCapture_2617107":5,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":319,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":183,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":266,"org.easymock.tests2.UsageConstraintsTest.any":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":185,"org.easymock.tests2.StubTest.stub":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":88,"org.easymock.tests.UsageExpectAndThrowTest.longType":100,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":314,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests.LimitationsTest.mockNativeMethod":32,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":273,"org.easymock.tests2.AnswerTest.answer":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":59,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":12,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":234,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests2.UsageTest.strictResetToDefault":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":198,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":155,"org.easymock.tests2.NameTest.nameForMocksControl":182,"org.easymock.tests2.MockedExceptionTest.testMockedException":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":129,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":119,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":292,"org.easymock.tests2.DelegateToTest.testDelegate":208,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":289,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":101,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":187,"org.easymock.tests.MockingTest.testNicePartialClassMocking":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":112,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":196,"org.easymock.tests2.CaptureTest.testCaptureLast":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":298,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":11,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":164,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":71,"org.easymock.tests.MockingTest.testTwoMocks":274,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":297,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":105,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":309,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":252,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":1,"org.easymock.tests.UsageStrictMockTest.differentMethods":35,"org.easymock.tests2.ConstraintsToStringTest.andToString":317,"org.easymock.tests2.MockBuilderTest.testCreateMockString":284,"org.easymock.tests.UsageExpectAndThrowTest.floatType":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":132,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":246,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":201,"org.easymock.tests.UsageVerifyTest.twoThrows":122,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":190,"org.easymock.samples.PartialClassMockTest.testGetArea":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":63,"org.easymock.samples.ExampleTest.voteAgainstRemoval":136,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":98,"org.easymock.tests2.UsageTest.niceToStrict":167,"org.easymock.tests2.ThreadingTest.testChangeDefault":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":14,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":171,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":258,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":184,"org.easymock.tests2.MockBuilderTest.testCreateMock":281,"org.easymock.tests2.UsageTest.defaultResetToNice":169,"org.easymock.samples.ExampleTest.voteAgainstRemovals":133,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":55,"org.easymock.tests2.CallbackTest.callback":254,"org.easymock.tests2.UsageConstraintsTest.equals":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":300,"org.easymock.tests.UsageTest.openCallCountByLastCall":291,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":271,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":106,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":222,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":235,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":124,"org.easymock.tests.UsageCallCountTest.tooFewCalls":24,"org.easymock.tests.UsageOverloadedMethodTest.overloading":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":51,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":161,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":243,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":127,"org.easymock.tests2.EasyMockSupportClassTest.testAll":188,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":28,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":316,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":114,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":233,"org.easymock.tests2.CaptureTest.testCaptureAll":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":69,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":264,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":163,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":160,"org.easymock.tests2.UsageConstraintsTest.testMatches":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":162,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":131,"org.easymock.samples.ExampleTest.voteForRemovals":138,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":177,"org.easymock.tests2.NameTest.nameForNiceMock":181,"org.easymock.tests.UsageVarargTest.allKinds":82,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":15,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":121,"org.easymock.tests2.DependencyTest.testInterfaceMocking":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":70,"org.easymock.samples.BasicClassMockTest.testPrintContent":146,"org.easymock.samples.ExampleTest.addDocument":137,"org.easymock.tests2.DelegateToTest.testStubDelegate":207,"org.easymock.tests2.AnswerTest.stubAnswer":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":91,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests2.UsageConstraintsTest.greaterThan":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":288,"org.easymock.tests.UsageVarargTest.varargLongAccepted":79,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":36,"org.easymock.samples.ExampleTest.voteForRemoval":135,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":58,"org.easymock.tests.UsageExpectAndReturnTest.floatType":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":178,"org.easymock.tests2.ConstraintsToStringTest.orToString":311,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":141,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":305,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":248,"org.easymock.tests.UsageThrowableTest.noUpperLimit":38,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":236,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":61,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":211,"org.easymock.tests2.SerializationTest.test":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":219,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":39,"org.easymock.tests2.UsageConstraintsTest.testSame":238,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":41,"org.easymock.samples.SupportTest.addDocument":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":86,"org.easymock.tests2.CaptureTest.testCaptureFirst":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":220,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":47,"org.easymock.tests.GenericTest.testPackageScope":27,"org.easymock.tests2.UsageTest.moreThanOneArgument":166,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":282,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":81,"org.easymock.tests2.NameTest.nameForMock":179,"org.easymock.tests.UsageExpectAndReturnTest.longType":43,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":67,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":115,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":113,"org.easymock.tests2.UsageStrictMockTest.differentMethods":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":44,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":299,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":111,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":120,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":23,"org.easymock.tests2.MockedExceptionTest.testRealException":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":48,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":102,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":159,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":278,"org.easymock.tests2.UsageConstraintsTest.testContains":242,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":22,"org.easymock.tests2.NameTest.nameForStrictMock":180,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":173,"org.easymock.tests2.UsageConstraintsTest.testFind":237,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":96,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":257,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":195,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":205,"org.easymock.tests.UsageExpectAndReturnTest.object":50,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":262,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":13,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":197,"org.easymock.tests.ErrorMessageTest.testGetters":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":279,"org.easymock.tests2.UsageStrictMockTest.range":307,"org.easymock.tests2.UsageConstraintsTest.lessThan":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":225,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":77,"org.easymock.tests.UsageTest.exactCallCountByLastCall":295,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":218,"org.easymock.tests2.CaptureTest.testCaptureRightOne":6,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":302,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":285,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":56,"org.easymock.tests.UsageTest.wrongArguments":290,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":94,"org.easymock.tests2.EasyMockSupportTest.testVerify":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":53,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":313,"org.easymock.tests.UsageVarargTest.varargShortAccepted":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":231,"org.easymock.tests2.UsageConstraintsTest.cmpTo":241,"org.easymock.tests.UsageVarargTest.varargCharAccepted":76,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":256,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":228,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":280,"org.easymock.tests.UsageTest.unexpectedCallWithArray":270,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":303,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":104,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":25,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":54,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":287,"org.easymock.tests2.UsageConstraintsTest.constraints":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":103,"org.easymock.samples.ExampleTest.addAndChangeDocument":139,"org.easymock.tests2.ConstraintsToStringTest.notToString":312,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":57,"org.easymock.tests.UsageStrictMockTest.testVerify":37,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":144,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":315,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":191,"org.easymock.tests2.CompareToTest.testGreateThan":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":68,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":212,"org.easymock.tests2.UsageTest.resumeIfFailure":170,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":64,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":275,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":46,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":223,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":74}}]
