[{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,2,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,3,4,5,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,0,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,1,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[322,0,335,358,1],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[453,454,450,451],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[233,237],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[30,49,50,52,53,84,85,455,456,457,458,459,460,90,91,92,95,96,137,140,141,142,224,225,226,278,280,281,296,297,303,304,461,462,463,464,465,466,467,468,469,470,471],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[15,16,18,19,21,22,28,45,48,49,51,54,56,57,58,59,60,61,62,63,66,67,69,74,79,85,92,95,96,97,125,136,138,139,141,143,144,145,147,148,150,151,152,153,154,473,474,475,197,198,202,203,205,210,215,225,226,245,246,247,248,249,250,253,254,255,256,257,258,259,265,274,275,277,279,282,289,290,476,291,292,477,478,294,295,297,298,299,303,304,306,309,314,315,479,325,327,328,333,335,340,346,347,348,349,350,351,352,355,359,362,365,372,374,377,378,379,380,382,383,384,385,386,387,390,391,392,393,394,395,396,397,399,400,401,402,403,404,410,424,430,431,433,434,436,439,442,443,444,445,446,454,450,451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.Capture:82","failures":[480,377,379,380,381,382,383,384,386,481,387,388,390],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[377,379,387,423,424,427,429,430,432,442,447],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[453,454,450,451],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[21,22,24,43,44,45,46,125,162,163,164,168,189,190,191,192,193,194,195,196,232,233,234,235,236,237,239,256,257,285,286,289,291,308,309,331,333,334,336,337,338,339,341,342,345,347,348,350,351,352,355,356,357,360,361,1,451],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[427,432,442,447],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[482,449],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[6,25,26,28,29,30,45,47,49,50,51,52,53,54,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,90,92,93,94,95,96,97,126,127,128,129,130,141,473,474,475,176,177,186,187,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,245,246,247,248,250,253,259,265,274,275,276,278,279,280,281,282,284,289,290,476,291,292,477,478,294,295,296,297,298,299,300,301,303,304,306,309,311,313,314,315,479,325,327,328,0,335,340,346,347,349,350,352,362,365,366,367,368,370,372,373,374,376,377,378,379,380,381,382,383,386,387,391,393,394,395,396,399,401,402,410,421,422,423,424,426,427,428,429,430,431,433,434,435,436,437,438,439,440,441,442,443,444,446,447,448,449,454,450,452],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[116,177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[49,455,457,91,462,469],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[425],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[284],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[483,126,480,377,378,379,380,381,382,383,384,385,386,481,387,388,389,390,391],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[49,455,457,91,462,469],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[30,49,52,460,91,92,95,96,225,226,280,297,303,304],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,484,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,2,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,3,4,5,155,156,157,158,159,160,161,162,163,164,473,474,165,475,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,485,486,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,487,488,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,489,490,491,286,287,288,289,290,476,291,492,292,477,478,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,479,493,494,316,317,318,319,320,321,495,322,323,496,324,325,326,327,497,328,498,499,329,0,500,330,331,332,501,333,502,334,335,336,337,503,504,338,505,506,339,507,340,341,342,343,344,345,346,508,509,347,348,349,350,351,352,353,354,355,510,356,357,358,359,360,361,1,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,454,450,451,452],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,484,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,2,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,3,4,5,155,156,157,158,159,160,161,162,163,164,473,474,165,475,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,485,486,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,487,488,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,489,490,491,286,287,288,289,290,476,291,492,292,477,478,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,479,493,494,316,317,318,319,320,321,495,322,323,496,324,325,326,327,497,328,498,499,329,0,500,330,331,332,501,333,502,334,335,336,337,503,504,338,505,506,339,507,340,341,342,343,344,345,346,508,509,347,348,349,350,351,352,353,354,355,510,356,357,358,359,360,361,1,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,454,450,451,452],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[454,450,451],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"position":"org.easymock.internal.Range:44","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,484,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,2,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,3,4,5,155,156,157,158,159,160,161,162,163,164,473,474,165,475,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,485,486,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,487,488,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,489,490,491,286,287,288,289,290,476,291,492,292,477,478,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,479,493,494,316,317,318,319,320,321,495,322,323,496,324,325,326,327,497,328,498,499,329,0,500,330,331,332,501,333,502,334,335,336,337,503,504,338,505,506,339,507,340,341,342,343,344,345,346,508,509,347,348,349,350,351,352,353,354,355,510,356,357,358,359,360,361,1,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,454,450,451,452],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":424,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":89,"org.easymock.tests2.UsageTest.argumentsOrdered":304,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":108,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":299,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":254,"org.easymock.tests2.DelegateToTest.testReturnException":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":170,"org.easymock.tests.MockingTest.testPartialClassMocking":473,"org.easymock.tests.MockClassControlTest.testToString":191,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":316,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":504,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":200,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":335,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":275,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":532,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":431,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":25,"org.easymock.tests2.UsageTest.wrongArguments":297,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":416,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":229,"org.easymock.samples.ExampleTest.answerVsDelegate":246,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":183,"org.easymock.tests2.UsageConstraintsTest.testNull":427,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":167,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":350,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":400,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":196,"org.easymock.tests2.CaptureTest.testPrimitive":380,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":29,"org.easymock.tests.UsageTest.moreThanOneArgument":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":219,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":242,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":175,"org.easymock.tests.UsageTest.argumentsOrdered":96,"org.easymock.tests.UsageVarargTest.varargIntAccepted":145,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":126,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":321,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":270,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":130,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":516,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":465,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":410,"org.easymock.tests.ReplayStateInvalidUsageTest.times":39,"org.easymock.tests2.DependencyTest.testClassMocking":272,"org.easymock.tests2.AnswerTest.answer":362,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":420,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":486,"org.easymock.tests2.CaptureTest.testAnd":377,"org.easymock.tests2.UsageTest.strictResetToDefault":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":222,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":179,"org.easymock.tests2.DelegateToTest.testDelegate":376,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":515,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":215,"org.easymock.tests.LimitationsTest.mockFinalMethod":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":135,"org.easymock.tests2.DependencyTest.testClassMockingSupport":273,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":84,"org.easymock.tests2.CaptureTest.testCapture1_2446744":381,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":213,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":418,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":33,"org.easymock.tests.UsageThrowableTest.throwError":56,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":182,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":509,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":519,"org.easymock.samples.PartialClassMockTest.testGetArea":253,"org.easymock.tests.MockingTest.testInterfaceMocking":165,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":4,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":201,"org.easymock.tests2.UsageTest.niceToStrict":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":98,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":325,"org.easymock.tests2.MockBuilderTest.testCreateMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":413,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":462,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":209,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":396,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":485,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":227,"org.easymock.tests.UsageOverloadedMethodTest.overloading":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":345,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":437,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":75,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":197,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":436,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":386,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":146,"org.easymock.tests.MockClassControlTest.testEquals":195,"org.easymock.tests2.EasyMockSupportClassTest.testAll":333,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":22,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":467,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":133,"org.easymock.tests2.CaptureTest.testCaptureAll":378,"org.easymock.tests.MockNameTest.defaultName":188,"org.easymock.tests2.UsageConstraintsTest.testMatches":438,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":243,"org.easymock.samples.ExampleTest.voteForRemovals":250,"org.easymock.tests.UsageVarargTest.allKinds":154,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":134,"org.easymock.samples.BasicClassMockTest.testPrintContent":257,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":62,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":267,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":375,"org.easymock.tests2.UsageConstraintsTest.greaterThan":440,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":502,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":360,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":520,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":239,"org.easymock.samples.ExampleTest.voteForRemoval":247,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":312,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":361,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":353,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":512,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":125,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":294,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":393,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":169,"org.easymock.tests2.CaptureTest.testCaptureFirst":390,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":394,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":306,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":71,"org.easymock.tests2.CaptureTest.testCapture2_2446744":389,"org.easymock.tests2.UsageTest.moreThanOneArgument":296,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":116,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":0,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":153,"org.easymock.tests.GenericTest.testBridgedEquals":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":18,"org.easymock.tests.UsageExpectAndReturnTest.longType":67,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":391,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":131,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":218,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":445,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":161,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":240,"org.easymock.tests.UsageCallCountTest.tooManyCalls":19,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":456,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":61,"org.easymock.tests.MockingTest.testNiceClassMocking":168,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":290,"org.easymock.tests.MockingTest.testClassMocking":163,"org.easymock.tests2.UsageConstraintsTest.testContains":435,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":12,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":309,"org.easymock.tests2.UsageConstraintsTest.testFind":426,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":199,"org.easymock.tests.MockTypeTest.fromEasyMockClass":181,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":47,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":370,"org.easymock.tests.UsageExpectAndReturnTest.object":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":399,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":148,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":158,"org.easymock.tests.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":103,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":176,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":87,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":459,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":493,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":80,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":138,"org.easymock.tests.MockClassControlTest.testHashCode":194,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":261,"org.easymock.tests2.EasyMockSupportTest.testVerify":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":506,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":464,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":177,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":136,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":417,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":404,"org.easymock.tests.UsageVarargTest.varargCharAccepted":147,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":231,"org.easymock.tests2.CaptureTest.testCaptureMultiple":480,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":121,"org.easymock.tests2.UsageTest.openCallCountByLastCall":300,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":402,"org.easymock.tests.DefaultClassInstantiatorTest.object":232,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":8,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":156,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":460,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":339,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":260,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":518,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":193,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":358,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":206,"org.easymock.tests.CapturesMatcherTest.test":483,"org.easymock.tests.ReplayStateInvalidCallsTest.times":524,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":81,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":122,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":525,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":466,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":346,"org.easymock.tests2.UsageTest.resumeIfFailure":305,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":172,"org.easymock.tests2.StubTest.stubWithReturnValue":284,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":497,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":446,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":73,"org.easymock.tests2.SerializationTest.testAllMockedMethod":451,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":114,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":469,"org.easymock.samples.SupportTest.voteForRemovals":259,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":263,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":212,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":453,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":120,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":363,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":88,"org.easymock.tests.UsageExpectAndThrowTest.object":210,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":443,"org.easymock.tests2.DelegateToTest.testWrongClass":374,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":522,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":186,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":187,"org.easymock.samples.ConstructorCalledMockTest.testTax":487,"org.easymock.tests.UsageStrictMockTest.range":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":287,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":289,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":211,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":327,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":41,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":228,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":455,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":514,"org.easymock.tests2.CaptureTest.testCaptureNone":385,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":5,"org.easymock.tests.UsageUnorderedTest.message":30,"org.easymock.tests.UsageVerifyTest.twoReturns":226,"org.easymock.tests.UsageVarargTest.varargByteAccepted":152,"org.easymock.tests2.ThreadingTest.testThreadSafe":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":341,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":16,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":159,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":256,"org.easymock.tests2.CaptureTest.testCapture_2617107":379,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":471,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":28,"org.easymock.tests2.UsageConstraintsTest.any":433,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":38,"org.easymock.tests2.StubTest.stub":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":119,"org.easymock.tests.UsageExpectAndThrowTest.longType":203,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":236,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":37,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":279,"org.easymock.tests2.SerializationTest.testClass":454,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests.LimitationsTest.mockNativeMethod":45,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":23,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":407,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":530,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests2.NameTest.nameForMocksControl":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":409,"org.easymock.tests2.MockedExceptionTest.testMockedException":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":334,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":475,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":204,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":369,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":347,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":328,"org.easymock.tests.MockingTest.testNicePartialClassMocking":474,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":352,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":405,"org.easymock.tests2.CaptureTest.testCaptureLast":384,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":85,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":529,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":478,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":430,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":444,"org.easymock.tests.MockingTest.testTwoMocks":164,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":526,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":208,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":303,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":448,"org.easymock.samples.ExampleTest.removeNonExistingDocument":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":412,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":35,"org.easymock.tests.UsageStrictMockTest.differentMethods":53,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":262,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":234,"org.easymock.tests2.ConstraintsToStringTest.andToString":468,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":313,"org.easymock.tests2.MockBuilderTest.testCreateMockString":330,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":189,"org.easymock.tests.UsageExpectAndThrowTest.floatType":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":336,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":501,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":365,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":494,"org.easymock.tests.UsageVerifyTest.twoThrows":225,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":340,"org.easymock.samples.ExampleTest.voteAgainstRemoval":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":3,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":359,"org.easymock.tests.LimitationsTest.privateConstructor":44,"org.easymock.tests2.UsageConstraintsTest.testNotNull":447,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":63,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":307,"org.easymock.tests2.UsageTest.defaultResetToNice":302,"org.easymock.samples.ExampleTest.voteAgainstRemovals":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":79,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":406,"org.easymock.tests.UsageVarargTest.differentLength":149,"org.easymock.tests2.CallbackTest.callback":452,"org.easymock.tests2.UsageConstraintsTest.equals":425,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":510,"org.easymock.tests.UsageTest.openCallCountByLastCall":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":421,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":27,"org.easymock.tests.UsageCallCountTest.tooFewCalls":14,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":230,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":472,"org.easymock.tests.UsageThrowableTest.throwCheckedException":60,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":457,"org.easymock.tests.MockingTest.testStrictClassMocking":162,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":477,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":7,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":476,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":411,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":40,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":292,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":367,"org.easymock.tests.ObjectMethodsTest.testHashCode":157,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":528,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":315,"org.easymock.tests2.NameTest.nameForNiceMock":319,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":523,"org.easymock.tests2.DependencyTest.testInterfaceMocking":274,"org.easymock.samples.ExampleTest.addDocument":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":508,"org.easymock.tests2.DelegateToTest.testStubDelegate":373,"org.easymock.tests2.AnswerTest.stubAnswer":366,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":50,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":498,"org.easymock.tests.UsageVarargTest.varargLongAccepted":151,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":107,"org.easymock.tests.UsageExpectAndReturnTest.floatType":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":479,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":488,"org.easymock.tests2.ConstraintsToStringTest.orToString":461,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":441,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests.UsageThrowableTest.noUpperLimit":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":422,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":285,"org.easymock.tests2.SerializationTest.test":450,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":382,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":233,"org.easymock.tests2.UsageConstraintsTest.testSame":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":65,"org.easymock.samples.SupportTest.addDocument":258,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":492,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":513,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":337,"org.easymock.tests.GenericTest.testPackageScope":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":102,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":268,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":166,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":511,"org.easymock.tests2.NameTest.nameForMock":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":500,"org.easymock.tests2.UsageStrictMockTest.differentMethods":281,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":356,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":214,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":155,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":223,"org.easymock.tests2.MockedExceptionTest.testRealException":310,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":288,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":111,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":278,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":26,"org.easymock.tests2.NameTest.nameForStrictMock":318,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":324,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":368,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":286,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":442,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":235,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":322,"org.easymock.tests2.UsageStrictMockTest.range":280,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":517,"org.easymock.tests2.UsageConstraintsTest.lessThan":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":264,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":505,"org.easymock.tests2.CaptureTest.testCaptureRightOne":387,"org.easymock.tests2.UsageConstraintsTest.testOr":429,"org.easymock.tests.UsageRangeTest.combination":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":348,"org.easymock.tests.UsageTest.wrongArguments":92,"org.easymock.tests2.MockBuilderTest.testWithConstructor":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":503,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":77,"org.easymock.tests.UsageVarargTest.varargShortAccepted":150,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":237,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":17,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":531,"org.easymock.tests2.UsageConstraintsTest.cmpTo":434,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":364,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":521,"org.easymock.tests2.CompareToTest.testLessThan":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":101,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":301,"org.easymock.tests2.CaptureTest.testCaptureFromStub":388,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":32,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":323,"org.easymock.tests.UsageTest.unexpectedCallWithArray":91,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":527,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":78,"org.easymock.tests2.CaptureTest.testCapture":481,"org.easymock.tests2.UsageConstraintsTest.constraints":423,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":51,"org.easymock.samples.ExampleTest.addAndChangeDocument":252,"org.easymock.tests2.ConstraintsToStringTest.notToString":463,"org.easymock.tests.UsageStrictMockTest.testVerify":55,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":255,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":132,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":128,"org.easymock.tests.LimitationsTest.abstractClass":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":70,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":129,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":397,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":144}}]
