[{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[6,7,8,9,10,11],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[2,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[26,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[6,7,8,9,10,11],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[29,0,30,31,1,32],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,10,62,63,64,65,11,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[24,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[77,78,79,80,81,82,83,51,84,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[78],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[86,87],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[88,88,89,89,2,20,22,23,90],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[104,77,105,106,107,108,109,110,111,112,113,114,115,116,88,89,117,118,119,120,121,122,123,2,3,4,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,78,146,79,147,148,91,149,33,150,151,34,35,36,152,37,153,154,38,39,40,155,156,157,41,42,43,44,158,159,160,161,162,163,164,26,165,27,166,167,168,169,170,171,45,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,46,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,47,223,224,225,226,86,24,20,48,49,50,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,80,255,81,82,256,83,22,23,51,257,258,52,259,260,261,53,262,263,264,54,55,265,266,56,267,268,269,270,57,271,272,273,274,275,276,277,90,278,279,58,280,59,281,282,84,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,92,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,93,320,321,322,323,324,325,326,94,327,95,96,328,329,330,331,332,333,97,334,335,336,337,338,339,98,340,341,342,343,344,345,346,347,348,349,60,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,29,0,30,31,368,1,32,369,370,371,372,373,61,374,10,375,62,63,64,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,25,391,392,87,393,394,65,395,11,66,396,397,67,68,69,398,399,400,401,402,403,70,71,72,73,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,85,426,427,428,429,430,431,432,433,434,435,74,436,437,438,99,100,439,440,441,442,443,444,101,445,446,447,448,449,450,102,451,452,453,454,455,456,457,458,459,460,461,462,463,464,75,76,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,103,483,484,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[104,77,105,106,107,108,110,111,112,113,114,115,116,117,119,121,123,2,3,4,126,127,133,150,151,34,35,36,152,37,153,38,39,40,41,42,44,158,159,160,161,163,164,26,165,27,166,169,172,175,178,179,181,182,184,46,189,190,191,192,193,194,200,203,213,219,225,86,24,232,241,248,249,250,251,252,253,254,80,82,22,51,259,260,261,53,262,263,264,54,55,266,56,267,268,269,270,57,271,272,273,274,277,280,84,284,285,287,292,293,294,295,300,301,302,303,304,305,306,307,321,328,329,331,335,98,344,345,346,348,349,350,351,352,353,354,370,371,374,10,375,62,63,64,376,66,67,68,69,401,402,403,71,72,73,410,411,74,439,440,442,446,102,462,75,76,475,476,478],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[104,105,106,108,113,115,120,2,3,126,127,133,145,151,35,36,37,153,154,39,155,156,157,43,44,158,159,161,162,26,165,27,166,168,169,170,171,45,172,174,175,176,177,178,179,181,182,183,184,185,186,46,187,188,189,190,191,193,194,195,196,200,203,213,219,47,225,86,24,49,232,241,248,249,250,251,252,253,254,256,22,257,258,52,259,260,261,53,262,263,264,54,55,265,266,56,267,268,270,57,271,272,273,274,277,58,280,59,287,292,293,296,300,302,303,304,305,306,307,315,316,370,372,375,63,64,65,395,396,397,69,410,411,412,74,436,437,438,99,100,439,440,441,442,443,444,101,445,446,447,448,449,450,102,451,452,453,454,455,456,457,458,459,462,464,76,470,475,476,478,482,103,484],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[52],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[104,77,105,106,107,108,110,111,112,113,114,115,116,88,89,117,119,120,121,123,2,3,4,126,127,133,144,145,78,79,147,148,91,149,33,150,151,34,35,36,152,37,153,154,38,39,40,155,156,157,41,42,43,44,158,159,160,161,162,163,164,26,165,27,166,167,168,169,170,171,45,172,174,175,176,177,178,179,181,182,183,184,185,186,46,187,188,189,190,191,192,193,194,195,196,200,203,213,219,222,47,225,226,86,24,48,49,50,232,239,240,241,242,248,249,250,251,252,253,254,80,82,256,83,22,51,257,258,52,259,260,261,53,262,263,264,54,55,265,266,56,267,268,269,270,57,271,272,273,274,275,277,279,58,280,59,84,284,285,288,292,293,294,295,296,297,298,92,299,300,301,302,303,304,305,306,307,486,486,317,318,319,93,320,321,322,323,324,325,326,94,95,96,328,329,330,331,332,333,97,334,335,336,337,338,339,98,340,341,342,343,344,345,346,348,349,60,350,351,352,353,354,370,371,61,374,10,375,62,63,64,376,65,395,11,66,396,397,67,68,69,400,401,402,403,70,71,72,73,410,411,412,74,437,438,99,100,439,440,441,442,443,444,101,445,446,447,448,449,450,102,451,452,453,454,455,456,457,458,459,462,464,75,76,465,466,467,468,469,470,471,475,476,478,482,103],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[2,12,13,14,15,17,487,18,19,20,21,488,22,23],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[78,79,151,158,159,160,161,162,163,164,26,165,27,166,167,168,169,170,171,45,172,174,175,176,177,178,179,180,181,182,183,184,185,186,46,187,188,189,190,191,192,193,194,195,196,489,259,277,292,293,294,295,296,326,354,10,375,73,455,456,457,458,459,470,471,482,103],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[434],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[6,7,8,9,10,11],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[35,490,63,75,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[104,77,105,106,107,108,109,110,119,120,121,123,2,3,4,126,491,492,493,141,143,144,145,78,79,147,148,91,149,33,150,151,34,35,36,152,37,153,154,38,39,40,155,156,157,41,42,43,44,158,159,160,161,162,163,164,26,165,27,166,167,168,169,170,171,45,172,174,175,176,177,178,179,181,182,183,184,185,186,46,187,188,189,190,191,192,193,194,195,196,489,222,47,223,224,225,226,48,49,50,239,240,241,242,244,245,246,247,249,250,253,254,80,82,256,83,22,51,257,258,52,259,260,270,57,271,272,273,274,275,277,278,279,58,280,59,281,84,283,284,285,287,288,292,293,294,295,296,297,298,92,299,300,301,302,303,304,305,306,307,312,313,317,318,319,93,320,321,322,323,324,325,326,94,95,96,328,329,330,331,332,333,97,334,335,336,337,338,339,98,340,341,342,343,344,345,346,348,349,60,350,351,352,353,354,360,361,362,363,364,365,366,367,29,370,371,61,374,10,375,62,63,64,376,377,378,379,380,381,382,383,384,385,386,387,388,389,25,391,392,87,393,394,65,395,11,66,396,397,67,68,69,398,399,400,401,402,403,70,71,72,73,405,406,407,410,411,412,74,436,437,438,99,100,439,440,441,442,443,444,101,445,446,447,448,449,450,102,451,452,453,454,455,456,457,458,459,462,464,75,76,465,466,467,468,469,470,471,472,473,475,476,477,478,479,480,481,482,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[104,105,106,108,113,115,120,126,127,151,35,36,200,203,213,219,47,225,86,24,49,248,249,250,251,252,253,254,22,259,270,57,271,272,273,274,277,58,280,59,292,315,316,317,318,319,93,370,372,375,63,64,390,410,74,436,437,438,99,100,439,440,441,442,101,445,447,448,449,102,451,452,453,454,455,456,457,458,459,462,475,476,478,482,103,484],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":172,"org.easymock.tests2.UsageTest.argumentsOrdered":42,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":65,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":423,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":40,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":117,"org.easymock.tests2.DelegateToTest.testReturnException":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":323,"org.easymock.tests.MockingTest.testPartialClassMocking":475,"org.easymock.tests.MockClassControlTest.testToString":362,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":243,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":95,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":203,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":13,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":179,"org.easymock.tests2.UsageTest.wrongArguments":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":92,"org.easymock.samples.ExampleTest.answerVsDelegate":77,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":87,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":480,"org.easymock.tests2.UsageConstraintsTest.testNull":175,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":272,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":56,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":367,"org.easymock.tests2.CaptureTest.testPrimitive":161,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":296,"org.easymock.tests.UsageTest.moreThanOneArgument":395,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":343,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":319,"org.easymock.tests.UsageTest.argumentsOrdered":68,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":355,"org.easymock.tests.UsageVarargTest.varargIntAccepted":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":455,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":487,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":222,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":459,"org.easymock.tests.ReplayStateInvalidUsageTest.times":386,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests2.DependencyTest.testClassMocking":124,"org.easymock.tests2.AnswerTest.answer":80,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":429,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":149,"org.easymock.tests2.CaptureTest.testAnd":158,"org.easymock.tests2.UsageTest.strictResetToDefault":153,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":318,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":264,"org.easymock.tests2.DelegateToTest.testDelegate":123,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":98,"org.easymock.tests.LimitationsTest.mockFinalMethod":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":469,"org.easymock.tests2.DependencyTest.testClassMockingSupport":125,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":311,"org.easymock.tests2.CaptureTest.testCapture1_2446744":162,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":148,"org.easymock.tests.UsageThrowableTest.throwError":300,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":380,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":392,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":221,"org.easymock.samples.PartialClassMockTest.testGetArea":113,"org.easymock.tests.MockingTest.testInterfaceMocking":477,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":456,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":315,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":409,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":96,"org.easymock.tests2.UsageTest.niceToStrict":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":225,"org.easymock.tests2.MockBuilderTest.testCreateMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":136,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":334,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":54,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":398,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":297,"org.easymock.tests.UsageOverloadedMethodTest.overloading":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":218,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":185,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":447,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":410,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":184,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":27,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":347,"org.easymock.tests2.EasyMockSupportClassTest.testAll":200,"org.easymock.tests.MockClassControlTest.testEquals":366,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":341,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":467,"org.easymock.tests2.CaptureTest.testCaptureAll":159,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":91,"org.easymock.tests.MockNameTest.defaultName":327,"org.easymock.tests2.UsageConstraintsTest.testMatches":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":93,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":378,"org.easymock.samples.ExampleTest.voteForRemovals":108,"org.easymock.tests.UsageVarargTest.allKinds":354,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":468,"org.easymock.samples.BasicClassMockTest.testPrintContent":112,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":306,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests2.UsageConstraintsTest.greaterThan":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":201,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":436,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":59,"org.easymock.samples.ExampleTest.voteForRemoval":105,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":32,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":258,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":281,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":275,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":321,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":262,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":322,"org.easymock.tests2.CaptureTest.testCaptureFirst":169,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":263,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":444,"org.easymock.tests2.CaptureTest.testCapture2_2446744":168,"org.easymock.tests2.UsageTest.moreThanOneArgument":154,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":430,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":49,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":353,"org.easymock.tests.GenericTest.testBridgedEquals":373,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":71,"org.easymock.tests.UsageExpectAndReturnTest.longType":440,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":465,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":342,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":390,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":317,"org.easymock.tests.UsageCallCountTest.tooManyCalls":72,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":305,"org.easymock.tests.MockingTest.testNiceClassMocking":481,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":249,"org.easymock.tests.MockingTest.testClassMocking":473,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":399,"org.easymock.tests2.UsageConstraintsTest.testContains":183,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":241,"org.easymock.tests2.UsageConstraintsTest.testFind":174,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":412,"org.easymock.tests.MockTypeTest.fromEasyMockClass":391,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":61,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":79,"org.easymock.tests.UsageExpectAndReturnTest.object":446,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":14,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":349,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":407,"org.easymock.tests.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":483,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":451,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":284,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":228,"org.easymock.tests.MockClassControlTest.testHashCode":365,"org.easymock.tests2.EasyMockSupportTest.testVerify":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":210,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":147,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":489,"org.easymock.tests.UsageVarargTest.varargCharAccepted":348,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastCall":155,"org.easymock.tests.DefaultClassInstantiatorTest.object":29,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":308,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":211,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":58,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":332,"org.easymock.tests.CapturesMatcherTest.test":486,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":452,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":219,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":363,"org.easymock.tests2.UsageTest.resumeIfFailure":43,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":25,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":491,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":325,"org.easymock.tests2.StubTest.stubWithReturnValue":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":445,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":193,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":428,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":488,"org.easymock.samples.SupportTest.voteForRemovals":115,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":337,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":434,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":255,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":485,"org.easymock.tests.UsageExpectAndThrowTest.object":335,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":190,"org.easymock.tests2.DelegateToTest.testWrongClass":121,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":482,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":103,"org.easymock.tests.UsageStrictMockTest.range":63,"org.easymock.samples.ConstructorCalledMockTest.testTax":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":142,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":336,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":298,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":8,"org.easymock.tests2.CaptureTest.testCaptureNone":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":316,"org.easymock.tests.UsageUnorderedTest.message":73,"org.easymock.tests.UsageVerifyTest.twoReturns":76,"org.easymock.tests.UsageVarargTest.varargByteAccepted":352,"org.easymock.tests2.ThreadingTest.testThreadSafe":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":214,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":403,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":408,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":111,"org.easymock.tests2.CaptureTest.testCapture_2617107":160,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":295,"org.easymock.tests2.UsageConstraintsTest.any":181,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":385,"org.easymock.tests2.StubTest.stub":144,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":324,"org.easymock.tests.UsageExpectAndThrowTest.longType":329,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":368,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":384,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":34,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":462,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":454,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":372,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":130,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.tests2.NameTest.nameForMocksControl":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":132,"org.easymock.tests2.MockedExceptionTest.testMockedException":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":202,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":397,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":478,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":146,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":270,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":24,"org.easymock.tests.MockingTest.testNicePartialClassMocking":476,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":128,"org.easymock.tests2.CaptureTest.testCaptureLast":26,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":312,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":254,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":191,"org.easymock.tests.MockingTest.testTwoMocks":474,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":97,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":195,"org.easymock.samples.ExampleTest.removeNonExistingDocument":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":135,"org.easymock.tests.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":229,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":30,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":52,"org.easymock.tests2.MockBuilderTest.testCreateMockString":50,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":204,"org.easymock.tests.UsageExpectAndThrowTest.floatType":328,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":199,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":82,"org.easymock.tests.UsageVerifyTest.twoThrows":75,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":213,"org.easymock.samples.ExampleTest.voteAgainstRemoval":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":280,"org.easymock.tests.LimitationsTest.privateConstructor":461,"org.easymock.tests2.UsageConstraintsTest.testNotNull":194,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":307,"org.easymock.tests2.UsageTest.defaultResetToNice":157,"org.easymock.samples.ExampleTest.voteAgainstRemovals":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":102,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":129,"org.easymock.tests.UsageVarargTest.differentLength":60,"org.easymock.tests2.CallbackTest.callback":51,"org.easymock.tests2.UsageConstraintsTest.equals":173,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":90,"org.easymock.tests.UsageTest.openCallCountByLastCall":396,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":294,"org.easymock.tests.UsageCallCountTest.tooFewCalls":401,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":299,"org.easymock.tests.UsageThrowableTest.throwCheckedException":304,"org.easymock.tests.MockingTest.testStrictClassMocking":472,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":9,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":471,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":250,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":252,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":83,"org.easymock.tests.ObjectMethodsTest.testHashCode":406,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":17,"org.easymock.tests2.NameTest.nameForNiceMock":246,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":260,"org.easymock.tests2.DependencyTest.testInterfaceMocking":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":15,"org.easymock.samples.ExampleTest.addDocument":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":215,"org.easymock.tests2.DelegateToTest.testStubDelegate":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":220,"org.easymock.tests2.AnswerTest.stubAnswer":256,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":375,"org.easymock.tests.UsageVarargTest.varargLongAccepted":351,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":453,"org.easymock.tests.UsageExpectAndReturnTest.floatType":439,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":89,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests.UsageThrowableTest.noUpperLimit":301,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":171,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":140,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":163,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests2.UsageConstraintsTest.testSame":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":100,"org.easymock.samples.SupportTest.addDocument":114,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":205,"org.easymock.tests.GenericTest.testPackageScope":370,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":479,"org.easymock.tests2.NameTest.nameForMock":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":448,"org.easymock.tests2.UsageStrictMockTest.differentMethods":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":278,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":441,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":339,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":404,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":438,"org.easymock.tests2.MockedExceptionTest.testRealException":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":21,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":85,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":293,"org.easymock.tests2.NameTest.nameForStrictMock":245,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":224,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":273,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":141,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":189,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":31,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":47,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests2.UsageConstraintsTest.lessThan":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":421,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":16,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":53,"org.easymock.tests2.CaptureTest.testCaptureRightOne":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":209,"org.easymock.tests2.UsageConstraintsTest.testOr":177,"org.easymock.tests.UsageRangeTest.combination":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":57,"org.easymock.tests.UsageTest.wrongArguments":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":206,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":361,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":414,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":70,"org.easymock.tests2.UsageConstraintsTest.cmpTo":182,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.CaptureTest.testCaptureFromStub":167,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":379,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":223,"org.easymock.tests.UsageTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":402,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":450,"org.easymock.tests2.CaptureTest.testCapture":28,"org.easymock.tests2.UsageConstraintsTest.constraints":45,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":62,"org.easymock.samples.ExampleTest.addAndChangeDocument":110,"org.easymock.tests.UsageStrictMockTest.testVerify":377,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":116,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":374,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":466,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":457,"org.easymock.tests.LimitationsTest.abstractClass":460,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":458,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":490,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":55,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":345}}]
