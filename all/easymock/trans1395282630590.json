[{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[1,2],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,0,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,1,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"this","delegateTo":"value","this":"lastResult"}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[162,163,164,165,166,167],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"clazz","throwableClass":"clazz"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[168],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[169,170,171,172,173,174,175],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[176,177,178],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[11,12,13,127,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.Capture:82","failures":[129,180,131,132,181,182,133,135,183,136,184,138],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[185,3,186,187,4,169,5,6,188,7,189,190,191,192,193,194,8,195,196,197,198,162,163,164,165,199,166,200,167,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,9,216,10,217,218,219,11,12,220,13,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,14,236,15,16,237,238,239,240,241,242,243,244,245,246,17,247,18,19,20,21,22,23,24,25,248,249,26,250,251,252,253,254,255,256,170,257,258,259,260,261,27,262,263,264,28,29,30,31,32,33,34,265,266,35,36,267,268,37,269,270,271,272,273,274,275,276,277,278,279,280,38,39,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,171,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,40,41,42,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,43,373,374,44,375,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,376,66,67,377,378,379,380,381,68,382,383,384,385,386,387,388,389,390,69,391,392,70,393,394,395,396,397,398,399,400,401,71,402,403,404,405,406,72,407,408,73,74,75,76,77,78,79,409,80,81,82,83,410,411,412,84,413,85,86,414,415,416,417,418,419,420,421,422,423,87,424,88,425,89,426,427,428,429,430,431,90,91,92,0,432,93,94,95,96,97,98,433,99,100,101,102,103,104,105,106,107,108,109,110,434,111,112,113,1,114,115,116,435,117,436,118,119,437,438,439,120,121,122,123,124,125,440,126,127,128,179,129,130,180,131,132,181,182,133,134,135,136,184,137,138,441,139,442,443,444,140,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,141,142,143,144,145,146,460,461,147,462,463,168,464,148,465,466,467,468,149,469,470,471,472,473,150,474,475,476,477,478,479,480,481,151,152,153,154,482,155,483,484,156,157,158,159,160,485,172,161,173,174,175,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[216,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[493,494,235,265,495,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[161],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[359],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[70],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[437,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[9,216,10,14,16,237,259,34,271,84,86,414,116],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[155,483],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[90,106,111,497],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[498,499,500,501,502,503,504,505,425,427,506,507,153,155,483],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[9,216,10,14,15,16,256,258,259,34,266,267,268,269,270,374,84,85,86,116,435,438,439,508,509,510,511,496,512,513],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[514],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[515],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[129,180,131,132,181,182,133,135,183,136,184,138],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[4,169,5,6,188,7,190,203,204,205,206,208,209,9,216,10,11,12,13,234,235,14,236,15,16,237,242,243,244,245,246,17,247,18,19,20,21,22,23,24,25,248,249,26,253,255,170,257,259,27,262,28,29,30,31,32,33,34,266,35,36,267,268,37,270,272,273,274,275,38,39,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,308,309,310,311,312,40,41,42,345,346,347,348,349,354,365,366,367,368,369,370,43,374,44,375,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,412,84,413,85,86,414,415,417,418,87,424,90,91,92,0,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,434,111,112,113,1,114,115,116,435,117,436,118,119,437,438,439,120,121,123,124,127,128,129,130,180,131,132,181,182,133,134,135,136,184,137,138,139,444,140,445,451,452,453,454,455,456,457,458,459,141,142,143,144,145,146,460,147,168,148,468,149,151,153,154,482,155,156,157,158,159,160,172,161,173,175],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[516,216,10,235,15,265,266,267,268,374,85,435,438,439],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:45","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[168],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[493,494,235,265,495,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[3,169,9,216,14,15,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,38,39,281,282,285,287,288,289,290,292,293,294,295,297,298,299,300,41,42,369,44,45,46,49,51,52,53,54,56,57,58,59,61,62,63,64,65,376,66,67,73,74,75,78,79,81,83,84,85,86,415,417,87,90,91,92,0,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,1,115,116,117,118,119,120,130,131,132,133,134,135,136,138,140,445,459,145,148,149,156,157,161,175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[517],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[185,3,186,187,4,169,5,6,188,7,189,190,191,192,193,194,8,195,196,197,198,162,163,164,165,199,166,200,167,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,9,216,10,217,218,219,11,12,220,13,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,14,236,15,16,237,238,239,240,241,242,243,244,245,246,17,247,18,19,20,21,22,23,24,25,248,249,26,250,251,252,253,254,255,256,170,257,258,259,260,261,27,262,263,264,28,29,30,31,32,33,34,265,266,35,36,267,268,37,269,270,271,272,273,274,275,276,277,278,279,280,38,39,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,171,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,40,41,42,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,43,373,374,44,375,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,376,66,67,377,378,379,380,381,68,382,383,384,385,386,387,388,389,390,69,391,392,70,393,394,395,396,397,398,399,400,401,71,402,403,404,405,406,72,407,408,73,74,75,76,77,78,79,409,80,81,82,83,410,411,412,84,413,85,86,414,415,416,417,418,419,420,421,422,423,87,424,88,425,89,426,427,428,429,430,431,90,91,92,0,432,93,94,95,96,97,98,433,99,100,101,102,103,104,105,106,107,108,109,110,434,111,112,113,1,114,115,116,435,117,436,118,119,437,438,439,120,121,122,123,124,125,440,126,127,128,179,129,130,180,131,132,181,182,133,134,135,136,184,137,138,441,139,442,443,444,140,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,141,142,143,144,145,146,460,461,147,462,463,168,464,148,465,466,467,468,149,469,470,471,472,473,150,474,475,476,477,478,479,480,481,151,152,153,154,482,155,483,484,156,157,158,159,160,485,172,161,173,174,175,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":439,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":322,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":436,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":185,"org.easymock.tests2.DelegateToTest.testReturnException":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":366,"org.easymock.tests.MockingTest.testPartialClassMocking":11,"org.easymock.tests.MockClassControlTest.testToString":338,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":446,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":281,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":499,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":98,"org.easymock.tests2.UsageTest.wrongArguments":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":274,"org.easymock.samples.ExampleTest.answerVsDelegate":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":229,"org.easymock.tests2.UsageConstraintsTest.testNull":94,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":222,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":144,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":81,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":343,"org.easymock.tests2.CaptureTest.testPrimitive":131,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":26,"org.easymock.tests.UsageTest.moreThanOneArgument":34,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":300,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":244,"org.easymock.tests.UsageTest.argumentsOrdered":268,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":276,"org.easymock.tests.UsageVarargTest.varargIntAccepted":303,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":504,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":418,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":478,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":32,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":510,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":68,"org.easymock.tests.ReplayStateInvalidUsageTest.times":358,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":514,"org.easymock.tests2.DependencyTest.testClassMocking":480,"org.easymock.tests2.AnswerTest.answer":139,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":458,"org.easymock.tests2.CaptureTest.testAnd":129,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":226,"org.easymock.tests2.UsageTest.strictResetToDefault":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":77,"org.easymock.tests2.DelegateToTest.testDelegate":175,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":296,"org.easymock.tests.LimitationsTest.mockFinalMethod":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":369,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":349,"org.easymock.tests2.DependencyTest.testClassMockingSupport":481,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":269,"org.easymock.tests2.CaptureTest.testCapture1_2446744":132,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":456,"org.easymock.tests.UsageThrowableTest.throwError":17,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":352,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":228,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":479,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":408,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.MockingTest.testInterfaceMocking":220,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":353,"org.easymock.tests2.CompareToTest.testLessOrEqual":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":29,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":397,"org.easymock.tests2.UsageTest.niceToStrict":117,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":282,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":87,"org.easymock.tests2.MockBuilderTest.testCreateMock":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":404,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":384,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":290,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":78,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":225,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":272,"org.easymock.tests.UsageOverloadedMethodTest.overloading":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":401,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":103,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":257,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":56,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":102,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":135,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":304,"org.easymock.tests2.EasyMockSupportClassTest.testAll":69,"org.easymock.tests.MockClassControlTest.testEquals":342,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":457,"org.easymock.tests2.CaptureTest.testCaptureAll":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":347,"org.easymock.tests.MockNameTest.defaultName":344,"org.easymock.tests2.UsageConstraintsTest.testMatches":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":245,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":350,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":312,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":9,"org.easymock.samples.BasicClassMockTest.testPrintContent":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":348,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":22,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":475,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":505,"org.easymock.tests2.UsageConstraintsTest.greaterThan":106,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":376,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":465,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":167,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":466,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":157,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":230,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":460,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":253,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":75,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":365,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":485,"org.easymock.tests2.CaptureTest.testCaptureFirst":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":76,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":52,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":159,"org.easymock.tests2.CaptureTest.testCapture2_2446744":137,"org.easymock.tests2.UsageTest.moreThanOneArgument":116,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":330,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":311,"org.easymock.tests.GenericTest.testBridgedEquals":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":208,"org.easymock.tests.UsageExpectAndReturnTest.longType":48,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":299,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":434,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":242,"org.easymock.tests.UsageCallCountTest.tooManyCalls":209,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":286,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":21,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":123,"org.easymock.tests.MockingTest.testNiceClassMocking":223,"org.easymock.tests.MockingTest.testClassMocking":218,"org.easymock.tests2.UsageConstraintsTest.testContains":101,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":202,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":453,"org.easymock.tests2.UsageConstraintsTest.testFind":93,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":42,"org.easymock.tests.MockTypeTest.fromEasyMockClass":227,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":417,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":233,"org.easymock.tests.UsageExpectAndReturnTest.object":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":500,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":306,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":213,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":517,"org.easymock.tests.UsageTest.exactCallCountByLastCall":37,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":195,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":483,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":61,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":170,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":470,"org.easymock.tests.MockClassControlTest.testHashCode":341,"org.easymock.tests2.EasyMockSupportTest.testVerify":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":399,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":278,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":255,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":455,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":441,"org.easymock.tests.UsageVarargTest.varargCharAccepted":305,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":198,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageTest.openCallCountByLastCall":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":177,"org.easymock.tests.DefaultClassInstantiatorTest.object":162,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":83,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":362,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":211,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":400,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":469,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":464,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":287,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":62,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":72,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":339,"org.easymock.tests2.UsageTest.resumeIfFailure":120,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":224,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":487,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":368,"org.easymock.tests2.StubTest.stubWithReturnValue":149,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":425,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":54,"org.easymock.tests2.SerializationTest.testAllMockedMethod":482,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":328,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":507,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":496,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":293,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":334,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":442,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":197,"org.easymock.tests.UsageExpectAndThrowTest.object":291,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":109,"org.easymock.tests2.DelegateToTest.testWrongClass":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":38,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":39,"org.easymock.samples.ConstructorCalledMockTest.testTax":186,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":491,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":409,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":292,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":267,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":273,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":493,"org.easymock.tests2.CaptureTest.testCaptureNone":134,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":252,"org.easymock.tests.UsageUnorderedTest.message":374,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":310,"org.easymock.tests2.ThreadingTest.testThreadSafe":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":402,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":206,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":191,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":214,"org.easymock.tests2.CaptureTest.testCapture_2617107":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":513,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":332,"org.easymock.tests2.UsageConstraintsTest.any":99,"org.easymock.tests2.StubTest.stub":468,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":357,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":241,"org.easymock.tests.UsageExpectAndThrowTest.longType":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":367,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":199,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":356,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":413,"org.easymock.tests2.SerializationTest.testClass":153,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests.LimitationsTest.mockNativeMethod":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":64,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":379,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":414,"org.easymock.tests2.NameTest.nameForMocksControl":450,"org.easymock.tests2.MockedExceptionTest.testMockedException":452,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":392,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":416,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":285,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":89,"org.easymock.tests.MockingTest.testNicePartialClassMocking":12,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":498,"org.easymock.tests2.CaptureTest.testCaptureLast":133,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":270,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":128,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":97,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":110,"org.easymock.tests.MockingTest.testTwoMocks":219,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":289,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":438,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":113,"org.easymock.samples.ExampleTest.removeNonExistingDocument":189,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":471,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":164,"org.easymock.tests2.ConstraintsToStringTest.andToString":511,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":158,"org.easymock.tests2.MockBuilderTest.testCreateMockString":431,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":393,"org.easymock.tests.UsageExpectAndThrowTest.floatType":283,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":444,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":484,"org.easymock.tests.UsageVerifyTest.twoThrows":216,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":71,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":148,"org.easymock.tests.LimitationsTest.privateConstructor":372,"org.easymock.tests2.UsageConstraintsTest.testNotNull":112,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":451,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":23,"org.easymock.tests2.UsageTest.defaultResetToNice":437,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":324,"org.easymock.tests.UsageVarargTest.differentLength":307,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":378,"org.easymock.tests2.CallbackTest.callback":459,"org.easymock.tests2.UsageConstraintsTest.equals":432,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":462,"org.easymock.tests.UsageTest.openCallCountByLastCall":35,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":248,"org.easymock.tests.UsageCallCountTest.tooFewCalls":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":275,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":515,"org.easymock.tests.UsageThrowableTest.throwCheckedException":20,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":494,"org.easymock.tests.MockingTest.testStrictClassMocking":217,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":375,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":382,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":126,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":445,"org.easymock.tests.ObjectMethodsTest.testHashCode":212,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":503,"org.easymock.tests2.NameTest.nameForNiceMock":449,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":160,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":501,"org.easymock.samples.ExampleTest.addDocument":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.DelegateToTest.testStubDelegate":161,"org.easymock.tests2.AnswerTest.stubAnswer":140,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":426,"org.easymock.tests.UsageVarargTest.varargLongAccepted":309,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":321,"org.easymock.tests.UsageExpectAndReturnTest.floatType":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":155,"org.easymock.tests2.ConstraintsToStringTest.orToString":508,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":477,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":107,"org.easymock.tests.UsageThrowableTest.noUpperLimit":247,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":486,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":181,"org.easymock.tests2.SerializationTest.test":154,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":46,"org.easymock.tests2.UsageConstraintsTest.testSame":95,"org.easymock.samples.SupportTest.addDocument":194,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":440,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":394,"org.easymock.tests.GenericTest.testPackageScope":27,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":476,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":221,"org.easymock.tests2.NameTest.nameForMock":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":430,"org.easymock.tests2.UsageStrictMockTest.differentMethods":86,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":463,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":295,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":67,"org.easymock.tests2.MockedExceptionTest.testRealException":454,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":231,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":506,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":361,"org.easymock.tests2.NameTest.nameForStrictMock":448,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":423,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":415,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":178,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":145,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":165,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":108,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":420,"org.easymock.tests2.UsageStrictMockTest.range":85,"org.easymock.tests2.UsageConstraintsTest.lessThan":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":473,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":502,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":398,"org.easymock.tests2.CaptureTest.testCaptureRightOne":136,"org.easymock.tests2.UsageConstraintsTest.testOr":96,"org.easymock.tests.UsageRangeTest.combination":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":142,"org.easymock.tests.UsageTest.wrongArguments":266,"org.easymock.tests2.MockBuilderTest.testWithConstructor":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":395,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":50,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":314,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":166,"org.easymock.tests.UsageVarargTest.varargShortAccepted":308,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":207,"org.easymock.tests2.UsageConstraintsTest.cmpTo":100,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":443,"org.easymock.tests2.CompareToTest.testLessThan":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":315,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests2.CaptureTest.testCaptureFromStub":184,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":351,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":421,"org.easymock.tests.UsageTest.unexpectedCallWithArray":265,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":235,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":205,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":59,"org.easymock.tests2.CaptureTest.testCapture":183,"org.easymock.tests2.UsageConstraintsTest.constraints":92,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":236,"org.easymock.samples.ExampleTest.addAndChangeDocument":190,"org.easymock.tests2.ConstraintsToStringTest.notToString":509,"org.easymock.tests.UsageStrictMockTest.testVerify":238,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":193,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":346,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":30,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":51,"org.easymock.tests.LimitationsTest.abstractClass":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":31,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":79,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":302}}]
