[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,22,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[37,38,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:491","sourceCode":"return new org.easymock.internal.MocksControl(org.easymock.MockType)","type":"CtReturnImpl"},"failures":[71,72,73,74,5,6,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,36,37,38,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,39,124,40,41,125,126,127,128,129,42,130,7,8,131,9,10,11,12,13,14,15,16,132,133,134,43,135,136,44,137,17,18,138,139,140,19,20,45,141,142,143,144,145,146,147,148,149,150,151,152,21,22,23,24,153,154,155,46,47,156,25,26,157,48,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,49,192,193,194,195,196,197,198,199,200,201,50,202,203,204,205,206,68,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,70,230,231,232,69,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,51,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,52,271,272,273,274,275,276,277,1,278,27,279,28,53,280,281,282,54,283,284,285,29,30,286,31,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,67,326,327,2,3,4,328,329,330,331,332,333,334,335,336,337,338,339,32,340,341,342,343,344,345,346,347,348,33,34,35,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,55,390,391,392,393,394,56,395,396,397,398,399,57,400,401,402,58,403,59,404,60,61,405,406,407,408,409,62,410,411,412,413,414,63,415,416,417,64,418,65,419,420,66,421,422,423,424,425,426,427,428,429,430,431,432,433,434,0,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[320],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[474],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[140],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[475],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[85,86,87,89,91,92,93,96,158,159,160,162,164,165,166,169,243,248],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[82,476,477,478,479,480,481,482,483,212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[189],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[77,80,81,50,290,293,294,337,354,355,356,408,411,412,414,416,66,0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[82,484,485,483,149,486,211,212,487,231,244,245],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[71,74,5,6,75,76,77,78,79,80,81,82,83,84,90,36,37,38,97,98,102,105,115,121,39,40,41,126,127,128,129,42,130,7,8,9,10,11,12,13,14,16,132,133,134,43,135,136,44,137,17,18,138,139,140,19,20,45,141,142,145,146,147,148,150,151,152,21,22,23,24,153,154,155,46,47,156,25,26,157,48,163,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,49,196,197,198,199,200,201,50,202,203,204,205,206,68,207,208,209,210,211,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,69,233,234,235,240,241,242,243,244,244,245,245,246,247,248,249,250,251,252,253,254,255,51,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,52,287,288,289,290,291,292,293,294,295,296,297,298,299,301,303,304,305,306,310,317,318,319,320,321,322,323,324,325,67,326,327,330,332,334,335,337,338,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,372,373,374,376,377,378,379,380,381,382,383,385,386,387,55,390,391,392,393,394,56,395,396,397,398,399,57,400,401,402,58,403,59,404,60,61,405,406,407,408,409,62,410,411,412,413,414,63,415,416,417,64,418,65,419,420,66,421,422,423,424,425,426,427,435,436,437,438,439,440,441,442,443,444,445,446,450,451,453,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[82,84,102,105,115,121,141,142,143,145,146,147,148,150,151,152,185,211,213,214,215,216,218,219,223,224,226,227,228,229,230,69,233,234,235,237,242,244,244,245,245,256,257,301,330,341,346,368,369,370,371,389,449,450,451,453,466,467,468,469,470,471,472,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[222,267,52,307,308,309,335,355,61,405,406,407,408,409,62,410,411,412,413,414,63,415,416,417,64,418,65,419,437,440,441,442,443,444],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[77,79,80,126,127,128,129,50,202,207,208,289,290,292,293,337,354,355,356,60,66,422,425,426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":8,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":420,"org.easymock.tests2.UsageTest.argumentsOrdered":208,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":279,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":204,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":243,"org.easymock.tests2.DelegateToTest.testReturnException":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":264,"org.easymock.tests.MockingTest.testPartialClassMocking":450,"org.easymock.tests.MockClassControlTest.testToString":468,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":125,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":109,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":61,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":477,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":14,"org.easymock.tests2.UsageTest.wrongArguments":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":349,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":96,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":298,"org.easymock.samples.ExampleTest.answerVsDelegate":250,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":346,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":455,"org.easymock.tests2.UsageConstraintsTest.testNull":10,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":226,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":473,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":179,"org.easymock.tests2.CaptureTest.testPrimitive":24,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":419,"org.easymock.tests.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":359,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":428,"org.easymock.tests.UsageTest.argumentsOrdered":426,"org.easymock.tests.UsageVarargTest.varargIntAccepted":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":481,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":141,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":168,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":262,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests.ReplayStateInvalidUsageTest.times":325,"org.easymock.tests2.DependencyTest.testClassMocking":238,"org.easymock.tests2.AnswerTest.answer":71,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":199,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":343,"org.easymock.tests2.UsageTest.strictResetToDefault":201,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":305,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":432,"org.easymock.tests2.DelegateToTest.testDelegate":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":417,"org.easymock.tests.LimitationsTest.mockFinalMethod":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":366,"org.easymock.tests2.DependencyTest.testClassMockingSupport":239,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":433,"org.easymock.tests2.CaptureTest.testCapture1_2446744":153,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":415,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":197,"org.easymock.tests.UsageThrowableTest.throwError":437,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":319,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":345,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":123,"org.easymock.samples.PartialClassMockTest.testGetArea":242,"org.easymock.tests.MockingTest.testInterfaceMocking":452,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":259,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":405,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":110,"org.easymock.tests2.UsageTest.niceToStrict":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":271,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":145,"org.easymock.tests2.MockBuilderTest.testCreateMock":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":118,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":93,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":412,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":457,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":296,"org.easymock.tests.UsageOverloadedMethodTest.overloading":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":114,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":335,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":399,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":269,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":134,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":156,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":375,"org.easymock.tests.MockClassControlTest.testEquals":472,"org.easymock.tests2.EasyMockSupportClassTest.testAll":102,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":418,"org.easymock.tests2.CaptureTest.testCaptureAll":22,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":364,"org.easymock.tests.MockNameTest.defaultName":300,"org.easymock.tests2.UsageConstraintsTest.testMatches":135,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":360,"org.easymock.samples.ExampleTest.voteForRemovals":254,"org.easymock.tests.UsageVarargTest.allKinds":383,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":354,"org.easymock.samples.BasicClassMockTest.testPrintContent":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":365,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":443,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":75,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":191,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":482,"org.easymock.tests2.UsageConstraintsTest.greaterThan":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":304,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":235,"org.easymock.samples.ExampleTest.voteForRemoval":251,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":316,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":37,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":347,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":229,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":200,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":301,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":172,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":263,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":187,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":173,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":395,"org.easymock.tests2.CaptureTest.testCapture2_2446744":157,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":97,"org.easymock.tests2.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":284,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":382,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":464,"org.easymock.tests.UsageExpectAndReturnTest.longType":392,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":362,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":65,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":139,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":64,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":357,"org.easymock.tests.UsageCallCountTest.tooManyCalls":465,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":396,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":95,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":409,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":442,"org.easymock.tests.MockingTest.testNiceClassMocking":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":214,"org.easymock.tests.MockingTest.testClassMocking":448,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":458,"org.easymock.tests2.UsageConstraintsTest.testContains":133,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":185,"org.easymock.tests2.UsageConstraintsTest.testFind":9,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":52,"org.easymock.tests.MockTypeTest.fromEasyMockClass":344,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":40,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":287,"org.easymock.tests.UsageExpectAndReturnTest.object":398,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":478,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":377,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":387,"org.easymock.tests.UsageTest.exactCallCountByLastCall":427,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":429,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":58,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":372,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":334,"org.easymock.tests.MockClassControlTest.testHashCode":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":159,"org.easymock.tests2.EasyMockSupportTest.testVerify":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":112,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":430,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":332,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":474,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":196,"org.easymock.tests.UsageVarargTest.varargCharAccepted":376,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":31,"org.easymock.tests2.UsageTest.openCallCountByLastCall":205,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":181,"org.easymock.tests.DefaultClassInstantiatorTest.object":310,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":307,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":385,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":88,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":158,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":470,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":403,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":2,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":121,"org.easymock.tests2.UsageTest.resumeIfFailure":209,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":266,"org.easymock.tests2.StubTest.stubWithReturnValue":222,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":483,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":397,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":140,"org.easymock.tests2.SerializationTest.testAllMockedMethod":84,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":54,"org.easymock.samples.SupportTest.voteForRemovals":247,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":367,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":63,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":286,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":72,"org.easymock.tests.UsageExpectAndThrowTest.object":413,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":340,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":18,"org.easymock.tests2.DelegateToTest.testWrongClass":190,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":435,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":436,"org.easymock.samples.ConstructorCalledMockTest.testTax":244,"org.easymock.tests.UsageStrictMockTest.range":292,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":194,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":414,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":147,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":99,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":297,"org.easymock.tests2.CaptureTest.testCaptureNone":47,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":35,"org.easymock.tests.UsageUnorderedTest.message":60,"org.easymock.tests.UsageVerifyTest.twoReturns":356,"org.easymock.tests.UsageVarargTest.varargByteAccepted":381,"org.easymock.tests2.ThreadingTest.testThreadSafe":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":116,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":462,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":388,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":256,"org.easymock.tests2.CaptureTest.testCapture_2617107":23,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":352,"org.easymock.tests2.UsageConstraintsTest.any":16,"org.easymock.tests2.StubTest.stub":221,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":324,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":4,"org.easymock.tests.UsageExpectAndThrowTest.longType":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":265,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":314,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":323,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":78,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests2.SerializationTest.testClass":82,"org.easymock.tests.LimitationsTest.mockNativeMethod":330,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":404,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":87,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":81,"org.easymock.tests2.NameTest.nameForMocksControl":129,"org.easymock.tests2.MockedExceptionTest.testMockedException":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":104,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":424,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":453,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":408,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":124,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":223,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":148,"org.easymock.tests.MockingTest.testNicePartialClassMocking":451,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":476,"org.easymock.tests2.CaptureTest.testCaptureLast":46,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":85,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":434,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":13,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":219,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":138,"org.easymock.tests.MockingTest.testTwoMocks":449,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":411,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":207,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":20,"org.easymock.samples.ExampleTest.removeNonExistingDocument":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":92,"org.easymock.tests.UsageStrictMockTest.differentMethods":293,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":160,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":312,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":38,"org.easymock.tests2.MockBuilderTest.testCreateMockString":152,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":466,"org.easymock.tests.UsageExpectAndThrowTest.floatType":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":106,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":101,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":487,"org.easymock.tests.UsageVerifyTest.twoThrows":355,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":115,"org.easymock.samples.ExampleTest.voteAgainstRemoval":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":28,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":234,"org.easymock.tests.LimitationsTest.privateConstructor":329,"org.easymock.tests2.UsageConstraintsTest.testNotNull":19,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":444,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":183,"org.easymock.tests2.UsageTest.defaultResetToNice":68,"org.easymock.samples.ExampleTest.voteAgainstRemovals":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":53,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":86,"org.easymock.tests.UsageVarargTest.differentLength":378,"org.easymock.tests2.CallbackTest.callback":41,"org.easymock.tests2.UsageConstraintsTest.equals":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":231,"org.easymock.tests.UsageTest.openCallCountByLastCall":423,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":351,"org.easymock.tests.UsageCallCountTest.tooFewCalls":460,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":299,"org.easymock.tests.UsageThrowableTest.throwCheckedException":441,"org.easymock.tests.MockingTest.testStrictClassMocking":447,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":446,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":91,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":215,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":67,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":217,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":6,"org.easymock.tests.ObjectMethodsTest.testHashCode":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":480,"org.easymock.tests2.NameTest.nameForNiceMock":128,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":98,"org.easymock.tests2.DependencyTest.testInterfaceMocking":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":479,"org.easymock.samples.ExampleTest.addDocument":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":117,"org.easymock.tests2.DelegateToTest.testStubDelegate":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":122,"org.easymock.tests2.AnswerTest.stubAnswer":5,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":290,"org.easymock.tests.UsageVarargTest.varargLongAccepted":380,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":27,"org.easymock.tests.UsageExpectAndReturnTest.floatType":391,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":211,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":245,"org.easymock.tests.UsageThrowableTest.noUpperLimit":438,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":167,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":137,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":130,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":192,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":154,"org.easymock.tests2.SerializationTest.test":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":390,"org.easymock.tests2.UsageConstraintsTest.testSame":11,"org.easymock.samples.SupportTest.addDocument":246,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":107,"org.easymock.tests.GenericTest.testPackageScope":368,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":275,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":166,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":454,"org.easymock.tests2.NameTest.nameForMock":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":486,"org.easymock.tests2.UsageStrictMockTest.differentMethods":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":232,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":416,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":306,"org.easymock.tests2.MockedExceptionTest.testRealException":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":280,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":327,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":350,"org.easymock.tests2.NameTest.nameForStrictMock":127,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":144,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":39,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":227,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":193,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":17,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":313,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":142,"org.easymock.tests2.UsageStrictMockTest.range":79,"org.easymock.tests2.UsageConstraintsTest.lessThan":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":111,"org.easymock.tests2.CaptureTest.testCaptureRightOne":25,"org.easymock.tests2.UsageConstraintsTest.testOr":12,"org.easymock.tests.UsageRangeTest.combination":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":224,"org.easymock.tests.UsageTest.wrongArguments":422,"org.easymock.tests2.MockBuilderTest.testWithConstructor":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":108,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":272,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":315,"org.easymock.tests.UsageVarargTest.varargShortAccepted":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":463,"org.easymock.tests2.UsageConstraintsTest.cmpTo":132,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":274,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":206,"org.easymock.tests2.CaptureTest.testCaptureFromStub":26,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":318,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":143,"org.easymock.tests.UsageTest.unexpectedCallWithArray":421,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":401,"org.easymock.tests2.UsageConstraintsTest.constraints":7,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.samples.ExampleTest.addAndChangeDocument":51,"org.easymock.tests.UsageStrictMockTest.testVerify":295,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":248,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":363,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":56,"org.easymock.tests.LimitationsTest.abstractClass":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":261,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":176,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":373}}]
