[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:95","failures":[18,19,20,21,22,23,24,25,26,27,28],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1121","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,18,19,74,75,20,76,21,22,77,23,78,79,80,81,82,83,84,85,86,24,87,88,89,90,25,91,92,93,94,95,96,97,29,98,99,100,101,102,103,104,105,106,107,108,109,30,110,111,31,112,113,114,32,115,116,117,33,34,35,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,26,136,27,137,138,139,140,141,142,143,28,144,145,146,147,148,149,150,151,152,153,154,155,36,37,156,0,1,2,3,4,157,158,159,160,38,161,39,40,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,41,42,43,44,298,5,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,45,321,6,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,7,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,8,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,46,435,47,48,436,437,438,439,440,441,442,443,444,445,446,447,9,10,11,12,13,14,15,16,17,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,49,464,465,466,467,468,50,51,52,469,470,471,472,473,474,475,476,477,478,479,480,481,482,53,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:409","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[213,216,217,218,231,233,234,254,496],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjenesisClassInstantiator:26","sourceCode":"return org.objenesis.ObjenesisHelper.org.objenesis.ObjenesisHelper.newInstance(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[503,504,505,102,506,507,508,509,510,106,115,157,158,246,247],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[126,127],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,18,19,74,75,20,76,21,22,77,23,78,79,80,81,82,83,84,85,86,24,87,88,89,90,25,91,92,94,503,95,96,504,97,29,98,99,505,100,102,103,104,507,105,106,107,108,109,30,110,111,31,112,113,114,32,115,116,117,33,34,35,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,26,136,27,137,138,139,140,141,142,143,28,144,145,146,147,150,151,152,153,154,155,36,37,156,0,1,2,3,4,157,158,511,159,160,38,161,39,40,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,244,245,246,246,247,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,41,42,43,44,298,5,45,321,6,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,7,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,8,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,46,435,47,48,436,437,438,439,440,441,442,443,444,445,446,447,9,10,11,12,13,14,15,16,17,448,449,450,451,512,452,453,454,455,456,457,513,458,459,460,461,462,463,49,464,465,466,467,468,50,51,52,469,470,471,472,473,474,475,476,477,478,479,480,481,482,53,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[514,114,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[293],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[515,512,513],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[39,203,209,210,516,426,434,47,441,442,445,446,479,480,502],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[131,133,134,135,254,402,498],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[517],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[456,518,519],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[232],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[59,60,61,62,63,64,65,67,68,69,70,71,19,20,22,77,78,79,81,84,24,87,88,89,90,25,29,99,100,106,107,108,109,30,110,111,31,112,32,34,128,129,131,133,135,26,136,27,137,139,140,141,142,143,28,146,36,37,3,157,160,38,161,39,40,162,166,169,179,185,193,200,201,203,204,205,209,210,212,213,216,224,234,235,236,237,238,240,241,242,244,245,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,278,279,281,282,283,285,286,288,289,290,291,292,294,295,41,45,321,6,322,332,333,335,340,345,361,362,363,365,366,395,426,433,434,46,435,47,48,436,438,442,445,446,447,461,462,49,468,470,479,480,489,490,492,496,498,499,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[232],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[132],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[520,521,522,503,504,505,102,506,507,106,157,158,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,237,242,243,246,247],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[72,85,90,523],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[39,203,209,210,516,426,434,47,441,442,445,446,479,480],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[94,524,95,96,29,98,99,100,103,104,525,105,106,108,109,30,111,31,112,113,32,117,33,34,35,526,3,157,166,169,179,185,235,236,237,238,241,242,244,245,246,246,247,247,249,294,295,296,351,367,372,395,438,488,489,490,492],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[106,107,108,527],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[106,107,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"position":"org.easymock.ConstructorArgs:60","failures":[520,521,503,504,505,506,507,158,237,242,243],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[522],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[19,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[208],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:124","failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,18,19,75,20,76,21,22,77,78,79,80,81,82,83,84,85,86,24,87,88,89,90,25,91,92,94,95,29,98,99,100,103,104,105,106,107,108,109,30,110,111,31,112,113,32,117,33,34,35,120,121,122,123,124,126,127,128,129,131,132,133,135,26,136,27,137,138,139,140,141,142,143,28,144,145,146,36,37,156,0,1,2,3,4,157,159,160,38,161,39,40,162,166,169,179,185,193,200,201,202,203,204,205,206,207,208,209,210,211,212,213,216,217,218,224,231,233,234,235,236,237,238,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,528,528,278,279,280,281,282,283,285,286,287,288,289,290,291,292,294,295,41,43,44,298,5,45,321,6,322,323,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,360,361,362,363,364,365,366,375,376,395,426,427,428,429,430,431,432,433,434,46,435,47,48,436,438,439,440,441,442,443,444,445,446,447,12,13,14,15,16,17,448,449,450,451,459,460,461,462,463,49,464,465,466,467,468,50,51,52,469,470,471,472,473,474,478,479,480,481,482,53,483,484,489,490,492,496,498,499,502],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[94,524,95,96,29,98,99,100,103,104,525,105,106,108,109,30,111,31,112,113,32,117,33,34,35,526,3,157,166,169,179,185,235,236,237,238,241,242,244,245,246,246,247,247,249,294,295,296,351,367,372,395,438,488,489,490,492],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":19,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":439,"org.easymock.tests2.UsageTest.argumentsOrdered":210,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":409,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":205,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":248,"org.easymock.tests2.DelegateToTest.testReturnException":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":13,"org.easymock.tests.MockingTest.testPartialClassMocking":489,"org.easymock.tests.MockClassControlTest.testToString":352,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":54,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":173,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":330,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":37,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":320,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":45,"org.easymock.tests2.UsageTest.wrongArguments":203,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":450,"org.easymock.samples.ExampleTest.answerVsDelegate":254,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":372,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":494,"org.easymock.tests2.UsageConstraintsTest.testNull":20,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":68,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":357,"org.easymock.tests2.CaptureTest.testPrimitive":137,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":323,"org.easymock.tests.UsageTest.moreThanOneArgument":440,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":349,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":53,"org.easymock.tests.UsageTest.argumentsOrdered":446,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":377,"org.easymock.tests.UsageVarargTest.varargIntAccepted":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":269,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":229,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":402,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":273,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":304,"org.easymock.tests.ReplayStateInvalidUsageTest.times":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":193,"org.easymock.tests2.DependencyTest.testClassMocking":154,"org.easymock.tests2.AnswerTest.answer":213,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":416,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":123,"org.easymock.tests2.CaptureTest.testAnd":26,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":369,"org.easymock.tests2.UsageTest.strictResetToDefault":201,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":504,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":482,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":63,"org.easymock.tests2.DelegateToTest.testDelegate":135,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":381,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":345,"org.easymock.tests.LimitationsTest.mockFinalMethod":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":431,"org.easymock.tests2.DependencyTest.testClassMockingSupport":155,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":475,"org.easymock.tests2.CaptureTest.testCapture1_2446744":138,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":114,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":121,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.UsageThrowableTest.throwError":261,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":371,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":484,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":508,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":520,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":187,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":307,"org.easymock.samples.PartialClassMockTest.testGetArea":249,"org.easymock.tests.MockingTest.testInterfaceMocking":491,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests2.CompareToTest.testLessOrEqual":523,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":174,"org.easymock.tests2.UsageTest.niceToStrict":204,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":331,"org.easymock.tests2.ThreadingTest.testChangeDefault":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":29,"org.easymock.tests2.MockBuilderTest.testCreateMock":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":182,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":196,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":339,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":425,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":448,"org.easymock.tests.UsageOverloadedMethodTest.overloading":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":178,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":499,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":50,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":278,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":518,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":81,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":143,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":284,"org.easymock.tests2.EasyMockSupportClassTest.testAll":166,"org.easymock.tests.MockClassControlTest.testEquals":356,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":347,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":429,"org.easymock.tests2.CaptureTest.testCaptureAll":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":122,"org.easymock.tests.MockNameTest.defaultName":485,"org.easymock.tests2.UsageConstraintsTest.testMatches":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":483,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":382,"org.easymock.samples.ExampleTest.voteForRemovals":258,"org.easymock.tests.UsageVarargTest.allKinds":292,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":430,"org.easymock.samples.BasicClassMockTest.testPrintContent":245,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":267,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":159,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":226,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":513,"org.easymock.tests2.UsageConstraintsTest.greaterThan":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":42,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":35,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":308,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":458,"org.easymock.samples.ExampleTest.voteForRemoval":255,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":126,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":118,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":113,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":300,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":438,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":200,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":61,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":12,"org.easymock.tests2.CaptureTest.testCaptureFirst":146,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":62,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":502,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":465,"org.easymock.tests2.CaptureTest.testCapture2_2446744":145,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":128,"org.easymock.tests2.UsageTest.moreThanOneArgument":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":104,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":291,"org.easymock.tests.GenericTest.testBridgedEquals":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":365,"org.easymock.tests.UsageExpectAndReturnTest.longType":462,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":427,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":59,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":525,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":348,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":89,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":277,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":481,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":10,"org.easymock.tests.UsageCallCountTest.tooManyCalls":366,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":466,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":335,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":266,"org.easymock.tests.MockingTest.testNiceClassMocking":495,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":236,"org.easymock.tests.MockingTest.testClassMocking":487,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":524,"org.easymock.tests2.UsageConstraintsTest.testContains":80,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":359,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":3,"org.easymock.tests2.UsageConstraintsTest.testFind":75,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":280,"org.easymock.tests.MockTypeTest.fromEasyMockClass":370,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":432,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":233,"org.easymock.tests.UsageExpectAndReturnTest.object":468,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":67,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":286,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":327,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":522,"org.easymock.tests.UsageTest.exactCallCountByLastCall":447,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":274,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":471,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":281,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":498,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":220,"org.easymock.tests.MockClassControlTest.testHashCode":355,"org.easymock.tests2.EasyMockSupportTest.testVerify":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":176,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":379,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":120,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":153,"org.easymock.tests.UsageVarargTest.varargCharAccepted":285,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":512,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastCall":206,"org.easymock.tests.DefaultClassInstantiatorTest.object":452,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":423,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":325,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":337,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":191,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":33,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":306,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":354,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":336,"org.easymock.tests.CapturesMatcherTest.test":528,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":472,"org.easymock.tests.ReplayStateInvalidCallsTest.times":312,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":9,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":185,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":353,"org.easymock.tests2.UsageTest.resumeIfFailure":211,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":367,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":15,"org.easymock.tests2.StubTest.stubWithReturnValue":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":505,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":467,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":90,"org.easymock.tests2.SerializationTest.testAllMockedMethod":108,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":415,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":510,"org.easymock.samples.SupportTest.voteForRemovals":252,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":342,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":527,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":421,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":214,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":276,"org.easymock.tests.UsageExpectAndThrowTest.object":340,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":87,"org.easymock.tests2.DelegateToTest.testWrongClass":133,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":375,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":376,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":246,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":151,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":341,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":99,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":163,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":449,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":302,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":399,"org.easymock.tests2.CaptureTest.testCaptureNone":142,"org.easymock.tests.UsageUnorderedTest.message":426,"org.easymock.tests.UsageVerifyTest.twoReturns":480,"org.easymock.tests.UsageVarargTest.varargByteAccepted":290,"org.easymock.tests2.ThreadingTest.testThreadSafe":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":180,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":363,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":244,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":328,"org.easymock.tests2.CaptureTest.testCapture_2617107":27,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":322,"org.easymock.tests2.UsageConstraintsTest.any":78,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":389,"org.easymock.tests2.StubTest.stub":156,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":14,"org.easymock.tests.UsageExpectAndThrowTest.longType":333,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":456,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":161,"org.easymock.tests2.SerializationTest.testClass":106,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests.LimitationsTest.mockNativeMethod":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":474,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":190,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":318,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":162,"org.easymock.tests2.NameTest.nameForMocksControl":58,"org.easymock.tests2.MockedExceptionTest.testMockedException":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":168,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":444,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":492,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":334,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":100,"org.easymock.tests.MockingTest.testNicePartialClassMocking":490,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":112,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":188,"org.easymock.tests2.CaptureTest.testCaptureLast":141,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":476,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":22,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":242,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":317,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":88,"org.easymock.tests.MockingTest.testTwoMocks":488,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":314,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":459,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":338,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":209,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":91,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":514,"org.easymock.samples.ExampleTest.removeNonExistingDocument":259,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":221,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":454,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":93,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":127,"org.easymock.tests2.MockBuilderTest.testCreateMockString":105,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":170,"org.easymock.tests.UsageExpectAndThrowTest.floatType":332,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":165,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":511,"org.easymock.tests.UsageVerifyTest.twoThrows":479,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":179,"org.easymock.samples.ExampleTest.voteAgainstRemoval":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":397,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":34,"org.easymock.tests.LimitationsTest.privateConstructor":394,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":521,"org.easymock.tests2.UsageConstraintsTest.testNotNull":25,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":268,"org.easymock.tests2.UsageTest.defaultResetToNice":208,"org.easymock.samples.ExampleTest.voteAgainstRemovals":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":189,"org.easymock.tests.UsageVarargTest.differentLength":287,"org.easymock.tests2.CallbackTest.callback":234,"org.easymock.tests2.UsageConstraintsTest.equals":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":115,"org.easymock.tests.UsageTest.openCallCountByLastCall":443,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":6,"org.easymock.tests.UsageCallCountTest.tooFewCalls":361,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":451,"org.easymock.tests.UsageThrowableTest.throwCheckedException":265,"org.easymock.tests.MockingTest.testStrictClassMocking":486,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":194,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":237,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":240,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":218,"org.easymock.tests.ObjectMethodsTest.testHashCode":326,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":517,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":129,"org.easymock.tests2.NameTest.nameForNiceMock":57,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":316,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":311,"org.easymock.tests2.DependencyTest.testInterfaceMocking":36,"org.easymock.samples.ExampleTest.addDocument":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.DelegateToTest.testStubDelegate":132,"org.easymock.tests2.AnswerTest.stubAnswer":217,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":46,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":101,"org.easymock.tests.UsageVarargTest.varargLongAccepted":289,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":473,"org.easymock.tests.UsageExpectAndReturnTest.floatType":461,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":157,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":247,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":500,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":228,"org.easymock.tests.UsageThrowableTest.noUpperLimit":262,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":147,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":139,"org.easymock.tests2.SerializationTest.test":107,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":519,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":460,"org.easymock.tests2.UsageConstraintsTest.testSame":76,"org.easymock.samples.SupportTest.addDocument":251,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":515,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":239,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":301,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":171,"org.easymock.tests.GenericTest.testPackageScope":294,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":227,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":493,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":299,"org.easymock.tests2.NameTest.nameForMock":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":507,"org.easymock.tests2.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":463,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":344,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":324,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":44,"org.easymock.tests2.MockedExceptionTest.testRealException":4,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":38,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":321,"org.easymock.tests2.NameTest.nameForStrictMock":56,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":97,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":150,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":455,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":24,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":95,"org.easymock.tests2.UsageStrictMockTest.range":39,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":305,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":175,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.UsageConstraintsTest.testOr":21,"org.easymock.tests.UsageRangeTest.combination":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":30,"org.easymock.tests.UsageTest.wrongArguments":442,"org.easymock.tests2.MockBuilderTest.testWithConstructor":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":172,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":351,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":52,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":457,"org.easymock.tests.UsageVarargTest.varargShortAccepted":288,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":364,"org.easymock.tests2.UsageConstraintsTest.cmpTo":79,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":319,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":215,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":207,"org.easymock.tests2.CaptureTest.testCaptureFromStub":144,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":383,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":96,"org.easymock.tests.UsageTest.unexpectedCallWithArray":441,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":315,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":434,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":362,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":469,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":435,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.samples.ExampleTest.addAndChangeDocument":260,"org.easymock.tests.UsageStrictMockTest.testVerify":437,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":250,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":428,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":140,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":526,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":464,"org.easymock.tests.LimitationsTest.abstractClass":393,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":65,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":282}}]
