[{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[0,0,1,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[3,4,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[11,3,12,7,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[14,0,1,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,11,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,2,238,239,240,241,242,3,12,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,8,9,10,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,5,6,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,7,13,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[489,40,59,65],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[42,43,46,48,49,51,61,66,90,92,100],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[42,43,46,48,49,51,61,66,90,92,100],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,33,34,35,36,37,39,40,41,42,43,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,75,79,81,83,87,90,91,92,93,95,96,97,98,99,100,103,104,105,106,107,108,109,112,115,116,117,120,121,124,127,134,141,142,143,144,145,146,150,151,152,153,156,157,158,165,173,174,177,185,186,187,188,189,190,192,193,194,196,197,198,199,200,201,202,204,205,206,207,208,212,215,225,231,234,237,2,238,239,240,241,242,3,12,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,291,292,294,328,334,335,336,337,338,339,341,344,345,346,347,367,371,375,376,383,384,388,389,414,415,416,418,419,420,421,422,423,424,425,436,438,439,440,441,442,447,448,449,450,451,465,467,5,6,468,470,471,472,473,475,476,477,478,479,480,481,482,483,7,13,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[14,0,0,1,1,24,25,29,73,490,75,76,79,80,81,83,86,87,491,89,104,105,107,108,109,110,112,11,115,116,117,127,187,188,189,190,193,194,492,493,494,495,212,215,225,231,244,246,290,291,292,294,315,320,347,383,384,385,427,436],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[363,496,497],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if (int != int) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"length":"i","initArgs":"methodArgs","paramTypes":"methodTypes"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[498,499,500,501,143,144,150,151,502,503,504,339,340,341,344,345,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[505,506,507,508,509],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[359,360,361,362,364,366],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"clazz","throwableClass":"clazz"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[14,0,0,1,1,15,16,17,18,19,20,22,23,24,25,26,27,28,29,33,34,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,79,81,83,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,11,115,116,117,120,121,122,123,124,125,126,127,128,134,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,158,165,172,173,174,175,176,177,185,186,187,188,189,190,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,212,215,225,231,234,235,236,237,2,238,239,240,241,242,3,12,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,8,9,10,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,290,291,292,294,310,311,312,313,314,323,324,325,326,327,328,330,331,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,367,368,369,370,371,372,374,375,376,377,378,379,380,381,383,384,385,387,388,389,406,412,414,415,416,418,419,420,421,422,423,424,425,426,436,438,439,440,441,442,443,447,448,449,450,451,453,461,462,463,464,465,466,467,5,6,468,470,471,472,473,475,476,477,478,479,480,481,482,483,7,13,484,485,486,487,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,78,79,80,81,83,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,11,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,182,183,184,185,186,187,188,190,192,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,214,215,216,217,220,223,225,226,227,228,229,230,231,234,235,236,237,2,238,239,240,241,242,3,12,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,8,9,10,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,5,6,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,7,13,484,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,29,30,510,511,74,77,82,85,512,88,189,194,195,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,244],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[43,49,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[363,496,497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[14,0,0,1,1,24,25,29,73,490,75,76,79,80,81,83,86,87,491,89,104,105,107,108,109,110,112,11,115,116,117,127,187,188,189,190,193,194,493,212,215,225,231,244,246,290,291,292,294,315,320,347,383,384,385,427,436],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[270,272,286,287,310,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[244,245,246],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[14,0,0,1,1,24,25,29,73,75,79,80,81,83,86,87,89,104,105,107,108,109,110,112,11,115,116,117,127,187,188,189,190,193,194,212,215,225,231,244,246,290,291,292,294,347,383,384,385,386,427,433,436],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[360,364],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[14,0,1,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,11,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,2,238,239,240,241,242,3,12,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,8,9,10,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,5,6,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,7,13,484,485,486,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":43,"org.easymock.tests2.UsageTest.argumentsOrdered":151,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":338,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":206,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":400,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":146,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":23,"org.easymock.tests2.DelegateToTest.testReturnException":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":462,"org.easymock.tests.MockingTest.testPartialClassMocking":291,"org.easymock.tests.MockClassControlTest.testToString":428,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":32,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":247,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":157,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":438,"org.easymock.tests2.UsageTest.wrongArguments":144,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":171,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":445,"org.easymock.samples.ExampleTest.answerVsDelegate":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":320,"org.easymock.tests2.UsageConstraintsTest.testNull":46,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":296,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":107,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":205,"org.easymock.tests2.CaptureTest.testPrimitive":93,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":442,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":266,"org.easymock.tests.UsageTest.moreThanOneArgument":339,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":312,"org.easymock.tests.UsageTest.argumentsOrdered":345,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":348,"org.easymock.tests.UsageVarargTest.varargIntAccepted":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":447,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":509,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":73,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":139,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":451,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":165,"org.easymock.tests.ReplayStateInvalidUsageTest.times":306,"org.easymock.tests2.DependencyTest.testClassMocking":154,"org.easymock.tests2.AnswerTest.answer":234,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":407,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":72,"org.easymock.tests2.CaptureTest.testAnd":90,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":317,"org.easymock.tests2.UsageTest.strictResetToDefault":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":11,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":336,"org.easymock.tests2.DelegateToTest.testDelegate":177,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":262,"org.easymock.tests.LimitationsTest.mockFinalMethod":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":465,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":357,"org.easymock.tests2.DependencyTest.testClassMockingSupport":155,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":330,"org.easymock.tests2.CaptureTest.testCapture1_2446744":94,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":70,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":300,"org.easymock.tests.UsageThrowableTest.throwError":374,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":319,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":140,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":314,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":233,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":293,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":301,"org.easymock.tests2.CompareToTest.testLessOrEqual":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":448,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":487,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":460,"org.easymock.tests2.UsageTest.niceToStrict":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.MockBuilderTest.testCreateMock":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":228,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":168,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":256,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":201,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":316,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":468,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":443,"org.easymock.tests.UsageOverloadedMethodTest.overloading":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":230,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":56,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":326,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":279,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":496,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":55,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":99,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":417,"org.easymock.tests.MockClassControlTest.testEquals":432,"org.easymock.tests2.EasyMockSupportClassTest.testAll":212,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":384,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":264,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":492,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":71,"org.easymock.tests2.CaptureTest.testCaptureAll":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":355,"org.easymock.tests.MockNameTest.defaultName":373,"org.easymock.tests2.UsageConstraintsTest.testMatches":57,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":313,"org.easymock.samples.ExampleTest.voteForRemovals":20,"org.easymock.tests.UsageVarargTest.allKinds":425,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":467,"org.easymock.samples.BasicClassMockTest.testPrintContent":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":356,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":380,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":466,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":136,"org.easymock.tests2.UsageConstraintsTest.greaterThan":59,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":335,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":117,"org.easymock.samples.ExampleTest.voteForRemoval":17,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":366,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":121,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":118,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":321,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":110,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":141,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":347,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":198,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":461,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":172,"org.easymock.tests2.CaptureTest.testCaptureFirst":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":199,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":153,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":275,"org.easymock.tests2.UsageTest.moreThanOneArgument":143,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":123,"org.easymock.tests2.CaptureTest.testCapture2_2446744":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":408,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":87,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":424,"org.easymock.tests.GenericTest.testBridgedEquals":386,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":475,"org.easymock.tests.UsageExpectAndReturnTest.longType":271,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":353,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":491,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":265,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":64,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":310,"org.easymock.tests.UsageCallCountTest.tooManyCalls":476,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":229,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":379,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":188,"org.easymock.tests.MockingTest.testNiceClassMocking":297,"org.easymock.tests.MockingTest.testClassMocking":289,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":490,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":469,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":127,"org.easymock.tests2.UsageConstraintsTest.testFind":45,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":389,"org.easymock.tests.MockTypeTest.fromEasyMockClass":318,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":479,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":39,"org.easymock.tests.UsageExpectAndReturnTest.object":278,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":204,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":419,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":458,"org.easymock.tests.UsageTest.exactCallCountByLastCall":346,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":504,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":30,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":414,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":325,"org.easymock.tests.MockClassControlTest.testHashCode":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":130,"org.easymock.tests2.EasyMockSupportTest.testVerify":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":222,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":350,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":69,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":159,"org.easymock.tests.UsageVarargTest.varargCharAccepted":418,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":358,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastCall":147,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":207,"org.easymock.tests.DefaultClassInstantiatorTest.object":359,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":368,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":254,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":495,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":377,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":163,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":129,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":430,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":115,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":253,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":8,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":231,"org.easymock.tests2.UsageTest.resumeIfFailure":152,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":464,"org.easymock.tests2.StubTest.stubWithReturnValue":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":277,"org.easymock.tests2.SerializationTest.testAllMockedMethod":246,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":406,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":506,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":500,"org.easymock.samples.SupportTest.voteForRemovals":28,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":382,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":259,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":412,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":235,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":454,"org.easymock.tests.UsageExpectAndThrowTest.object":257,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":62,"org.easymock.tests2.DelegateToTest.testWrongClass":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":477,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":478,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":183,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":258,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":209,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":308,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":444,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":502,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":488,"org.easymock.tests2.CaptureTest.testCaptureNone":98,"org.easymock.tests.UsageUnorderedTest.message":367,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":423,"org.easymock.tests2.ThreadingTest.testThreadSafe":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":226,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":473,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":459,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":24,"org.easymock.tests2.CaptureTest.testCapture_2617107":92,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":501,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":410,"org.easymock.tests2.UsageConstraintsTest.any":52,"org.easymock.tests2.StubTest.stub":185,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndThrowTest.longType":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":363,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":304,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":242,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":134,"org.easymock.tests2.SerializationTest.testClass":244,"org.easymock.tests.LimitationsTest.mockNativeMethod":436,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":385,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":287,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":494,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":162,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":243,"org.easymock.tests2.NameTest.nameForMocksControl":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":164,"org.easymock.tests2.MockedExceptionTest.testMockedException":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":214,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":343,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":38,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":251,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":294,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":83,"org.easymock.tests.MockingTest.testNicePartialClassMocking":292,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":507,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":160,"org.easymock.tests2.CaptureTest.testCaptureLast":97,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":331,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":49,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":194,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":63,"org.easymock.tests.MockingTest.testTwoMocks":290,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":195,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":255,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":150,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":67,"org.easymock.samples.ExampleTest.removeNonExistingDocument":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":167,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":302,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":131,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":361,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":122,"org.easymock.tests2.MockBuilderTest.testCreateMockString":89,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":216,"org.easymock.tests.UsageExpectAndThrowTest.floatType":249,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":211,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":31,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":225,"org.easymock.samples.ExampleTest.voteAgainstRemoval":18,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":116,"org.easymock.tests.LimitationsTest.privateConstructor":435,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":511,"org.easymock.tests2.UsageConstraintsTest.testNotNull":66,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":381,"org.easymock.tests2.UsageTest.defaultResetToNice":149,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":283,"org.easymock.tests.UsageVarargTest.differentLength":420,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":161,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests2.UsageConstraintsTest.equals":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":113,"org.easymock.tests.UsageTest.openCallCountByLastCall":342,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":440,"org.easymock.tests.UsageCallCountTest.tooFewCalls":471,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":446,"org.easymock.tests.UsageThrowableTest.throwCheckedException":378,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":503,"org.easymock.tests.MockingTest.testStrictClassMocking":288,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":372,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":166,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":192,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":238,"org.easymock.tests.ObjectMethodsTest.testHashCode":457,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":508,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":124,"org.easymock.tests2.NameTest.nameForNiceMock":35,"org.easymock.tests2.DependencyTest.testInterfaceMocking":156,"org.easymock.samples.ExampleTest.addDocument":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":227,"org.easymock.tests2.DelegateToTest.testStubDelegate":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":232,"org.easymock.tests2.AnswerTest.stubAnswer":2,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":482,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":84,"org.easymock.tests.UsageVarargTest.varargLongAccepted":422,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndReturnTest.floatType":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":29,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":138,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":60,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageThrowableTest.noUpperLimit":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":41,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":178,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":95,"org.easymock.tests2.SerializationTest.test":245,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":497,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":360,"org.easymock.tests2.UsageConstraintsTest.testSame":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":269,"org.easymock.samples.SupportTest.addDocument":27,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":191,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":217,"org.easymock.tests.GenericTest.testPackageScope":383,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":137,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":295,"org.easymock.tests2.NameTest.nameForMock":33,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":280,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":114,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":261,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":455,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":337,"org.easymock.tests2.MockedExceptionTest.testRealException":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":403,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":439,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":309,"org.easymock.tests2.NameTest.nameForStrictMock":34,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":78,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":37,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":108,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":182,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":61,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":362,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":75,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":197,"org.easymock.tests2.CaptureTest.testCaptureRightOne":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":221,"org.easymock.tests2.UsageConstraintsTest.testOr":48,"org.easymock.tests.UsageRangeTest.combination":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":105,"org.easymock.tests.UsageTest.wrongArguments":341,"org.easymock.tests2.MockBuilderTest.testWithConstructor":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":218,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":281,"org.easymock.tests.UsageVarargTest.varargShortAccepted":421,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":474,"org.easymock.tests2.UsageConstraintsTest.cmpTo":53,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":393,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":148,"org.easymock.tests2.CaptureTest.testCaptureFromStub":101,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":299,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":76,"org.easymock.tests.UsageTest.unexpectedCallWithArray":340,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":481,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":472,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":512,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":282,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":483,"org.easymock.tests2.UsageConstraintsTest.constraints":42,"org.easymock.samples.ExampleTest.addAndChangeDocument":22,"org.easymock.tests.UsageStrictMockTest.testVerify":485,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":26,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":354,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":96,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":493,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":449,"org.easymock.tests.LimitationsTest.abstractClass":434,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":450,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":415,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":202}}]
