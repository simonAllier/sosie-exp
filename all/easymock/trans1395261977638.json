[{"transplant":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[66,2,3,5,20,23,32,67,68,69,70,71,72,34,40,41,46,73,57,74,75,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[87,88,89,90,91],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[92],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:70","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[23,93],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[94,95,96,97,98,99,100,101,102,103,104,4,105,106,107,108,7,22,109,110,111,112,113,114,115,116,117,118,119,120,68,121,122,123,124,125,126,127,128,129,72,130,131,132,133,134,135,136,137,138,139,140,141,50,51,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,57,159,160,161,162,163,164,165,166,167,168,169,170,171,172,86,173,174,175,176,177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[179,180,181,182,183,184,185,66,186,187,188,189,190,190,191,191,192,193,194,0,195,94,196,197,198,199,200,1,201,202,95,203,204,96,205,206,207,2,208,3,209,210,211,212,213,98,99,214,215,216,217,218,219,220,221,222,223,224,225,104,226,4,105,106,107,108,5,6,7,8,227,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,228,229,230,231,232,109,110,233,234,235,236,237,238,239,240,241,242,67,243,244,245,246,247,248,249,250,111,251,252,113,253,116,254,255,256,118,257,258,119,68,69,70,71,259,260,261,262,263,264,265,266,122,267,268,269,124,270,126,271,272,273,274,275,276,129,277,72,130,131,132,278,279,280,133,134,135,136,33,34,35,36,37,38,39,40,41,42,43,44,45,46,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,73,47,48,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,137,326,327,328,329,49,138,139,140,330,331,332,333,334,335,336,337,141,338,50,51,142,143,144,145,339,146,340,341,342,343,344,147,148,149,345,346,347,348,349,350,351,150,151,352,353,152,354,355,153,154,155,52,53,54,55,56,356,156,357,358,157,158,57,359,360,361,362,58,363,364,365,366,159,367,160,161,368,369,162,163,164,74,370,371,372,373,374,75,375,376,377,378,379,76,380,381,382,77,383,78,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,79,427,428,429,80,430,431,432,433,434,435,436,81,437,438,439,440,441,82,442,443,444,445,446,83,447,448,449,84,450,85,451,165,452,59,60,61,62,63,167,169,171,453,454,455,456,172,86,173,174,457,458,175,176,177,64,65,459,460,461,462,463,464,465,466],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[343,345,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,25,26,30,31,33,34,35,36,43,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[212,231],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[206,87,467,468,469,88,89,470],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[132],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[471,472,473,474,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[106,130,133,134,476,139,140,50,143,57,173,174,175,176],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[464],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:324","failures":[139,399,400],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[106,130,133,134,476,139,140,50,143,57,173,174,175,176],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38,39,40,42,43,44,45,46,478],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[243,244,245],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[330,331,332],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[179,180,181,182,183,184,66,187,188,189,192,193,194,94,198,204,98,223,224,226,4,105,106,107,108,8,10,12,13,30,109,239,240,241,67,243,244,250,111,251,112,252,113,114,115,116,254,255,68,69,70,71,260,265,266,268,124,125,271,274,275,129,277,72,131,132,278,279,135,136,33,34,40,41,43,46,306,307,73,47,317,320,321,322,324,325,326,327,328,329,49,138,139,140,333,334,335,336,337,338,51,142,143,144,145,353,354,355,52,53,54,55,56,57,359,360,361,362,58,363,74,370,371,372,373,374,75,375,376,377,378,379,76,380,381,382,77,383,78,384,395,396,397,398,399,400,401,402,81,437,438,439,440,441,82,442,443,444,445,446,83,447,448,449,84,450,85,451,59,60,61,62,63,172,86,457,458,177,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[179,180,181,182,183,184,185,66,186,187,188,189,190,191,192,193,194,0,195,94,196,197,198,199,200,474,1,201,202,95,203,204,96,205,97,206,207,479,2,208,3,209,210,211,212,213,98,99,214,215,216,217,218,219,220,221,222,480,481,223,224,225,100,101,102,103,104,226,4,105,106,107,108,5,6,7,8,227,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,228,229,230,231,232,109,110,233,234,235,236,237,238,239,240,241,242,67,243,244,245,246,482,483,484,247,248,249,250,111,251,112,252,113,114,253,115,116,254,255,256,485,117,118,257,486,258,119,120,487,68,69,70,71,259,260,261,262,263,264,265,266,121,488,122,123,489,267,268,269,124,490,125,491,270,126,127,492,128,271,272,273,274,275,276,129,277,72,130,131,132,278,279,280,133,134,135,136,33,34,35,36,37,38,39,40,41,42,43,44,45,46,281,493,494,282,495,283,284,496,285,286,497,498,287,288,289,290,291,499,292,500,501,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,73,47,48,502,308,309,310,311,312,313,503,314,315,316,317,318,319,320,321,322,323,324,325,137,326,327,328,329,49,138,139,140,330,331,332,333,334,335,336,337,141,338,50,51,142,143,144,145,339,146,340,341,342,343,344,147,148,149,345,346,347,348,349,350,351,150,151,352,353,152,354,355,153,154,155,52,53,54,55,56,356,156,357,358,157,158,57,359,360,361,362,58,363,504,364,365,366,159,367,160,161,368,369,162,163,164,74,370,371,372,373,374,75,375,376,377,378,379,76,380,381,382,77,383,78,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,79,427,428,429,80,430,431,432,433,434,435,436,81,437,438,439,440,441,82,442,443,444,445,446,83,447,448,449,84,450,85,451,165,452,59,60,61,62,63,166,505,506,167,168,169,170,171,453,454,455,456,172,86,173,174,457,458,175,176,177,64,65,459,460,461,462,463,464,465,466],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[507,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[10,15,25,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[471,472,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"failures":[344],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":8,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":172,"org.easymock.tests2.UsageTest.argumentsOrdered":134,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":425,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":132,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":194,"org.easymock.tests2.DelegateToTest.testReturnException":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":360,"org.easymock.tests.MockingTest.testPartialClassMocking":388,"org.easymock.tests.MockClassControlTest.testToString":147,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":225,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":497,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":74,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":284,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":467,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":14,"org.easymock.tests2.UsageTest.wrongArguments":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":52,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":350,"org.easymock.samples.ExampleTest.answerVsDelegate":180,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":169,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":393,"org.easymock.tests2.UsageConstraintsTest.testNull":10,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":197,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":116,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":347,"org.easymock.tests2.CaptureTest.testPrimitive":36,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":384,"org.easymock.tests.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":335,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":459,"org.easymock.tests.UsageTest.argumentsOrdered":176,"org.easymock.tests.UsageVarargTest.varargIntAccepted":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":59,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":89,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":217,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":63,"org.easymock.tests.ReplayStateInvalidUsageTest.times":411,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests2.DependencyTest.testClassMocking":480,"org.easymock.tests2.AnswerTest.answer":271,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":264,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":506,"org.easymock.tests2.CaptureTest.testAnd":33,"org.easymock.tests2.UsageTest.strictResetToDefault":277,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":334,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":341,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":463,"org.easymock.tests2.DelegateToTest.testDelegate":67,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":382,"org.easymock.tests.LimitationsTest.mockFinalMethod":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":305,"org.easymock.tests2.DependencyTest.testClassMockingSupport":481,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":150,"org.easymock.tests2.CaptureTest.testCapture1_2446744":37,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":262,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":405,"org.easymock.tests.UsageThrowableTest.throwError":395,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":168,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":504,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":296,"org.easymock.samples.PartialClassMockTest.testGetArea":186,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":406,"org.easymock.tests.MockingTest.testInterfaceMocking":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":60,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":498,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":158,"org.easymock.tests2.UsageTest.niceToStrict":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":370,"org.easymock.tests2.ThreadingTest.testChangeDefault":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":178,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":268,"org.easymock.tests2.MockBuilderTest.testCreateMock":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":500,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":377,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":113,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":505,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":159,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":348,"org.easymock.tests.UsageOverloadedMethodTest.overloading":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":293,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":20,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":446,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":306,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":19,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":42,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":323,"org.easymock.tests2.EasyMockSupportClassTest.testAll":282,"org.easymock.tests.MockClassControlTest.testEquals":346,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":383,"org.easymock.tests2.CaptureTest.testCaptureAll":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":303,"org.easymock.tests.MockNameTest.defaultName":165,"org.easymock.tests2.UsageConstraintsTest.testMatches":21,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":336,"org.easymock.samples.ExampleTest.voteForRemovals":184,"org.easymock.tests.UsageVarargTest.allKinds":49,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":138,"org.easymock.samples.BasicClassMockTest.testPrintContent":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":304,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":401,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":214,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":363,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":503,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":470,"org.easymock.tests2.UsageConstraintsTest.greaterThan":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":495,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":340,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":96,"org.easymock.samples.ExampleTest.voteForRemoval":181,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":314,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":70,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":170,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":200,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":129,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":300,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":251,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":493,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":359,"org.easymock.tests2.CaptureTest.testCaptureFirst":46,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":112,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":136,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":442,"org.easymock.tests2.CaptureTest.testCapture2_2446744":45,"org.easymock.tests2.UsageTest.moreThanOneArgument":72,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":431,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":127,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":329,"org.easymock.tests.GenericTest.testBridgedEquals":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":163,"org.easymock.tests.UsageExpectAndReturnTest.longType":439,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":301,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":78,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":452,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":28,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":77,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":333,"org.easymock.tests.UsageCallCountTest.tooManyCalls":164,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":501,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":443,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":374,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":400,"org.easymock.tests.MockingTest.testNiceClassMocking":394,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":117,"org.easymock.tests.MockingTest.testClassMocking":386,"org.easymock.tests2.UsageConstraintsTest.testContains":18,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":367,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":221,"org.easymock.tests2.UsageConstraintsTest.testFind":9,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":73,"org.easymock.tests.MockTypeTest.fromEasyMockClass":167,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":141,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":3,"org.easymock.tests.UsageExpectAndReturnTest.object":445,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":468,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":325,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":358,"org.easymock.tests.UsageTest.exactCallCountByLastCall":177,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":460,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":297,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":84,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":210,"org.easymock.tests.MockClassControlTest.testHashCode":345,"org.easymock.tests2.EasyMockSupportTest.testVerify":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":288,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":461,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":261,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":0,"org.easymock.tests.UsageVarargTest.varargCharAccepted":324,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":502,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastCall":278,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":255,"org.easymock.tests.DefaultClassInstantiatorTest.object":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":364,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":156,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":375,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":209,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":149,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":75,"org.easymock.tests.CapturesMatcherTest.test":478,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":450,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":330,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":294,"org.easymock.tests2.UsageTest.resumeIfFailure":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":362,"org.easymock.tests2.StubTest.stubWithReturnValue":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":444,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":29,"org.easymock.tests2.SerializationTest.testAllMockedMethod":245,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":80,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":91,"org.easymock.samples.SupportTest.voteForRemovals":193,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":76,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":435,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":272,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":299,"org.easymock.tests.UsageExpectAndThrowTest.object":378,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":26,"org.easymock.tests2.DelegateToTest.testWrongClass":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":64,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":65,"org.easymock.samples.ConstructorCalledMockTest.testTax":190,"org.easymock.tests.UsageStrictMockTest.range":143,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":248,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":485,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":379,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":413,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":281,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":349,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":466,"org.easymock.tests2.CaptureTest.testCaptureNone":41,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":471,"org.easymock.tests.UsageUnorderedTest.message":57,"org.easymock.tests.UsageVerifyTest.twoReturns":140,"org.easymock.tests.UsageVarargTest.varargByteAccepted":328,"org.easymock.tests2.ThreadingTest.testThreadSafe":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":499,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":369,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":188,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":157,"org.easymock.tests2.CaptureTest.testCapture_2617107":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":55,"org.easymock.tests2.UsageConstraintsTest.any":16,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":410,"org.easymock.tests2.StubTest.stub":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":361,"org.easymock.tests.UsageExpectAndThrowTest.longType":372,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":312,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":409,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":105,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":98,"org.easymock.tests2.SerializationTest.testClass":243,"org.easymock.tests.LimitationsTest.mockNativeMethod":455,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":451,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":318,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":230,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":108,"org.easymock.tests2.NameTest.nameForMocksControl":103,"org.easymock.tests2.MockedExceptionTest.testMockedException":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":283,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":458,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":391,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":373,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":125,"org.easymock.tests.MockingTest.testNicePartialClassMocking":389,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":199,"org.easymock.tests2.CaptureTest.testCaptureLast":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":228,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":120,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":13,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":27,"org.easymock.tests.MockingTest.testTwoMocks":387,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":487,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":376,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":133,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":31,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":473,"org.easymock.samples.ExampleTest.removeNonExistingDocument":185,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":407,"org.easymock.tests.UsageStrictMockTest.differentMethods":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":211,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":472,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":310,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":71,"org.easymock.tests2.MockBuilderTest.testCreateMockString":128,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":496,"org.easymock.tests.UsageExpectAndThrowTest.floatType":371,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":494,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":274,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":479,"org.easymock.tests.UsageVerifyTest.twoThrows":139,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":291,"org.easymock.samples.ExampleTest.voteAgainstRemoval":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":204,"org.easymock.tests.LimitationsTest.privateConstructor":454,"org.easymock.tests2.UsageConstraintsTest.testNotNull":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":402,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":219,"org.easymock.tests2.UsageTest.defaultResetToNice":280,"org.easymock.samples.ExampleTest.voteAgainstRemovals":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":79,"org.easymock.tests.UsageVarargTest.differentLength":137,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":229,"org.easymock.tests2.CallbackTest.callback":68,"org.easymock.tests2.UsageConstraintsTest.equals":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":201,"org.easymock.tests.UsageTest.openCallCountByLastCall":457,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":54,"org.easymock.tests.UsageCallCountTest.tooFewCalls":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":351,"org.easymock.tests.UsageThrowableTest.throwCheckedException":399,"org.easymock.tests.MockingTest.testStrictClassMocking":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":119,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":110,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":412,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":258,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":276,"org.easymock.tests.ObjectMethodsTest.testHashCode":357,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":88,"org.easymock.tests2.NameTest.nameForNiceMock":102,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":260,"org.easymock.tests2.DependencyTest.testInterfaceMocking":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":469,"org.easymock.samples.ExampleTest.addDocument":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":292,"org.easymock.tests2.DelegateToTest.testStubDelegate":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":295,"org.easymock.tests2.AnswerTest.stubAnswer":275,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":51,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":491,"org.easymock.tests.UsageVarargTest.varargLongAccepted":327,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.floatType":438,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":206,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":191,"org.easymock.tests.UsageThrowableTest.noUpperLimit":396,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":153,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":216,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":6,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":246,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":38,"org.easymock.tests2.SerializationTest.test":244,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":437,"org.easymock.tests2.UsageConstraintsTest.testSame":11,"org.easymock.samples.SupportTest.addDocument":192,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":486,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":285,"org.easymock.tests.GenericTest.testPackageScope":316,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":215,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":392,"org.easymock.tests2.NameTest.nameForMock":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":492,"org.easymock.tests2.UsageStrictMockTest.differentMethods":107,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":440,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":381,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":342,"org.easymock.tests2.MockedExceptionTest.testRealException":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":249,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":427,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":414,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":53,"org.easymock.tests2.NameTest.nameForStrictMock":101,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":267,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":198,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":247,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":311,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":122,"org.easymock.tests2.UsageStrictMockTest.range":106,"org.easymock.tests2.UsageConstraintsTest.lessThan":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":213,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":111,"org.easymock.tests2.CaptureTest.testCaptureRightOne":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":287,"org.easymock.tests2.UsageConstraintsTest.testOr":12,"org.easymock.tests.UsageRangeTest.combination":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":94,"org.easymock.tests.UsageTest.wrongArguments":174,"org.easymock.tests2.MockBuilderTest.testWithConstructor":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":286,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":416,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":313,"org.easymock.tests.UsageVarargTest.varargShortAccepted":326,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":162,"org.easymock.tests2.UsageConstraintsTest.cmpTo":17,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":279,"org.easymock.tests2.CaptureTest.testCaptureFromStub":44,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":404,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":123,"org.easymock.tests.UsageTest.unexpectedCallWithArray":173,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":368,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":448,"org.easymock.tests2.CaptureTest.testCapture":507,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.tests2.UsageConstraintsTest.constraints":7,"org.easymock.samples.ExampleTest.addAndChangeDocument":66,"org.easymock.tests.UsageStrictMockTest.testVerify":339,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":187,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":338,"org.easymock.tests2.CompareToTest.testGreateThan":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":302,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":61,"org.easymock.tests.LimitationsTest.abstractClass":453,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":82,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":114,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":321}}]
