[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[7,8],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[9],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[67,68,10,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,7,119,120,121,12,122,13,123,124,125,126,127,128,129,130,131,132,133,134,0,135,136,137,138,139,14,15,16,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,1,160,161,8,162,163,164,2,165,166,167,3,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,17,228,229,230,231,232,233,234,235,236,237,238,239,240,5,241,242,243,6,244,245,246,18,19,20,247,21,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,22,291,292,293,294,295,296,297,298,299,300,23,23,24,24,25,26,301,302,303,304,305,306,27,28,307,29,30,31,32,33,308,309,34,35,36,37,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,40,41,333,42,46,334,48,49,50,335,52,56,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,57,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,4,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,61,405,62,406,407,408,409,410,411,63,412,413,64,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,65,455,66],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[75,89,90,91,92,93,95,100,102,103,132,133,135,14,16,141,142,143,144,154,156,163,164,165,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,223,224,225,17,232,234,235,236,237,238,239,19,20,21,256,257,260,261,264,265,267,277,278,279,280,281,287,22,292,293,295,296,298,301,305,27,28,307,29,30,31,33,35,36,37,314,316,317,323,324,325,456,326,327,457,328,458,329,330,331,38,39,40,41,333,42,43,46,48,50,51,53,56,340,349,57,360,361,362,363,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,393,394,397,398,399,400,402,403,61,62,63,64,419,420,421,422,423,424,425,426,428,430,431,432,435,436,441,442,448,65,455],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[75,76,89,90,91,92,93,100,102,103,132,133,135,14,141,142,143,144,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,223,224,225,17,232,234,235,236,237,238,239,19,20,21,256,257,260,261,264,265,266,267,275,280,281,282,284,285,287,22,292,293,294,295,296,298,301,305,306,27,28,307,29,30,31,33,35,36,37,311,314,316,317,323,324,325,456,326,327,457,328,458,329,330,331,38,39,40,41,333,42,43,46,48,50,51,53,56,339,340,341,343,349,57,360,361,362,363,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,397,398,399,400,402,403,61,62,63,64,419,420,421,422,423,424,425,426,428,430,431,432,435,436,441,442,448,65,455],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[155,338,340],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[381],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[459,460,461],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:93","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[76,134,0,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,225,232,234,235,236,237,238,239,256,261,266,271,272,273,274,275,276,282,284,285,301,339,341,357,358,57,359,389,424,431],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[67,99,102,462,258,259,262,263,266,267,316,427,433,434],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[168],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[362,363,366,368,369,371,381,386,390,392,400],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[35,463,46,53,62],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[464,370,376,388],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[67,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,7,119,120,121,465,466,122,123,124,125,126,127,128,129,130,131,132,133,134,0,135,136,137,138,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,1,160,161,8,162,163,164,2,165,166,167,3,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,229,230,231,232,233,234,235,236,237,238,239,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,456,326,327,457,328,458,329,330,331,332,333,337,467,468,469,470,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,57,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,4,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[102,471,266,267,316],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[472,473],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[362,363,368,369,371,381,390,392,400],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[76,134,271,272,273,274,275,276,357,358,57,359,389],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[475],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[139,14,15,16,140],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[243,476,477],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[65,455,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[99,478,479,258,480,481],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[139,16,308,36,463,48,482,335,52,55,56,336,65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":363,"org.easymock.tests2.UsageTest.argumentsOrdered":434,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":256,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":330,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":155,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":429,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":289,"org.easymock.tests2.DelegateToTest.testReturnException":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":272,"org.easymock.tests.MockingTest.testPartialClassMocking":19,"org.easymock.tests.MockClassControlTest.testToString":69,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":337,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":177,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":62,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":442,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":370,"org.easymock.tests2.UsageTest.wrongArguments":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":132,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":115,"org.easymock.samples.ExampleTest.answerVsDelegate":294,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":12,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":249,"org.easymock.tests2.UsageConstraintsTest.testNull":366,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":29,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":74,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":329,"org.easymock.tests2.CaptureTest.testPrimitive":393,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":196,"org.easymock.tests.UsageTest.moreThanOneArgument":257,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":253,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":117,"org.easymock.tests.UsageTest.argumentsOrdered":263,"org.easymock.tests.UsageVarargTest.varargIntAccepted":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":354,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":93,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":448,"org.easymock.tests.ReplayStateInvalidUsageTest.times":173,"org.easymock.tests2.AnswerTest.answer":301,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":322,"org.easymock.tests2.CaptureTest.testAnd":390,"org.easymock.tests2.UsageTest.strictResetToDefault":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":143,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":326,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":120,"org.easymock.tests2.DelegateToTest.testDelegate":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":192,"org.easymock.tests.LimitationsTest.mockFinalMethod":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":268,"org.easymock.tests2.CaptureTest.testCapture1_2446744":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":320,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":3,"org.easymock.tests.UsageThrowableTest.throwError":232,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":465,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":415,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":168,"org.easymock.tests.MockingTest.testInterfaceMocking":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":90,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":278,"org.easymock.tests2.UsageTest.niceToStrict":428,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":178,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":111,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":145,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":48,"org.easymock.tests2.MockBuilderTest.testCreateMock":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":451,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":480,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":186,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":138,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":113,"org.easymock.tests.UsageOverloadedMethodTest.overloading":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":411,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":285,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":376,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":208,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":223,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":476,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":375,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":399,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":80,"org.easymock.tests2.EasyMockSupportClassTest.testAll":61,"org.easymock.tests.MockClassControlTest.testEquals":73,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":15,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":194,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":58,"org.easymock.tests2.CaptureTest.testCaptureAll":391,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":321,"org.easymock.tests.MockNameTest.defaultName":112,"org.easymock.tests2.UsageConstraintsTest.testMatches":377,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":254,"org.easymock.samples.ExampleTest.voteForRemovals":298,"org.easymock.tests.UsageVarargTest.allKinds":88,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":265,"org.easymock.samples.BasicClassMockTest.testPrintContent":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":221,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":238,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":276,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":342,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":351,"org.easymock.tests2.UsageConstraintsTest.greaterThan":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":142,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":37,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":244,"org.easymock.samples.ExampleTest.voteForRemoval":295,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":420,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":310,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":32,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":424,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":13,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":325,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":271,"org.easymock.tests2.CaptureTest.testCaptureFirst":403,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":456,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":436,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":204,"org.easymock.tests2.UsageTest.moreThanOneArgument":426,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":422,"org.easymock.tests2.CaptureTest.testCapture2_2446744":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":8,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":87,"org.easymock.tests.GenericTest.testBridgedEquals":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":130,"org.easymock.tests.UsageExpectAndReturnTest.longType":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":218,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":323,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":195,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":384,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":251,"org.easymock.tests.UsageCallCountTest.tooManyCalls":131,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":237,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":39,"org.easymock.tests.MockingTest.testNiceClassMocking":250,"org.easymock.tests.MockingTest.testClassMocking":246,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":124,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":45,"org.easymock.tests2.UsageConstraintsTest.testContains":374,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":57,"org.easymock.tests2.UsageConstraintsTest.testFind":365,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":225,"org.easymock.tests.MockTypeTest.fromEasyMockClass":121,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":418,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":97,"org.easymock.tests.UsageExpectAndReturnTest.object":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":458,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":82,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":109,"org.easymock.tests.UsageTest.exactCallCountByLastCall":264,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":150,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":118,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":94,"org.easymock.tests2.ConstraintsToStringTest.findToString":9,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":336,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":213,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":284,"org.easymock.tests.MockClassControlTest.testHashCode":72,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":345,"org.easymock.tests2.EasyMockSupportTest.testVerify":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":409,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":7,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":137,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":319,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":356,"org.easymock.tests.UsageVarargTest.varargCharAccepted":81,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":165,"org.easymock.tests2.UsageTest.openCallCountByLastCall":430,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":459,"org.easymock.tests.DefaultClassInstantiatorTest.object":240,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":136,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":107,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":410,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":344,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":35,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":183,"org.easymock.tests.CapturesMatcherTest.test":472,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":64,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":70,"org.easymock.tests2.UsageTest.resumeIfFailure":435,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":274,"org.easymock.tests2.StubTest.stubWithReturnValue":389,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":385,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":206,"org.easymock.tests2.SerializationTest.testAllMockedMethod":66,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":160,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":481,"org.easymock.samples.SupportTest.voteForRemovals":292,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":189,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":2,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":302,"org.easymock.tests.UsageExpectAndThrowTest.object":187,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":96,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":382,"org.easymock.tests2.DelegateToTest.testWrongClass":341,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":281,"org.easymock.tests.UsageStrictMockTest.range":102,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":439,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":38,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":188,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":404,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":175,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":114,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":478,"org.easymock.tests2.CaptureTest.testCaptureNone":398,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":279,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":475,"org.easymock.tests.UsageUnorderedTest.message":67,"org.easymock.tests.UsageVerifyTest.twoReturns":267,"org.easymock.tests.UsageVarargTest.varargByteAccepted":86,"org.easymock.tests2.ThreadingTest.testThreadSafe":419,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":128,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":110,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":25,"org.easymock.tests2.CaptureTest.testCapture_2617107":392,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":0,"org.easymock.tests2.UsageConstraintsTest.any":372,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":172,"org.easymock.tests2.StubTest.stub":4,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":231,"org.easymock.tests.UsageExpectAndThrowTest.longType":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":273,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":243,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":171,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":315,"org.easymock.tests2.SerializationTest.testClass":65,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":349,"org.easymock.tests.LimitationsTest.mockNativeMethod":17,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":16,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":445,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":60,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":318,"org.easymock.tests2.NameTest.nameForMocksControl":470,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":447,"org.easymock.tests2.MockedExceptionTest.testMockedException":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":405,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":417,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":181,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":21,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":51,"org.easymock.tests.MockingTest.testNicePartialClassMocking":20,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":31,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":443,"org.easymock.tests2.CaptureTest.testCaptureLast":397,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":269,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":43,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":369,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":383,"org.easymock.tests.MockingTest.testTwoMocks":18,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":185,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":433,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":387,"org.easymock.samples.ExampleTest.removeNonExistingDocument":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":450,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":169,"org.easymock.tests.UsageStrictMockTest.differentMethods":103,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":346,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":241,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":421,"org.easymock.tests2.MockBuilderTest.testCreateMockString":55,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":68,"org.easymock.tests.UsageExpectAndThrowTest.floatType":179,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":378,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":304,"org.easymock.tests.UsageVerifyTest.twoThrows":266,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":63,"org.easymock.samples.ExampleTest.voteAgainstRemoval":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":156,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":277,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":36,"org.easymock.tests.LimitationsTest.privateConstructor":227,"org.easymock.tests2.UsageConstraintsTest.testNotNull":386,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":239,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":357,"org.easymock.tests2.UsageTest.defaultResetToNice":432,"org.easymock.samples.ExampleTest.voteAgainstRemovals":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":157,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":444,"org.easymock.tests.UsageVarargTest.differentLength":83,"org.easymock.tests2.CallbackTest.callback":311,"org.easymock.tests2.UsageConstraintsTest.equals":364,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":308,"org.easymock.tests.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":360,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":134,"org.easymock.tests.UsageCallCountTest.tooFewCalls":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":116,"org.easymock.tests.UsageThrowableTest.throwCheckedException":236,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":479,"org.easymock.tests.MockingTest.testStrictClassMocking":245,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":42,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":449,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":40,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":333,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":306,"org.easymock.tests2.CompareToTest.testGreateOrEqual":464,"org.easymock.tests.ObjectMethodsTest.testHashCode":108,"org.easymock.tests2.NameTest.nameForNiceMock":469,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":423,"org.easymock.tests2.DependencyTest.testInterfaceMocking":441,"org.easymock.samples.ExampleTest.addDocument":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.DelegateToTest.testStubDelegate":340,"org.easymock.tests2.AnswerTest.stubAnswer":305,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":100,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":482,"org.easymock.tests.UsageVarargTest.varargLongAccepted":85,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":154,"org.easymock.tests.UsageExpectAndReturnTest.floatType":199,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":215,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":56,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests.UsageThrowableTest.noUpperLimit":233,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":353,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":361,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":437,"org.easymock.tests2.SerializationTest.test":455,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":395,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":477,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":198,"org.easymock.tests2.UsageConstraintsTest.testSame":367,"org.easymock.samples.SupportTest.addDocument":291,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":406,"org.easymock.tests.GenericTest.testPackageScope":14,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":149,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":352,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":248,"org.easymock.tests2.NameTest.nameForMock":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":209,"org.easymock.tests2.UsageStrictMockTest.differentMethods":317,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":309,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":201,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":191,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":144,"org.easymock.tests2.MockedExceptionTest.testRealException":359,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":122,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":158,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":314,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":133,"org.easymock.tests2.NameTest.nameForStrictMock":468,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":460,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":416,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":30,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":438,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":242,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":381,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":46,"org.easymock.tests2.UsageStrictMockTest.range":316,"org.easymock.tests2.UsageConstraintsTest.lessThan":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":408,"org.easymock.tests2.CaptureTest.testCaptureRightOne":400,"org.easymock.tests2.UsageConstraintsTest.testOr":368,"org.easymock.tests.UsageRangeTest.combination":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":28,"org.easymock.tests.UsageTest.wrongArguments":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":407,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":210,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":6,"org.easymock.tests.UsageVarargTest.varargShortAccepted":84,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":129,"org.easymock.tests2.UsageConstraintsTest.cmpTo":373,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":303,"org.easymock.tests2.CompareToTest.testLessThan":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":148,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":431,"org.easymock.tests2.CaptureTest.testCaptureFromStub":401,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":167,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":47,"org.easymock.tests.UsageTest.unexpectedCallWithArray":258,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":99,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":127,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":211,"org.easymock.tests2.CaptureTest.testCapture":473,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":101,"org.easymock.tests2.UsageConstraintsTest.constraints":362,"org.easymock.samples.ExampleTest.addAndChangeDocument":300,"org.easymock.tests.UsageStrictMockTest.testVerify":105,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":290,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":219,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":396,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":91,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":203,"org.easymock.tests.LimitationsTest.abstractClass":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":92,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":457,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":78}}]
