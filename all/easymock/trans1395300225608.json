[{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[79,80,81,82,83,66,67,68,69,84,85,70,86,87,88,89,90,91,92,27,34,36,93,94,95,96,97,98,52,58,59,60,99,76,100,101,77,78,102,103,104,105,106,107,108,109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[110,79,80,12,13,14,111,81,82,18,112,113,19,114,115,83,65,66,67,68,69,84,116,117,118,119,85,70,120,86,87,88,121,122,123,124,89,90,91,125,126,24,92,127,128,27,33,36,37,94,95,129,96,97,130,98,131,132,46,47,49,50,133,134,135,136,51,52,53,56,57,58,59,60,99,75,76,100,101,77,78,102,103,104,137,105,106,107,138,139,140,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[141,142,113,114,143,27,33,36,37,144,145,146,129,97,130,147,148,149,150,151,131,132,152,153,154,155,156,45,157,133,134,135,136,158,159,160,161,162,139,140,163,164,165,166,167],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[79,168,81,82,66,67,68,69,119,70,87,76,77,78,106],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[62,63,66,70,71,73],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[0,169,170,171,172,173,174,175,176,5,7,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,80,193,194,195,196,197,120,87,88,21,22,23,198,199,200,201,202,203,204,205,206,207,208,209,25,26,27,210,28,29,30,32,34,35,36,211,38,39,40,41,45,46,47,48,212,49,50,213,52,54,56,57,59,137,106,107,214,215,61],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[216],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[62,63,66,70,71,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[0,169,217,170,171,218,172,219,220,221,173,141,1,1,2,2,3,4,142,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,5,6,79,177,178,179,180,181,182,242,243,183,184,244,185,186,187,245,188,189,190,191,192,80,193,194,195,246,247,9,248,249,250,251,252,253,254,255,256,257,10,11,12,13,14,15,16,17,258,259,260,261,262,263,264,265,197,266,267,268,269,111,81,82,83,65,66,67,270,271,68,69,84,272,273,274,275,276,277,278,279,280,118,119,85,281,70,120,86,87,88,121,282,21,22,23,122,283,123,124,284,285,89,90,91,198,286,287,199,200,201,202,288,125,289,290,291,143,292,293,294,295,296,297,298,299,300,301,203,204,205,206,207,302,303,304,305,306,92,307,308,309,310,311,208,209,25,26,27,210,28,29,30,31,32,33,34,35,36,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,93,211,328,38,39,40,41,94,329,330,42,331,332,333,334,335,43,336,44,337,95,338,129,339,96,97,340,130,98,341,342,343,131,45,46,47,48,212,49,50,133,134,135,136,344,213,345,346,51,52,54,55,56,57,58,59,60,99,347,75,76,100,101,348,349,350,77,78,102,103,104,351,137,105,106,107,138,352,353,354,355,214,215,356,357,139,358,359,108,360,361,362,363,364,365,366,367,368,369,216,370,371,109,372,373,374,375,376,377,378,379,380,381,382,383,61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[384],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[174,176,196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[385,386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[0,169,170,171,218,172,220,221,173,141,1,1,2,2,3,4,142,387,174,175,176,5,6,7,79,177,178,179,180,181,182,242,243,183,184,244,185,186,187,245,188,189,190,191,192,80,193,194,195,246,196,388,389,9,258,259,260,261,262,263,264,265,197,266,267,268,269,111,82,83,65,67,270,271,68,69,84,116,117,118,85,281,70,120,86,87,88,121,282,21,22,23,390,386,122,123,124,284,285,90,91,198,286,287,199,200,201,202,288,203,204,205,206,207,302,303,304,305,306,92,307,308,309,310,311,208,209,25,127,128,26,27,210,28,29,30,32,34,35,36,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,93,211,328,38,39,40,41,42,334,43,336,44,337,95,338,129,339,96,97,340,130,98,341,342,343,131,45,46,47,48,212,49,50,133,134,135,136,213,52,54,56,57,59,99,347,75,76,100,101,348,349,350,77,78,102,103,104,351,137,105,106,107,138,214,215,356,357,139,358,359,108,360,361,362,363,364,365,366,391,367,368,369,216,370,371,109,372,373,374,375,376,377,378,379,380,381,61],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[43,392,393,394,395,396,397,398,399],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[79,168,81,82,66,67,68,69,70,87,76,77,78,106],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[400,401,402,403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[404,43,336,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[405,406],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[407,408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[169,217,170,171,218,172,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,5,6,79,177,178,179,180,181,182,242,243,183,184,244,185,186,187,245,188,189,190,191,192,80,193,194,195,246,247,9,248,249,250,251,252,253,254,255,256,257,10,11,12,13,14,15,16,17,258,259,260,261,262,263,264,265,197,266,267,268,269,111,81,82,83,65,66,67,270,271,68,69,84,272,273,274,275,276,277,278,116,279,280,118,119,85,281,70,120,86,87,88,121,282,21,22,23,122,283,123,124,284,285,89,90,91,198,286,287,199,200,201,202,288,125,289,290,291,143,292,293,294,295,296,297,298,299,300,301,203,204,205,206,207,302,303,304,305,306,92,307,308,309,310,311,208,209,25,128,26,27,210,28,29,30,31,32,33,34,35,36,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,93,211,328,94,329,330,42,331,332,333,334,335,43,336,44,46,47,49,50,133,134,135,136,344,213,345,346,51,52,54,55,58,59,60,99,347,75,76,100,101,348,349,350,77,78,102,103,104,351,137,105,106,107,138,352,353,354,355,214,356,357,358,359,108,360,361,362,363,364,365,366,367,368,369,216,370,371,109,372,373,374,375,376,377,378,379,380,381,382,383,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[31,37,329,51,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[0,1,1,2,2,3,4,409,5,6,7,8,9,248,410,411,412,413,414,415,10,11,12,13,14,15,16,17,18,19,416,417,20,21,22,23,418,419,420,25,421,26,27,28,29,30,31,32,422,423,33,34,35,36,424,37,425,426,427,38,428,429,39,144,430,431,432,145,433,434,435,436,40,146,437,438,439,440,41,441,442,329,330,42,43,44,45,46,47,48,49,50,51,52,53,443,54,55,56,57,398,58,59,60,444,445,446,447,448,61,399],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[0,169,217,170,171,218,172,220,221,173,141,1,2,3,4,142,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,5,6,79,177,178,179,180,181,182,242,243,183,184,244,185,186,187,245,188,189,190,191,192,80,194,195,246,247,9,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,197,266,267,268,269,111,81,82,83,65,66,67,270,271,68,69,84,272,273,274,275,276,277,278,279,280,119,85,281,70,120,86,87,88,121,21,22,23,123,124,284,285,89,90,91,198,286,287,199,200,201,202,288,203,204,205,206,207,302,303,304,305,306,92,307,308,309,310,311,208,209,25,26,27,210,28,29,30,31,32,33,34,35,36,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,211,328,38,39,40,41,94,329,330,42,331,332,333,334,335,43,336,44,337,95,338,129,339,96,97,340,130,98,341,342,343,131,45,46,47,48,212,49,50,344,213,345,346,51,52,54,55,56,57,58,59,60,99,347,75,76,100,101,348,349,350,77,78,102,103,104,351,137,105,106,107,138,352,353,354,355,214,215,356,357,139,358,359,108,360,361,362,363,364,365,366,367,368,369,216,370,371,109,372,373,374,375,376,377,378,379,380,381,382,383,61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[443],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[79,168,81,82,83,66,67,68,69,84,119,85,70,86,87,92,27,34,36,94,95,96,97,98,99,76,100,101,77,78,103,104,105,106,108,109],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":360,"org.easymock.tests2.UsageTest.argumentsOrdered":78,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":140,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":101,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":142,"org.easymock.tests2.DelegateToTest.testReturnException":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":273,"org.easymock.tests.MockingTest.testPartialClassMocking":21,"org.easymock.tests.MockClassControlTest.testToString":12,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":157,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":432,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":222,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":366,"org.easymock.tests2.UsageTest.wrongArguments":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":197,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":156,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":251,"org.easymock.samples.ExampleTest.answerVsDelegate":217,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":19,"org.easymock.tests2.UsageConstraintsTest.testNull":362,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":28,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":98,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":17,"org.easymock.tests2.CaptureTest.testPrimitive":315,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":269,"org.easymock.tests.UsageTest.moreThanOneArgument":65,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":241,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":201,"org.easymock.tests.UsageTest.argumentsOrdered":69,"org.easymock.tests.UsageVarargTest.varargIntAccepted":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":396,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":166,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":207,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests.ReplayStateInvalidUsageTest.times":298,"org.easymock.tests2.DependencyTest.testClassMocking":447,"org.easymock.tests2.AnswerTest.answer":332,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":391,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":355,"org.easymock.tests2.CaptureTest.testAnd":312,"org.easymock.tests2.UsageTest.strictResetToDefault":347,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":339,"org.easymock.tests2.DelegateToTest.testDelegate":346,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":237,"org.easymock.tests.LimitationsTest.mockFinalMethod":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":257,"org.easymock.tests2.DependencyTest.testClassMockingSupport":448,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":127,"org.easymock.tests2.CaptureTest.testCapture1_2446744":316,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":353,"org.easymock.tests.UsageThrowableTest.throwError":258,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":292,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":113,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":442,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":145,"org.easymock.tests2.UsageTest.niceToStrict":100,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":223,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":54,"org.easymock.tests2.MockBuilderTest.testCreateMock":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":438,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":153,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":231,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":403,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":249,"org.easymock.tests.UsageOverloadedMethodTest.overloading":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":436,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":280,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":370,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":185,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":198,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":216,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":321,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.MockClassControlTest.testEquals":16,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":6,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":255,"org.easymock.tests2.CaptureTest.testCaptureAll":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":354,"org.easymock.tests.MockNameTest.defaultName":110,"org.easymock.tests2.UsageConstraintsTest.testMatches":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":202,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":291,"org.easymock.samples.ExampleTest.voteForRemovals":172,"org.easymock.tests.UsageVarargTest.allKinds":311,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":111,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":256,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":264,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":277,"org.easymock.tests2.UsageConstraintsTest.greaterThan":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":193,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":36,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":415,"org.easymock.samples.ExampleTest.voteForRemoval":170,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":424,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":327,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":31,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":99,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":9,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":338,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":272,"org.easymock.tests2.CaptureTest.testCaptureFirst":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":129,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":119,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":243,"org.easymock.tests2.UsageTest.moreThanOneArgument":75,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":211,"org.easymock.tests2.CaptureTest.testCapture2_2446744":324,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":59,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":310,"org.easymock.tests.GenericTest.testBridgedEquals":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":90,"org.easymock.tests.UsageExpectAndReturnTest.longType":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":253,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":337,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":406,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":240,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":196,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":199,"org.easymock.tests.UsageCallCountTest.tooManyCalls":91,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":227,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":263,"org.easymock.tests.MockingTest.testNiceClassMocking":418,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":46,"org.easymock.tests.MockingTest.testClassMocking":417,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":405,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":283,"org.easymock.tests2.UsageConstraintsTest.testContains":369,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":42,"org.easymock.tests2.UsageConstraintsTest.testFind":361,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":287,"org.easymock.tests.MockTypeTest.fromEasyMockClass":112,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":85,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":383,"org.easymock.tests.UsageExpectAndReturnTest.object":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":393,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":306,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":290,"org.easymock.tests.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":246,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":388,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":399,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":189,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":279,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":159,"org.easymock.tests.MockClassControlTest.testHashCode":15,"org.easymock.tests2.EasyMockSupportTest.testVerify":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":434,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":389,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":402,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":352,"org.easymock.tests.UsageVarargTest.varargCharAccepted":305,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":351,"org.easymock.tests2.UsageTest.openCallCountByLastCall":348,"org.easymock.tests.DefaultClassInstantiatorTest.object":248,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":401,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":125,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":435,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":229,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":150,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":158,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":34,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":228,"org.easymock.tests.CapturesMatcherTest.test":407,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":13,"org.easymock.tests2.UsageTest.resumeIfFailure":102,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":18,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":275,"org.easymock.tests2.StubTest.stubWithReturnValue":357,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":378,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":390,"org.easymock.samples.SupportTest.voteForRemovals":173,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":73,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":234,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":404,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":386,"org.easymock.tests.UsageExpectAndThrowTest.object":232,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":375,"org.easymock.tests2.DelegateToTest.testWrongClass":345,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":208,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":209,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":87,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":340,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":233,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":425,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":68,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":250,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":62,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":175,"org.easymock.tests2.CaptureTest.testCaptureNone":320,"org.easymock.tests.UsageUnorderedTest.message":79,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":384,"org.easymock.tests.UsageVerifyTest.twoReturns":82,"org.easymock.tests.UsageVarargTest.varargByteAccepted":309,"org.easymock.tests2.ThreadingTest.testThreadSafe":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":146,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":285,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":126,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":314,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":268,"org.easymock.tests2.UsageConstraintsTest.any":367,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":297,"org.easymock.tests2.StubTest.stub":356,"org.easymock.tests.UsageExpectAndThrowTest.longType":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":274,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":413,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":296,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":105,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests.LimitationsTest.mockNativeMethod":25,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":149,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.tests2.NameTest.nameForMocksControl":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":151,"org.easymock.tests2.MockedExceptionTest.testMockedException":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":429,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":271,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":226,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":57,"org.easymock.tests.MockingTest.testNicePartialClassMocking":22,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":30,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":147,"org.easymock.tests2.CaptureTest.testCaptureLast":319,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":128,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":365,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":376,"org.easymock.tests.MockingTest.testTwoMocks":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":230,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":77,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":380,"org.easymock.samples.ExampleTest.removeNonExistingDocument":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":152,"org.easymock.tests.UsageStrictMockTest.differentMethods":88,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":160,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":411,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":93,"org.easymock.tests2.MockBuilderTest.testCreateMockString":60,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":144,"org.easymock.tests.UsageExpectAndThrowTest.floatType":224,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":333,"org.easymock.tests.UsageVerifyTest.twoThrows":81,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":40,"org.easymock.samples.ExampleTest.voteAgainstRemoval":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":387,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":35,"org.easymock.tests.LimitationsTest.privateConstructor":420,"org.easymock.tests2.UsageConstraintsTest.testNotNull":379,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":265,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":329,"org.easymock.tests2.UsageTest.defaultResetToNice":350,"org.easymock.samples.ExampleTest.voteAgainstRemovals":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":188,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":148,"org.easymock.tests.UsageVarargTest.differentLength":92,"org.easymock.tests2.CallbackTest.callback":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":422,"org.easymock.tests.UsageTest.openCallCountByLastCall":270,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":358,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":267,"org.easymock.tests.UsageCallCountTest.tooFewCalls":124,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":252,"org.easymock.tests.UsageThrowableTest.throwCheckedException":262,"org.easymock.tests.MockingTest.testStrictClassMocking":416,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":49,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":132,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":212,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":335,"org.easymock.tests.ObjectMethodsTest.testHashCode":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":395,"org.easymock.tests2.NameTest.nameForNiceMock":135,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":328,"org.easymock.tests2.DependencyTest.testInterfaceMocking":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":394,"org.easymock.samples.ExampleTest.addDocument":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.DelegateToTest.testStubDelegate":213,"org.easymock.tests2.AnswerTest.stubAnswer":334,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":120,"org.easymock.tests.UsageVarargTest.varargLongAccepted":308,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":191,"org.easymock.tests.UsageExpectAndReturnTest.floatType":179,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":165,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests.UsageThrowableTest.noUpperLimit":259,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":359,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":444,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":317,"org.easymock.tests2.SerializationTest.test":336,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":178,"org.easymock.tests2.UsageConstraintsTest.testSame":363,"org.easymock.samples.SupportTest.addDocument":221,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":430,"org.easymock.tests.GenericTest.testPackageScope":5,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":164,"org.easymock.tests2.NameTest.nameForMock":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":186,"org.easymock.tests2.UsageStrictMockTest.differentMethods":107,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":423,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":195,"org.easymock.tests2.MockedExceptionTest.testRealException":331,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":115,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":266,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":301,"org.easymock.tests2.NameTest.nameForStrictMock":134,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":443,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":29,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":446,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":412,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":106,"org.easymock.tests2.UsageConstraintsTest.lessThan":381,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":162,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":433,"org.easymock.tests2.CaptureTest.testCaptureRightOne":322,"org.easymock.tests2.UsageConstraintsTest.testOr":364,"org.easymock.tests.UsageRangeTest.combination":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":431,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":187,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":414,"org.easymock.tests.UsageVarargTest.varargShortAccepted":307,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":89,"org.easymock.tests2.UsageConstraintsTest.cmpTo":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":400,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":349,"org.easymock.tests2.CaptureTest.testCaptureFromStub":323,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":143,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":53,"org.easymock.tests.UsageTest.unexpectedCallWithArray":66,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":70,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":245,"org.easymock.tests2.CaptureTest.testCapture":408,"org.easymock.tests2.UsageConstraintsTest.constraints":108,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.samples.ExampleTest.addAndChangeDocument":220,"org.easymock.tests.UsageStrictMockTest.testVerify":282,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":141,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":254,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":205,"org.easymock.tests.LimitationsTest.abstractClass":419,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":242,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":97,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":303}}]
