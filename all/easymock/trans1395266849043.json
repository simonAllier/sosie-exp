[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[22,23,24,25,26,27,28,29,30,31,32,6,33,34,35,36,7,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,0,132,133,134,135,136,137,138,139,140,141,142,1,143,144,145,146,147,148,149,150,151,2,152,153,154,155,3,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,8,9,10,391,11,392,393,12,13,394,395,14,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,4,435,436,437,438,439,440,5,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,15,16,17,463,18,464,465,19,20,466,467,21,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[319,321,329,470,471,474,476,477,479,489,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,30,31,32,6,33,34,35,36,7,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,102,110,111,112,113,114,115,116,117,118,130,131,0,132,133,134,135,136,137,138,139,140,141,142,1,143,2,152,153,154,155,3,156,157,158,159,160,161,162,163,164,165,167,168,171,172,173,174,175,176,177,178,179,184,185,187,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,250,251,252,253,254,258,259,260,262,263,264,265,266,267,268,269,292,293,296,302,303,304,305,306,307,308,310,313,314,315,316,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,342,345,355,361,364,365,366,367,368,369,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,396,397,398,399,401,402,403,411,412,413,415,416,417,420,421,422,423,426,427,428,4,435,436,437,438,439,440,5,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,459,460,461,462,464,468,469,470,471,473,474,475,476,477,478,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,498,500,501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[22,420,422,423,503],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[130,132],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[504,505,506],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[507,478,484,496],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[508],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[509,375,376,377],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[33,34,510,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[156,442,472],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[64,66,67],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[69,94,95,137,138,139,140,141,163,174,175,250,251,252,253,254,269,292,293,310,319,320,321,322,323,324,325,326,327,328,329,330,331,332,448,468,469,470,471,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[371],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[22,417,420,422,423,427,428],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[33,33,34,34,311,512],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[513,319,321,322,323,324,325,326,328,514,329,330,332],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[22,23,24,25,26,28,30,32,33,33,34,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,64,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,119,120,121,130,131,0,132,133,134,135,136,137,138,139,140,141,142,1,143,2,152,155,3,158,159,160,161,162,163,164,165,167,168,170,175,177,178,184,185,187,207,213,217,224,225,226,227,228,229,230,231,250,251,252,253,254,255,256,257,292,293,296,299,302,303,304,305,306,307,310,314,315,316,319,320,322,323,326,327,328,329,330,331,332,333,335,336,337,338,342,345,355,361,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,392,396,397,398,399,401,402,403,410,411,412,413,414,415,417,420,422,423,427,4,435,436,438,440,5,441,444,445,448,450,451,459,460,461,462,464,468,469,470,471,473,474,475,476,477,478,480,481,482,483,484,485,486,487,488,489,490,491,493,494,495,496,498,500,501],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[415],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[201],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[69,515,1,143,153,154,156,157,171,174,177,437,442,443,450],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[22,23,24,25,26,27,28,30,31,32,6,33,34,35,36,7,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,516,516,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,102,110,111,112,113,114,115,116,117,118,130,131,0,132,133,134,135,136,137,138,139,140,141,142,1,143,2,152,153,154,155,3,156,157,158,159,160,161,162,163,164,165,167,168,171,172,173,174,175,176,177,178,179,184,185,187,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,250,251,252,253,254,258,259,260,262,263,264,265,266,267,268,269,292,293,296,302,303,304,305,306,307,308,310,313,314,315,316,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,342,345,355,361,364,365,366,367,368,369,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,396,397,398,399,401,402,403,411,412,413,415,416,417,420,421,422,423,426,427,428,4,435,436,437,438,439,440,5,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,459,460,461,462,464,468,469,470,471,473,474,475,476,477,478,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,498,500,501],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":471,"org.easymock.tests2.UsageTest.argumentsOrdered":443,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":201,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":439,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":7,"org.easymock.tests2.DelegateToTest.testReturnException":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":160,"org.easymock.tests.MockingTest.testPartialClassMocking":184,"org.easymock.tests.MockClassControlTest.testToString":124,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":405,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":37,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":345,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":460,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":291,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":478,"org.easymock.tests2.UsageTest.wrongArguments":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":137,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":14,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":112,"org.easymock.samples.ExampleTest.answerVsDelegate":24,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":149,"org.easymock.tests2.UsageConstraintsTest.testNull":474,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":189,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":305,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":387,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":129,"org.easymock.tests2.CaptureTest.testPrimitive":322,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":141,"org.easymock.tests.UsageTest.moreThanOneArgument":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":56,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":229,"org.easymock.tests.UsageTest.argumentsOrdered":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":97,"org.easymock.tests.UsageVarargTest.varargIntAccepted":260,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":250,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":467,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":431,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":254,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":275,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":392,"org.easymock.tests.ReplayStateInvalidUsageTest.times":246,"org.easymock.tests2.DependencyTest.testClassMocking":457,"org.easymock.tests2.AnswerTest.answer":369,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":456,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":146,"org.easymock.tests2.CaptureTest.testAnd":319,"org.easymock.tests2.UsageTest.strictResetToDefault":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":382,"org.easymock.tests2.DelegateToTest.testDelegate":415,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":101,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":52,"org.easymock.tests.LimitationsTest.mockFinalMethod":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":118,"org.easymock.tests2.DependencyTest.testClassMockingSupport":458,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":298,"org.easymock.tests2.CaptureTest.testCapture1_2446744":323,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":50,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":454,"org.easymock.tests.UsageThrowableTest.throwError":130,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":240,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":148,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":231,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":278,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.MockingTest.testInterfaceMocking":186,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":58,"org.easymock.tests2.UsageTest.niceToStrict":438,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":38,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":350,"org.easymock.tests2.ThreadingTest.testChangeDefault":334,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":191,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":420,"org.easymock.tests2.MockBuilderTest.testCreateMock":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":46,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":383,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":145,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":257,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":110,"org.easymock.tests.UsageOverloadedMethodTest.overloading":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":360,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":484,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":168,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":81,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":224,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":483,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":328,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":261,"org.easymock.tests.MockClassControlTest.testEquals":128,"org.easymock.tests2.EasyMockSupportClassTest.testAll":342,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":455,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":116,"org.easymock.tests2.CaptureTest.testCaptureAll":320,"org.easymock.tests.MockNameTest.defaultName":68,"org.easymock.tests2.UsageConstraintsTest.testMatches":485,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":230,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":238,"org.easymock.samples.ExampleTest.voteForRemovals":28,"org.easymock.tests.UsageVarargTest.allKinds":269,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":117,"org.easymock.samples.BasicClassMockTest.testPrintContent":36,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":135,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":446,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":19,"org.easymock.tests2.UsageConstraintsTest.greaterThan":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":91,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":316,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":279,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":109,"org.easymock.samples.ExampleTest.voteForRemoval":25,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":317,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":335,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":308,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":271,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":102,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":380,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":159,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":410,"org.easymock.tests2.CaptureTest.testCaptureFirst":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":381,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":445,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":77,"org.easymock.tests2.UsageTest.moreThanOneArgument":436,"org.easymock.tests2.CaptureTest.testCapture2_2446744":331,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":337,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":209,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":268,"org.easymock.tests.GenericTest.testBridgedEquals":67,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":222,"org.easymock.tests.UsageExpectAndReturnTest.longType":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":114,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":378,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":503,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":55,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":492,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":227,"org.easymock.tests.UsageCallCountTest.tooManyCalls":223,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":134,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":397,"org.easymock.tests.MockingTest.testNiceClassMocking":190,"org.easymock.tests.MockingTest.testClassMocking":182,"org.easymock.tests2.UsageConstraintsTest.testContains":482,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":216,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":367,"org.easymock.tests2.UsageConstraintsTest.testFind":473,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":226,"org.easymock.tests.MockTypeTest.fromEasyMockClass":147,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":500,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":172,"org.easymock.tests.UsageExpectAndReturnTest.object":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":394,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":386,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":263,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":235,"org.easymock.tests.UsageTest.exactCallCountByLastCall":158,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":196,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":98,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":60,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":86,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":258,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":167,"org.easymock.tests.MockClassControlTest.testHashCode":127,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":16,"org.easymock.tests2.EasyMockSupportTest.testVerify":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":352,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":99,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":453,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":497,"org.easymock.tests.UsageVarargTest.varargCharAccepted":262,"org.easymock.tests2.CaptureTest.testCaptureMultiple":513,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":214,"org.easymock.tests2.UsageTest.openCallCountByLastCall":440,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":505,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":389,"org.easymock.tests.DefaultClassInstantiatorTest.object":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":255,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":233,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":515,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":391,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":15,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":126,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":277,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":314,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":43,"org.easymock.tests.CapturesMatcherTest.test":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":87,"org.easymock.tests.ReplayStateInvalidCallsTest.times":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":119,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":284,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":361,"org.easymock.tests2.UsageTest.resumeIfFailure":444,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":162,"org.easymock.tests2.StubTest.stubWithReturnValue":462,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":79,"org.easymock.tests2.SerializationTest.testAllMockedMethod":377,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":207,"org.easymock.samples.SupportTest.voteForRemovals":32,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":49,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":509,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":213,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":370,"org.easymock.tests.UsageExpectAndThrowTest.object":47,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":62,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":490,"org.easymock.tests2.DelegateToTest.testWrongClass":413,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":281,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":292,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":293,"org.easymock.tests.UsageStrictMockTest.range":177,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":433,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":385,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":48,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":422,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":111,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":273,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":59,"org.easymock.tests2.CaptureTest.testCaptureNone":327,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests.UsageVerifyTest.twoReturns":143,"org.easymock.tests.UsageVarargTest.varargByteAccepted":267,"org.easymock.tests2.ThreadingTest.testThreadSafe":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":356,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":220,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":35,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":236,"org.easymock.tests2.CaptureTest.testCapture_2617107":321,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":211,"org.easymock.tests2.UsageConstraintsTest.any":480,"org.easymock.tests2.StubTest.stub":461,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":161,"org.easymock.tests.UsageExpectAndThrowTest.longType":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":212,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":107,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":244,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":449,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":464,"org.easymock.tests2.SerializationTest.testClass":375,"org.easymock.tests.LimitationsTest.mockNativeMethod":296,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":10,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":289,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":452,"org.easymock.tests2.NameTest.nameForMocksControl":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":11,"org.easymock.tests2.MockedExceptionTest.testMockedException":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":344,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":499,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":41,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":302,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":423,"org.easymock.tests.MockingTest.testNicePartialClassMocking":185,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":307,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":8,"org.easymock.tests2.CaptureTest.testCaptureLast":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":299,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":477,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":403,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":288,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":491,"org.easymock.tests.MockingTest.testTwoMocks":183,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":285,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":45,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":442,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":495,"org.easymock.samples.ExampleTest.removeNonExistingDocument":29,"org.easymock.tests.UsageStrictMockTest.differentMethods":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":12,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":17,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":105,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":301,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":336,"org.easymock.tests2.MockBuilderTest.testCreateMockString":428,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":122,"org.easymock.tests.UsageExpectAndThrowTest.floatType":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":346,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":372,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":355,"org.easymock.samples.ExampleTest.voteAgainstRemoval":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":202,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":315,"org.easymock.tests.LimitationsTest.privateConstructor":295,"org.easymock.tests2.UsageConstraintsTest.testNotNull":494,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":136,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":365,"org.easymock.tests2.UsageTest.defaultResetToNice":441,"org.easymock.samples.ExampleTest.voteAgainstRemovals":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":203,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":9,"org.easymock.tests.UsageVarargTest.differentLength":264,"org.easymock.tests2.CallbackTest.callback":364,"org.easymock.tests2.UsageConstraintsTest.equals":472,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":311,"org.easymock.tests.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":468,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":139,"org.easymock.tests.UsageCallCountTest.tooFewCalls":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":399,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":113,"org.easymock.tests.UsageThrowableTest.throwCheckedException":133,"org.easymock.tests.MockingTest.testStrictClassMocking":181,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":402,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":95,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":401,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":374,"org.easymock.tests2.CompareToTest.testGreateOrEqual":507,"org.easymock.tests.ObjectMethodsTest.testHashCode":234,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":508,"org.easymock.tests2.NameTest.nameForNiceMock":408,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":287,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":338,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":282,"org.easymock.tests2.DependencyTest.testInterfaceMocking":459,"org.easymock.samples.ExampleTest.addDocument":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.AnswerTest.stubAnswer":373,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":175,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":424,"org.easymock.tests.UsageVarargTest.varargLongAccepted":266,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":200,"org.easymock.tests.UsageExpectAndReturnTest.floatType":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":501,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":466,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageThrowableTest.noUpperLimit":131,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":469,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":429,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":324,"org.easymock.tests2.SerializationTest.test":376,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":104,"org.easymock.tests2.UsageConstraintsTest.testSame":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":71,"org.easymock.samples.SupportTest.addDocument":31,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":400,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":272,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":347,"org.easymock.tests.GenericTest.testPackageScope":64,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":20,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":188,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":270,"org.easymock.tests2.NameTest.nameForMock":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":82,"org.easymock.tests2.UsageStrictMockTest.differentMethods":451,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":51,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":93,"org.easymock.tests2.MockedExceptionTest.testRealException":368,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":151,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":205,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":138,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":249,"org.easymock.tests2.NameTest.nameForStrictMock":407,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":419,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":506,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":498,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":306,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":432,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":489,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":106,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":417,"org.easymock.tests2.UsageStrictMockTest.range":450,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":276,"org.easymock.tests2.UsageConstraintsTest.lessThan":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":199,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":379,"org.easymock.tests2.CaptureTest.testCaptureRightOne":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":351,"org.easymock.tests2.UsageConstraintsTest.testOr":476,"org.easymock.tests.UsageRangeTest.combination":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":303,"org.easymock.tests.UsageTest.wrongArguments":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":348,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":192,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":108,"org.easymock.tests.UsageVarargTest.varargShortAccepted":265,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":221,"org.easymock.tests2.UsageConstraintsTest.cmpTo":481,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":290,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":371,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":194,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests2.CaptureTest.testCaptureFromStub":330,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":239,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":418,"org.easymock.tests.UsageTest.unexpectedCallWithArray":153,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":286,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":174,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":219,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":512,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":84,"org.easymock.tests2.CaptureTest.testCapture":514,"org.easymock.tests2.UsageConstraintsTest.constraints":470,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":176,"org.easymock.samples.ExampleTest.addAndChangeDocument":30,"org.easymock.tests.UsageStrictMockTest.testVerify":180,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":6,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":115,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":76,"org.easymock.tests.LimitationsTest.abstractClass":294,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":384,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":259}}]
