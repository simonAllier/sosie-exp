[{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,343,344,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[8,94,358,106,127,130],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[19,51,53,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[359,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[85,361,362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.AssertionErrorWrapper:32","sourceCode":"return java.lang.AssertionError","type":"CtReturnImpl"},"failures":[0,13,27,38,40,41,42,43,47,48,49,50,67,70,71,72,73,89,97,99,112,116,117,120,128,133,134,135,136,138,139,140,141,142,174,175,176,177,180,181,182,216,218,219,222,223,224,226,227,228,229,256,280,282,283,284,285,286,287,300],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:121","sourceCode":"if (org.easymock.internal.Invocation.isPrimitiveParameter(int)) {\n    if (!(java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n} else {\n    if (java.lang.Object != java.lang.Object) {\n        return false;\n    } \n}","type":"CtIfImpl"},"failures":[363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[364,365,366,343,344],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[367,368,369,370,371,372,373,374,375,7,376,377,8,378,379,380,381,382,383,384,385,386,9,387,388,389,390,391,10,392,393,85,394,395,361],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[85,86,87,396],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[3,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,42,44,45,46,49,50,51,52,54,55,58,59,60,61,63,64,65,66,67,68,69,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,95,97,98,99,100,104,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,128,129,131,132,134,138,140,141,143,152,153,162,163,164,165,166,168,169,170,174,175,178,179,182,183,184,185,189,190,226,228,229,230,231,232,283,285,286,289,291,292,293,294,295,296,297,299,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,340,346,349,351,352,354,357],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[171,172,173,249,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[398,399,400,401,402,403,404,405,406,407],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[164,346,349,351,352,354],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[398,399,400,402,403,405,406],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[19,51,53,61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[151,155,187],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[359,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[424,13,20,25,37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[367,368,369,370,371,372,373,374,375,7,376,377,8,378,379,380,381,382,383,384,385,386,9,387,388,389,390,391,10,392,393,85,394,395,361],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":14,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":174,"org.easymock.tests2.UsageTest.argumentsOrdered":48,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":121,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":43,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":341,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":234,"org.easymock.tests.MockingTest.testPartialClassMocking":168,"org.easymock.tests.MockClassControlTest.testToString":303,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":196,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":398,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":20,"org.easymock.tests2.UsageTest.wrongArguments":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":336,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":194,"org.easymock.samples.ExampleTest.answerVsDelegate":350,"org.easymock.tests2.UsageConstraintsTest.testNull":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":91,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":120,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":308,"org.easymock.tests2.CaptureTest.testPrimitive":54,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":340,"org.easymock.tests.UsageTest.moreThanOneArgument":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":215,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":267,"org.easymock.tests.UsageTest.argumentsOrdered":181,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":270,"org.easymock.tests.UsageVarargTest.varargIntAccepted":253,"org.easymock.tests.InvocationTest.testEquals":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":403,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":422,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":166,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests.ReplayStateInvalidUsageTest.times":247,"org.easymock.tests2.AnswerTest.answer":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":147,"org.easymock.tests2.CaptureTest.testAnd":51,"org.easymock.tests2.UsageTest.strictResetToDefault":39,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":115,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":231,"org.easymock.tests2.DelegateToTest.testDelegate":6,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":161,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":275,"org.easymock.tests2.CaptureTest.testCapture1_2446744":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":145,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":241,"org.easymock.tests.UsageThrowableTest.throwError":289,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":393,"org.easymock.samples.PartialClassMockTest.testGetArea":357,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":187,"org.easymock.tests2.UsageTest.niceToStrict":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":372,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":129,"org.easymock.tests2.MockBuilderTest.testCreateMock":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":205,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":192,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":369,"org.easymock.tests.UsageOverloadedMethodTest.overloading":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":25,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":312,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":327,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":24,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":60,"org.easymock.tests2.EasyMockSupportClassTest.testAll":7,"org.easymock.tests.MockClassControlTest.testEquals":307,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":159,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":146,"org.easymock.tests2.CaptureTest.testCaptureAll":52,"org.easymock.tests2.UsageConstraintsTest.testMatches":26,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":268,"org.easymock.samples.ExampleTest.voteForRemovals":354,"org.easymock.tests.UsageVarargTest.allKinds":261,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":160,"org.easymock.samples.BasicClassMockTest.testPrintContent":348,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":295,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":419,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":404,"org.easymock.tests2.UsageConstraintsTest.greaterThan":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":230,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":99,"org.easymock.samples.ExampleTest.voteForRemoval":351,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":94,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":225,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":113,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":233,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":1,"org.easymock.tests2.CaptureTest.testCaptureFirst":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":114,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":323,"org.easymock.tests2.UsageTest.moreThanOneArgument":40,"org.easymock.tests2.CaptureTest.testCapture2_2446744":63,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":68,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":134,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":260,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":223,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":367,"org.easymock.tests.UsageExpectAndReturnTest.longType":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":157,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":111,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":214,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":151,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":265,"org.easymock.tests.UsageCallCountTest.tooManyCalls":224,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":294,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.testContains":23,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":217,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":108,"org.easymock.tests2.UsageConstraintsTest.testFind":15,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":75,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests.UsageExpectAndReturnTest.object":326,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":399,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":255,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":150,"org.easymock.tests.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":371,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":190,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":154,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":405,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":251,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":416,"org.easymock.tests.MockClassControlTest.testHashCode":306,"org.easymock.tests2.EasyMockSupportTest.testVerify":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":384,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":278,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":144,"org.easymock.tests.UsageVarargTest.varargCharAccepted":254,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests2.UsageTest.openCallCountByLastCall":44,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":394,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":122,"org.easymock.tests.DefaultClassInstantiatorTest.object":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":277,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":385,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":97,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":305,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":202,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":10,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":304,"org.easymock.tests2.UsageTest.resumeIfFailure":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":236,"org.easymock.tests2.StubTest.stubWithReturnValue":77,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":406,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":325,"org.easymock.tests2.SerializationTest.testAllMockedMethod":87,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":262,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":362,"org.easymock.samples.SupportTest.voteForRemovals":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":208,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":396,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":263,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":101,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":156,"org.easymock.tests.UsageExpectAndThrowTest.object":206,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":31,"org.easymock.tests2.DelegateToTest.testWrongClass":4,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":152,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":153,"org.easymock.tests.UsageStrictMockTest.range":285,"org.easymock.samples.ConstructorCalledMockTest.testTax":343,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":78,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":131,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":188,"org.easymock.tests2.CaptureTest.testCaptureNone":59,"org.easymock.tests.UsageUnorderedTest.message":300,"org.easymock.tests.UsageVerifyTest.twoReturns":228,"org.easymock.tests.UsageVarargTest.varargByteAccepted":259,"org.easymock.tests2.ThreadingTest.testThreadSafe":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":387,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":221,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":347,"org.easymock.tests2.CaptureTest.testCapture_2617107":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":339,"org.easymock.tests2.UsageConstraintsTest.any":21,"org.easymock.tests2.StubTest.stub":76,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":173,"org.easymock.tests.UsageExpectAndThrowTest.longType":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":235,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":245,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests2.SerializationTest.testClass":85,"org.easymock.tests.LimitationsTest.mockNativeMethod":189,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":335,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":409,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests2.NameTest.nameForMocksControl":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":410,"org.easymock.tests2.MockedExceptionTest.testMockedException":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":377,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":170,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":200,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":132,"org.easymock.tests.MockingTest.testNicePartialClassMocking":169,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":93,"org.easymock.tests2.CaptureTest.testCaptureLast":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":276,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":19,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":32,"org.easymock.tests.MockingTest.testTwoMocks":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":204,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":36,"org.easymock.samples.ExampleTest.removeNonExistingDocument":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":243,"org.easymock.tests.UsageStrictMockTest.differentMethods":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":417,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":67,"org.easymock.tests2.MockBuilderTest.testCreateMockString":135,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":301,"org.easymock.tests.UsageExpectAndThrowTest.floatType":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":378,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":103,"org.easymock.tests.UsageVerifyTest.twoThrows":227,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":9,"org.easymock.samples.ExampleTest.voteAgainstRemoval":352,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":186,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":98,"org.easymock.tests2.UsageConstraintsTest.testNotNull":35,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":296,"org.easymock.tests2.UsageTest.defaultResetToNice":46,"org.easymock.samples.ExampleTest.voteAgainstRemovals":349,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":408,"org.easymock.tests.UsageVarargTest.differentLength":256,"org.easymock.tests2.CallbackTest.callback":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":364,"org.easymock.tests.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":338,"org.easymock.tests.UsageCallCountTest.tooFewCalls":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":81,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":195,"org.easymock.tests.UsageThrowableTest.throwCheckedException":293,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":80,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":82,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":105,"org.easymock.tests2.CompareToTest.testGreateOrEqual":424,"org.easymock.tests.ObjectMethodsTest.testHashCode":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":402,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":69,"org.easymock.tests2.NameTest.nameForNiceMock":72,"org.easymock.tests2.DependencyTest.testInterfaceMocking":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":400,"org.easymock.samples.ExampleTest.addDocument":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.DelegateToTest.testStubDelegate":3,"org.easymock.tests2.AnswerTest.stubAnswer":104,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":283,"org.easymock.tests.UsageVarargTest.varargLongAccepted":258,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests.UsageExpectAndReturnTest.floatType":318,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":126,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":421,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":29,"org.easymock.tests.UsageThrowableTest.noUpperLimit":290,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":12,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":56,"org.easymock.tests2.SerializationTest.test":86,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":359,"org.easymock.tests2.UsageConstraintsTest.testSame":17,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":317,"org.easymock.samples.SupportTest.addDocument":345,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":379,"org.easymock.tests.GenericTest.testPackageScope":297,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":273,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":420,"org.easymock.tests2.NameTest.nameForMock":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":328,"org.easymock.tests2.UsageStrictMockTest.differentMethods":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":366,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":232,"org.easymock.tests2.MockedExceptionTest.testRealException":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":407,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":138,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":250,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":337,"org.easymock.tests2.NameTest.nameForStrictMock":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":92,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":128,"org.easymock.tests2.UsageStrictMockTest.range":140,"org.easymock.tests2.UsageConstraintsTest.lessThan":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":401,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":112,"org.easymock.tests2.CaptureTest.testCaptureRightOne":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":383,"org.easymock.tests2.UsageConstraintsTest.testOr":18,"org.easymock.tests.UsageRangeTest.combination":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":89,"org.easymock.tests.UsageTest.wrongArguments":177,"org.easymock.tests2.MockBuilderTest.testWithConstructor":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":380,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":329,"org.easymock.tests.UsageVarargTest.varargShortAccepted":257,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":222,"org.easymock.tests2.UsageConstraintsTest.cmpTo":22,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":102,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":45,"org.easymock.tests2.CaptureTest.testCaptureFromStub":62,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":240,"org.easymock.tests.UsageTest.unexpectedCallWithArray":176,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":220,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":330,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":356,"org.easymock.tests.UsageStrictMockTest.testVerify":288,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":342,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":158,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":165,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":117,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":252}}]
