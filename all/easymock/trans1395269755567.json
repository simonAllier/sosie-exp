[{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[60,13,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[61,62,63,64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[19,20,31,65,66,67,68,69,70,71,72,73,74,75,58],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[76,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:330","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","actualTypeArgument":"actualTypeArgument","variable":"variable","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[78,79,80,81,82,83,84,30,85,86,87,88,89,90,91,0,92],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[94,95,96,97],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[98,99,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[101,102,103,104,105],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[107,108,109,110,111,103,104,112,113,114,115],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[116,117,118,119,120,65,68],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[19,19,20,20,70,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[121,122],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[123,124,125,126,127,128,129,130,131,132,133,134,1,2,3,135,136,137,138,139,140,4,141,142,143,107,144,101,108,109,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,110,176,177,178,179,180,181,100,182,183,184,185,5,186,78,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,8,9,10,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,111,103,104,246,247,248,249,250,251,252,253,254,255,256,257,19,19,20,20,21,258,259,22,23,260,261,262,263,264,265,266,112,267,105,113,114,268,269,24,25,26,27,82,28,29,270,271,115,272,273,274,275,276,277,278,279,280,281,83,84,30,85,282,283,284,86,285,31,286,287,288,289,33,35,37,38,40,42,43,44,45,46,47,87,48,49,50,52,54,55,56,290,291,292,293,294,295,296,297,88,89,90,91,0,92,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,94,328,329,330,331,332,95,333,334,335,336,96,337,338,339,340,122,341,97,342,343,344,345,346,347,348,58,349,59,350],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[143,351,352,353,110,354,176,179,180,115,272,278,279,355,356,357,358],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[124,146,149,150,151,152,153,192,209,210,211,212,213,214,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,103,269,83,84,30,85],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[143,204,337],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[359,326,122,345],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[138,146,148,149,150,151,152,153,175,178,192,213,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,103,269,270,276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[143,351,352,354,355,357],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[123,1,135,136,139,4,107,101,108,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,110,177,178,181,186,78,187,188,189,193,205,206,207,360,8,9,10,217,218,219,220,221,242,243,244,245,111,104,251,253,254,256,21,261,262,263,264,112,105,113,269,24,25,26,27,82,28,29,270,271,115,273,275,276,277,280,281,30,282,283,284,86,285,31,33,35,37,38,40,42,43,44,45,46,47,87,48,49,50,52,54,55,56,290,294,90,298,299,301,302,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,94,328,329,330,331,332,95,333,335,336,96,337,338,339,340,122,341,97,342,343,345,346,347,348,58,349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[138,146,148,149,150,151,152,153,175,178,192,213,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,103,269,270,276],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[298,300,301,302,303,304,305,307,361,308],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[124,137,138,148,152,153,175,178,192,209,210,211,212,213,214,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,269,270,276,83,84,30,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":328,"org.easymock.tests2.UsageTest.argumentsOrdered":279,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":175,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":212,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":274,"org.easymock.tests2.StubTest.stubWithReturnValue":269,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":345,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":258,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":163,"org.easymock.tests2.SerializationTest.testAllMockedMethod":59,"org.easymock.tests2.DelegateToTest.testReturnException":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":210,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":100,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":74,"org.easymock.tests.MockingTest.testPartialClassMocking":8,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":357,"org.easymock.samples.SupportTest.voteForRemovals":261,"org.easymock.tests.MockClassControlTest.testToString":15,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":174,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":222,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":43,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":182,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":291,"org.easymock.tests.UsageExpectAndThrowTest.object":232,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":342,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":264,"org.easymock.tests2.DelegateToTest.testWrongClass":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":217,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":218,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":333,"org.easymock.tests2.UsageTest.wrongArguments":272,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":135,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":101,"org.easymock.samples.ExampleTest.answerVsDelegate":252,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":319,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":12,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":24,"org.easymock.tests2.UsageConstraintsTest.testNull":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":233,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":48,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":321,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests2.CaptureTest.testPrimitive":301,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":241,"org.easymock.tests.UsageTest.moreThanOneArgument":110,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":179,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":87,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":248,"org.easymock.tests2.CaptureTest.testCaptureNone":306,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":207,"org.easymock.tests.UsageUnorderedTest.message":140,"org.easymock.tests.UsageVerifyTest.twoReturns":104,"org.easymock.tests.UsageVarargTest.varargByteAccepted":202,"org.easymock.tests2.ThreadingTest.testThreadSafe":282,"org.easymock.tests.UsageTest.argumentsOrdered":180,"org.easymock.tests.UsageVarargTest.varargIntAccepted":196,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":132,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":22,"org.easymock.tests2.CaptureTest.testCapture_2617107":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":186,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":358,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":138,"org.easymock.tests2.UsageConstraintsTest.any":335,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":36,"org.easymock.tests2.StubTest.stub":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":189,"org.easymock.tests.UsageExpectAndThrowTest.longType":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":211,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":267,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":262,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":325,"org.easymock.tests.LimitationsTest.mockNativeMethod":4,"org.easymock.tests.ReplayStateInvalidUsageTest.times":98,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":106,"org.easymock.tests2.AnswerTest.answer":290,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":173,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":334,"org.easymock.tests2.CaptureTest.testAnd":298,"org.easymock.tests2.UsageTest.strictResetToDefault":271,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":53,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":114,"org.easymock.tests2.NameTest.nameForMocksControl":289,"org.easymock.tests2.MockedExceptionTest.testMockedException":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":244,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.DelegateToTest.testDelegate":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":226,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":10,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":237,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":50,"org.easymock.tests2.CaptureTest.testCaptureLast":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":213,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":62,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":95,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":343,"org.easymock.tests.MockingTest.testTwoMocks":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":61,"org.easymock.tests2.CaptureTest.testCapture1_2446744":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":235,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":230,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":278,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":347,"org.easymock.tests.UsageThrowableTest.throwError":146,"org.easymock.tests.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":284,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":250,"org.easymock.tests.UsageExpectAndThrowTest.floatType":224,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":340,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":293,"org.easymock.tests.UsageVerifyTest.twoThrows":103,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":72,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":44,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests2.CompareToTest.testLessOrEqual":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":78,"org.easymock.samples.ExampleTest.voteAgainstRemoval":254,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":205,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":55,"org.easymock.tests2.UsageTest.niceToStrict":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":223,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":6,"org.easymock.tests2.UsageConstraintsTest.testNotNull":346,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":153,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":35,"org.easymock.tests2.UsageTest.defaultResetToNice":277,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.samples.ExampleTest.voteAgainstRemovals":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":169,"org.easymock.tests.UsageVarargTest.differentLength":199,"org.easymock.tests2.CallbackTest.callback":350,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":75,"org.easymock.tests.UsageTest.openCallCountByLastCall":177,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":231,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":317,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":137,"org.easymock.tests.UsageCallCountTest.tooFewCalls":130,"org.easymock.tests.UsageOverloadedMethodTest.overloading":220,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":338,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":192,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":27,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":165,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":337,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":76,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":307,"org.easymock.tests.UsageThrowableTest.throwCheckedException":150,"org.easymock.tests2.EasyMockSupportClassTest.testAll":42,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":2,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":356,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":239,"org.easymock.tests2.CaptureTest.testCaptureAll":299,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":26,"org.easymock.tests2.UsageConstraintsTest.testMatches":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":82,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":249,"org.easymock.tests.ObjectMethodsTest.testHashCode":60,"org.easymock.samples.ExampleTest.voteForRemovals":256,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":119,"org.easymock.tests2.NameTest.nameForNiceMock":288,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":285,"org.easymock.tests.UsageVarargTest.allKinds":204,"org.easymock.tests2.DependencyTest.testInterfaceMocking":263,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":79,"org.easymock.samples.BasicClassMockTest.testPrintContent":23,"org.easymock.samples.ExampleTest.addDocument":255,"org.easymock.tests2.DelegateToTest.testStubDelegate":90,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":152,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests2.AnswerTest.stubAnswer":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":214,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":0,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":107,"org.easymock.tests2.UsageConstraintsTest.greaterThan":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":243,"org.easymock.tests.UsageVarargTest.varargLongAccepted":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":56,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.samples.ExampleTest.voteForRemoval":253,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":283,"org.easymock.tests.UsageExpectAndReturnTest.floatType":156,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":51,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":31,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":341,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.UsageThrowableTest.noUpperLimit":147,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":327,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":270,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":5,"org.easymock.tests2.SerializationTest.test":349,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":303,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":69,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":314,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":80,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":148,"org.easymock.tests2.UsageConstraintsTest.testSame":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":155,"org.easymock.samples.SupportTest.addDocument":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":209,"org.easymock.tests2.CaptureTest.testCaptureFirst":311,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":315,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":161,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests2.CaptureTest.testCapture2_2446744":310,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":86,"org.easymock.tests2.UsageTest.moreThanOneArgument":115,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":203,"org.easymock.tests2.NameTest.nameForMock":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":133,"org.easymock.tests.UsageExpectAndReturnTest.longType":157,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":312,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":166,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":344,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":238,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":71,"org.easymock.tests2.UsageStrictMockTest.differentMethods":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":158,"org.easymock.tests.UsageCallCountTest.tooManyCalls":134,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":236,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":245,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":129,"org.easymock.tests2.MockedExceptionTest.testRealException":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":227,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":112,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":25,"org.easymock.tests2.NameTest.nameForStrictMock":287,"org.easymock.tests2.UsageConstraintsTest.testContains":96,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":30,"org.easymock.tests2.UsageConstraintsTest.testFind":329,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":221,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":49,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":297,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":141,"org.easymock.tests.UsageExpectAndReturnTest.object":164,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":52,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":105,"org.easymock.tests2.UsageConstraintsTest.lessThan":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":320,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":117,"org.easymock.tests.UsageTest.exactCallCountByLastCall":181,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":123,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":313,"org.easymock.tests2.CaptureTest.testCaptureRightOne":308,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":215,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":353,"org.easymock.tests2.UsageConstraintsTest.testOr":332,"org.easymock.tests.UsageRangeTest.combination":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":65,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":170,"org.easymock.tests.UsageTest.wrongArguments":176,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":191,"org.easymock.tests2.MockBuilderTest.testWithConstructor":66,"org.easymock.tests.MockClassControlTest.testHashCode":18,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":14,"org.easymock.tests2.EasyMockSupportTest.testVerify":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":167,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":216,"org.easymock.tests.UsageVarargTest.varargShortAccepted":200,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":81,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":190,"org.easymock.tests2.UsageConstraintsTest.cmpTo":336,"org.easymock.tests.UsageVarargTest.varargCharAccepted":197,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":292,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":266,"org.easymock.tests2.UsageTest.openCallCountByLastCall":275,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":276,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":125,"org.easymock.tests2.CaptureTest.testCaptureFromStub":309,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":354,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":360,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":229,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":143,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":149,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":131,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":70,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":168,"org.easymock.tests2.CaptureTest.testCapture":361,"org.easymock.tests2.UsageConstraintsTest.constraints":94,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":54,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":17,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":144,"org.easymock.samples.ExampleTest.addAndChangeDocument":257,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":228,"org.easymock.tests2.ConstraintsToStringTest.notToString":93,"org.easymock.tests.UsageStrictMockTest.testVerify":145,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":183,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":259,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":45,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":142,"org.easymock.tests2.CompareToTest.testGreateThan":121,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":304,"org.easymock.tests2.UsageTest.resumeIfFailure":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":187,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":160,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":318,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":195,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":102}}]
