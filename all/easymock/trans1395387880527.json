[{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (this.int)) + \" and \") + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum","maximum":"minimum"}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[12,32,33,34,35,36,23,37,26,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[42,43,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[47,48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:204","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[50,51,22,52,53,54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[55,56,57,58,59,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.Invocation:60","sourceCode":"final int int = (java.lang.Object[].int) - 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[61,62,63],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[64,65,66,67,68,69,70,55,56,71,72,73,74,75,76,77,78,79,80,81,82,12,13,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,32,126,127,128,129,130,131,132,133,134,135,136,0,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,14,159,160,11,161,162,163,164,165,166,167,168,169,170,171,172,173,4,174,175,176,177,178,179,18,19,20,21,180,181,182,183,184,185,186,187,188,189,43,44,190,191,192,193,194,195,23,24,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,37,25,26,228,229,230,231,232,233,234,235,236,237,238,239,240,241,27,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[291],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[105,132,160],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[292,293,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[25,294,295],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[296],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":92,"org.easymock.tests2.UsageTest.argumentsOrdered":17,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":160,"org.easymock.tests2.StubTest.stubWithReturnValue":185,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":207,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":73,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":111,"org.easymock.tests2.SerializationTest.testAllMockedMethod":175,"org.easymock.tests2.DelegateToTest.testReturnException":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests.MockingTest.testPartialClassMocking":229,"org.easymock.samples.SupportTest.voteForRemovals":75,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":51,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":268,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":177,"org.easymock.tests.UsageExpectAndThrowTest.object":278,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":79,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":262,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":258,"org.easymock.tests2.UsageTest.wrongArguments":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":55,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":188,"org.easymock.samples.ExampleTest.answerVsDelegate":65,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":147,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":167,"org.easymock.tests2.UsageConstraintsTest.testNull":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":279,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":131,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":156,"org.easymock.tests2.CaptureTest.testPrimitive":118,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":287,"org.easymock.tests.UsageTest.moreThanOneArgument":27,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":192,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":52,"org.easymock.tests2.CaptureTest.testCaptureNone":122,"org.easymock.tests.UsageUnorderedTest.message":31,"org.easymock.tests.UsageVerifyTest.twoReturns":26,"org.easymock.tests.UsageVarargTest.varargByteAccepted":249,"org.easymock.tests2.ThreadingTest.testThreadSafe":137,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":49,"org.easymock.tests.UsageTest.argumentsOrdered":30,"org.easymock.tests.UsageVarargTest.varargIntAccepted":244,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":240,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":252,"org.easymock.tests2.CaptureTest.testCapture_2617107":117,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":153,"org.easymock.tests2.UsageConstraintsTest.any":99,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":155,"org.easymock.tests2.StubTest.stub":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":256,"org.easymock.tests.UsageExpectAndThrowTest.longType":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests.LimitationsTest.mockNativeMethod":234,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":217,"org.easymock.tests2.AnswerTest.answer":32,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":87,"org.easymock.tests2.CaptureTest.testAnd":115,"org.easymock.tests2.UsageTest.strictResetToDefault":158,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":83,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":135,"org.easymock.tests2.NameTest.nameForMocksControl":21,"org.easymock.tests2.MockedExceptionTest.testMockedException":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":191,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":144,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests2.DelegateToTest.testDelegate":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":272,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":231,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":157,"org.easymock.tests.MockingTest.testNicePartialClassMocking":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":283,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":133,"org.easymock.tests2.CaptureTest.testCaptureLast":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":222,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":97,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":267,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":85,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":113,"org.easymock.tests.UsageThrowableTest.throwError":47,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":62,"org.easymock.tests.UsageExpectAndThrowTest.floatType":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":194,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":105,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":126,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":178,"org.easymock.samples.PartialClassMockTest.testGetArea":72,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":253,"org.easymock.samples.ExampleTest.voteAgainstRemoval":67,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":269,"org.easymock.tests2.UsageTest.niceToStrict":159,"org.easymock.tests2.UsageConstraintsTest.testNotNull":112,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":162,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":154,"org.easymock.tests2.UsageTest.defaultResetToNice":11,"org.easymock.samples.ExampleTest.voteAgainstRemovals":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":213,"org.easymock.tests2.CallbackTest.callback":183,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":57,"org.easymock.tests.UsageTest.openCallCountByLastCall":39,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":277,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":50,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":145,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":89,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":235,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":186,"org.easymock.tests.UsageCallCountTest.tooFewCalls":238,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":170,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":102,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":189,"org.easymock.tests.UsageThrowableTest.throwCheckedException":294,"org.easymock.tests2.EasyMockSupportClassTest.testAll":176,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":44,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":285,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":86,"org.easymock.tests2.CaptureTest.testCaptureAll":116,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":169,"org.easymock.tests2.UsageConstraintsTest.testMatches":104,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":193,"org.easymock.tests.ObjectMethodsTest.testHashCode":61,"org.easymock.samples.ExampleTest.voteForRemovals":69,"org.easymock.tests2.NameTest.nameForNiceMock":20,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":139,"org.easymock.tests.UsageVarargTest.allKinds":251,"org.easymock.tests2.DependencyTest.testInterfaceMocking":78,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":37,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":266,"org.easymock.samples.BasicClassMockTest.testPrintContent":77,"org.easymock.samples.ExampleTest.addDocument":68,"org.easymock.tests2.DelegateToTest.testStubDelegate":181,"org.easymock.tests2.AnswerTest.stubAnswer":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":223,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":9,"org.easymock.tests2.UsageConstraintsTest.greaterThan":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":292,"org.easymock.tests.UsageVarargTest.varargLongAccepted":248,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.samples.ExampleTest.voteForRemoval":66,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":138,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":216,"org.easymock.tests.UsageExpectAndReturnTest.floatType":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":56,"org.easymock.tests.UsageThrowableTest.noUpperLimit":288,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":107,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":257,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":90,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":119,"org.easymock.tests2.SerializationTest.test":174,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":3,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":142,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.tests2.UsageConstraintsTest.testSame":95,"org.easymock.samples.SupportTest.addDocument":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.CaptureTest.testCaptureFirst":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":143,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":36,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":205,"org.easymock.tests.GenericTest.testPackageScope":43,"org.easymock.tests2.UsageTest.moreThanOneArgument":14,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":250,"org.easymock.tests.GenericTest.testBridgedEquals":46,"org.easymock.tests2.NameTest.nameForMock":18,"org.easymock.tests.UsageExpectAndReturnTest.longType":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":263,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":210,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":284,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":59,"org.easymock.tests2.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":190,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":227,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":237,"org.easymock.tests2.MockedExceptionTest.testRealException":165,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":273,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":259,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":168,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":236,"org.easymock.tests2.NameTest.nameForStrictMock":19,"org.easymock.tests2.UsageConstraintsTest.testContains":101,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":164,"org.easymock.tests2.UsageConstraintsTest.testFind":93,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":233,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":132,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":81,"org.easymock.tests.UsageExpectAndReturnTest.object":208,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":134,"org.easymock.tests2.UsageConstraintsTest.lessThan":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":148,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.UsageTest.exactCallCountByLastCall":41,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":141,"org.easymock.tests2.CaptureTest.testCaptureRightOne":124,"org.easymock.tests2.UsageConstraintsTest.testOr":96,"org.easymock.tests.UsageRangeTest.combination":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":242,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":214,"org.easymock.tests.UsageTest.wrongArguments":28,"org.easymock.tests.MockClassControlTest.testHashCode":63,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":203,"org.easymock.tests2.EasyMockSupportTest.testVerify":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":211,"org.easymock.tests.UsageVarargTest.varargShortAccepted":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":84,"org.easymock.tests2.UsageConstraintsTest.cmpTo":100,"org.easymock.tests.UsageVarargTest.varargCharAccepted":245,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":82,"org.easymock.tests2.UsageTest.openCallCountByLastCall":34,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":35,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":151,"org.easymock.tests.UsageTest.unexpectedCallWithArray":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":275,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":48,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":239,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":58,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.constraints":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":274,"org.easymock.samples.ExampleTest.addAndChangeDocument":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":215,"org.easymock.tests.UsageStrictMockTest.testVerify":197,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":71,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":264,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":120,"org.easymock.tests2.UsageTest.resumeIfFailure":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":204,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":255,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":146}}]
