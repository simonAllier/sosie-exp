[{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"position":"org.easymock.internal.RecordState:136","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[38,45,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,19,19,20,20,99,100,101,102,103,2,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[5,120,14,121],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,3,138,48,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,38,39,171,172,173,174,175,45,176,63,177,178,64,65,66,67,179,180,68,69,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,4,200,201,202,203,204,49,205,206,207,208,209,50,51,210,211,212,213,214,215,216,217,218,5,6,120,219,220,7,8,9,10,221,222,223,224,225,11,226,12,13,227,14,15,228,229,230,231,121,16,17,18,232,233,234,235,236,70,71,237,72,73,74,75,238,76,239,240,77,78,79,80,241,81,82,242,83,84,243,244,85,86,87,46,88,245,47,89,90,246,91,247,248,249,250,251,252,253,254,255,256,257,258,259,260,92,261,262,263,264,93,265,266,94,267,268,269,270,271,272,273,274,275,95,276,277,278,279,280,96,281,282,283,97,98,284,285,286,287,288,289,290,291,19,20,292,293,294,99,295,296,297,298,299,100,300,301,302,303,304,305,306,307,308,52,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,21,22,23,24,25,324,325,326,1,101,102,103,2,104,105,106,107,108,109,110,111,327,328,53,26,329,54,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,0,367,27,28,368,369,29,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,112,397,398,399,400,401,113,114,115,402,116,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,30,434,435,436,437,438,439,440,441,442,31,32,33,34,35,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,56,57,460,461,462,463,464,465,58,59,466,467,60,61,468,469,470,471,472,473,474,475,117,476,477,478,479,118,480,481,36,37,482,483,484,485,486,487,62,119,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[370],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[128,129,130,131,132,133,134,135,3,48,139,146,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,38,172,173,175,45,176,177,178,64,65,66,67,180,68,69,189,190,192,193,196,197,198,199,4,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,5,6,120,219,7,8,9,10,221,222,224,225,11,226,12,13,227,14,15,228,229,230,121,16,17,18,70,71,237,72,73,74,76,78,79,80,83,85,87,88,90,252,259,260,92,261,93,94,95,96,284,285,286,287,289,291,19,19,20,20,293,99,52,314,321,322,323,21,22,23,24,25,324,325,326,101,103,26,54,330,333,334,335,338,361,0,27,28,368,369,29,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,112,114,115,116,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,30,434,435,436,437,31,32,33,34,35,455,456,457,458,459,56,57,460,461,462,463,464,465,466,467,468,474,36,37,482,484,485,487,119,488,489,490,491,492,493],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[189,191,199,120,219,8,10,221,223,228,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[172,358],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[38,39,494,45,63,64,65,66,67,68,69,182,186,70,71,72,73,74,75,76,239,240,77,78,79,80,241,81,82,495,83,84,244,85,86,87,88,47,89,90,496,91,259,260,92,262,263,264,93,265,266,94,267,268,269,270,271,272,273,274,275,95,276,277,278,279,280,96,281,282,97,98,19,19,20,20,99,100,301,302,303,304,305,306,308,1,101,102,103,2,104,105,106,107,108,109,110,111,395,396,112,397,400,401,113,114,115,116,405,117,118,119],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[497],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[191,199,120],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[147,253,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[212,355],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[173,175,231,16],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.Capture:82","failures":[189,191,192,193,194,195,196,198,499,199,4,201],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[122,123,124,125,128,129,130,133,134,135,136,137,3,138,48,139,140,146,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,38,172,173,175,45,176,63,177,178,64,65,66,67,180,68,69,189,190,191,192,193,194,195,196,197,198,199,4,200,201,202,203,204,49,205,206,207,208,209,50,51,210,211,213,214,215,217,218,5,6,120,219,7,8,9,10,221,222,224,225,11,226,12,13,227,14,15,228,229,230,231,121,16,17,18,233,234,235,236,70,71,237,72,73,74,75,76,77,78,79,80,82,83,85,86,87,88,89,90,91,252,259,260,92,261,93,94,95,96,283,97,98,284,285,286,287,288,289,290,291,19,19,20,20,292,293,294,99,296,297,298,301,52,309,310,311,312,313,314,315,316,317,318,319,320,21,22,23,24,25,101,102,104,105,106,107,108,109,110,111,327,328,53,26,329,54,330,331,332,336,337,338,339,340,341,342,343,344,27,28,368,369,29,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,112,114,115,116,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,30,434,438,439,440,441,442,31,32,33,34,35,443,444,445,447,448,449,450,451,452,453,454,455,456,457,458,459,56,57,461,462,463,464,465,58,59,466,467,60,61,468,469,470,471,472,36,37,482,484,485,487,62,119,488,489,490,491,492,493],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[134,135],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[322,323,325,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":219,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":464,"org.easymock.tests2.UsageTest.argumentsOrdered":51,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":355,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":206,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":294,"org.easymock.tests2.DelegateToTest.testReturnException":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":489,"org.easymock.tests.MockingTest.testPartialClassMocking":114,"org.easymock.tests.MockClassControlTest.testToString":106,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":232,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":270,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":375,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":40,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":27,"org.easymock.tests2.UsageTest.wrongArguments":49,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":152,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":471,"org.easymock.samples.ExampleTest.answerVsDelegate":285,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":118,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":404,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":72,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":162,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":111,"org.easymock.tests2.CaptureTest.testPrimitive":192,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":29,"org.easymock.tests.UsageTest.moreThanOneArgument":465,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":394,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":23,"org.easymock.tests.UsageTest.argumentsOrdered":61,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":370,"org.easymock.tests.UsageVarargTest.varargIntAccepted":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":31,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":82,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":35,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests.ReplayStateInvalidUsageTest.times":317,"org.easymock.tests2.DependencyTest.testClassMocking":126,"org.easymock.tests2.AnswerTest.answer":130,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":362,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":125,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":477,"org.easymock.tests2.CaptureTest.testAnd":189,"org.easymock.tests2.UsageTest.strictResetToDefault":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":77,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":157,"org.easymock.tests2.DelegateToTest.testDelegate":217,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":390,"org.easymock.tests.LimitationsTest.mockFinalMethod":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":492,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":442,"org.easymock.tests2.DependencyTest.testClassMockingSupport":127,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":473,"org.easymock.tests2.CaptureTest.testCapture1_2446744":193,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":123,"org.easymock.tests.UsageThrowableTest.throwError":406,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":311,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":479,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":398,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":25,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":282,"org.easymock.samples.PartialClassMockTest.testGetArea":99,"org.easymock.tests.MockingTest.testInterfaceMocking":402,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":334,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":100,"org.easymock.tests2.UsageTest.niceToStrict":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":85,"org.easymock.tests2.MockBuilderTest.testCreateMock":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":278,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":384,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":158,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":476,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":323,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":469,"org.easymock.tests.UsageOverloadedMethodTest.overloading":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":280,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":485,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":12,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":461,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":425,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":226,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":198,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":446,"org.easymock.tests.MockClassControlTest.testEquals":110,"org.easymock.tests2.EasyMockSupportClassTest.testAll":93,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":102,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":440,"org.easymock.tests2.CaptureTest.testCaptureAll":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":124,"org.easymock.tests.MockNameTest.defaultName":399,"org.easymock.tests2.UsageConstraintsTest.testMatches":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":309,"org.easymock.samples.ExampleTest.voteForRemovals":289,"org.easymock.tests.UsageVarargTest.allKinds":454,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":459,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":441,"org.easymock.samples.BasicClassMockTest.testPrintContent":98,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":412,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":493,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":216,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":44,"org.easymock.tests2.UsageConstraintsTest.greaterThan":14,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":456,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":80,"org.easymock.samples.ExampleTest.voteForRemoval":286,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":308,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":167,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":480,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":75,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":119,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":202,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":352,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":155,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":488,"org.easymock.tests2.CaptureTest.testCaptureFirst":201,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":156,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":421,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":169,"org.easymock.tests2.CaptureTest.testCapture2_2446744":200,"org.easymock.tests2.UsageTest.moreThanOneArgument":204,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":363,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":453,"org.easymock.tests.GenericTest.testBridgedEquals":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":343,"org.easymock.tests.UsageExpectAndReturnTest.longType":417,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":438,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":153,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":496,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":393,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":460,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":231,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":21,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":325,"org.easymock.tests.UsageCallCountTest.tooManyCalls":344,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":422,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":380,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":411,"org.easymock.tests.MockingTest.testNiceClassMocking":405,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":65,"org.easymock.tests.MockingTest.testClassMocking":401,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":495,"org.easymock.tests2.UsageConstraintsTest.testContains":11,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":337,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":92,"org.easymock.tests2.UsageConstraintsTest.testFind":7,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":463,"org.easymock.tests.MockTypeTest.fromEasyMockClass":478,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":175,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":327,"org.easymock.tests.UsageExpectAndReturnTest.object":424,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":161,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":41,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":298,"org.easymock.tests.UsageTest.exactCallCountByLastCall":468,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":435,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":39,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":443,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":430,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":484,"org.easymock.tests.MockClassControlTest.testHashCode":109,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":248,"org.easymock.tests2.EasyMockSupportTest.testVerify":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":273,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":372,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":122,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":218,"org.easymock.tests.UsageVarargTest.varargCharAccepted":447,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":300,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":367,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":164,"org.easymock.tests.DefaultClassInstantiatorTest.object":301,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":321,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":296,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":274,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":144,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":247,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":108,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":78,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":381,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":431,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":324,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":96,"org.easymock.tests2.UsageTest.resumeIfFailure":210,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":491,"org.easymock.tests2.StubTest.stubWithReturnValue":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":423,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":121,"org.easymock.tests2.SerializationTest.testAllMockedMethod":63,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":361,"org.easymock.samples.SupportTest.voteForRemovals":293,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":387,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":0,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":131,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":437,"org.easymock.tests.UsageExpectAndThrowTest.object":385,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":229,"org.easymock.tests2.DelegateToTest.testWrongClass":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":36,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":37,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":54,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":187,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":160,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":386,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":87,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":262,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":470,"org.easymock.tests2.CaptureTest.testCaptureNone":197,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":335,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":498,"org.easymock.tests.UsageUnorderedTest.message":52,"org.easymock.tests.UsageVerifyTest.twoReturns":57,"org.easymock.tests.UsageVarargTest.varargByteAccepted":452,"org.easymock.tests2.ThreadingTest.testThreadSafe":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":276,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":341,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":97,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":299,"org.easymock.tests2.CaptureTest.testCapture_2617107":191,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":365,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":369,"org.easymock.tests2.UsageConstraintsTest.any":224,"org.easymock.tests2.StubTest.stub":177,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":316,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":366,"org.easymock.tests.UsageExpectAndThrowTest.longType":378,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":305,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":315,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":252,"org.easymock.tests.LimitationsTest.mockNativeMethod":112,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":433,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":143,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":140,"org.easymock.tests2.NameTest.nameForMocksControl":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":145,"org.easymock.tests2.MockedExceptionTest.testMockedException":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":266,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":467,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":174,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":70,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":88,"org.easymock.tests.MockingTest.testNicePartialClassMocking":115,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":141,"org.easymock.tests2.CaptureTest.testCaptureLast":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":474,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":69,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":221,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":230,"org.easymock.tests.MockingTest.testTwoMocks":113,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":414,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":383,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":50,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":17,"org.easymock.samples.ExampleTest.removeNonExistingDocument":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":148,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":313,"org.easymock.tests.UsageStrictMockTest.differentMethods":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":249,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":303,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":168,"org.easymock.tests2.MockBuilderTest.testCreateMockString":91,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":267,"org.easymock.tests.UsageExpectAndThrowTest.floatType":377,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":264,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":133,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":171,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":95,"org.easymock.samples.ExampleTest.voteAgainstRemoval":287,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":356,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":79,"org.easymock.tests.LimitationsTest.privateConstructor":396,"org.easymock.tests2.UsageConstraintsTest.testNotNull":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":413,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":259,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":357,"org.easymock.tests.UsageVarargTest.differentLength":449,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":142,"org.easymock.tests2.CallbackTest.callback":172,"org.easymock.tests2.UsageConstraintsTest.equals":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":239,"org.easymock.tests.UsageTest.openCallCountByLastCall":466,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":368,"org.easymock.tests.UsageCallCountTest.tooFewCalls":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":67,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":472,"org.easymock.tests.UsageThrowableTest.throwCheckedException":410,"org.easymock.tests.MockingTest.testStrictClassMocking":400,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":434,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":147,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":66,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":180,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":135,"org.easymock.tests.ObjectMethodsTest.testHashCode":297,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":170,"org.easymock.tests2.NameTest.nameForNiceMock":235,"org.easymock.tests2.DependencyTest.testInterfaceMocking":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":42,"org.easymock.samples.ExampleTest.addDocument":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":277,"org.easymock.tests2.DelegateToTest.testStubDelegate":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":281,"org.easymock.tests2.AnswerTest.stubAnswer":134,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":26,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":245,"org.easymock.tests.UsageVarargTest.varargLongAccepted":451,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":432,"org.easymock.tests.UsageExpectAndReturnTest.floatType":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":38,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests.UsageThrowableTest.noUpperLimit":407,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":256,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":6,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":182,"org.easymock.tests2.SerializationTest.test":176,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":194,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":415,"org.easymock.tests2.UsageConstraintsTest.testSame":9,"org.easymock.samples.SupportTest.addDocument":292,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":179,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":268,"org.easymock.tests.GenericTest.testPackageScope":101,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":255,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":403,"org.easymock.tests2.NameTest.nameForMock":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":426,"org.easymock.tests2.UsageStrictMockTest.differentMethods":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":246,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":418,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":389,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":458,"org.easymock.tests2.MockedExceptionTest.testRealException":261,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":358,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":28,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":320,"org.easymock.tests2.NameTest.nameForStrictMock":234,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":244,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":173,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":73,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":186,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":228,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":304,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":83,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.UsageConstraintsTest.lessThan":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":251,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":353,"org.easymock.tests2.CaptureTest.testCaptureRightOne":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":272,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":71,"org.easymock.tests.UsageTest.wrongArguments":59,"org.easymock.tests2.MockBuilderTest.testWithConstructor":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":269,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":346,"org.easymock.tests.UsageVarargTest.varargShortAccepted":450,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":306,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":342,"org.easymock.tests2.UsageConstraintsTest.cmpTo":225,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":348,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.CaptureTest.testCaptureFromStub":4,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":310,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":84,"org.easymock.tests.UsageTest.unexpectedCallWithArray":58,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":428,"org.easymock.tests2.CaptureTest.testCapture":499,"org.easymock.tests2.UsageConstraintsTest.constraints":120,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.samples.ExampleTest.addAndChangeDocument":291,"org.easymock.tests.UsageStrictMockTest.testVerify":332,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":283,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":328,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":439,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":195,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":494,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":420,"org.easymock.tests.LimitationsTest.abstractClass":395,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":34,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":159}}]
