[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[8,19,24,30,37,40,42,49,50,52,53,54,55,56,61,68,71,73,74,77,78,80,81,83,104,105,106,107,115,116,117,118,121,168,174,177,178,179,181,182,183,184,185,186,208,209,210,211,214,232,235,236,237,238,239,246],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[259],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[21,24,49,55,56,61,115,126,127,169,170,173,174,175,176,177,222,223,224,225,226,232,236,246],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[260,261,86,262,98],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[259,0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:450","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[263,264,265],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[266,267,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[269,269,270,270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[109,110,111,112,121,127,175,271,272,273,274,242,243,244,245,246,247],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[269,269,270,270,275,276,277,9,11,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,263,303,304,305,85,306,307,308,86,87,309,310,311,312,88,89,90,91,93,94,95,313,96,314,315,97,262,98,316,317,318,319,99,100,320,101,102,321,322,108,323,109,110,111,324,325,326,327,328,329,330,331,332,333,128,129,130,334,267,156,335,336,337,268,338,339,259,157,158,340,0,171,341,342,343,344,220,345],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[272,273,346,347],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[348,349,350,351],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[19,352,65,168],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[353,354,355,356,180,235],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[357,358],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,359],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:222","failures":[360,151,361,362],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[269,270,1,2,3,4,5,6,363,7,275,276,364,365,277,366,367,8,9,10,11,278,279,280,368,281,369,370,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,263,303,304,305,12,371,13,14,15,16,17,372,18,19,20,21,22,23,373,24,25,26,27,28,29,30,31,32,33,34,35,352,36,37,38,39,40,374,375,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,376,67,68,69,357,70,71,72,73,74,75,76,77,78,79,80,81,82,83,377,378,379,380,264,265,381,382,383,384,385,386,387,84,85,388,306,307,389,308,86,87,309,390,310,391,311,312,88,392,89,90,91,92,93,94,95,313,393,96,314,315,97,262,98,316,317,318,319,99,100,320,394,395,101,102,396,321,322,103,397,398,399,400,401,402,403,404,405,406,407,408,409,410,104,105,106,107,108,323,411,412,413,414,415,416,417,418,419,420,421,422,423,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,424,126,127,425,324,325,326,327,328,329,426,330,331,332,333,128,129,427,130,428,429,334,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,360,151,430,431,432,266,433,434,435,152,153,154,155,267,156,335,336,337,268,338,339,259,157,158,340,0,436,437,438,159,160,161,439,162,163,440,164,165,166,167,168,169,170,441,442,171,443,444,445,446,172,447,448,449,450,451,452,453,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,454,207,208,209,210,211,455,456,457,341,458,459,460,461,342,462,463,271,272,273,212,213,214,215,216,217,218,219,343,344,220,345,464,361,465,466,362,221,467,222,223,224,225,226,468,469,358,470,471,472,473,274,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,227,228,229,230,231,490,346,347,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,491,492,493,494,495,248,249,250,251,252,253,254,255,256,257,258,496,497,498],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[19],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[316,318,105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[269,269,270,270,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,373,24,33,34,37,38,48,49,50,51,58,59],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[74,80,81,117,499,180,181,184,185,210,211,467,232,235,238],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[30],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:47","sourceCode":"throw new java.lang.IllegalStateException((((((((((\"\" + (org.easymock.internal.Invocation.getArguments().int)) + \" matchers expected, \") + (java.util.List<org.easymock.IArgumentMatcher>.size())) + \" recorded.\\n\") + \"This exception usually occurs when matchers are mixed with raw values when recording a method:\\n\") + \"\\tfoo(5, eq(6));\\t// wrong\\n\") + \"You need to use no matcher at all or a matcher for every single param:\\n\") + \"\\tfoo(eq(5), eq(6));\\t// right\\n\") + \"\\tfoo(5, 6);\\t// also right\"))","type":"CtThrowImpl"},"failures":[373],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[316,318,105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[390,500,501,502,503,504,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[16,17,19,21,22,373,33,37,48,50,58],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.reportLastControl(this.org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[74,80,81,117,499,180,181,184,185,210,211,232,235,238],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[68],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[16,50,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":17,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":178,"org.easymock.tests2.UsageTest.argumentsOrdered":81,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":476,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":76,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":365,"org.easymock.tests2.DelegateToTest.testReturnException":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":243,"org.easymock.tests.MockingTest.testPartialClassMocking":128,"org.easymock.tests.MockClassControlTest.testToString":335,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":410,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":187,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":288,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageTest.wrongArguments":74,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":409,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":124,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":342,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":429,"org.easymock.tests2.UsageConstraintsTest.testNull":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":93,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":384,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":339,"org.easymock.tests2.CaptureTest.testPrimitive":51,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":177,"org.easymock.tests.UsageTest.moreThanOneArgument":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":206,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":250,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":491,"org.easymock.tests.UsageTest.argumentsOrdered":185,"org.easymock.tests.UsageVarargTest.varargIntAccepted":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":504,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":422,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":280,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":226,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":403,"org.easymock.tests2.DependencyTest.testClassMocking":321,"org.easymock.tests2.AnswerTest.answer":40,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":483,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":47,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":459,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":72,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":264,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":495,"org.easymock.tests2.DelegateToTest.testDelegate":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":202,"org.easymock.tests.LimitationsTest.mockFinalMethod":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":231,"org.easymock.tests2.DependencyTest.testClassMockingSupport":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":360,"org.easymock.tests2.CaptureTest.testCapture1_2446744":52,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":45,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":445,"org.easymock.tests.UsageThrowableTest.throwError":212,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":461,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":441,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":305,"org.easymock.samples.PartialClassMockTest.testGetArea":277,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":446,"org.easymock.tests.MockingTest.testInterfaceMocking":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":456,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":435,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":188,"org.easymock.tests2.UsageTest.niceToStrict":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":86,"org.easymock.tests2.MockBuilderTest.testCreateMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":406,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":353,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":265,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":458,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":122,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":348,"org.easymock.tests.UsageOverloadedMethodTest.overloading":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":297,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":466,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":27,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":439,"org.easymock.tests2.EasyMockSupportClassTest.testAll":285,"org.easymock.tests.MockClassControlTest.testEquals":338,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":46,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":229,"org.easymock.tests.MockNameTest.defaultName":424,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":251,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":168,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":230,"org.easymock.samples.BasicClassMockTest.testPrintContent":276,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":218,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":247,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":357,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":426,"org.easymock.tests2.UsageConstraintsTest.greaterThan":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":153,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":316,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":330,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":63,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":317,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":313,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":171,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":71,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":379,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":242,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":380,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":138,"org.easymock.tests2.CaptureTest.testCapture2_2446744":60,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":65,"org.easymock.tests2.UsageTest.moreThanOneArgument":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":484,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":88,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":167,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":497,"org.easymock.tests.UsageExpectAndReturnTest.longType":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":227,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":377,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":205,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":442,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":248,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":272,"org.easymock.tests.UsageCallCountTest.tooManyCalls":498,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":217,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":99,"org.easymock.tests.MockingTest.testNiceClassMocking":334,"org.easymock.tests.MockingTest.testClassMocking":332,"org.easymock.tests2.UsageConstraintsTest.testContains":26,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":254,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":261,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":111,"org.easymock.tests2.UsageConstraintsTest.testFind":18,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":208,"org.easymock.tests.MockTypeTest.fromEasyMockClass":460,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":13,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":233,"org.easymock.tests.UsageExpectAndReturnTest.object":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":383,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":501,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":163,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":433,"org.easymock.tests.UsageTest.exactCallCountByLastCall":186,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":350,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":492,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":436,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":323,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":147,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":413,"org.easymock.tests.MockClassControlTest.testHashCode":268,"org.easymock.tests2.EasyMockSupportTest.testVerify":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":295,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":493,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":464,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":44,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":84,"org.easymock.tests.UsageVarargTest.varargCharAccepted":162,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":425,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":489,"org.easymock.tests2.UsageTest.openCallCountByLastCall":77,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":386,"org.easymock.tests.DefaultClassInstantiatorTest.object":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":490,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":432,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":401,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":412,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":262,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":193,"org.easymock.tests.CapturesMatcherTest.test":359,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":303,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":336,"org.easymock.tests2.UsageTest.resumeIfFailure":82,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":245,"org.easymock.tests2.StubTest.stubWithReturnValue":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":36,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":482,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":354,"org.easymock.samples.SupportTest.voteForRemovals":367,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":199,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":488,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":374,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":438,"org.easymock.tests.UsageExpectAndThrowTest.object":197,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":34,"org.easymock.tests2.DelegateToTest.testWrongClass":69,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":170,"org.easymock.tests.UsageStrictMockTest.range":238,"org.easymock.samples.ConstructorCalledMockTest.testTax":269,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":369,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":309,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":123,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":355,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":457,"org.easymock.tests2.CaptureTest.testCaptureNone":56,"org.easymock.tests.UsageUnorderedTest.message":232,"org.easymock.tests.UsageVerifyTest.twoReturns":211,"org.easymock.tests.UsageVarargTest.varargByteAccepted":166,"org.easymock.tests2.ThreadingTest.testThreadSafe":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":299,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":258,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":434,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":275,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":486,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":176,"org.easymock.tests2.UsageConstraintsTest.any":24,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":120,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":487,"org.easymock.tests.UsageExpectAndThrowTest.longType":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":244,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":328,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":116,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":417,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests.LimitationsTest.mockNativeMethod":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":150,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":400,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":119,"org.easymock.tests2.NameTest.nameForMocksControl":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":402,"org.easymock.tests2.MockedExceptionTest.testMockedException":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":287,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":191,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":130,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":371,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":90,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":310,"org.easymock.tests.MockingTest.testNicePartialClassMocking":129,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":95,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":398,"org.easymock.tests2.CaptureTest.testCaptureLast":55,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":22,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":35,"org.easymock.tests.MockingTest.testTwoMocks":333,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":38,"org.easymock.samples.ExampleTest.removeNonExistingDocument":363,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":405,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":172,"org.easymock.tests.UsageStrictMockTest.differentMethods":239,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":414,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":326,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":64,"org.easymock.tests2.MockBuilderTest.testCreateMockString":89,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":267,"org.easymock.tests.UsageExpectAndThrowTest.floatType":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":289,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":284,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":411,"org.easymock.tests.UsageVerifyTest.twoThrows":210,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":298,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":455,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":98,"org.easymock.tests.LimitationsTest.privateConstructor":344,"org.easymock.tests2.UsageConstraintsTest.testNotNull":37,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":219,"org.easymock.tests2.UsageTest.defaultResetToNice":79,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":146,"org.easymock.tests.UsageVarargTest.differentLength":440,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":399,"org.easymock.tests2.CallbackTest.callback":8,"org.easymock.tests2.UsageConstraintsTest.equals":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":314,"org.easymock.tests.UsageTest.openCallCountByLastCall":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":175,"org.easymock.tests.UsageCallCountTest.tooFewCalls":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":125,"org.easymock.tests.UsageThrowableTest.throwCheckedException":216,"org.easymock.tests.MockingTest.testStrictClassMocking":331,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":356,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":404,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":100,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":395,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":43,"org.easymock.tests.ObjectMethodsTest.testHashCode":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":503,"org.easymock.tests2.NameTest.nameForNiceMock":106,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":66,"org.easymock.tests2.DependencyTest.testInterfaceMocking":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":502,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":300,"org.easymock.tests2.DelegateToTest.testStubDelegate":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":304,"org.easymock.tests2.AnswerTest.stubAnswer":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":236,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":391,"org.easymock.tests.UsageVarargTest.varargLongAccepted":165,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":149,"org.easymock.tests.UsageExpectAndReturnTest.floatType":133,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":108,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":421,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":32,"org.easymock.tests.UsageThrowableTest.noUpperLimit":213,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":278,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":53,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":132,"org.easymock.tests2.UsageConstraintsTest.testSame":20,"org.easymock.samples.SupportTest.addDocument":366,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":394,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":290,"org.easymock.tests.GenericTest.testPackageScope":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":420,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":428,"org.easymock.tests2.NameTest.nameForMock":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":392,"org.easymock.tests2.UsageStrictMockTest.differentMethods":118,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":135,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":201,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":431,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":155,"org.easymock.tests2.MockedExceptionTest.testRealException":112,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":479,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":174,"org.easymock.tests2.NameTest.nameForStrictMock":105,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":308,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":351,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":281,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":33,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":327,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":306,"org.easymock.tests2.UsageStrictMockTest.range":117,"org.easymock.tests2.UsageConstraintsTest.lessThan":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":416,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":378,"org.easymock.tests2.CaptureTest.testCaptureRightOne":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":294,"org.easymock.tests2.UsageConstraintsTest.testOr":21,"org.easymock.tests.UsageRangeTest.combination":152,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":91,"org.easymock.tests.UsageTest.wrongArguments":181,"org.easymock.tests2.MockBuilderTest.testWithConstructor":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":291,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":144,"org.easymock.tests.UsageVarargTest.varargShortAccepted":164,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":329,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":496,"org.easymock.tests2.UsageConstraintsTest.cmpTo":25,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":470,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":78,"org.easymock.tests2.CaptureTest.testCaptureFromStub":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":444,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":307,"org.easymock.tests.UsageTest.unexpectedCallWithArray":180,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":235,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":145,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":237,"org.easymock.samples.ExampleTest.addAndChangeDocument":7,"org.easymock.tests.UsageStrictMockTest.testVerify":241,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":364,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":228,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":137,"org.easymock.tests.LimitationsTest.abstractClass":343,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":225,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":381}}]
