[{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[0,1,2],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,5,6,44,45,46,47,48,7,8,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,9,10,11,12,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,3,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,4,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,13,155,14,15,156,157,158,159,160,161,162,163,164,165,166,167,168,169,169,170,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,16,211,17,212,213,18,19,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,0,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,21,22,23,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,24,25,308,26,27,309,310,311,312,313,314,315,316,317,318,319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[29,30,31,320],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[29,31,322,323,324,325,326,327,65,66,67,68,70,71,72,328,329,330,331,73,332,333,74,334,335,336,337,338,339,340,341,342,75,343,344,345,346,347,76,348,349,79,80,350,351,81,352,82,83,353,354,84,355,99,100,102,3,103,104,105,356,357,106,107,108,109,358,359,137,138,139,169,169,170,170,171,172,173,360,361,209,0,1,362,363,364,2,365,366,367,231,368,369,284,285,286,370,287,371,372,373,374,375,376,377,378,379,311,312,313,314,380],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[113,118,129],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:344","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[382],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[42,47,78,181,187,210,213,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,254,256,257,258,259,260,261,271,22,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[29,30,31,320],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[85,87,95,112,113,115,117,118,120,129,134],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[29,31,65,66,67,68,70,71,72,73,74,75,76,79,384,80,350,81,352,82,83,354,84,385,355,386,387,99,100,102,3,103,104,105,106,107,108,109,139,169,169,170,170,171,172,173,360,361,209,231,284,285,286,371,311,312,313,314],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[78,137,138,139,140,178,215,216,217,388,267,268,269,270,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,230,21,22,23,24,25,26,27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[29,72,328,389,390,391,392,393,353,394,356,169,170],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[83,360],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[328,392,395,396,397,398,399],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[400,401,402,403,404,28,405,406,407,408,409,410,29,30,31,411,412,413,414,32,33,34,35,36,37,322,323,38,39,40,415,41,42,43,5,6,44,45,46,47,48,7,8,49,50,324,325,326,416,327,417,418,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,419,69,70,71,420,72,328,389,329,330,331,73,332,333,74,334,335,336,337,338,339,340,341,342,75,343,344,345,346,347,76,348,349,383,9,10,11,12,77,78,79,390,80,350,391,351,81,352,82,392,83,393,353,354,84,394,355,421,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,3,103,104,422,105,356,357,106,107,108,109,358,359,110,111,112,113,423,114,115,116,117,118,119,120,121,122,123,124,125,126,4,127,128,129,130,131,132,133,134,135,136,137,138,139,140,424,425,426,427,428,141,429,430,431,432,433,434,142,143,144,145,146,147,148,149,150,151,152,153,154,13,155,14,15,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,435,436,437,183,184,185,186,187,188,360,438,439,440,441,361,442,382,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,16,211,17,212,213,18,19,214,215,216,217,218,443,219,220,221,222,444,223,224,225,226,227,228,229,230,445,0,1,362,363,364,2,446,365,447,448,449,450,451,452,453,454,455,456,457,458,459,366,367,231,368,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,460,254,255,256,257,258,259,260,261,262,263,461,462,463,464,465,466,467,388,468,469,470,471,472,473,474,475,264,476,477,478,479,480,265,481,482,266,483,484,485,486,487,488,489,267,268,269,270,271,272,273,274,275,490,276,277,278,279,280,281,282,283,369,284,285,286,370,287,371,372,373,374,375,376,377,21,22,23,288,289,290,291,292,293,294,295,296,297,298,491,299,300,301,492,493,494,495,496,497,302,303,304,305,306,307,24,25,308,26,27,309,310,378,379,311,312,313,498,314,499,500,380,315,316,317,318,319],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[501,110,127,133],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[29,30,31,320],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[78,137,138,139,140,178,186,215,216,217,458,388,267,268,269,270,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[6,7,8,14,211,17,18,19,230,22,23,491,502,24,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[29,31,324,327,65,66,67,68,70,71,72,328,329,330,331,73,332,333,74,334,335,336,337,338,339,340,341,342,75,343,344,345,346,347,76,348,349,79,384,80,350,351,81,352,82,83,353,354,84,385,355,503,387,99,100,102,3,103,104,105,356,357,106,107,108,109,358,359,137,138,139,169,169,170,170,171,172,173,360,361,209,0,1,362,363,364,2,365,366,367,231,368,489,369,284,285,286,370,287,371,372,373,374,375,376,377,378,379,311,312,313,314,380],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"m":"result","methodName":"name"}},{"position":"org.easymock.ConstructorArgs:54","failures":[29,67,71,420,72,328,329,330,331,73,332,333,74,334,335,336,337,338,339,340,341,342,75,343,344,345,346,347,76,348,349,390,391,392,353,504,394,505,506,169,170],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":113,"org.easymock.tests2.UsageTest.argumentsOrdered":8,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":470,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":45,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":159,"org.easymock.tests2.DelegateToTest.testReturnException":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":268,"org.easymock.tests.MockingTest.testPartialClassMocking":312,"org.easymock.tests.MockClassControlTest.testToString":372,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":383,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":232,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":20,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":395,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":184,"org.easymock.tests2.UsageTest.wrongArguments":6,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":410,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":436,"org.easymock.samples.ExampleTest.answerVsDelegate":161,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":361,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":500,"org.easymock.tests2.UsageConstraintsTest.testNull":115,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":60,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":377,"org.easymock.tests2.CaptureTest.testPrimitive":88,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":188,"org.easymock.tests.UsageTest.moreThanOneArgument":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":290,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":315,"org.easymock.tests.UsageVarargTest.varargIntAccepted":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":475,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":399,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":326,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":229,"org.easymock.tests.ReplayStateInvalidUsageTest.times":456,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":28,"org.easymock.tests2.DependencyTest.testClassMocking":322,"org.easymock.tests2.AnswerTest.answer":32,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":414,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":439,"org.easymock.tests2.CaptureTest.testAnd":85,"org.easymock.tests2.UsageTest.strictResetToDefault":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":55,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":304,"org.easymock.tests2.DelegateToTest.testDelegate":147,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":247,"org.easymock.tests.LimitationsTest.mockFinalMethod":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":497,"org.easymock.tests2.DependencyTest.testClassMockingSupport":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":252,"org.easymock.tests2.CaptureTest.testCapture1_2446744":89,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":412,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":450,"org.easymock.tests.UsageThrowableTest.throwError":254,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":441,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":492,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":349,"org.easymock.samples.PartialClassMockTest.testGetArea":171,"org.easymock.tests.MockingTest.testInterfaceMocking":498,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":451,"org.easymock.tests2.CompareToTest.testLessOrEqual":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":175,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":489,"org.easymock.tests2.UsageTest.niceToStrict":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":81,"org.easymock.tests2.MockBuilderTest.testCreateMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":345,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":407,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":241,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":438,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":182,"org.easymock.tests.UsageOverloadedMethodTest.overloading":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":125,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":296,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":200,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":124,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":94,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":490,"org.easymock.tests2.EasyMockSupportClassTest.testAll":73,"org.easymock.tests.MockClassControlTest.testEquals":376,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":249,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":386,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":495,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":413,"org.easymock.tests2.CaptureTest.testCaptureAll":86,"org.easymock.tests.MockNameTest.defaultName":447,"org.easymock.tests2.UsageConstraintsTest.testMatches":126,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":448,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":291,"org.easymock.samples.ExampleTest.voteForRemovals":165,"org.easymock.tests.UsageVarargTest.allKinds":283,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":496,"org.easymock.samples.BasicClassMockTest.testPrintContent":173,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":260,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":430,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":272,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":446,"org.easymock.tests2.UsageConstraintsTest.greaterThan":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":303,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":109,"org.easymock.samples.ExampleTest.voteForRemoval":162,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":365,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":149,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":358,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":416,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":104,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":209,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":53,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":267,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":142,"org.easymock.tests2.CaptureTest.testCaptureFirst":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":54,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":196,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":151,"org.easymock.tests2.CaptureTest.testCapture2_2446744":97,"org.easymock.tests2.UsageTest.moreThanOneArgument":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":477,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":84,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":282,"org.easymock.tests.GenericTest.testBridgedEquals":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":223,"org.easymock.tests.UsageExpectAndReturnTest.longType":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":493,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":51,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":385,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":250,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":183,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":132,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":248,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":288,"org.easymock.tests.UsageCallCountTest.tooManyCalls":224,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":346,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":259,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests.MockingTest.testNiceClassMocking":380,"org.easymock.tests.MockingTest.testClassMocking":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":443,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":384,"org.easymock.tests2.UsageConstraintsTest.testContains":123,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":139,"org.easymock.tests2.UsageConstraintsTest.testFind":114,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":181,"org.easymock.tests.MockTypeTest.fromEasyMockClass":440,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":41,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":306,"org.easymock.tests.UsageExpectAndReturnTest.object":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":396,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":277,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":487,"org.easymock.tests.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":482,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":316,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":205,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":273,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":295,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":425,"org.easymock.tests.MockClassControlTest.testHashCode":375,"org.easymock.tests2.EasyMockSupportTest.testVerify":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":340,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":411,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":421,"org.easymock.tests.UsageVarargTest.varargCharAccepted":276,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":445,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":481,"org.easymock.tests2.UsageTest.openCallCountByLastCall":46,"org.easymock.tests.DefaultClassInstantiatorTest.object":0,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":62,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":299,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":485,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":341,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":424,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":107,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":374,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":238,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":76,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":373,"org.easymock.tests2.UsageTest.resumeIfFailure":49,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":270,"org.easymock.tests2.StubTest.stubWithReturnValue":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":392,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":133,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":198,"org.easymock.tests2.SerializationTest.testAllMockedMethod":31,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":264,"org.easymock.samples.SupportTest.voteForRemovals":158,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":244,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":320,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":265,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":33,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":483,"org.easymock.tests.UsageExpectAndThrowTest.object":242,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":130,"org.easymock.tests2.DelegateToTest.testWrongClass":145,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":262,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":263,"org.easymock.samples.ConstructorCalledMockTest.testTax":169,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":417,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":243,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":82,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":458,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":435,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":176,"org.easymock.tests2.CaptureTest.testCaptureNone":93,"org.easymock.tests.UsageUnorderedTest.message":230,"org.easymock.tests.UsageVerifyTest.twoReturns":23,"org.easymock.tests.UsageVarargTest.varargByteAccepted":281,"org.easymock.tests2.ThreadingTest.testThreadSafe":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":343,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":222,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":488,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":172,"org.easymock.tests2.CaptureTest.testCapture_2617107":87,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":187,"org.easymock.tests2.UsageConstraintsTest.any":121,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":455,"org.easymock.tests2.StubTest.stub":77,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndThrowTest.longType":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":269,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":364,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":454,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests2.SerializationTest.testClass":29,"org.easymock.tests.LimitationsTest.mockNativeMethod":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":208,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":286,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":402,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":156,"org.easymock.tests2.NameTest.nameForMocksControl":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":404,"org.easymock.tests2.MockedExceptionTest.testMockedException":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":333,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":213,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":415,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":236,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":83,"org.easymock.tests.MockingTest.testNicePartialClassMocking":313,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":400,"org.easymock.tests2.CaptureTest.testCaptureLast":92,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":253,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":118,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":131,"org.easymock.tests.MockingTest.testTwoMocks":311,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":240,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":135,"org.easymock.samples.ExampleTest.removeNonExistingDocument":166,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":452,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":406,"org.easymock.tests.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":426,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":362,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":150,"org.easymock.tests2.MockBuilderTest.testCreateMockString":355,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":287,"org.easymock.tests.UsageExpectAndThrowTest.floatType":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":334,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":389,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":75,"org.easymock.samples.ExampleTest.voteAgainstRemoval":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":471,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":174,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":108,"org.easymock.tests.LimitationsTest.privateConstructor":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":506,"org.easymock.tests2.UsageConstraintsTest.testNotNull":134,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":261,"org.easymock.tests2.UsageTest.defaultResetToNice":48,"org.easymock.samples.ExampleTest.voteAgainstRemovals":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":401,"org.easymock.tests.UsageVarargTest.differentLength":278,"org.easymock.tests2.CallbackTest.callback":64,"org.easymock.tests2.UsageConstraintsTest.equals":423,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":356,"org.easymock.tests.UsageTest.openCallCountByLastCall":212,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":186,"org.easymock.tests.UsageCallCountTest.tooFewCalls":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":437,"org.easymock.tests.UsageThrowableTest.throwCheckedException":258,"org.easymock.tests.MockingTest.testStrictClassMocking":378,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":178,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":405,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":457,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":69,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":37,"org.easymock.tests.ObjectMethodsTest.testHashCode":486,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":398,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":152,"org.easymock.tests2.NameTest.nameForNiceMock":11,"org.easymock.tests2.DependencyTest.testInterfaceMocking":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":397,"org.easymock.samples.ExampleTest.addDocument":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":344,"org.easymock.tests2.DelegateToTest.testStubDelegate":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.AnswerTest.stubAnswer":36,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":393,"org.easymock.tests.UsageVarargTest.varargLongAccepted":280,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.floatType":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":432,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":128,"org.easymock.tests.UsageThrowableTest.noUpperLimit":255,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":111,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":324,"org.easymock.tests2.SerializationTest.test":30,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":90,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":190,"org.easymock.tests2.UsageConstraintsTest.testSame":116,"org.easymock.samples.SupportTest.addDocument":157,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":419,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":335,"org.easymock.tests.GenericTest.testPackageScope":284,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":431,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":499,"org.easymock.tests2.NameTest.nameForMock":9,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":201,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":394,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":357,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":193,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":246,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":305,"org.easymock.tests2.MockedExceptionTest.testRealException":140,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":473,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":459,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":185,"org.easymock.tests2.NameTest.nameForStrictMock":10,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":351,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":3,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":327,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":129,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":363,"org.easymock.tests.ErrorMessageTest.testGetters":321,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":80,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":136,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":503,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":52,"org.easymock.tests2.CaptureTest.testCaptureRightOne":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":339,"org.easymock.tests2.UsageConstraintsTest.testOr":117,"org.easymock.tests.UsageRangeTest.combination":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":100,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":336,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":202,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":2,"org.easymock.tests.UsageVarargTest.varargShortAccepted":279,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":444,"org.easymock.tests2.UsageConstraintsTest.cmpTo":122,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":47,"org.easymock.tests2.CaptureTest.testCaptureFromStub":96,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":449,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":350,"org.easymock.tests.UsageTest.unexpectedCallWithArray":211,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":221,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":504,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":203,"org.easymock.tests2.UsageConstraintsTest.constraints":112,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.samples.ExampleTest.addAndChangeDocument":167,"org.easymock.tests.UsageStrictMockTest.testVerify":310,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":168,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":494,"org.easymock.tests2.CompareToTest.testGreateThan":381,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":91,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":195,"org.easymock.tests.LimitationsTest.abstractClass":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":228,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":57,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":274}}]
