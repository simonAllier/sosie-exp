[{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[4,4,5,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,1,62,2,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[4,5,108,109,110,57],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[43,55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,4,5,5,111,112,113,114,115,116,117,118,6,7,119,120,8,121,122,123,9,124,10,11,12,125,126,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,38,108,39,40,221,41,42,43,44,222,45,46,47,48,110,49,50,51,223,52,53,54,55,224,56,57,58,59,60,61,1,62,2,63,64,65,66,225,67,68,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,3,244,245,69,70,246,247,248,249,250,251,252,253,254,255,256,257,258,71,72,73,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,74,75,76,77,78,79,277,80,81,82,83,84,85,278,86,279,280,87,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,88,89,90,91,92,93,94,95,96,97,98,99,100,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,101,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,102,387,388,103,389,390,391,392,393,394,395,396,397,398,399,400,401,104,105,106,107,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[4,4,5,5,111,112,113,114,116,118,8,122,123,9,124,16,19,29,35,127,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,38,39,40,42,44,45,48,49,50,51,223,52,53,54,56,59,60,61,1,2,63,64,65,66,225,67,68,228,229,235,236,69,252,253,71,72,73,259,260,262,263,264,265,266,267,268,269,270,271,273,274,275,84,85,86,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,305,308,309,310,311,312,313,90,91,92,97,99,315,328,329,330,331,101,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,102,387,388,103,389,390,391,392,393,394,395,396,397,398,399,400,401,106,402,404,405,407,409,410,411,412,413,430,436,438,439,440,441,442,443,444,445,446,447,449,450,451,452,453,454,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,474],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"toStringMethod","finalizeMethod":"toStringMethod"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[158,481],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[142,274,275,345,348,460],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:201","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Same:37","failures":[137],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[482,483,484,485,351,449],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[96,100],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[196,197,203,204,243,3,244,245,262,264,265,350,352,355,356,381,382,383,446,449,450,452,453,486,487,488],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:124","failures":[4,5,111,112,113,114,115,116,118,6,7,119,120,8,121,122,123,9,124,10,16,19,29,35,127,129,130,131,132,133,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,38,39,42,43,44,45,47,48,49,50,51,223,52,53,54,55,56,59,60,61,1,63,64,65,66,225,67,68,228,229,235,69,252,71,72,73,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,275,84,85,86,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,310,312,313,97,98,317,318,319,321,322,323,324,325,326,327,328,329,330,101,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,489,489,394,395,396,397,398,399,400,401,106,402,404,405,408,409,410,411,412,413,438,439,440,441,442,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,467,468,469,470,471,474,475,476,477,478,479,480],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[96,100],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,489],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[4,4,5,5,6,7,8,9,10,16,19,29,35,38,490,39,40,42,43,44,45,47,48,491,49,50,51,52,53,54,55,56,59,60,61,1,63,64,65,66,67,68,492,493,494,69,73,83,84,85,86,89,97,98,99,101,102,103,106],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[4,5,111,112,113,114,115,116,118,6,7,119,120,8,121,122,123,9,124,10,16,19,29,35,127,129,130,131,132,133,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,38,39,42,43,44,45,47,48,49,50,51,223,52,53,54,55,56,59,60,61,1,63,64,65,66,225,67,68,228,229,235,69,252,71,72,73,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,275,84,85,86,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,310,312,313,97,98,317,318,319,321,322,323,324,325,326,327,328,329,330,101,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,489,489,394,395,396,397,398,399,400,401,106,402,404,405,408,409,410,411,412,413,438,439,440,441,442,446,447,448,449,450,451,452,453,454,456,457,458,459,460,461,467,468,469,470,471,474,475,476,477,478,479,480],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[482,483,484,485,351,449],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[9,124,10,495],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[4,4,5,5,111,112,113,114,116,118,8,122,123,9,124,16,19,29,35,127,129,130,131,132,133,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,169,170,172,173,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,200,201,202,205,206,207,208,209,210,211,212,213,214,215,216,217,218,39,42,44,45,48,50,51,223,52,53,54,56,60,61,1,63,64,65,66,225,67,68,228,229,235,69,252,71,72,73,259,262,264,265,267,268,274,275,84,85,86,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,310,311,312,313,97,99,315,329,330,331,101,344,345,346,347,348,349,350,353,354,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,391,392,393,394,395,396,397,398,399,400,401,106,402,404,405,407,409,410,411,412,413,430,436,443,444,445,446,450,452,453,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,474],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:84","sourceCode":"final java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[268,421,456,457,458,459,460,461],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:65","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[119,120,233,234,235,236,237,239,240,250,251,252,253,254,256,257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[497,498,499,500],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[148,196,197,203,204,501,482,502,503,504,505,506,507,483,508,509,262,264,265,484,510,485,511,512,513,514,301,302,350,351,352,355,356,381,382,383,403,406,407,408,446,449,450,452,453],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[136,141,151,156],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,489],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[8,9,19,29,35,38,39,40,42,43,44,45,47,48,49,55,60,61,2,99,102,103],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":133,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":0,"org.easymock.tests2.UsageTest.argumentsOrdered":204,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":349,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":424,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":199,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":120,"org.easymock.tests2.DelegateToTest.testReturnException":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":457,"org.easymock.tests.MockingTest.testPartialClassMocking":84,"org.easymock.tests.MockClassControlTest.testToString":90,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":242,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":23,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":358,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":486,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":229,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":140,"org.easymock.tests2.UsageTest.wrongArguments":197,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":344,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":271,"org.easymock.samples.ExampleTest.answerVsDelegate":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":103,"org.easymock.tests2.UsageConstraintsTest.testNull":136,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":280,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":52,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":95,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":216,"org.easymock.tests2.CaptureTest.testPrimitive":172,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":348,"org.easymock.tests.UsageTest.moreThanOneArgument":350,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":377,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":469,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":462,"org.easymock.tests.UsageTest.argumentsOrdered":356,"org.easymock.tests.UsageVarargTest.varargIntAccepted":319,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":409,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":413,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":504,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":235,"org.easymock.tests.ReplayStateInvalidUsageTest.times":340,"org.easymock.tests2.DependencyTest.testClassMocking":226,"org.easymock.tests2.AnswerTest.answer":159,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":168,"org.easymock.tests2.CaptureTest.testAnd":169,"org.easymock.tests2.UsageTest.strictResetToDefault":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":312,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":466,"org.easymock.tests2.DelegateToTest.testDelegate":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":373,"org.easymock.tests.LimitationsTest.mockFinalMethod":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":460,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":442,"org.easymock.tests2.DependencyTest.testClassMockingSupport":227,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":301,"org.easymock.tests2.CaptureTest.testCapture1_2446744":173,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":166,"org.easymock.tests.UsageThrowableTest.throwError":394,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":334,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":388,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":37,"org.easymock.samples.PartialClassMockTest.testGetArea":8,"org.easymock.tests.MockingTest.testInterfaceMocking":278,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":24,"org.easymock.tests2.UsageTest.niceToStrict":198,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":42,"org.easymock.tests2.MockBuilderTest.testCreateMock":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":32,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":238,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":482,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":367,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":212,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":445,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":472,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":269,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":497,"org.easymock.tests.UsageOverloadedMethodTest.overloading":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":28,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":405,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":292,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":378,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":145,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":178,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":320,"org.easymock.tests2.EasyMockSupportClassTest.testAll":16,"org.easymock.tests.MockClassControlTest.testEquals":94,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":98,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":375,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":492,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":440,"org.easymock.tests2.CaptureTest.testCaptureAll":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":167,"org.easymock.tests.MockNameTest.defaultName":273,"org.easymock.tests2.UsageConstraintsTest.testMatches":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":470,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":332,"org.easymock.samples.ExampleTest.voteForRemovals":116,"org.easymock.tests.UsageVarargTest.allKinds":328,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":381,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":441,"org.easymock.samples.BasicClassMockTest.testPrintContent":7,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":400,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":461,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":254,"org.easymock.tests2.UsageConstraintsTest.greaterThan":149,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":17,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":311,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":1,"org.easymock.samples.ExampleTest.voteForRemoval":113,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":80,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":184,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":62,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":55,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":101,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":194,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":209,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":456,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":188,"org.easymock.tests2.CaptureTest.testCaptureFirst":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":210,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":408,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":288,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":186,"org.easymock.tests2.CaptureTest.testCapture2_2446744":181,"org.easymock.tests2.UsageTest.moreThanOneArgument":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":327,"org.easymock.tests.GenericTest.testBridgedEquals":100,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":498,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":479,"org.easymock.tests.UsageExpectAndReturnTest.longType":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":438,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":207,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":491,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":376,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":154,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":467,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":392,"org.easymock.tests.UsageCallCountTest.tooManyCalls":480,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":510,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":363,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":399,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.MockingTest.testNiceClassMocking":87,"org.easymock.tests.MockingTest.testClassMocking":82,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":490,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":473,"org.easymock.tests2.UsageConstraintsTest.testContains":144,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":73,"org.easymock.tests2.UsageConstraintsTest.testFind":135,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":380,"org.easymock.tests.MockTypeTest.fromEasyMockClass":387,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":447,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":129,"org.easymock.tests.UsageExpectAndReturnTest.object":291,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":215,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":322,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":307,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":499,"org.easymock.tests.UsageTest.exactCallCountByLastCall":357,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":463,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":314,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":513,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":297,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":404,"org.easymock.tests.MockClassControlTest.testHashCode":93,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":248,"org.easymock.tests2.EasyMockSupportTest.testVerify":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":26,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":503,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":464,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":444,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":402,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":165,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":220,"org.easymock.tests.UsageVarargTest.varargCharAccepted":321,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":276,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastCall":200,"org.easymock.tests.DefaultClassInstantiatorTest.object":74,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":218,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":443,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":305,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":27,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":60,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":364,"org.easymock.tests.CapturesMatcherTest.test":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":391,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":35,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":91,"org.easymock.tests2.UsageTest.resumeIfFailure":205,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":459,"org.easymock.tests2.StubTest.stubWithReturnValue":268,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":222,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":155,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":290,"org.easymock.tests2.SerializationTest.testAllMockedMethod":10,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":430,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":483,"org.easymock.samples.SupportTest.voteForRemovals":122,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":370,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":436,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":160,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":316,"org.easymock.tests.UsageExpectAndThrowTest.object":368,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":152,"org.easymock.tests2.DelegateToTest.testWrongClass":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":329,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":330,"org.easymock.tests.UsageStrictMockTest.range":452,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":125,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":369,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":13,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":342,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":270,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":484,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":386,"org.easymock.tests2.CaptureTest.testCaptureNone":177,"org.easymock.tests.UsageUnorderedTest.message":446,"org.easymock.tests.UsageVerifyTest.twoReturns":383,"org.easymock.tests.UsageVarargTest.varargByteAccepted":326,"org.easymock.tests2.ThreadingTest.testThreadSafe":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":30,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":477,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":6,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":308,"org.easymock.tests2.CaptureTest.testCapture_2617107":171,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":509,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":347,"org.easymock.tests2.UsageConstraintsTest.any":142,"org.easymock.tests2.StubTest.stub":267,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndThrowTest.longType":361,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":78,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":338,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":263,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":252,"org.easymock.tests.LimitationsTest.mockNativeMethod":106,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":99,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":300,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":494,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":232,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":266,"org.easymock.tests2.NameTest.nameForMocksControl":245,"org.easymock.tests2.MockedExceptionTest.testMockedException":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":18,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":354,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":128,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":362,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":50,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":85,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":54,"org.easymock.tests2.CaptureTest.testCaptureLast":176,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":302,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":68,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":153,"org.easymock.tests.MockingTest.testTwoMocks":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":366,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":203,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":157,"org.easymock.samples.ExampleTest.removeNonExistingDocument":117,"org.easymock.tests.UsageStrictMockTest.differentMethods":453,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":237,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":249,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":76,"org.easymock.tests2.ConstraintsToStringTest.andToString":507,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":185,"org.easymock.tests2.MockBuilderTest.testCreateMockString":49,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":20,"org.easymock.tests.UsageExpectAndThrowTest.floatType":360,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":15,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":246,"org.easymock.tests.UsageVerifyTest.twoThrows":382,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":29,"org.easymock.samples.ExampleTest.voteAgainstRemoval":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":384,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":61,"org.easymock.tests.LimitationsTest.privateConstructor":105,"org.easymock.tests2.UsageConstraintsTest.testNotNull":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":401,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":71,"org.easymock.tests2.UsageTest.defaultResetToNice":202,"org.easymock.samples.ExampleTest.voteAgainstRemovals":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":231,"org.easymock.tests.UsageVarargTest.differentLength":323,"org.easymock.tests2.CallbackTest.callback":123,"org.easymock.tests2.UsageConstraintsTest.equals":134,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":511,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":57,"org.easymock.tests.UsageTest.openCallCountByLastCall":353,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":346,"org.easymock.tests.UsageCallCountTest.tooFewCalls":475,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":272,"org.easymock.tests.UsageThrowableTest.throwCheckedException":398,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":485,"org.easymock.tests.MockingTest.testStrictClassMocking":81,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":67,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":275,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":236,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":225,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":164,"org.easymock.tests.ObjectMethodsTest.testHashCode":306,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":187,"org.easymock.tests2.NameTest.nameForNiceMock":244,"org.easymock.tests2.DependencyTest.testInterfaceMocking":228,"org.easymock.samples.ExampleTest.addDocument":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":31,"org.easymock.tests2.DelegateToTest.testStubDelegate":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":36,"org.easymock.tests2.AnswerTest.stubAnswer":163,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":450,"org.easymock.tests.UsageVarargTest.varargLongAccepted":325,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.floatType":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":69,"org.easymock.tests2.ConstraintsToStringTest.orToString":501,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests.UsageThrowableTest.noUpperLimit":395,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":256,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":131,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":11,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":174,"org.easymock.tests2.SerializationTest.test":124,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":75,"org.easymock.tests2.UsageConstraintsTest.testSame":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":282,"org.easymock.samples.SupportTest.addDocument":121,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":21,"org.easymock.tests.GenericTest.testPackageScope":97,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":255,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":279,"org.easymock.tests2.NameTest.nameForMock":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":110,"org.easymock.tests2.UsageStrictMockTest.differentMethods":265,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":372,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":313,"org.easymock.tests2.MockedExceptionTest.testRealException":259,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":126,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":427,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":262,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":343,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":345,"org.easymock.tests2.NameTest.nameForStrictMock":3,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":500,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":53,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":12,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":487,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":39,"org.easymock.tests2.UsageStrictMockTest.range":264,"org.easymock.tests2.UsageConstraintsTest.lessThan":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":208,"org.easymock.tests2.CaptureTest.testCaptureRightOne":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":25,"org.easymock.tests2.UsageConstraintsTest.testOr":138,"org.easymock.tests.UsageRangeTest.combination":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":51,"org.easymock.tests.UsageTest.wrongArguments":352,"org.easymock.tests2.MockBuilderTest.testWithConstructor":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":22,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":294,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":79,"org.easymock.tests.UsageVarargTest.varargShortAccepted":324,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":478,"org.easymock.tests2.UsageConstraintsTest.cmpTo":143,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":161,"org.easymock.tests2.CompareToTest.testLessThan":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":417,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":201,"org.easymock.tests2.CaptureTest.testCaptureFromStub":180,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":333,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":40,"org.easymock.tests.UsageTest.unexpectedCallWithArray":351,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":449,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":476,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":109,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":295,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":451,"org.easymock.tests2.UsageConstraintsTest.constraints":132,"org.easymock.samples.ExampleTest.addAndChangeDocument":118,"org.easymock.tests2.ConstraintsToStringTest.notToString":502,"org.easymock.tests.UsageStrictMockTest.testVerify":455,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":119,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":448,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":439,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":175,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":493,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":411,"org.easymock.tests.LimitationsTest.abstractClass":104,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":412,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":488,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":213,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":318}}]
