[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[2],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:130","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"shouldFillInStackTrace"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[52,53,54,55,56,57,58,59,60],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[61,62,63,64,65,3,66,4,5,67,68,6,7,8,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,11,112,113,114,115,116,117,118,119,120,121,122,123,12,13,14,124,125,126,127,128,129,130,131,132,133,134,135,136,15,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,16,153,154,155,156,157,158,17,18,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,0,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,19,261,20,262,21,22,23,263,264,265,266,267,268,269,270,271,272,273,274,275,25,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,26,306,307,27,28,29,308,309,310,30,31,32,33,311,312,34,313,314,315,316,317,318,52,319,320,53,35,36,321,37,322,323,324,325,326,38,327,328,329,330,331,332,333,334,335,336,39,337,40,338,339,340,341,41,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,42,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,43,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,58,407,408,59,60,409,410,44,411,412,413,45,46,414,415,47,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,48,468,469,49,50,51,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[257,276,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[357,497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[498,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[41,342,345,347,348,350,359,364,483,485,493],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[499,58,407,408],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[500,483,485,486,487,488,489,490,492,501,493,494,496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[52,54,55,56,502,503,60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[152],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[300,300,301,301,53,334,58,59,60],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[90,94,95,97,100,163,167,168,170,173,235,22,23,271,274,275,50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[3,66,5,6,7,8,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,11,112,113,114,115,116,117,118,120,121,122,123,13,14,125,130,131,133,15,137,138,139,145,148,149,16,153,154,155,156,157,158,17,18,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,193,194,201,205,19,261,20,262,21,22,23,263,265,266,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,302,303,304,305,26,306,307,27,28,29,30,31,32,33,34,316,318,319,36,324,325,326,38,327,328,329,330,333,39,337,40,340,341,41,342,344,345,346,347,348,349,351,352,353,354,355,356,42,357,358,359,360,361,363,364,365,366,367,370,371,372,379,381,383,384,385,388,43,394,402,403,406,58,407,408,59,410,44,411,412,413,45,46,415,47,416,417,418,420,421,422,423,434,437,447,453,461,48,468,469,49,50,51,470,471,472,474,475,476,477,479,480,481,483,484,485,486,488,489,490,491,492,493,496],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[332],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[499,58,407,408],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[66,158,17,18,262,23,263,307,469,51,470],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[504,505,506],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[70,268,270],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:190","sourceCode":"if ((java.lang.reflect.Type[].int) != (java.lang.Class<?>[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[80,81,82,126,155,197,198,199,200,201,202,217,234,377,378,379,380,472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[3,66,67,68,8,70,125,130,131,133,15,137,138,139,145,147,148,149,153,154,157,158,18,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,193,195,205,262,22,23,265,266,268,269,284,285,286,287,288,290,292,294,295,297,305,26,306,307,28,308,309,310,32,33,34,316,318,319,36,324,325,326,38,327,328,329,330,333,39,337,40,340,341,41,342,344,345,346,347,348,349,351,352,353,354,355,356,42,357,358,359,360,361,363,364,365,366,371,379,384,385,386,387,388,394,403,58,407,59,410,44,411,412,413,45,46,414,415,47,416,417,434,437,447,453,461,469,50,51,472,474,475,476,477,479,480,481,483,484,486,487,490,491,492,493,495,496],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[61,62,63,64,65,3,66,4,5,67,68,6,7,8,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,11,112,113,114,115,116,117,118,119,120,121,122,123,12,13,14,124,125,126,127,128,129,130,131,132,133,134,135,136,15,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,16,153,154,155,156,157,158,17,18,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,0,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,19,261,20,262,21,22,23,263,264,265,266,267,268,269,270,271,272,273,274,275,25,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,26,306,307,27,28,29,308,309,310,30,31,32,33,311,312,34,313,314,315,316,317,318,52,319,320,53,35,36,321,37,322,323,324,325,326,38,327,328,329,330,331,332,333,334,335,336,39,337,40,338,339,340,341,41,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,42,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,43,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,58,407,408,59,60,409,410,44,411,412,413,45,46,414,415,47,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,48,468,469,49,50,51,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[507,508],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[83,84,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":342,"org.easymock.tests2.UsageTest.argumentsOrdered":31,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":237,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":29,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":291,"org.easymock.tests2.DelegateToTest.testReturnException":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":198,"org.easymock.tests.MockingTest.testPartialClassMocking":130,"org.easymock.tests.MockClassControlTest.testToString":278,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":419,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":86,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":325,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":54,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":349,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":153,"org.easymock.tests2.UsageTest.wrongArguments":27,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":467,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":253,"org.easymock.samples.ExampleTest.answerVsDelegate":293,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":77,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":135,"org.easymock.tests2.UsageConstraintsTest.testNull":345,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":328,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":47,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":283,"org.easymock.tests2.CaptureTest.testPrimitive":486,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":105,"org.easymock.tests.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":63,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":271,"org.easymock.tests.UsageVarargTest.varargIntAccepted":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":503,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":311,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":399,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":288,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":461,"org.easymock.tests.ReplayStateInvalidUsageTest.times":215,"org.easymock.tests2.DependencyTest.testClassMocking":322,"org.easymock.tests2.AnswerTest.answer":367,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":376,"org.easymock.tests2.CaptureTest.testAnd":483,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":74,"org.easymock.tests2.UsageTest.strictResetToDefault":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":413,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":138,"org.easymock.tests2.DelegateToTest.testDelegate":406,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":101,"org.easymock.tests.LimitationsTest.mockFinalMethod":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":191,"org.easymock.tests2.DependencyTest.testClassMockingSupport":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":150,"org.easymock.tests2.CaptureTest.testCapture1_2446744":487,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":374,"org.easymock.tests.UsageThrowableTest.throwError":179,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":209,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":76,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":400,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":455,"org.easymock.samples.PartialClassMockTest.testGetArea":290,"org.easymock.tests.MockingTest.testInterfaceMocking":132,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":285,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":442,"org.easymock.tests2.UsageTest.niceToStrict":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":87,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":260,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":227,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":316,"org.easymock.tests2.MockBuilderTest.testCreateMock":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":450,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":464,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":95,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":45,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":85,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":251,"org.easymock.tests.UsageOverloadedMethodTest.overloading":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":446,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":143,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":170,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":147,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":354,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":492,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":109,"org.easymock.tests2.EasyMockSupportClassTest.testAll":434,"org.easymock.tests.MockClassControlTest.testEquals":282,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":194,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":103,"org.easymock.tests2.CaptureTest.testCaptureAll":484,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":189,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":375,"org.easymock.tests.MockNameTest.defaultName":124,"org.easymock.tests2.UsageConstraintsTest.testMatches":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":207,"org.easymock.samples.ExampleTest.voteForRemovals":297,"org.easymock.tests.UsageVarargTest.allKinds":116,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":190,"org.easymock.samples.BasicClassMockTest.testPrintContent":303,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":185,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":48,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":57,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":225,"org.easymock.tests2.UsageConstraintsTest.greaterThan":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":137,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":40,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":226,"org.easymock.samples.ExampleTest.voteForRemoval":294,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":385,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":338,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":78,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":427,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":331,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":117,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":411,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":197,"org.easymock.tests2.CaptureTest.testCaptureFirst":496,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":233,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":412,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":33,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":166,"org.easymock.tests2.CaptureTest.testCapture2_2446744":495,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":387,"org.easymock.tests2.UsageTest.moreThanOneArgument":307,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":245,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":115,"org.easymock.tests.GenericTest.testBridgedEquals":196,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":13,"org.easymock.tests.UsageExpectAndReturnTest.longType":162,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":410,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":104,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":270,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":81,"org.easymock.tests.UsageCallCountTest.tooManyCalls":14,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":451,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":466,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":184,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":475,"org.easymock.tests.MockingTest.testNiceClassMocking":136,"org.easymock.tests.MockingTest.testClassMocking":128,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":119,"org.easymock.tests2.UsageConstraintsTest.testContains":353,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":379,"org.easymock.tests2.UsageConstraintsTest.testFind":344,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":149,"org.easymock.tests.MockTypeTest.fromEasyMockClass":75,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":19,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":383,"org.easymock.tests.UsageExpectAndReturnTest.object":169,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":415,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":55,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":258,"org.easymock.tests.UsageTest.exactCallCountByLastCall":8,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":232,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":69,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":175,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":106,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":142,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":390,"org.easymock.tests.MockClassControlTest.testHashCode":281,"org.easymock.tests2.EasyMockSupportTest.testVerify":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":444,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":273,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":140,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":84,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":373,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":473,"org.easymock.tests.UsageVarargTest.varargCharAccepted":110,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":219,"org.easymock.tests2.CaptureTest.testCaptureMultiple":500,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":250,"org.easymock.tests2.UsageTest.openCallCountByLastCall":308,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":505,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":417,"org.easymock.tests.DefaultClassInstantiatorTest.object":220,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":83,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":256,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":445,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":389,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":39,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":92,"org.easymock.tests.CapturesMatcherTest.test":498,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":453,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":279,"org.easymock.tests2.UsageTest.resumeIfFailure":32,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":72,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":200,"org.easymock.tests2.StubTest.stubWithReturnValue":472,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":363,"org.easymock.tests2.SerializationTest.testAllMockedMethod":408,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":243,"org.easymock.samples.SupportTest.voteForRemovals":305,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":98,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":499,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":249,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":368,"org.easymock.tests.UsageExpectAndThrowTest.object":96,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":71,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":360,"org.easymock.tests2.DelegateToTest.testWrongClass":404,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":265,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":266,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.samples.ConstructorCalledMockTest.testTax":300,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":429,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":414,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":97,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":431,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":252,"org.easymock.tests2.CaptureTest.testCaptureNone":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":269,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":24,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests.UsageVarargTest.varargByteAccepted":114,"org.easymock.tests2.ThreadingTest.testThreadSafe":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":448,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":123,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":259,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":302,"org.easymock.tests2.CaptureTest.testCapture_2617107":485,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":247,"org.easymock.tests2.UsageConstraintsTest.any":351,"org.easymock.tests2.StubTest.stub":471,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":82,"org.easymock.tests.UsageExpectAndThrowTest.longType":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":248,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":213,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":394,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":178,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":195,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":458,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":470,"org.easymock.tests2.NameTest.nameForMocksControl":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":460,"org.easymock.tests2.MockedExceptionTest.testMockedException":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":436,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":90,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":382,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":326,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":319,"org.easymock.tests.MockingTest.testNicePartialClassMocking":131,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":330,"org.easymock.tests2.CaptureTest.testCaptureLast":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":456,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":481,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":348,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":361,"org.easymock.tests.MockingTest.testTwoMocks":129,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":94,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":365,"org.easymock.samples.ExampleTest.removeNonExistingDocument":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":463,"org.easymock.tests.UsageStrictMockTest.differentMethods":23,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":211,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":391,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":508,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":222,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":386,"org.easymock.tests2.MockBuilderTest.testCreateMockString":37,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":438,"org.easymock.tests.UsageExpectAndThrowTest.floatType":88,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":370,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":409,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":447,"org.easymock.samples.ExampleTest.voteAgainstRemoval":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":238,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":337,"org.easymock.tests.LimitationsTest.privateConstructor":204,"org.easymock.tests2.UsageConstraintsTest.testNotNull":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":377,"org.easymock.tests2.UsageTest.defaultResetToNice":310,"org.easymock.samples.ExampleTest.voteAgainstRemovals":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":457,"org.easymock.tests.UsageVarargTest.differentLength":11,"org.easymock.tests2.CallbackTest.callback":43,"org.easymock.tests2.UsageConstraintsTest.equals":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":334,"org.easymock.tests.UsageTest.openCallCountByLastCall":67,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":155,"org.easymock.tests.UsageCallCountTest.tooFewCalls":121,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":477,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":254,"org.easymock.tests.UsageThrowableTest.throwCheckedException":183,"org.easymock.tests.MockingTest.testStrictClassMocking":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":480,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":126,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":476,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":462,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":216,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":479,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":372,"org.easymock.tests.ObjectMethodsTest.testHashCode":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":502,"org.easymock.tests2.NameTest.nameForNiceMock":422,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":388,"org.easymock.tests2.DependencyTest.testInterfaceMocking":324,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":56,"org.easymock.samples.ExampleTest.addDocument":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.DelegateToTest.testStubDelegate":403,"org.easymock.tests2.AnswerTest.stubAnswer":371,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":262,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":320,"org.easymock.tests.UsageVarargTest.varargLongAccepted":113,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":177,"org.easymock.tests.UsageExpectAndReturnTest.floatType":161,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":398,"org.easymock.tests.UsageThrowableTest.noUpperLimit":180,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":144,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":341,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":424,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":488,"org.easymock.tests2.SerializationTest.test":407,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":160,"org.easymock.tests2.UsageConstraintsTest.testSame":346,"org.easymock.samples.SupportTest.addDocument":304,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":478,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":439,"org.easymock.tests.GenericTest.testPackageScope":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":397,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":134,"org.easymock.tests2.NameTest.nameForMock":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":171,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":321,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":335,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":100,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":139,"org.easymock.tests2.MockedExceptionTest.testRealException":380,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":79,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":241,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":154,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":218,"org.easymock.tests2.NameTest.nameForStrictMock":421,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":315,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":506,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":381,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":329,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":428,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":223,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":359,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":34,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests2.UsageConstraintsTest.lessThan":366,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":393,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":235,"org.easymock.tests2.CaptureTest.testCaptureRightOne":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":443,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":507,"org.easymock.tests2.UsageConstraintsTest.testOr":347,"org.easymock.tests.UsageRangeTest.combination":15,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":440,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":228,"org.easymock.tests.UsageVarargTest.varargShortAccepted":112,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":224,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":12,"org.easymock.tests2.UsageConstraintsTest.cmpTo":352,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":230,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":309,"org.easymock.tests2.CaptureTest.testCaptureFromStub":494,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":208,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":313,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":122,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":173,"org.easymock.tests2.CaptureTest.testCapture":501,"org.easymock.tests2.UsageConstraintsTest.constraints":41,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":21,"org.easymock.samples.ExampleTest.addAndChangeDocument":299,"org.easymock.tests.UsageStrictMockTest.testVerify":264,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":289,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests2.CompareToTest.testGreateThan":497,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":188,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":286,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":165,"org.easymock.tests.LimitationsTest.abstractClass":203,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":145,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":287,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":46}}]
