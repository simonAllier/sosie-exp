[{"position":"org.easymock.internal.RecordState:280","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,1,150,151,152,153,154,155,155,156,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,2,3,4,5,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,6,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methodArgs":"methodArgs","this":"this","methodTypes":"methodTypes","i":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[296,49,51,52,53,54,55,56,66,72,85,90,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,147,211,241,248],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[217,218,220,222,223,298,233,237,282,284,292],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[10,299,57,58,59,60,61,69,70,73,74,75,76,77,78,99,100,141,300,301,302,303,304,155,155,156,156,165,211,215,216,219,220,221,222,227,228,229,231,232,237,238,239,293],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[8,9,11,12,13,14,37,46,47,48,305,306,50,68,71,88,91,92,102,108,109,110,111,112,113,114,115,116,117,307,308,148,149,150,151,152,153,154,157,158,159,160,161,164,166,167,168,169,187,199,205,206,207,208,309,244,246,250,251,268,283,284,287,288,289,290,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,310,311,312,313,314,315,316,36,37,317,318,299,38,39,40,41,319,320,0,296,321,42,322,43,44,45,46,47,48,323,305,306,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,68,69,70,71,72,73,74,75,76,77,78,346,347,348,349,79,350,80,81,351,82,352,353,83,354,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,355,356,357,358,359,360,361,362,363,99,100,297,364,365,366,101,367,368,369,370,371,372,102,103,104,105,106,373,374,107,375,108,109,110,376,111,112,377,113,114,115,116,117,307,308,378,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,379,380,381,382,383,141,142,384,385,386,387,388,389,390,391,392,393,394,395,396,300,397,398,399,301,302,400,401,402,403,404,405,406,407,303,408,409,410,411,304,412,413,414,415,416,417,418,143,144,419,145,420,421,422,423,146,147,148,149,1,150,151,152,153,424,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,425,178,179,180,426,181,182,183,184,185,186,187,427,428,188,189,190,429,191,192,193,194,430,2,3,4,431,5,195,196,197,198,199,200,201,202,203,204,205,206,207,208,432,433,434,435,436,209,437,438,439,440,441,442,210,211,212,443,213,444,445,446,447,448,214,449,450,451,452,453,454,215,216,217,218,455,219,220,221,222,223,224,298,225,226,227,6,228,229,230,231,232,233,234,235,309,236,237,238,239,240,456,241,242,243,244,245,246,247,248,249,250,251,252,253,457,458,459,460,254,461,462,255,463,464,465,466,467,468,469,470,471,256,472,473,474,475,476,257,477,478,258,259,260,261,262,263,479,480,264,481,482,265,483,266,484,485,486,267,487,488,489,268,269,270,271,490,491,492,272,273,493,494,495,496,497,498,499,274,275,276,277,500,501,502,503,504,505,278,506,507,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[265],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[218,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[508,509,510],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[9,10,12,13,15,87,165,167,168,259,261,263,265,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[220,298,233,237],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[223,282,284,292],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[511,185,186,187],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[298],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[429,480,505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[407,195],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,319,0,296,42,45,46,47,48,305,306,49,50,51,52,53,54,55,56,57,58,59,60,61,66,68,69,70,71,72,73,85,86,88,89,90,91,92,93,99,100,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,380,381,141,143,144,145,423,146,147,148,149,1,150,151,152,153,154,157,158,159,160,161,162,164,165,166,167,168,169,172,174,175,176,177,178,179,180,185,186,187,188,189,190,191,192,193,194,2,3,4,5,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,6,228,229,230,231,232,233,234,235,309,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,268,270,271,278,279,280,282,283,284,285,286,287,288,289,290,291,292,294,295],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[230,309,283,284,286,287,288,289,290,295],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[512],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[319,407,1,195,212,213,278,507,279,281],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[385,389],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[232],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,319,0,296,322,45,46,47,48,323,305,306,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,85,86,87,88,89,90,91,92,93,513,513,94,95,96,97,98,99,100,102,103,105,106,107,108,109,110,111,112,377,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,423,146,147,148,149,1,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,2,3,4,5,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,6,228,229,230,231,232,233,234,235,309,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,479,264,265,483,266,484,267,487,268,269,270,271,492,272,273,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,310,311,312,313,314,299,38,39,40,41,319,320,0,296,321,42,322,43,44,45,46,47,48,323,305,306,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,346,347,348,349,79,350,80,81,351,82,352,353,83,354,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,355,359,360,362,363,99,100,297,364,365,366,103,104,105,106,108,109,110,111,112,377,113,114,115,116,117,307,308,378,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,379,380,381,382,383,141,142,384,392,394,395,396,409,414,419,420,421,423,146,147,148,149,1,150,151,152,153,424,154,159,160,161,163,164,165,166,167,168,169,170,171,172,173,178,181,182,183,184,186,188,189,190,191,192,193,194,430,2,3,4,431,5,195,196,197,198,199,200,201,202,203,204,205,206,207,208,432,433,434,436,209,437,438,439,442,210,211,212,213,444,445,446,448,214,449,450,451,454,215,216,217,218,219,220,221,222,223,224,298,225,226,227,6,228,229,230,231,232,233,234,235,309,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,457,254,260,497,498,274,275,276,277,278,506,507,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[514,215,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:188","sourceCode":"try {\n    net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor });\n    if (org.easymock.ConstructorArgs != null) {\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>;\n        try {\n            java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n        } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n            throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n        }\n        T T;\n        try {\n            java.lang.reflect.Constructor<?>.setAccessible(true);\n            T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n        } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n        } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n            throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n        } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n            throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n        }\n        return T;\n    } else {\n        net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory;\n        try {\n            net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n        } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n        }\n        net.sf.cglib.proxy.Factory.getCallback(0);\n        return ((T)(net.sf.cglib.proxy.Factory));\n    }\n} finally {\n    net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null);\n}","type":"CtTryImpl"},"failures":[316,36,37,317,318,356,361,366,101,367,368,369,370,371,372,102,373,107,515,384,385,386,387,388,389,516,390,416,417,418,143,144,145,422,155,155,156,156,157,158,162,170,171,172,174,175,176,177,179,180,185,187,240,456,517,458,459,460,254,461,462,255,463,464,465,466,467,468,469,470,471,256,472,473,474,475,476,257,477,478,258,259,261,262,263,479,264,481,482,265,483,266,484,485,486,267,518,487,488,519,489,268,269,270,520,271,491,492,272,521,273,493,496,274],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[296,49,51,52,53,54,55,56,62,63,64,65,66,67,71,72,346,347,348,85,90,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,142,394,395,396,147,170,171,172,173,211,241,248],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,37,43,45,46,47,48,305,306,50,68,71,72,88,91,92,102,108,109,110,111,112,377,113,114,115,116,117,307,380,381,409,148,149,150,151,152,153,154,157,158,159,160,161,163,164,165,166,167,168,169,187,195,199,205,206,207,208,210,212,213,298,225,309,236,244,246,250,251,487,268,272,274,275,276,277,279,283,284,287,288,289,290,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[217,223,233,284],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[10,12,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,319,0,296,42,49,51,52,53,54,55,56,57,58,59,60,61,66,69,70,73,85,86,89,90,93,99,100,297,103,104,105,106,107,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,423,146,147,149,1,150,151,153,161,162,165,167,168,172,174,175,176,177,178,179,180,185,186,188,189,190,191,192,193,194,2,3,4,5,195,196,197,198,199,200,201,202,203,204,205,206,207,209,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,6,228,229,230,231,232,233,234,235,309,236,237,238,239,240,241,242,243,245,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,483,266,484,487,268,270,271,272,278,280,281,282,283,284,285,286,289,290,291,292,294,295],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:229","failures":[255],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":218,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":85,"org.easymock.tests2.UsageTest.argumentsOrdered":251,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":206,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":404,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":246,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":148,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":63,"org.easymock.tests.MockingTest.testPartialClassMocking":143,"org.easymock.tests.MockClassControlTest.testToString":367,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":499,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":466,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":118,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":255,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":189,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":345,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":69,"org.easymock.tests2.UsageTest.wrongArguments":244,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":40,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":361,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":421,"org.easymock.tests2.UsageConstraintsTest.testNull":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":261,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":205,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":372,"org.easymock.tests2.CaptureTest.testPrimitive":285,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":73,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":137,"org.easymock.tests.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":76,"org.easymock.tests.UsageTest.argumentsOrdered":92,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":379,"org.easymock.tests.UsageVarargTest.varargIntAccepted":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":57,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":267,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":441,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":61,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":329,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":214,"org.easymock.tests.ReplayStateInvalidUsageTest.times":353,"org.easymock.tests2.DependencyTest.testClassMocking":427,"org.easymock.tests2.AnswerTest.answer":278,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":184,"org.easymock.tests2.CaptureTest.testAnd":282,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":358,"org.easymock.tests2.UsageTest.strictResetToDefault":242,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":519,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":75,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":200,"org.easymock.tests2.DelegateToTest.testDelegate":5,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":383,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":133,"org.easymock.tests.LimitationsTest.mockFinalMethod":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":98,"org.easymock.tests2.DependencyTest.testClassMockingSupport":428,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":307,"org.easymock.tests2.CaptureTest.testCapture1_2446744":286,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":182,"org.easymock.tests.UsageThrowableTest.throwError":49,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":350,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":360,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":478,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":332,"org.easymock.samples.PartialClassMockTest.testGetArea":162,"org.easymock.tests.MockingTest.testInterfaceMocking":419,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":80,"org.easymock.tests2.CompareToTest.testLessOrEqual":514,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":467,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":119,"org.easymock.tests2.UsageTest.niceToStrict":245,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":315,"org.easymock.tests2.ThreadingTest.testChangeDefault":429,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":268,"org.easymock.tests2.MockBuilderTest.testCreateMock":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":474,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":451,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":127,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":201,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":38,"org.easymock.tests.UsageOverloadedMethodTest.overloading":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":228,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":296,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":27,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":512,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":6,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":291,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":376,"org.easymock.tests2.EasyMockSupportClassTest.testAll":254,"org.easymock.tests.MockClassControlTest.testEquals":371,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":96,"org.easymock.tests2.CaptureTest.testCaptureAll":283,"org.easymock.tests.MockNameTest.defaultName":355,"org.easymock.tests2.UsageConstraintsTest.testMatches":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":77,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":349,"org.easymock.samples.ExampleTest.voteForRemovals":153,"org.easymock.tests.UsageVarargTest.allKinds":117,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":138,"org.easymock.samples.BasicClassMockTest.testPrintContent":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":97,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":55,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":438,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":67,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":516,"org.easymock.tests2.UsageConstraintsTest.greaterThan":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":104,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":484,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":333,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":390,"org.easymock.samples.ExampleTest.voteForRemoval":150,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":485,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":191,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":362,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":479,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":325,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":102,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":241,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":198,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":62,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":430,"org.easymock.tests2.CaptureTest.testCaptureFirst":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":199,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":253,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":23,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":193,"org.easymock.tests2.UsageTest.moreThanOneArgument":243,"org.easymock.tests2.CaptureTest.testCapture2_2446744":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":272,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":116,"org.easymock.tests.GenericTest.testBridgedEquals":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":305,"org.easymock.tests.UsageExpectAndReturnTest.longType":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":94,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":196,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":136,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":299,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":309,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":74,"org.easymock.tests.UsageCallCountTest.tooManyCalls":306,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":54,"org.easymock.tests.MockingTest.testNiceClassMocking":422,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":175,"org.easymock.tests.MockingTest.testClassMocking":417,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":44,"org.easymock.tests2.UsageConstraintsTest.testContains":227,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":172,"org.easymock.tests2.UsageConstraintsTest.testFind":219,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":147,"org.easymock.tests.MockTypeTest.fromEasyMockClass":359,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":7,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":213,"org.easymock.tests.UsageExpectAndReturnTest.object":26,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":204,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":112,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":313,"org.easymock.tests.UsageTest.exactCallCountByLastCall":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":391,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":456,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":32,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":0,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":433,"org.easymock.tests.MockClassControlTest.testHashCode":370,"org.easymock.tests2.EasyMockSupportTest.testVerify":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":469,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":381,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":319,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":457,"org.easymock.tests.UsageVarargTest.varargCharAccepted":111,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":515,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastCall":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":508,"org.easymock.tests.DefaultClassInstantiatorTest.object":384,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":207,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":346,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":470,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":432,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":483,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":331,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":124,"org.easymock.tests.CapturesMatcherTest.test":513,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":33,"org.easymock.tests.ReplayStateInvalidCallsTest.times":337,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":394,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":257,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":368,"org.easymock.tests2.UsageTest.resumeIfFailure":252,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":65,"org.easymock.tests2.StubTest.stubWithReturnValue":211,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":520,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":25,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":236,"org.easymock.tests2.SerializationTest.testAllMockedMethod":187,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":409,"org.easymock.samples.SupportTest.voteForRemovals":161,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":130,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":511,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":414,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":506,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":393,"org.easymock.tests.UsageExpectAndThrowTest.object":128,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":234,"org.easymock.tests2.DelegateToTest.testWrongClass":4,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":99,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":335,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":100,"org.easymock.samples.ConstructorCalledMockTest.testTax":155,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":497,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":174,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":458,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":39,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":327,"org.easymock.tests2.CaptureTest.testCaptureNone":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":365,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":501,"org.easymock.tests.UsageUnorderedTest.message":68,"org.easymock.tests.UsageVerifyTest.twoReturns":140,"org.easymock.tests.UsageVarargTest.varargByteAccepted":115,"org.easymock.tests2.ThreadingTest.testThreadSafe":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":472,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":48,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":157,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":314,"org.easymock.tests2.CaptureTest.testCapture_2617107":284,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":72,"org.easymock.tests2.UsageConstraintsTest.any":225,"org.easymock.tests2.StubTest.stub":210,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":352,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndThrowTest.longType":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":64,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":388,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":82,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.SerializationTest.testClass":185,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":209,"org.easymock.tests.LimitationsTest.mockNativeMethod":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":35,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":317,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":446,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":343,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":169,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":502,"org.easymock.tests2.NameTest.nameForMocksControl":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":448,"org.easymock.tests2.MockedExceptionTest.testMockedException":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":462,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":443,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":145,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":122,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":258,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":271,"org.easymock.tests.MockingTest.testNicePartialClassMocking":144,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":444,"org.easymock.tests2.CaptureTest.testCaptureLast":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":308,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":180,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":223,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":342,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":235,"org.easymock.tests.MockingTest.testTwoMocks":418,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":339,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":126,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":250,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":238,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":505,"org.easymock.samples.ExampleTest.removeNonExistingDocument":424,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":450,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":81,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":434,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":504,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":386,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":192,"org.easymock.tests2.MockBuilderTest.testCreateMockString":273,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":120,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":517,"org.easymock.tests.UsageVerifyTest.twoThrows":139,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":256,"org.easymock.samples.ExampleTest.voteAgainstRemoval":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":405,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":297,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":266,"org.easymock.tests.LimitationsTest.privateConstructor":374,"org.easymock.tests2.UsageConstraintsTest.testNotNull":237,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":170,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":56,"org.easymock.tests2.UsageTest.defaultResetToNice":249,"org.easymock.samples.ExampleTest.voteAgainstRemovals":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":31,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":445,"org.easymock.tests.UsageVarargTest.differentLength":377,"org.easymock.tests2.CallbackTest.callback":195,"org.easymock.tests2.UsageConstraintsTest.equals":455,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":481,"org.easymock.tests.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":71,"org.easymock.tests.UsageCallCountTest.tooFewCalls":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":41,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":503,"org.easymock.tests.UsageThrowableTest.throwCheckedException":53,"org.easymock.tests.MockingTest.testStrictClassMocking":416,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":449,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":176,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":178,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":281,"org.easymock.tests.ObjectMethodsTest.testHashCode":312,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":194,"org.easymock.tests2.NameTest.nameForNiceMock":276,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":341,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":336,"org.easymock.tests2.DependencyTest.testInterfaceMocking":188,"org.easymock.samples.ExampleTest.addDocument":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.DelegateToTest.testStubDelegate":3,"org.easymock.tests2.AnswerTest.stubAnswer":280,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":10,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":490,"org.easymock.tests.UsageVarargTest.varargLongAccepted":114,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":34,"org.easymock.tests.UsageExpectAndReturnTest.floatType":18,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":240,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":440,"org.easymock.tests.UsageThrowableTest.noUpperLimit":50,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":232,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":216,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":493,"org.easymock.tests2.SerializationTest.test":186,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":287,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":17,"org.easymock.tests2.UsageConstraintsTest.testSame":221,"org.easymock.samples.SupportTest.addDocument":160,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":425,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":326,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":464,"org.easymock.tests.GenericTest.testPackageScope":36,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":439,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":420,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":324,"org.easymock.tests2.NameTest.nameForMock":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":521,"org.easymock.tests2.UsageStrictMockTest.differentMethods":168,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":482,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":132,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":106,"org.easymock.tests2.MockedExceptionTest.testRealException":173,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":363,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":407,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":84,"org.easymock.tests2.NameTest.nameForStrictMock":275,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":489,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":509,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":262,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":387,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":233,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":487,"org.easymock.tests2.UsageStrictMockTest.range":167,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":330,"org.easymock.tests2.UsageConstraintsTest.lessThan":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":468,"org.easymock.tests2.CaptureTest.testCaptureRightOne":292,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":500,"org.easymock.tests2.UsageConstraintsTest.testOr":222,"org.easymock.tests.UsageRangeTest.combination":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":259,"org.easymock.tests.UsageTest.wrongArguments":88,"org.easymock.tests2.MockBuilderTest.testWithConstructor":518,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":465,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":101,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":29,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":389,"org.easymock.tests.UsageVarargTest.varargShortAccepted":113,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":323,"org.easymock.tests2.UsageConstraintsTest.cmpTo":226,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":344,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":507,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":399,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":248,"org.easymock.tests2.CaptureTest.testCaptureFromStub":293,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":79,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":488,"org.easymock.tests.UsageTest.unexpectedCallWithArray":87,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":340,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":30,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":11,"org.easymock.tests2.UsageConstraintsTest.constraints":217,"org.easymock.samples.ExampleTest.addAndChangeDocument":154,"org.easymock.tests.UsageStrictMockTest.testVerify":15,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":159,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":95,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":22,"org.easymock.tests.LimitationsTest.abstractClass":373,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":60,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":202}}]
