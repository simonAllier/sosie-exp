[{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:920","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,1,253,254,255,256,257,258,259,260,261,262,262,263,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,6,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,8,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,2,458,3,4,5,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[117,159,160,162,163,165,341,343,345,351,354,373,375,376],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[12,55,57,58,59,60,61,62,65,87,115,120,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,228,234,251,318,328,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[190],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[101,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[405],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[53,55,57,58,59,60,61,62,67,72,73,75,81,102,106,115,116,119,120,123,160,162,163,166,167,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,231,232,235,249,250,251,252,253,254,256,261,265,269,272,274,275,278,280,281,282,283,284,292,295,305,311,318,326,327,328,329,330,6,333,334,335,338,339,340,341,342,343,344,345,348,352,353,354,358,359,360,361,362,363,364,365,366,367,368,369,373,375,376,383,384,385,386,388,389,390,391,392,393,395,396,397,398,399,400,401,402,403,404,405,406,8,408,409,410,411,418,425,429,433,440,447,448,450,451,452,453,454,455,456,458,459,460,462,463,466,467,468,469,471,472],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[36,37,38,40,41,52,56,89,90,91,93,94,96,97,98,99,100,103,106,118,121,122,158,159,161,162,163,164,174,175,233,252,253,254,255,256,258,259,260,261,264,266,267,272,331,332,336,337,361,367,368,369,370,372,374,375,376,377,407,449,460,461,464,465,466,467,472],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"hashCodeMethod"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[42,45,104,265,268,474,269,270,272,273,274,275,277,278,475,279,476,346,447],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[262,263,477,478,479,480,481,276,482,483,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,411,412,447,452,456,484],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[154,485,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[106,487],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[42,45,104,265,268,474,269,270,272,273,274,275,277,278,475,279,346,447],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","name":"methodName"}},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[234,317],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[262,262,263,263,429],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,488,489,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,1,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,490,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,6,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,8,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,491,454,455,456,484,457,2,458,3,4,5,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:86","sourceCode":"return org.easymock.internal.Results.getMainInterval().expectedCount()","type":"CtReturnImpl"},"failures":[33,35,36,40,41,95,106,115,116,118,121,122,123,157,159,160,161,162,163,164,218,227,228,229,269,278,320,321,322,323,328,330,331,6,332,336,337,339,352,354,357,359,363,364,367,371,373,374,375,376,377,385,401],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[404],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":386,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests2.UsageTest.argumentsOrdered":337,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":19,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":332,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":264,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":84,"org.easymock.tests.MockingTest.testPartialClassMocking":72,"org.easymock.tests.MockClassControlTest.testToString":238,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":319,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":127,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":295,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":327,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":231,"org.easymock.tests2.UsageTest.wrongArguments":331,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":424,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":50,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":45,"org.easymock.tests2.UsageConstraintsTest.testNull":389,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":343,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":243,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":367,"org.easymock.tests2.CaptureTest.testPrimitive":462,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":235,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":146,"org.easymock.tests.UsageTest.moreThanOneArgument":116,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":246,"org.easymock.tests.UsageTest.argumentsOrdered":122,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":193,"org.easymock.tests.UsageVarargTest.varargIntAccepted":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":445,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":226,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":418,"org.easymock.tests.ReplayStateInvalidUsageTest.times":189,"org.easymock.tests2.DependencyTest.testClassMocking":324,"org.easymock.tests2.AnswerTest.answer":425,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":288,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":489,"org.easymock.tests2.CaptureTest.testAnd":459,"org.easymock.tests2.UsageTest.strictResetToDefault":329,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":245,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":362,"org.easymock.tests2.DelegateToTest.testDelegate":5,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":142,"org.easymock.tests.LimitationsTest.mockFinalMethod":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":111,"org.easymock.tests2.DependencyTest.testClassMockingSupport":325,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":174,"org.easymock.tests2.CaptureTest.testCapture1_2446744":463,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":286,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":183,"org.easymock.tests.UsageThrowableTest.throwError":55,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":44,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":248,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":313,"org.easymock.samples.PartialClassMockTest.testGetArea":265,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":184,"org.easymock.tests.MockingTest.testInterfaceMocking":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":113,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":128,"org.easymock.tests2.UsageTest.niceToStrict":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":9,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":272,"org.easymock.tests2.MockBuilderTest.testCreateMock":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":308,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":421,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":136,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":363,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":488,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":126,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":48,"org.easymock.tests.UsageOverloadedMethodTest.overloading":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":310,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":399,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":209,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":249,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":485,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":398,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":468,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":92,"org.easymock.tests.MockClassControlTest.testEquals":242,"org.easymock.tests2.EasyMockSupportClassTest.testAll":292,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":144,"org.easymock.tests2.CaptureTest.testCaptureAll":460,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":109,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":287,"org.easymock.tests.MockNameTest.defaultName":180,"org.easymock.tests2.UsageConstraintsTest.testMatches":400,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":247,"org.easymock.samples.ExampleTest.voteForRemovals":256,"org.easymock.tests.UsageVarargTest.allKinds":100,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":110,"org.easymock.samples.BasicClassMockTest.testPrintContent":267,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":61,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":442,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":88,"org.easymock.tests2.UsageConstraintsTest.greaterThan":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":293,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":354,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":156,"org.easymock.samples.ExampleTest.voteForRemoval":253,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":281,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":46,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":346,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":52,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":328,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":360,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":83,"org.easymock.tests2.CaptureTest.testCaptureFirst":472,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":361,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":339,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":68,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":205,"org.easymock.tests2.CaptureTest.testCapture2_2446744":471,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":283,"org.easymock.tests2.UsageTest.moreThanOneArgument":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":27,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":278,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":99,"org.easymock.tests.GenericTest.testBridgedEquals":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":40,"org.easymock.tests.UsageExpectAndReturnTest.longType":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":107,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":358,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":475,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":145,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":407,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":230,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":244,"org.easymock.tests.UsageCallCountTest.tooManyCalls":41,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":60,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":451,"org.easymock.tests.MockingTest.testNiceClassMocking":78,"org.easymock.tests.MockingTest.testClassMocking":70,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":474,"org.easymock.tests2.UsageConstraintsTest.testContains":397,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":34,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":433,"org.easymock.tests2.UsageConstraintsTest.testFind":388,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":251,"org.easymock.tests.MockTypeTest.fromEasyMockClass":43,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":157,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":316,"org.easymock.tests.UsageExpectAndReturnTest.object":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":348,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":366,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":94,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":171,"org.easymock.tests.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":14,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":147,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":412,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":214,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":0,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":436,"org.easymock.tests.MockClassControlTest.testHashCode":241,"org.easymock.tests2.EasyMockSupportTest.testVerify":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":302,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":195,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":125,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":285,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":382,"org.easymock.tests.UsageVarargTest.varargCharAccepted":93,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":32,"org.easymock.tests2.UsageTest.openCallCountByLastCall":333,"org.easymock.tests.DefaultClassInstantiatorTest.object":150,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":369,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":124,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":169,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":435,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":240,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":133,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":177,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":311,"org.easymock.tests2.UsageTest.resumeIfFailure":338,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":86,"org.easymock.tests2.StubTest.stubWithReturnValue":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":481,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":207,"org.easymock.tests2.SerializationTest.testAllMockedMethod":449,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":25,"org.easymock.samples.SupportTest.voteForRemovals":261,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":438,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":139,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":31,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":426,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":149,"org.easymock.tests.UsageExpectAndThrowTest.object":137,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":405,"org.easymock.tests2.DelegateToTest.testWrongClass":3,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":166,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":167,"org.easymock.tests.UsageStrictMockTest.range":162,"org.easymock.samples.ConstructorCalledMockTest.testTax":262,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":380,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":365,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":138,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":274,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":191,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":49,"org.easymock.tests2.CaptureTest.testCaptureNone":467,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":114,"org.easymock.tests.UsageUnorderedTest.message":106,"org.easymock.tests.UsageVerifyTest.twoReturns":229,"org.easymock.tests.UsageVarargTest.varargByteAccepted":98,"org.easymock.tests2.ThreadingTest.testThreadSafe":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":306,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":38,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":172,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":266,"org.easymock.tests2.CaptureTest.testCapture_2617107":461,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":234,"org.easymock.tests2.UsageConstraintsTest.any":395,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":188,"org.easymock.tests2.StubTest.stub":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":179,"org.easymock.tests.UsageExpectAndThrowTest.longType":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":85,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":154,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":187,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":374,"org.easymock.tests2.SerializationTest.testClass":447,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":440,"org.easymock.tests.LimitationsTest.mockNativeMethod":81,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":415,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":377,"org.easymock.tests2.NameTest.nameForMocksControl":323,"org.easymock.tests2.MockedExceptionTest.testMockedException":432,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":294,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":131,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":75,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":315,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":340,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":275,"org.easymock.tests.MockingTest.testNicePartialClassMocking":73,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":345,"org.easymock.tests2.CaptureTest.testCaptureLast":466,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":413,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":456,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":392,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":406,"org.easymock.tests.MockingTest.testTwoMocks":71,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":135,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":336,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":409,"org.easymock.samples.ExampleTest.removeNonExistingDocument":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":420,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":185,"org.easymock.tests.UsageStrictMockTest.differentMethods":163,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":437,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":152,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":282,"org.easymock.tests2.MockBuilderTest.testCreateMockString":279,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":236,"org.easymock.tests.UsageExpectAndThrowTest.floatType":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":296,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":291,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":428,"org.easymock.tests.UsageVerifyTest.twoThrows":228,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":305,"org.easymock.samples.ExampleTest.voteAgainstRemoval":254,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":20,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":353,"org.easymock.tests.LimitationsTest.privateConstructor":80,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":478,"org.easymock.tests2.UsageConstraintsTest.testNotNull":408,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":431,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":62,"org.easymock.tests2.UsageTest.defaultResetToNice":335,"org.easymock.samples.ExampleTest.voteAgainstRemovals":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":21,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":414,"org.easymock.tests.UsageVarargTest.differentLength":95,"org.easymock.tests2.CallbackTest.callback":357,"org.easymock.tests2.UsageConstraintsTest.equals":387,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":349,"org.easymock.tests.UsageTest.openCallCountByLastCall":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":383,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":233,"org.easymock.tests.UsageCallCountTest.tooFewCalls":36,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":453,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":51,"org.easymock.tests.UsageThrowableTest.throwCheckedException":59,"org.easymock.tests.MockingTest.testStrictClassMocking":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":455,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":54,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":452,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":419,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":190,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":454,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":430,"org.easymock.tests.ObjectMethodsTest.testHashCode":170,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":284,"org.easymock.tests2.NameTest.nameForNiceMock":322,"org.easymock.tests2.DependencyTest.testInterfaceMocking":326,"org.easymock.samples.ExampleTest.addDocument":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":307,"org.easymock.tests2.DelegateToTest.testStubDelegate":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":312,"org.easymock.tests2.AnswerTest.stubAnswer":429,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":160,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":490,"org.easymock.tests.UsageVarargTest.varargLongAccepted":97,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":18,"org.easymock.tests.UsageExpectAndReturnTest.floatType":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":411,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":444,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":403,"org.easymock.tests.UsageThrowableTest.noUpperLimit":56,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":384,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":378,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":464,"org.easymock.tests2.SerializationTest.test":448,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":486,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":151,"org.easymock.tests2.UsageConstraintsTest.testSame":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.samples.SupportTest.addDocument":260,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":491,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":297,"org.easymock.tests.GenericTest.testPackageScope":102,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":13,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":443,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":76,"org.easymock.tests2.NameTest.nameForMock":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":210,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":483,"org.easymock.tests2.UsageStrictMockTest.differentMethods":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":350,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":141,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":221,"org.easymock.tests2.MockedExceptionTest.testRealException":434,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":23,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":381,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":22,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":373,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":232,"org.easymock.tests2.NameTest.nameForStrictMock":321,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":271,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":314,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":344,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":379,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":487,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":404,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":153,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":269,"org.easymock.tests2.UsageStrictMockTest.range":375,"org.easymock.tests2.UsageConstraintsTest.lessThan":410,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":17,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":359,"org.easymock.tests2.CaptureTest.testCaptureRightOne":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":301,"org.easymock.tests2.UsageConstraintsTest.testOr":391,"org.easymock.tests.UsageRangeTest.combination":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":341,"org.easymock.tests.UsageTest.wrongArguments":118,"org.easymock.tests2.MockBuilderTest.testWithConstructor":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":298,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":211,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":155,"org.easymock.tests.UsageVarargTest.varargShortAccepted":96,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":39,"org.easymock.tests2.UsageConstraintsTest.cmpTo":396,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":12,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":334,"org.easymock.tests2.CaptureTest.testCaptureFromStub":470,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":182,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":270,"org.easymock.tests.UsageTest.unexpectedCallWithArray":117,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":159,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":37,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":482,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.constraints":385,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":161,"org.easymock.samples.ExampleTest.addAndChangeDocument":258,"org.easymock.tests.UsageStrictMockTest.testVerify":165,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":259,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":108,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":465,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":224,"org.easymock.tests.LimitationsTest.abstractClass":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":204,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":225,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":364}}]
