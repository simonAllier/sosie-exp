[{"position":"org.easymock.internal.RecordState:315","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[43,44,45,46,47,48],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,1,2,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,154,155,155,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","name":"name","proxyFactory":"org.easymock.internal.MocksControl.interfaceProxyFactory"}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[174,175,176,177,178],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[179,180,181,182],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[183,184,185,186,187,188,115],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[189],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[190],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[191,192],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[193],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[194,195,183,196,197,198,199,200,81,84,201,115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[114,115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[202,203],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[145,146,150],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[204],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[43,44,45,46,47,48],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[205,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[49,50,51,52,53,54,56,59,60,61,62,64,2,67,68,69,71,72,73,74,76,77,78,79,80,81,82,83,84,90,93,103,109,112,113,114,117,118,119,120,208,126,129,130,131,133,134,139,140,141,142,144,152,153,154,154,155,155,156],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[43,44,45,46,47,48],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[209,210,211,212,193,213,214,215,216,217,218,219,220,221,222,223],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[56,224,225],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[226,227,228],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[128],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:315","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[161,169,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[43,44,251,46,252],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[253,254,255],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[175,256,257],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[258,49,50,259,51,52,53,56,60,61,62,260,261,262,263,264,265,266,267,268,269,270,271,272,180,273,274,275,276,277,2,278,279,210,211,212,193,213,216,280,217,219,221,222,67,68,71,73,74,77,281,4,5,282,283,284,285,6,286,287,288,289,290,291,292,293,294,295,296,297,298,202,224,299,207,300,301,251,191,302,303,304,305,306,307,308,309,310,79,80,81,82,311,83,84,312,174,313,90,93,103,109,112,314,114,206,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,126,129,340,341,342,343,344,345,346,347,203,27,348,176,349,28,350,256,257,29,30,351,352,353,354,355,356,357,358,38,359,360,39,361,140,141,142,362,178,363,364,365,366,367,145,368,369,42,370,371,372,373,156,374],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[375,376,377],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[145,146,147,148,150,151],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[378,226,379,174,380,381,175,176,382,47,383,228,384,48,178],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":292,"org.easymock.tests2.UsageTest.argumentsOrdered":379,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":161,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":329,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":307,"org.easymock.tests2.SerializationTest.testAllMockedMethod":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":33,"org.easymock.tests.MockingTest.testPartialClassMocking":140,"org.easymock.samples.SupportTest.voteForRemovals":374,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":44,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":128,"org.easymock.tests.MockClassControlTest.testToString":118,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":97,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":7,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":179,"org.easymock.tests.UsageExpectAndThrowTest.object":17,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":304,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":279,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":356,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":357,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":298,"org.easymock.tests2.UsageTest.wrongArguments":378,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":365,"org.easymock.samples.ConstructorCalledMockTest.testTax":154,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":172,"org.easymock.tests.UsageStrictMockTest.range":178,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":79,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":134,"org.easymock.tests2.UsageConstraintsTest.testNull":294,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":18,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":269,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":73,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":123,"org.easymock.tests2.CaptureTest.testPrimitive":193,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":367,"org.easymock.tests.UsageTest.moreThanOneArgument":359,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":26,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":259,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":45,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":232,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":347,"org.easymock.tests2.CaptureTest.testCaptureNone":280,"org.easymock.tests.UsageUnorderedTest.message":381,"org.easymock.tests.UsageVerifyTest.twoReturns":176,"org.easymock.tests2.ThreadingTest.testThreadSafe":273,"org.easymock.tests.UsageTest.argumentsOrdered":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":104,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":340,"org.easymock.tests2.CaptureTest.testCapture_2617107":212,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":41,"org.easymock.tests2.UsageConstraintsTest.any":202,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":318,"org.easymock.tests.UsageExpectAndThrowTest.longType":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":34,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":234,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":376,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":149,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":258,"org.easymock.tests2.SerializationTest.testClass":112,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests.LimitationsTest.mockNativeMethod":126,"org.easymock.tests2.DependencyTest.testClassMocking":65,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":339,"org.easymock.tests2.AnswerTest.answer":272,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":131,"org.easymock.tests2.CaptureTest.testAnd":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":167,"org.easymock.tests2.UsageTest.strictResetToDefault":282,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":59,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":92,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":11,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":142,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":49,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":233,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":74,"org.easymock.tests.MockingTest.testNicePartialClassMocking":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":22,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":53,"org.easymock.tests.LimitationsTest.mockFinalMethod":127,"org.easymock.tests2.CompareToTest.testCompareEqual":225,"org.easymock.tests2.CaptureTest.testCaptureLast":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":36,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":297,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":247,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":305,"org.easymock.tests2.DependencyTest.testClassMockingSupport":66,"org.easymock.tests.MockingTest.testTwoMocks":139,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":244,"org.easymock.tests2.CaptureTest.testCapture1_2446744":213,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":320,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":15,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":226,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":309,"org.easymock.tests.UsageThrowableTest.throwError":349,"org.easymock.tests.UsageStrictMockTest.differentMethods":363,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":170,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":159,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":173,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":147,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":275,"org.easymock.tests2.MockBuilderTest.testCreateMockString":78,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":164,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":94,"org.easymock.tests.UsageExpectAndThrowTest.floatType":9,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests.UsageVerifyTest.twoThrows":175,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":111,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":103,"org.easymock.samples.PartialClassMockTest.testGetArea":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":341,"org.easymock.samples.ExampleTest.voteAgainstRemoval":372,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":346,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":61,"org.easymock.tests2.UsageTest.niceToStrict":284,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":98,"org.easymock.tests.LimitationsTest.privateConstructor":125,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":199,"org.easymock.tests2.UsageConstraintsTest.testNotNull":308,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":30,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":253,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":71,"org.easymock.tests2.UsageTest.defaultResetToNice":286,"org.easymock.tests2.MockBuilderTest.testCreateMock":76,"org.easymock.samples.ExampleTest.voteAgainstRemovals":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":106,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":166,"org.easymock.tests2.UsageConstraintsTest.equals":227,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":57,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":171,"org.easymock.tests.UsageTest.openCallCountByLastCall":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":16,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":43,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":265,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":358,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":40,"org.easymock.tests.UsageOverloadedMethodTest.overloading":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":300,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":31,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":82,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":207,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":217,"org.easymock.tests.UsageThrowableTest.throwCheckedException":256,"org.easymock.tests2.EasyMockSupportClassTest.testAll":90,"org.easymock.tests.MockClassControlTest.testEquals":122,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":130,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":24,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":46,"org.easymock.tests.MockingTest.testStrictClassMocking":137,"org.easymock.tests2.CaptureTest.testCaptureAll":211,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":27,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":169,"org.easymock.tests2.UsageConstraintsTest.testMatches":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":311,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":181,"org.easymock.samples.ExampleTest.voteForRemovals":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":187,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":277,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":246,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":241,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":348,"org.easymock.tests2.DependencyTest.testInterfaceMocking":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":186,"org.easymock.samples.BasicClassMockTest.testPrintContent":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":105,"org.easymock.tests2.DelegateToTest.testStubDelegate":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":110,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":29,"org.easymock.tests2.AnswerTest.stubAnswer":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":162,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":204,"org.easymock.tests2.UsageConstraintsTest.greaterThan":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":352,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":62,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":238,"org.easymock.samples.ExampleTest.voteForRemoval":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":315,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":151,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":274,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":338,"org.easymock.tests.UsageExpectAndReturnTest.floatType":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":114,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":230,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":155,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":302,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":290,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":144,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":85,"org.easymock.tests2.SerializationTest.test":314,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":214,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":75,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":262,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":321,"org.easymock.tests2.UsageConstraintsTest.testSame":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":32,"org.easymock.tests2.CaptureTest.testCaptureFirst":222,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":263,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":288,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":231,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":95,"org.easymock.tests.GenericTest.testPackageScope":129,"org.easymock.tests2.UsageTest.moreThanOneArgument":283,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":276,"org.easymock.tests2.CaptureTest.testCapture2_2446744":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":77,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":163,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":229,"org.easymock.tests.GenericTest.testBridgedEquals":132,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":200,"org.easymock.tests.UsageExpectAndReturnTest.longType":323,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":332,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":25,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":306,"org.easymock.tests2.UsageStrictMockTest.differentMethods":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":324,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":377,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":21,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":354,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":328,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":312,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":257,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":80,"org.easymock.tests.MockingTest.testNiceClassMocking":143,"org.easymock.tests.MockingTest.testClassMocking":138,"org.easymock.tests2.UsageConstraintsTest.testContains":299,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":293,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":42,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":52,"org.easymock.tests.UsageExpectAndReturnTest.object":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":86,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":303,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":56,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":68,"org.easymock.tests2.UsageStrictMockTest.range":174,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":235,"org.easymock.tests2.UsageConstraintsTest.lessThan":310,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":160,"org.easymock.tests.UsageTest.exactCallCountByLastCall":361,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":203,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":261,"org.easymock.tests2.CaptureTest.testCaptureRightOne":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":99,"org.easymock.tests2.UsageConstraintsTest.testOr":296,"org.easymock.tests.UsageRangeTest.combination":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageTest.wrongArguments":383,"org.easymock.tests2.MockBuilderTest.testWithConstructor":194,"org.easymock.tests.MockClassControlTest.testHashCode":121,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":96,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":100,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":375,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":150,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":249,"org.easymock.tests2.UsageConstraintsTest.cmpTo":224,"org.easymock.tests2.CaptureTest.testCaptureMultiple":209,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":319,"org.easymock.tests2.UsageTest.openCallCountByLastCall":285,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":6,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":254,"org.easymock.tests.DefaultClassInstantiatorTest.object":145,"org.easymock.tests2.CaptureTest.testCaptureFromStub":220,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":135,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":69,"org.easymock.tests.UsageTest.unexpectedCallWithArray":47,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":380,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":245,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":101,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":350,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":48,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":196,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":334,"org.easymock.tests2.CaptureTest.testCapture":218,"org.easymock.tests2.UsageConstraintsTest.constraints":291,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":236,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":60,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":120,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":13,"org.easymock.tests.CapturesMatcherTest.test":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":337,"org.easymock.tests.ReplayStateInvalidCallsTest.times":242,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":109,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":119,"org.easymock.tests2.CompareToTest.testGreateThan":192,"org.easymock.tests2.UsageTest.resumeIfFailure":287,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":342,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":326,"org.easymock.tests.LimitationsTest.abstractClass":124,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":133,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":343,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":266,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":177}}]
