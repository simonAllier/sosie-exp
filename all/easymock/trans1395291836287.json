[{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[1,2],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:29","sourceCode":"new org.easymock.internal.matchers.NotNull()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[54,55,56,57,58,59,59,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,4,75,5,6,7,76,8,77,78,9,10,79,80,3,12,13,14,15,81,82,83,84,85,86,87,88,89,16,90,91,92,93,94,95,96,97,98,99,100,101,102,17,103,104,105,106,107,108,109,110,111,112,113,114,115,116,18,117,118,119,120,19,20,21,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,23,143,144,145,24,25,146,147,26,148,149,150,151,27,152,153,154,155,156,157,158,28,159,29,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,33,34,222,35,36,37,223,224,225,226,227,228,229,230,231,232,233,234,235,236,38,237,39,40,238,239,41,42,43,240,44,47,241,242,243,244,245,246,48,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,51,52,277,278,279,280,281,282,283,284,285,286,287,288],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[289,290,291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[292,88,103,106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[54,55,294,56,295,296,57,297,298,299,58,300,301,302,59,60,303,304,61,62,63,305,64,65,66,306,307,308,67,68,309,310,311,312,313,69,314,315,316,317,318,319,320,321,322,323,324,325,326,327,70,328,329,330,71,72,73,74,4,331,75,5,6,7,76,8,77,78,9,10,11,79,80,3,12,13,14,15,81,332,333,82,83,334,335,336,337,84,85,86,87,338,88,89,16,90,339,91,92,93,94,95,96,340,97,98,99,100,101,102,17,103,104,105,106,107,341,108,109,110,111,342,343,344,112,345,346,113,347,348,349,350,351,352,353,354,355,114,356,357,358,359,360,115,361,362,363,116,364,18,365,366,367,117,118,119,368,120,369,370,19,20,371,21,372,373,374,375,376,121,377,378,379,380,381,382,122,123,124,125,383,384,385,386,387,126,127,128,129,388,130,131,132,389,133,390,391,392,134,135,136,393,394,22,137,138,139,140,141,142,23,143,144,145,24,25,146,147,26,148,149,150,151,27,152,153,154,155,156,395,157,396,397,158,28,159,29,398,399,160,161,162,163,400,164,165,401,402,403,166,167,404,405,168,169,170,171,172,173,406,174,175,176,177,178,179,407,408,409,410,180,411,412,413,293,181,182,183,184,185,414,186,187,188,189,190,191,415,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,416,417,418,419,420,421,32,422,423,424,425,426,53,427,428,429,430,212,213,214,215,216,217,218,219,431,220,432,433,434,435,436,437,438,1,221,439,440,2,33,441,34,222,35,36,37,223,224,225,226,227,228,229,230,231,232,233,234,235,236,442,443,444,445,446,447,448,449,450,38,237,39,40,238,239,41,42,43,451,240,452,453,454,455,44,45,46,47,456,241,242,243,457,458,244,245,246,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,48,247,248,249,50,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,483,484,275,485,276,51,52,277,278,279,280,281,282,283,486,487,488,284,285,489,286,490,491,492,287,288,493,494,495],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[339],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[65,496,497,498,499,500,368,370,136,393],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[501,502,503,504,505,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[54,55,294,56,295,296,57,297,298,299,58,300,301,302,59,59,60,60,303,304,61,62,63,305,64,65,66,306,67,68,309,310,311,312,313,69,314,315,316,317,318,319,320,324,325,326,327,70,328,329,330,71,72,73,74,4,331,75,5,6,7,76,8,77,78,9,10,11,79,80,3,12,13,14,15,81,332,333,82,83,334,335,336,337,84,85,86,87,338,88,89,16,90,339,91,92,93,94,95,96,340,97,98,99,100,101,102,17,103,104,105,106,107,341,108,109,110,111,342,112,346,113,348,349,352,353,354,355,114,357,360,115,361,362,363,18,367,117,118,119,370,19,372,373,374,375,376,121,377,378,379,380,381,382,122,123,124,125,383,128,129,130,131,133,390,391,392,134,135,136,393,22,137,138,139,140,141,142,23,143,145,24,146,26,148,149,150,151,27,152,153,154,155,156,157,396,397,158,28,159,29,398,160,161,162,163,400,164,165,401,402,403,166,167,404,405,168,169,170,171,172,173,406,174,175,176,177,178,179,407,408,409,410,180,411,412,413,293,181,182,183,184,185,414,186,187,188,189,190,191,415,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,416,417,418,419,420,421,32,422,423,424,425,426,53,427,428,429,430,212,213,214,215,216,217,218,219,220,432,433,434,435,436,438,1,221,439,440,2,33,441,34,222,35,36,37,223,224,225,226,227,228,229,230,231,232,233,234,235,236,442,446,448,450,38,237,39,40,238,239,41,42,43,451,240,452,453,454,455,44,45,46,47,456,241,242,243,457,458,244,245,246,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,48,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,483,484,275,485,276,51,52,277,278,279,280,281,282,283,486,487,488,284,285,489,286,490,491,492,287,288,493,494,495],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[81,333,85,16,90,92,94,95,340,105,109],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[298,299,58,59,59,60,60,65,306,112,113,114,115,116,18,365,117,118,119,120,19,20,21,124,126,127,128,129,131,132,136,151,27,153,154,155,156,157,158,28,159,29,399,414,212,213,214,215,216,217,218,219,221,439,440,2,443,448,458,275,488,284,285,286],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"failures":[54,55,294,56,295,296,57,297,298,299,58,300,301,302,59,59,60,60,303,304,61,62,63,305,64,65,66,306,67,68,69,327,70,328,330,71,72,73,74,4,331,75,5,6,7,76,8,77,78,9,10,11,79,80,3,12,13,14,15,81,332,333,82,83,334,335,336,337,84,85,86,87,338,88,89,16,90,91,92,93,94,95,96,97,98,99,100,101,102,17,103,104,105,106,107,341,108,109,110,111,112,113,114,115,116,18,117,118,119,120,19,20,21,121,122,123,124,125,384,385,386,387,126,127,128,129,130,131,132,133,390,391,392,134,135,136,22,137,138,139,140,141,142,23,143,144,145,24,25,146,147,26,148,149,150,151,27,152,153,154,155,156,157,158,28,159,29,160,161,162,163,400,164,165,401,402,403,166,167,404,405,168,169,170,171,172,173,406,174,175,176,177,178,179,407,408,409,410,180,412,413,293,181,182,183,184,185,414,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,416,417,418,420,421,32,422,423,424,425,426,53,427,428,429,430,212,213,214,215,216,217,218,219,220,221,439,440,33,441,34,222,35,36,37,223,224,225,226,227,228,229,230,231,232,233,234,235,236,442,38,237,39,40,238,239,41,42,43,451,240,452,453,454,455,44,45,46,47,241,242,243,244,245,246,475,481,48,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,51,52,277,278,279,280,281,282,283,488,284,285,286,287,288,493,494,495],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[6,7,79,80,89,16,91,93,94,99,102,104,110,427,428,36,37,238,239,246,460,48,276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[507,508,509,510,34,39],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[54,55,294,56,295,296,57,297,298,299,58,300,301,302,59,60,303,304,61,62,63,305,64,65,66,306,307,308,67,68,309,310,311,312,313,69,314,315,316,317,318,319,320,321,322,323,324,325,326,327,70,328,329,330,71,72,73,74,4,331,75,5,6,7,76,8,77,78,9,10,11,79,80,3,12,13,14,15,81,332,333,82,83,334,335,336,337,84,85,86,87,338,88,89,16,90,339,91,92,93,94,95,96,340,97,98,99,100,101,102,17,103,104,105,106,107,341,108,109,110,111,342,343,344,112,345,346,113,347,348,349,350,351,352,353,354,355,114,356,357,358,359,360,115,361,362,363,116,364,18,365,366,367,117,118,119,368,120,369,370,19,20,371,21,372,373,374,375,376,121,377,378,379,380,381,382,122,123,124,125,383,384,385,386,387,126,127,128,129,388,130,131,132,389,133,390,391,392,134,135,136,393,394,22,137,138,139,140,141,142,23,143,144,145,24,25,146,147,26,148,149,150,151,27,152,153,154,155,156,395,157,396,397,158,28,159,29,398,399,160,161,162,163,400,164,165,401,402,403,166,167,404,405,168,169,170,171,172,173,406,174,175,176,177,178,179,407,408,409,410,180,411,412,413,293,181,182,183,184,185,414,186,187,188,189,190,191,415,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,416,417,418,419,420,421,32,422,423,424,425,426,53,427,428,429,430,212,213,214,215,216,217,218,219,431,220,432,433,434,435,436,437,438,1,221,439,440,2,33,441,34,222,35,36,37,223,224,225,226,227,228,229,230,231,232,233,234,235,236,442,443,444,445,446,447,448,449,450,38,237,39,40,238,239,41,42,43,451,240,452,453,454,455,44,45,46,47,456,241,242,243,457,458,244,245,246,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,48,247,248,249,50,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,483,484,275,485,276,51,52,277,278,279,280,281,282,283,486,487,488,284,285,489,286,490,491,492,287,288,493,494,495],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[64],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[401,402,403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[75,6,7,78,511,507,512,513,514,515,410,180,510,516,31,222,36,37,237,47,276,51,52],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[113,18,20,28,399],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[506,517],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[54,55,294,56,296,297,58,301,59,59,60,60,304,61,62,63,305,64,65,66,67,68,69,327,70,328,330,75,6,7,8,77,78,10,79,80,3,14,15,81,332,82,83,336,337,84,85,86,87,338,88,89,16,90,91,92,93,94,95,96,97,98,99,100,101,102,17,103,104,105,106,107,108,109,110,111,112,113,114,115,18,117,119,120,20,121,122,123,124,125,126,127,128,129,130,131,132,133,390,391,392,134,135,136,22,137,138,139,140,141,142,23,143,144,145,24,25,146,147,26,148,149,151,27,152,153,154,155,157,28,159,29,160,162,163,164,401,402,403,166,167,404,405,168,173,406,174,175,176,177,178,179,407,408,409,180,412,413,293,181,182,183,184,185,414,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,53,427,428,429,430,221,440,222,36,37,442,38,237,238,239,43,452,47,244,245,246,475,481,48,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,51,52,282,283,284,285,286,287,288,494],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[61,63,133,160,162],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[332,333,83,334,335,336,337,338,17,341],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[518,519,520],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[65,66,306,521],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[61,63,305,64,162,461],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[327,481],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":90,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":469,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":11,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":303,"org.easymock.tests2.DelegateToTest.testReturnException":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":187,"org.easymock.tests.MockingTest.testPartialClassMocking":284,"org.easymock.tests.MockClassControlTest.testToString":214,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":383,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":192,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":496,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":166,"org.easymock.tests2.UsageTest.wrongArguments":9,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":171,"org.easymock.samples.ExampleTest.answerVsDelegate":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":448,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":491,"org.easymock.tests2.UsageConstraintsTest.testNull":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":26,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":219,"org.easymock.tests2.CaptureTest.testPrimitive":82,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":211,"org.easymock.tests.UsageTest.moreThanOneArgument":237,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":183,"org.easymock.tests.UsageTest.argumentsOrdered":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":53,"org.easymock.tests.UsageVarargTest.varargIntAccepted":418,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":270,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":291,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":381,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":274,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests.ReplayStateInvalidUsageTest.times":233,"org.easymock.tests2.DependencyTest.testClassMocking":307,"org.easymock.tests2.AnswerTest.answer":133,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":74,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":445,"org.easymock.tests2.CaptureTest.testAnd":81,"org.easymock.tests2.UsageTest.strictResetToDefault":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":248,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":430,"org.easymock.tests2.DelegateToTest.testDelegate":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":207,"org.easymock.tests.LimitationsTest.mockFinalMethod":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":281,"org.easymock.tests2.DependencyTest.testClassMockingSupport":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":410,"org.easymock.tests2.CaptureTest.testCapture1_2446744":83,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":72,"org.easymock.tests.UsageThrowableTest.throwError":173,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":227,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":447,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":50,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":362,"org.easymock.samples.PartialClassMockTest.testGetArea":58,"org.easymock.tests.MockingTest.testInterfaceMocking":489,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":271,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":413,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":458,"org.easymock.tests2.UsageTest.niceToStrict":10,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests2.ThreadingTest.testChangeDefault":517,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":117,"org.easymock.tests2.MockBuilderTest.testCreateMock":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":316,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":201,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":24,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":444,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":409,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":451,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":169,"org.easymock.tests.UsageOverloadedMethodTest.overloading":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":360,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":163,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":101,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":261,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":100,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":84,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":419,"org.easymock.tests2.EasyMockSupportClassTest.testAll":112,"org.easymock.tests.MockClassControlTest.testEquals":218,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":439,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":279,"org.easymock.tests2.CaptureTest.testCaptureAll":332,"org.easymock.tests.MockNameTest.defaultName":415,"org.easymock.tests2.UsageConstraintsTest.testMatches":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":184,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":225,"org.easymock.samples.ExampleTest.voteForRemovals":296,"org.easymock.tests.UsageVarargTest.allKinds":426,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":280,"org.easymock.samples.BasicClassMockTest.testPrintContent":299,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":178,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":191,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":378,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":437,"org.easymock.tests2.UsageConstraintsTest.greaterThan":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":29,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":438,"org.easymock.samples.ExampleTest.voteForRemoval":294,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":398,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":138,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":156,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":414,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":186,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":304,"org.easymock.tests2.CaptureTest.testCaptureFirst":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":15,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":257,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":140,"org.easymock.tests2.UsageTest.moreThanOneArgument":78,"org.easymock.tests2.CaptureTest.testCapture2_2446744":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":477,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":20,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":425,"org.easymock.tests.GenericTest.testBridgedEquals":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":45,"org.easymock.tests.UsageExpectAndReturnTest.longType":253,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":210,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":442,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":341,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":181,"org.easymock.tests.UsageCallCountTest.tooManyCalls":46,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":258,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":177,"org.easymock.tests.MockingTest.testNiceClassMocking":492,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":127,"org.easymock.tests.MockingTest.testClassMocking":487,"org.easymock.tests2.UsageConstraintsTest.testContains":99,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":240,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":124,"org.easymock.tests2.UsageConstraintsTest.testFind":91,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":246,"org.easymock.tests.MockTypeTest.fromEasyMockClass":446,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":330,"org.easymock.tests.UsageExpectAndReturnTest.object":260,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":497,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":421,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":243,"org.easymock.tests.UsageTest.exactCallCountByLastCall":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":493,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":427,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":393,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":416,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":162,"org.easymock.tests.MockClassControlTest.testHashCode":217,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":373,"org.easymock.tests2.EasyMockSupportTest.testVerify":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":408,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":160,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":71,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":363,"org.easymock.tests.UsageVarargTest.varargCharAccepted":420,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":431,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":482,"org.easymock.tests2.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":519,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":149,"org.easymock.tests.DefaultClassInstantiatorTest.object":220,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":407,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":241,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":31,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":372,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":216,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":198,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":401,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":115,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":215,"org.easymock.tests2.UsageTest.resumeIfFailure":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":443,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":189,"org.easymock.tests2.StubTest.stubWithReturnValue":70,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":368,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":259,"org.easymock.tests2.SerializationTest.testAllMockedMethod":306,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":475,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":508,"org.easymock.samples.SupportTest.voteForRemovals":301,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":204,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":521,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":481,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":390,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":495,"org.easymock.tests.UsageExpectAndThrowTest.object":202,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":106,"org.easymock.tests2.DelegateToTest.testWrongClass":63,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":287,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":288,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.samples.ConstructorCalledMockTest.testTax":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":325,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":203,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":119,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":170,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":509,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":293,"org.easymock.tests2.CaptureTest.testCaptureNone":337,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":502,"org.easymock.tests.UsageUnorderedTest.message":47,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":49,"org.easymock.tests.UsageVerifyTest.twoReturns":52,"org.easymock.tests.UsageVarargTest.varargByteAccepted":424,"org.easymock.tests2.ThreadingTest.testThreadSafe":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":356,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":455,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":457,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":298,"org.easymock.tests2.CaptureTest.testCapture_2617107":333,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":405,"org.easymock.tests2.UsageConstraintsTest.any":97,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":232,"org.easymock.tests2.StubTest.stub":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":188,"org.easymock.tests.UsageExpectAndThrowTest.longType":195,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":435,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":231,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests2.SerializationTest.testClass":65,"org.easymock.tests.LimitationsTest.mockNativeMethod":275,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":440,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":269,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":311,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":503,"org.easymock.tests2.NameTest.nameForMocksControl":387,"org.easymock.tests2.MockedExceptionTest.testMockedException":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":346,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":239,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":196,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":286,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":329,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":151,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":120,"org.easymock.tests.MockingTest.testNicePartialClassMocking":285,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":309,"org.easymock.tests2.CaptureTest.testCaptureLast":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":132,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":107,"org.easymock.tests.MockingTest.testTwoMocks":488,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":200,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":110,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":506,"org.easymock.samples.ExampleTest.removeNonExistingDocument":57,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":315,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":374,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":505,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":433,"org.easymock.tests2.ConstraintsToStringTest.andToString":514,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":139,"org.easymock.tests2.MockBuilderTest.testCreateMockString":21,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":212,"org.easymock.tests.UsageExpectAndThrowTest.floatType":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":392,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":394,"org.easymock.tests.UsageVerifyTest.twoThrows":51,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":114,"org.easymock.samples.ExampleTest.voteAgainstRemoval":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":412,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":159,"org.easymock.tests.LimitationsTest.privateConstructor":484,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":179,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":122,"org.easymock.tests2.UsageTest.defaultResetToNice":3,"org.easymock.samples.ExampleTest.voteAgainstRemovals":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":265,"org.easymock.tests.UsageVarargTest.differentLength":32,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":310,"org.easymock.tests2.CallbackTest.callback":22,"org.easymock.tests2.UsageConstraintsTest.equals":339,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":396,"org.easymock.tests.UsageTest.openCallCountByLastCall":238,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":404,"org.easymock.tests.UsageCallCountTest.tooFewCalls":453,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":172,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":504,"org.easymock.tests.UsageThrowableTest.throwCheckedException":176,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":510,"org.easymock.tests.MockingTest.testStrictClassMocking":486,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":283,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":314,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":130,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":135,"org.easymock.tests.ObjectMethodsTest.testHashCode":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":290,"org.easymock.tests2.NameTest.nameForNiceMock":386,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":141,"org.easymock.tests2.DependencyTest.testInterfaceMocking":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":498,"org.easymock.samples.ExampleTest.addDocument":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.AnswerTest.stubAnswer":134,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":222,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":369,"org.easymock.tests.UsageVarargTest.varargLongAccepted":423,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.floatType":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":136,"org.easymock.tests2.ConstraintsToStringTest.orToString":511,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":60,"org.easymock.tests.UsageThrowableTest.noUpperLimit":406,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":400,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":89,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":320,"org.easymock.tests2.SerializationTest.test":66,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":334,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":432,"org.easymock.tests2.UsageConstraintsTest.testSame":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":251,"org.easymock.samples.SupportTest.addDocument":300,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":388,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":221,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":379,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":490,"org.easymock.tests2.NameTest.nameForMock":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":262,"org.easymock.tests2.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":371,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":397,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":206,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":249,"org.easymock.tests2.MockedExceptionTest.testRealException":125,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":326,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":167,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":236,"org.easymock.tests2.NameTest.nameForStrictMock":385,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":520,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":154,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":324,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":434,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":105,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":18,"org.easymock.tests2.UsageStrictMockTest.range":6,"org.easymock.tests2.UsageConstraintsTest.lessThan":111,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":376,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":23,"org.easymock.tests2.CaptureTest.testCaptureRightOne":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":501,"org.easymock.tests2.UsageConstraintsTest.testOr":94,"org.easymock.tests.UsageRangeTest.combination":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":40,"org.easymock.tests2.MockBuilderTest.testWithConstructor":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":263,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":436,"org.easymock.tests.UsageVarargTest.varargShortAccepted":422,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":44,"org.easymock.tests2.UsageConstraintsTest.cmpTo":98,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":462,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests2.CaptureTest.testCaptureFromStub":86,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":226,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":365,"org.easymock.tests.UsageTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":454,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":264,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.samples.ExampleTest.addAndChangeDocument":297,"org.easymock.tests2.ConstraintsToStringTest.notToString":512,"org.easymock.tests.UsageStrictMockTest.testVerify":224,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":302,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":441,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":278,"org.easymock.tests2.CompareToTest.testGreateThan":292,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":272,"org.easymock.tests.LimitationsTest.abstractClass":483,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":256,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":273,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":25}}]
