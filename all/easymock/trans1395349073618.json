[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[478,479,39,89,480,481],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[477,482,483,484,485],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[34,35,36,38,40,43,44,46,47,90,92,93,195,288,289,295,296,301,303,304,486,487,488,489,481,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.LastControl.NO_MATCHERS_FOUND"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[223],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[35,37,42,103,106,107,128,133,134,135,136,137,138,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,241,243,244,245,246,247,248,267,286,293,473,474,475,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[397],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[161,165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[426,427,429,432,433,436,456,457,459,462,463,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[1,1,2,2,5,15,16,49,54,59,60,61,63,132,162,163,164,191,197,306,323,325,329,332,342,348,492,351,493,352,353,355,356,357,358,361,362,494,363,365,366,367,368,371,372,408,409,411,412,413,414,416,419,420,421,422,495,496,497,498,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[264],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[228,229,230,231,233,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,20,21,22,24,25,27,28,29,30,31,34,35,36,38,48,60,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,94,95,102,104,105,108,121,122,123,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,152,153,154,155,156,157,162,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,193,194,197,242,243,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,283,284,285,287,288,290,291,294,297,300,301,304,305,306,309,310,311,312,313,316,317,318,319,320,321,322,323,324,325,329,332,342,348,351,355,356,357,358,365,366,367,368,370,371,372,374,375,378,379,380,381,382,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,404,405,406,407,408,410,411,412,413,416,419,421,430,441,442,443,444,446,447,448,449,450,451,454,460,468,469,472,473,474,475,476],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[103,106,133,134,135,136,137,138,149,150,151,211,267,473,474,475,476],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[472],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[35,37,42,103,106,107,128,133,134,135,136,137,138,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,241,243,244,245,246,247,248,267,286,293,473,474,475,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:85","sourceCode":"return ((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","type":"CtReturnImpl"},"failures":[35,40,43,44,87,89,90,92,93,102,104,107,167,241,242,244,245,246,247,248,259,267,269,270,271,272,273,274,276,277,278,279,285,289,290,291,295,296,299,301,303,304,317,362,379,380,381,382,384,386,387,388,389,391,393,394,395,396,397,398,399,400,401,402,404,406,407,441,442,443,444,445,446,447,448,450,451,452,453,454],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":382,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.UsageTest.argumentsOrdered":296,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":214,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":291,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testReturnException":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":134,"org.easymock.tests.MockingTest.testPartialClassMocking":60,"org.easymock.tests.MockClassControlTest.testToString":198,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":308,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":169,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":332,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":284,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":104,"org.easymock.tests2.UsageTest.wrongArguments":289,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":466,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":123,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":54,"org.easymock.tests2.UsageConstraintsTest.testNull":385,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":65,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":411,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":203,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":277,"org.easymock.tests2.CaptureTest.testPrimitive":444,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":188,"org.easymock.tests.UsageTest.moreThanOneArgument":38,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":410,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":256,"org.easymock.tests.UsageTest.argumentsOrdered":44,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":249,"org.easymock.tests.UsageVarargTest.varargIntAccepted":22,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":139,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":435,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":143,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":488,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":460,"org.easymock.tests.ReplayStateInvalidUsageTest.times":117,"org.easymock.tests2.DependencyTest.testClassMocking":281,"org.easymock.tests2.AnswerTest.answer":313,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":322,"org.easymock.tests2.CaptureTest.testAnd":441,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":51,"org.easymock.tests2.UsageTest.strictResetToDefault":287,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":419,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":272,"org.easymock.tests2.DelegateToTest.testDelegate":472,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":184,"org.easymock.tests.LimitationsTest.mockFinalMethod":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":148,"org.easymock.tests2.DependencyTest.testClassMockingSupport":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":46,"org.easymock.tests2.CaptureTest.testCapture1_2446744":445,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":182,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":320,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":111,"org.easymock.tests.UsageThrowableTest.throwError":241,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":53,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":436,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":350,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":112,"org.easymock.tests.MockingTest.testInterfaceMocking":62,"org.easymock.tests2.CompareToTest.testLessOrEqual":485,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":140,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":170,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":240,"org.easymock.tests2.UsageTest.niceToStrict":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":204,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":355,"org.easymock.tests2.MockBuilderTest.testCreateMock":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":345,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":463,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":480,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":178,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":273,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":50,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":152,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":121,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":395,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":128,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":78,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":394,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":450,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":23,"org.easymock.tests.MockClassControlTest.testEquals":202,"org.easymock.tests2.EasyMockSupportClassTest.testAll":329,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":163,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":186,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":495,"org.easymock.tests2.CaptureTest.testCaptureAll":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":321,"org.easymock.tests.MockNameTest.defaultName":32,"org.easymock.tests2.UsageConstraintsTest.testMatches":396,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":257,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests.UsageVarargTest.allKinds":31,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":147,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":247,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":299,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":471,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":138,"org.easymock.tests2.UsageConstraintsTest.greaterThan":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":260,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":422,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":234,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":423,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":375,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":414,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":132,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":286,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":270,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":133,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":467,"org.easymock.tests2.CaptureTest.testCaptureFirst":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":271,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":74,"org.easymock.tests2.CaptureTest.testCapture2_2446744":453,"org.easymock.tests2.UsageTest.moreThanOneArgument":288,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":222,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":362,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":30,"org.easymock.tests.GenericTest.testBridgedEquals":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":159,"org.easymock.tests.UsageExpectAndReturnTest.longType":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":144,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":268,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":494,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":187,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":403,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":254,"org.easymock.tests.UsageCallCountTest.tooManyCalls":160,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":346,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":246,"org.easymock.tests.MockingTest.testNiceClassMocking":66,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":366,"org.easymock.tests.MockingTest.testClassMocking":58,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":493,"org.easymock.tests2.UsageConstraintsTest.testContains":393,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":153,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":475,"org.easymock.tests2.UsageConstraintsTest.testFind":384,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":168,"org.easymock.tests.MockTypeTest.fromEasyMockClass":52,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":87,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":265,"org.easymock.tests.UsageExpectAndReturnTest.object":77,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":416,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":276,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":25,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":238,"org.easymock.tests.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":209,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":99,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":250,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":307,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":20,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":83,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":127,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":426,"org.easymock.tests.MockClassControlTest.testHashCode":201,"org.easymock.tests2.EasyMockSupportTest.testVerify":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":339,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":251,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":125,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":18,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":319,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":364,"org.easymock.tests.UsageVarargTest.varargCharAccepted":24,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":227,"org.easymock.tests2.UsageTest.openCallCountByLastCall":292,"org.easymock.tests.DefaultClassInstantiatorTest.object":228,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":17,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":340,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":498,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":425,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":420,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":175,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":149,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":348,"org.easymock.tests2.UsageTest.resumeIfFailure":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":136,"org.easymock.tests2.StubTest.stubWithReturnValue":267,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":404,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":76,"org.easymock.tests2.SerializationTest.testAllMockedMethod":325,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":220,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":481,"org.easymock.samples.SupportTest.voteForRemovals":4,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":181,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":226,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":314,"org.easymock.tests.UsageExpectAndThrowTest.object":179,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":101,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":401,"org.easymock.tests2.DelegateToTest.testWrongClass":470,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":194,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":92,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":439,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":275,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":357,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":119,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":122,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":478,"org.easymock.tests2.CaptureTest.testCaptureNone":449,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":98,"org.easymock.tests.UsageUnorderedTest.message":195,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":29,"org.easymock.tests2.ThreadingTest.testThreadSafe":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":343,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":157,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":239,"org.easymock.tests2.CaptureTest.testCapture_2617107":443,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":491,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":224,"org.easymock.tests2.UsageConstraintsTest.any":391,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":116,"org.easymock.tests2.StubTest.stub":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":151,"org.easymock.tests.UsageExpectAndThrowTest.longType":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":225,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":232,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":115,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":302,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":430,"org.easymock.tests2.SerializationTest.testClass":323,"org.easymock.tests.LimitationsTest.mockNativeMethod":191,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":86,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":457,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":305,"org.easymock.tests2.NameTest.nameForMocksControl":312,"org.easymock.tests2.MockedExceptionTest.testMockedException":474,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":331,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":173,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":63,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":264,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":408,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":358,"org.easymock.tests.MockingTest.testNicePartialClassMocking":61,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":413,"org.easymock.tests2.CompareToTest.testCompareEqual":483,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":455,"org.easymock.tests2.CaptureTest.testCaptureLast":448,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":47,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":388,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":372,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":402,"org.easymock.tests.MockingTest.testTwoMocks":59,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":67,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":177,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":406,"org.easymock.samples.ExampleTest.removeNonExistingDocument":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":462,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":113,"org.easymock.tests.UsageStrictMockTest.differentMethods":93,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":427,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":230,"org.easymock.tests2.ConstraintsToStringTest.andToString":489,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":376,"org.easymock.tests2.MockBuilderTest.testCreateMockString":363,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":196,"org.easymock.tests.UsageExpectAndThrowTest.floatType":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":333,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":316,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":342,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":215,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":421,"org.easymock.tests.LimitationsTest.privateConstructor":190,"org.easymock.tests2.UsageConstraintsTest.testNotNull":405,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":473,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":248,"org.easymock.tests2.UsageTest.defaultResetToNice":294,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":456,"org.easymock.tests.UsageVarargTest.differentLength":26,"org.easymock.tests2.CallbackTest.callback":285,"org.easymock.tests2.UsageConstraintsTest.equals":383,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":417,"org.easymock.tests.UsageTest.openCallCountByLastCall":41,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":106,"org.easymock.tests.UsageCallCountTest.tooFewCalls":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":124,"org.easymock.tests.UsageThrowableTest.throwCheckedException":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":479,"org.easymock.tests.MockingTest.testStrictClassMocking":57,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":371,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":461,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":370,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":318,"org.easymock.tests2.CompareToTest.testGreateOrEqual":484,"org.easymock.tests.ObjectMethodsTest.testHashCode":237,"org.easymock.tests2.NameTest.nameForNiceMock":311,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":378,"org.easymock.tests2.DependencyTest.testInterfaceMocking":283,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":344,"org.easymock.tests2.DelegateToTest.testStubDelegate":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.AnswerTest.stubAnswer":317,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":90,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":359,"org.easymock.tests.UsageVarargTest.varargLongAccepted":28,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":213,"org.easymock.tests.UsageExpectAndReturnTest.floatType":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":306,"org.easymock.tests2.ConstraintsToStringTest.orToString":486,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":434,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":399,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests.UsageThrowableTest.noUpperLimit":242,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":380,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":437,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":446,"org.easymock.tests2.SerializationTest.test":324,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":229,"org.easymock.tests2.UsageConstraintsTest.testSame":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":68,"org.easymock.samples.SupportTest.addDocument":3,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":369,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":334,"org.easymock.tests.GenericTest.testPackageScope":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":208,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":433,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":64,"org.easymock.tests2.NameTest.nameForMock":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":79,"org.easymock.tests2.UsageStrictMockTest.differentMethods":304,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":418,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":183,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":235,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":262,"org.easymock.tests2.MockedExceptionTest.testRealException":476,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":217,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":301,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":105,"org.easymock.tests2.NameTest.nameForStrictMock":310,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":354,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":263,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":438,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":400,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":231,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":352,"org.easymock.tests2.UsageStrictMockTest.range":303,"org.easymock.tests2.UsageConstraintsTest.lessThan":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":429,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":212,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":269,"org.easymock.tests2.CaptureTest.testCaptureRightOne":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":338,"org.easymock.tests2.UsageConstraintsTest.testOr":387,"org.easymock.tests.UsageRangeTest.combination":259,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":409,"org.easymock.tests.UsageTest.wrongArguments":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":335,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":205,"org.easymock.tests.UsageVarargTest.varargShortAccepted":27,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":233,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":158,"org.easymock.tests2.UsageConstraintsTest.cmpTo":392,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":315,"org.easymock.tests2.CompareToTest.testLessThan":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":207,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":293,"org.easymock.tests2.CaptureTest.testCaptureFromStub":452,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":110,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":353,"org.easymock.tests.UsageTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":89,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":156,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":81,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":91,"org.easymock.tests2.UsageConstraintsTest.constraints":381,"org.easymock.samples.ExampleTest.addAndChangeDocument":14,"org.easymock.tests2.ConstraintsToStringTest.notToString":487,"org.easymock.tests.UsageStrictMockTest.testVerify":95,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":0,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":88,"org.easymock.tests2.CompareToTest.testGreateThan":482,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":145,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":447,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":496,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":141,"org.easymock.tests.LimitationsTest.abstractClass":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":142,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":274}}]
