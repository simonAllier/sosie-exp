[{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,3],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"shouldFillInStackTrace"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[85,86,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:83","failures":[13,14,16,88,89,17,18,19,90,91,38,92,93,39,40,41,94,95,46,47,48,49,50,55,56,57,96,97,60,61,63,98,99,70,100,101,102,71,103,104,105,106,107,78,79,80,81,108,8,9,109,110,111,112,113,114],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[115,116,117],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[118,119],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[120,121,122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[124,125,126,127],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[128,129,101,130,102,131,132,133,71],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[134,135,136],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[137,138,139,140,141,13,14,15,16,88,89,17,18,19,142,143,144,145,146,147,20,148,21,149,22,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,23,182,183,184,185,90,186,24,187,25,26,188,189,27,28,29,30,190,191,192,193,194,0,1,195,2,196,197,198,31,199,200,201,128,32,202,203,33,34,35,204,205,91,36,37,206,38,207,92,208,209,93,39,40,41,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,94,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,95,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,134,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,85,289,290,291,292,293,294,86,295,296,297,298,299,300,42,301,302,43,44,45,303,46,47,48,49,50,51,304,305,306,307,308,309,310,311,312,313,314,315,316,317,52,53,54,318,319,320,321,322,323,324,325,326,327,328,329,129,330,331,332,333,334,335,336,337,338,339,340,341,55,342,56,57,58,59,96,97,343,60,61,62,63,344,64,345,346,347,348,65,349,350,351,66,352,353,354,355,356,357,358,67,359,360,361,362,363,364,365,366,367,368,369,370,68,371,372,373,374,69,375,376,377,98,378,379,5,6,380,99,381,382,383,124,384,70,385,386,387,388,125,389,390,100,391,126,101,392,393,130,102,131,394,395,396,397,398,399,400,401,132,402,133,403,404,405,406,407,71,408,409,410,411,412,72,413,414,415,416,417,418,419,420,103,421,422,423,121,122,123,424,425,426,73,427,428,429,74,430,431,432,75,433,434,435,436,104,105,106,107,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,76,471,472,473,474,475,476,77,477,78,79,80,81,82,87,108,478,479,480,83,481,482,483,3,484,4,7,8,9,10,109,110,111,112,113,485,11,12,486,114],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:83","failures":[13,14,16,88,89,17,18,19,90,91,38,92,93,39,40,41,94,95,46,47,48,49,50,55,56,57,96,97,60,61,63,98,99,70,100,101,102,71,103,104,105,106,107,78,79,80,81,108,8,9,109,110,111,112,113,114],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[13,14,88,89,19,143,190,0,1,2,31,199,200,201,34,204,205,91,207,92,93,39,41,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,94,232,233,234,235,236,243,245,254,283,285,293,294,295,47,49,50,305,306,308,309,321,322,323,324,325,327,329,330,331,333,341,55,342,56,58,96,97,343,62,63,64,347,65,349,352,356,357,358,67,359,360,361,362,365,369,370,68,373,374,69,375,377,98,378,379,5,6,99,381,382,383,124,384,70,385,386,387,388,125,390,100,391,126,101,102,400,403,404,405,406,407,72,103,121,122,424,426,73,427,428,429,74,430,431,432,75,433,434,444,447,457,463,76,78,80,81,108,479,480,83,481,483,3,484,7,8,10,109,112,113,485,11,486,114],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[199,200,201,290,62],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[15,487,488,46,489,490],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[126,127],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[120,121,122,123],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[491],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[137,138,139,140,141,13,14,15,16,88,89,17,18,19,142,143,144,145,146,147,20,148,21,149,22,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,23,182,183,184,185,90,186,24,187,25,26,188,189,27,28,29,30,190,191,192,193,194,0,1,195,2,196,197,198,31,199,200,201,128,32,202,203,33,34,35,204,205,91,36,37,206,38,207,92,208,209,93,39,40,41,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,94,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,95,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,492,268,269,270,271,134,272,493,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,85,289,290,291,292,293,294,86,295,296,297,298,299,300,42,301,302,43,44,45,303,46,47,48,49,50,51,304,305,306,307,308,309,310,311,312,313,314,315,494,316,317,52,53,54,318,319,320,321,322,323,324,325,326,327,328,329,129,330,331,332,333,334,335,336,337,338,339,340,341,55,342,56,57,58,59,96,97,343,60,61,62,63,344,495,64,345,496,346,347,348,65,497,349,350,351,66,352,498,353,354,355,356,357,358,67,359,360,361,362,363,364,365,366,367,368,369,370,68,371,372,373,374,69,375,376,377,98,378,379,5,6,380,99,381,382,383,124,384,70,385,386,387,388,125,389,390,100,391,126,101,392,393,130,102,131,394,395,396,397,398,399,400,401,132,402,133,403,404,405,406,407,71,408,409,410,411,412,72,413,414,415,416,417,418,419,420,103,421,422,423,121,122,123,424,425,499,426,73,427,428,429,74,430,431,432,75,433,434,435,436,104,105,106,107,437,500,501,502,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,76,471,472,473,474,475,476,77,477,78,79,80,81,82,87,108,478,479,480,83,481,482,483,3,484,4,7,8,9,10,109,110,111,112,113,485,11,12,486,114],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[121,122,123],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[15,16,17,18,503,38,40,41,46,49,57,60,61,80],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[64,352,369,372,447],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[347,369,370,504,505,506],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[507,38,40,41,49,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[190,99],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[120,121,122,123],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"actualTypeArgument","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":375,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests2.UsageTest.argumentsOrdered":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":433,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":284,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":59,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":328,"org.easymock.tests2.DelegateToTest.testReturnException":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":248,"org.easymock.tests.MockingTest.testPartialClassMocking":0,"org.easymock.tests.MockClassControlTest.testToString":52,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":436,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":451,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":447,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":156,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":357,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":6,"org.easymock.tests2.UsageTest.wrongArguments":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":207,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":476,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":298,"org.easymock.samples.ExampleTest.answerVsDelegate":129,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":21,"org.easymock.tests2.UsageConstraintsTest.testNull":98,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":197,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":360,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":75,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":320,"org.easymock.tests2.CaptureTest.testPrimitive":10,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":175,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":139,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":311,"org.easymock.tests.UsageVarargTest.varargIntAccepted":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":321,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":344,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":501,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":417,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":325,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":76,"org.easymock.tests.ReplayStateInvalidUsageTest.times":264,"org.easymock.tests2.DependencyTest.testClassMocking":354,"org.easymock.tests2.AnswerTest.answer":101,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":397,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":147,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests2.UsageTest.strictResetToDefault":342,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":200,"org.easymock.tests2.DelegateToTest.testDelegate":423,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":315,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":171,"org.easymock.tests.LimitationsTest.mockFinalMethod":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":241,"org.easymock.tests2.DependencyTest.testClassMockingSupport":355,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":36,"org.easymock.tests2.CaptureTest.testCapture1_2446744":109,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":395,"org.easymock.tests.UsageThrowableTest.throwError":230,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":258,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":148,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":494,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":465,"org.easymock.samples.PartialClassMockTest.testGetArea":327,"org.easymock.tests.MockingTest.testInterfaceMocking":195,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":322,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":452,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":157,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":44,"org.easymock.tests2.UsageTest.niceToStrict":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":274,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":347,"org.easymock.tests2.MockBuilderTest.testCreateMock":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":460,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":473,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":489,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":165,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":74,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":146,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":296,"org.easymock.tests.UsageOverloadedMethodTest.overloading":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":456,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":124,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":203,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":221,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":135,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":383,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":485,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":179,"org.easymock.tests2.EasyMockSupportClassTest.testAll":444,"org.easymock.tests.MockClassControlTest.testEquals":319,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":173,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":504,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":396,"org.easymock.tests2.CaptureTest.testCaptureAll":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":239,"org.easymock.tests.MockNameTest.defaultName":30,"org.easymock.tests2.UsageConstraintsTest.testMatches":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":140,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":256,"org.easymock.samples.ExampleTest.voteForRemovals":333,"org.easymock.tests.UsageVarargTest.allKinds":90,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":240,"org.easymock.samples.BasicClassMockTest.testPrintContent":339,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":235,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":77,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":251,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":493,"org.easymock.tests2.UsageConstraintsTest.greaterThan":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":445,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":199,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":68,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":273,"org.easymock.samples.ExampleTest.voteForRemoval":330,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":404,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":371,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":149,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":502,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":363,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":186,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":427,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":247,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":419,"org.easymock.tests2.CaptureTest.testCaptureFirst":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":428,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":63,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":217,"org.easymock.tests2.CaptureTest.testCapture2_2446744":486,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":406,"org.easymock.tests2.UsageTest.moreThanOneArgument":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":291,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":352,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":185,"org.easymock.tests.GenericTest.testBridgedEquals":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":28,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":84,"org.easymock.tests.UsageExpectAndReturnTest.longType":213,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":426,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":237,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":174,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":389,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":137,"org.easymock.tests.UsageCallCountTest.tooManyCalls":29,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":475,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":161,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":234,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":480,"org.easymock.tests.MockingTest.testNiceClassMocking":198,"org.easymock.tests.MockingTest.testClassMocking":193,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":187,"org.easymock.tests2.UsageConstraintsTest.testContains":382,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":400,"org.easymock.tests2.UsageConstraintsTest.testFind":377,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":91,"org.easymock.tests.MockTypeTest.fromEasyMockClass":20,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":133,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":45,"org.easymock.tests.UsageExpectAndReturnTest.object":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":365,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":432,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":181,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":302,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":491,"org.easymock.tests.UsageTest.exactCallCountByLastCall":19,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":279,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":142,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":425,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":176,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":226,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":202,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":409,"org.easymock.tests.MockClassControlTest.testHashCode":318,"org.easymock.tests2.EasyMockSupportTest.testVerify":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":454,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":313,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":154,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":394,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":478,"org.easymock.tests.UsageVarargTest.varargCharAccepted":180,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":492,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":295,"org.easymock.tests2.UsageTest.openCallCountByLastCall":96,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":434,"org.easymock.tests.DefaultClassInstantiatorTest.object":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":153,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":42,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":455,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":163,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":506,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":408,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":54,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":162,"org.easymock.tests.CapturesMatcherTest.test":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":463,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":53,"org.easymock.tests2.UsageTest.resumeIfFailure":62,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":145,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":250,"org.easymock.tests2.StubTest.stubWithReturnValue":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":497,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":219,"org.easymock.tests2.SerializationTest.testAllMockedMethod":123,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":289,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":490,"org.easymock.samples.SupportTest.voteForRemovals":341,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":168,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":120,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":86,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":392,"org.easymock.tests.UsageExpectAndThrowTest.object":166,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":144,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":388,"org.easymock.tests2.DelegateToTest.testWrongClass":421,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":306,"org.easymock.tests.UsageStrictMockTest.range":49,"org.easymock.samples.ConstructorCalledMockTest.testTax":336,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":439,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":431,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":167,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":441,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":297,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":487,"org.easymock.tests2.CaptureTest.testCaptureNone":113,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":309,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":116,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":41,"org.easymock.tests.UsageVarargTest.varargByteAccepted":184,"org.easymock.tests2.ThreadingTest.testThreadSafe":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":458,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":189,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":43,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":338,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":293,"org.easymock.tests2.UsageConstraintsTest.any":99,"org.easymock.tests2.StubTest.stub":87,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":152,"org.easymock.tests.UsageExpectAndThrowTest.longType":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":294,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":134,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":262,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":79,"org.easymock.tests2.SerializationTest.testClass":121,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":72,"org.easymock.tests.LimitationsTest.mockNativeMethod":254,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":229,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":245,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":505,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":468,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":82,"org.easymock.tests2.NameTest.nameForMocksControl":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":470,"org.easymock.tests2.MockedExceptionTest.testMockedException":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":446,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":89,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":402,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":160,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":2,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":358,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":349,"org.easymock.tests.MockingTest.testNicePartialClassMocking":1,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":466,"org.easymock.tests2.CaptureTest.testCaptureLast":112,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":484,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":125,"org.easymock.tests.MockingTest.testTwoMocks":194,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":164,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":391,"org.easymock.samples.ExampleTest.removeNonExistingDocument":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":472,"org.easymock.tests.UsageStrictMockTest.differentMethods":50,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":410,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":117,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":270,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":405,"org.easymock.tests2.MockBuilderTest.testCreateMockString":353,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":448,"org.easymock.tests.UsageExpectAndThrowTest.floatType":158,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":499,"org.easymock.tests.UsageVerifyTest.twoThrows":40,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":457,"org.easymock.samples.ExampleTest.voteAgainstRemoval":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":285,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":307,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":370,"org.easymock.tests.LimitationsTest.privateConstructor":253,"org.easymock.tests2.UsageConstraintsTest.testNotNull":100,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":398,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":236,"org.easymock.tests2.UsageTest.defaultResetToNice":343,"org.easymock.samples.ExampleTest.voteAgainstRemovals":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":286,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":467,"org.easymock.tests.UsageVarargTest.differentLength":23,"org.easymock.tests2.CallbackTest.callback":71,"org.easymock.tests2.UsageConstraintsTest.equals":376,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":366,"org.easymock.tests.UsageTest.openCallCountByLastCall":88,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":373,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":208,"org.easymock.tests.UsageCallCountTest.tooFewCalls":26,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":481,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":299,"org.easymock.tests.UsageThrowableTest.throwCheckedException":233,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":488,"org.easymock.tests.MockingTest.testStrictClassMocking":192,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":471,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":83,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":483,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":131,"org.easymock.tests.ObjectMethodsTest.testHashCode":301,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":407,"org.easymock.tests2.NameTest.nameForNiceMock":106,"org.easymock.tests2.DependencyTest.testInterfaceMocking":356,"org.easymock.samples.ExampleTest.addDocument":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":464,"org.easymock.tests2.DelegateToTest.testStubDelegate":103,"org.easymock.tests2.AnswerTest.stubAnswer":102,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":47,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":350,"org.easymock.tests.UsageVarargTest.varargLongAccepted":183,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":283,"org.easymock.tests.UsageExpectAndReturnTest.floatType":212,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":424,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":337,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":416,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":386,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":33,"org.easymock.tests.UsageThrowableTest.noUpperLimit":231,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":374,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":437,"org.easymock.tests2.SerializationTest.test":122,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":110,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":136,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":211,"org.easymock.tests2.UsageConstraintsTest.testSame":378,"org.easymock.samples.SupportTest.addDocument":340,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":482,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":449,"org.easymock.tests.GenericTest.testPackageScope":243,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":415,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":196,"org.easymock.tests2.NameTest.nameForMock":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":222,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":498,"org.easymock.tests2.UsageStrictMockTest.differentMethods":81,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":367,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":214,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":170,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":201,"org.easymock.tests2.MockedExceptionTest.testRealException":401,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":22,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":288,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":92,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":267,"org.easymock.tests2.NameTest.nameForStrictMock":105,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":346,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":132,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":361,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":438,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":387,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":271,"org.easymock.tests.ErrorMessageTest.testGetters":507,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":64,"org.easymock.tests2.UsageStrictMockTest.range":80,"org.easymock.tests2.UsageConstraintsTest.lessThan":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":453,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":115,"org.easymock.tests2.UsageConstraintsTest.testOr":379,"org.easymock.tests.UsageRangeTest.combination":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":67,"org.easymock.tests.UsageTest.wrongArguments":16,"org.easymock.tests2.MockBuilderTest.testWithConstructor":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":450,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":275,"org.easymock.tests.UsageVarargTest.varargShortAccepted":182,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":272,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":27,"org.easymock.tests2.UsageConstraintsTest.cmpTo":381,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":393,"org.easymock.tests2.CompareToTest.testLessThan":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":277,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests2.CaptureTest.testCaptureFromStub":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":257,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":345,"org.easymock.tests.UsageTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":224,"org.easymock.tests2.CaptureTest.testCapture":119,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.UsageConstraintsTest.constraints":69,"org.easymock.samples.ExampleTest.addAndChangeDocument":335,"org.easymock.tests.UsageStrictMockTest.testVerify":304,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":326,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":238,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":323,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":216,"org.easymock.tests.LimitationsTest.abstractClass":252,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":430,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":177}}]
