[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,168,169,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[2,25,35,40,54,55,330,89,101,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,148,149,150,151,152,153,182,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[39,331,171,268,270,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[187,215,298],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[31,32,33,34,35,36,107,245,246,247,248],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[332,333,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[335,197,220,221],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[284,285,286,287,288,289,290,291,336,292,301,302,306,307,314,315,316,317,324,325],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[284,285,286,287,288,289,290,291,336,292,301,302,306,307,314,315,316,317,324,325],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[195,198,217,337,225,245],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[338,339,340,341,342,343,344,345,346,347,348,349,350,87,351,352,353,102,103,104,105,354,355,356,357,358,359,360,361,362,159,160,161,363,165,168,168,169,169,177,178,179,364,365,366,195,335,196,367,368,197,198,199,200,369,201,202,370,371,203,204,205,206,207,209,210,211,212,214,215,216,217,218,372,373,219,220,221,222,374,337,375,376,377,378,379,380,381,382,383,224,384,385,225,386,387,388,389,390,391,392,393,394,226,395,396,397,398,399,227,400,401,239,402,245,246,247,311,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[2,3,6,7,10,22,23,26,27,28,29,30,42,47,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,87,88,90,92,93,99,100,101,103,104,105,106,140,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,161,163,164,167,170,172,173,175,179,182,183,184,186,188,189,190,193,194,196,197,199,200,202,204,205,206,207,208,209,210,211,212,213,214,215,216,218,220,221,222,223,224,225,226,227,228,237,239,240,241,242,243,244,247,249,250,251,252,253,254,255,256,257,258,259,260,269,274,277,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,314,315,317,318,321,322,323,324,326,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[219],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[3,56,62,68,72,74,403,84,91,101,117,123,129,133,135,176,184,240,241,262,272,282,296,299,308,315,321,322,327,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[25,85,273],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[404],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[405,406,314,315,316,317,318,319,320,321,323,404,324,325,326,327],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[405],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[2,3,6,7,10,22,23,26,27,28,29,30,42,47,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,86,87,88,90,92,93,94,95,96,97,98,100,101,103,104,105,106,140,142,143,146,148,149,150,151,152,153,154,155,156,157,158,163,167,168,168,169,169,170,172,173,175,179,182,183,184,186,188,189,190,193,194,196,197,199,200,202,204,205,206,207,208,209,210,211,212,213,214,215,216,218,220,221,222,223,224,225,226,227,228,233,237,239,240,241,242,243,244,247,249,250,251,252,253,254,255,256,257,258,259,260,269,274,277,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,314,315,317,318,321,322,323,324,325,326,327],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[407],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":285,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.UsageTest.argumentsOrdered":192,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":181,"org.easymock.tests2.DelegateToTest.testReturnException":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":32,"org.easymock.tests.MockingTest.testPartialClassMocking":103,"org.easymock.tests.MockClassControlTest.testToString":342,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":117,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":225,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":310,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":291,"org.easymock.tests2.UsageTest.wrongArguments":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":110,"org.easymock.samples.ExampleTest.answerVsDelegate":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":339,"org.easymock.tests2.UsageConstraintsTest.testNull":287,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":214,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":258,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":347,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":375,"org.easymock.tests2.CaptureTest.testPrimitive":317,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":136,"org.easymock.tests.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":96,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":112,"org.easymock.tests.UsageTest.argumentsOrdered":9,"org.easymock.tests.UsageVarargTest.varargIntAccepted":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":154,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":195,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":158,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests2.AnswerTest.answer":233,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":232,"org.easymock.tests2.CaptureTest.testAnd":314,"org.easymock.tests2.UsageTest.strictResetToDefault":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":95,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":253,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":116,"org.easymock.tests2.DelegateToTest.testDelegate":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":132,"org.easymock.tests.LimitationsTest.mockFinalMethod":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":0,"org.easymock.tests2.CaptureTest.testCapture1_2446744":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":230,"org.easymock.tests.UsageThrowableTest.throwError":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":401,"org.easymock.samples.PartialClassMockTest.testGetArea":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":155,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":390,"org.easymock.tests2.UsageTest.niceToStrict":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":118,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":348,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":197,"org.easymock.tests2.MockBuilderTest.testCreateMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":397,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":126,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":254,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":108,"org.easymock.tests.UsageOverloadedMethodTest.overloading":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":40,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":296,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":67,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":295,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":323,"org.easymock.tests2.EasyMockSupportClassTest.testAll":224,"org.easymock.tests.MockClassControlTest.testEquals":346,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":134,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":376,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":50,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":231,"org.easymock.tests2.CaptureTest.testCaptureAll":315,"org.easymock.tests2.UsageConstraintsTest.testMatches":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":97,"org.easymock.samples.ExampleTest.voteForRemovals":175,"org.easymock.tests.UsageVarargTest.allKinds":21,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":88,"org.easymock.samples.BasicClassMockTest.testPrintContent":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":51,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":152,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":36,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":271,"org.easymock.tests2.UsageConstraintsTest.greaterThan":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":28,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":222,"org.easymock.samples.ExampleTest.voteForRemoval":172,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":361,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":241,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":374,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":217,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":182,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":165,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":251,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":31,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":267,"org.easymock.tests2.CaptureTest.testCaptureFirst":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":252,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":184,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":243,"org.easymock.tests2.CaptureTest.testCapture2_2446744":326,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":202,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":20,"org.easymock.tests.GenericTest.testBridgedEquals":363,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":82,"org.easymock.tests.UsageExpectAndReturnTest.longType":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":48,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":135,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":371,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":86,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":133,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":94,"org.easymock.tests.UsageCallCountTest.tooManyCalls":83,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":205,"org.easymock.tests.MockingTest.testNiceClassMocking":354,"org.easymock.tests.MockingTest.testClassMocking":353,"org.easymock.tests2.UsageConstraintsTest.testContains":294,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":335,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":247,"org.easymock.tests2.UsageConstraintsTest.testFind":286,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":101,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":137,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":329,"org.easymock.tests.UsageExpectAndReturnTest.object":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":257,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":15,"org.easymock.tests.UsageTest.exactCallCountByLastCall":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":106,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":402,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":39,"org.easymock.tests.ResultTest.createThrowResultToString":334,"org.easymock.tests.MockClassControlTest.testHashCode":345,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":392,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":114,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":37,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":229,"org.easymock.tests.UsageVarargTest.varargCharAccepted":14,"org.easymock.tests2.CaptureTest.testCaptureMultiple":406,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":276,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":260,"org.easymock.tests.DefaultClassInstantiatorTest.object":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":149,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":380,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":220,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":344,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":123,"org.easymock.tests.CapturesMatcherTest.test":405,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":227,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":343,"org.easymock.tests2.UsageTest.resumeIfFailure":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":34,"org.easymock.tests2.StubTest.stubWithReturnValue":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":305,"org.easymock.tests2.SerializationTest.testAllMockedMethod":313,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":84,"org.easymock.samples.SupportTest.voteForRemovals":167,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":129,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":85,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":234,"org.easymock.tests.UsageExpectAndThrowTest.object":127,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":302,"org.easymock.tests2.DelegateToTest.testWrongClass":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":93,"org.easymock.samples.ConstructorCalledMockTest.testTax":168,"org.easymock.tests.UsageStrictMockTest.range":142,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":128,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":199,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":164,"org.easymock.tests2.CaptureTest.testCaptureNone":322,"org.easymock.tests.UsageUnorderedTest.message":91,"org.easymock.tests.UsageVerifyTest.twoReturns":90,"org.easymock.tests.UsageVarargTest.varargByteAccepted":19,"org.easymock.tests2.ThreadingTest.testThreadSafe":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":395,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":80,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":177,"org.easymock.tests2.CaptureTest.testCapture_2617107":316,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":25,"org.easymock.tests2.UsageConstraintsTest.any":292,"org.easymock.tests2.StubTest.stub":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":46,"org.easymock.tests.UsageExpectAndThrowTest.longType":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":33,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":359,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":228,"org.easymock.tests2.SerializationTest.testClass":311,"org.easymock.tests.LimitationsTest.mockNativeMethod":87,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":75,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":379,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.tests2.NameTest.nameForMocksControl":266,"org.easymock.tests2.MockedExceptionTest.testMockedException":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":7,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":121,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":105,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":211,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":200,"org.easymock.tests.MockingTest.testNicePartialClassMocking":104,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":216,"org.easymock.tests2.CaptureTest.testCaptureLast":321,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":210,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":290,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":303,"org.easymock.tests.MockingTest.testTwoMocks":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":125,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":307,"org.easymock.tests.UsageStrictMockTest.differentMethods":143,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":357,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":242,"org.easymock.tests2.MockBuilderTest.testCreateMockString":203,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":119,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":236,"org.easymock.tests.ResultTest.createReturnResultToString":333,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":226,"org.easymock.tests.ResultTest.createDelegateResultToString":332,"org.easymock.samples.ExampleTest.voteAgainstRemoval":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":162,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":221,"org.easymock.tests.LimitationsTest.privateConstructor":350,"org.easymock.tests2.UsageConstraintsTest.testNotNull":306,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":153,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":245,"org.easymock.tests2.UsageTest.defaultResetToNice":190,"org.easymock.samples.ExampleTest.voteAgainstRemovals":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":71,"org.easymock.tests.UsageVarargTest.differentLength":16,"org.easymock.tests2.CallbackTest.callback":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":372,"org.easymock.tests.UsageTest.openCallCountByLastCall":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":24,"org.easymock.tests.UsageCallCountTest.tooFewCalls":78,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":111,"org.easymock.tests.UsageThrowableTest.throwCheckedException":150,"org.easymock.tests.MockingTest.testStrictClassMocking":352,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":107,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":209,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":208,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":238,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":244,"org.easymock.tests2.NameTest.nameForNiceMock":265,"org.easymock.tests2.DependencyTest.testInterfaceMocking":309,"org.easymock.samples.ExampleTest.addDocument":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.DelegateToTest.testStubDelegate":269,"org.easymock.tests2.AnswerTest.stubAnswer":237,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":140,"org.easymock.tests.UsageVarargTest.varargLongAccepted":18,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests.UsageExpectAndReturnTest.floatType":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":239,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":169,"org.easymock.tests.UsageThrowableTest.noUpperLimit":147,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":41,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":300,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":283,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":364,"org.easymock.tests2.SerializationTest.test":312,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":319,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":57,"org.easymock.tests2.UsageConstraintsTest.testSame":288,"org.easymock.samples.SupportTest.addDocument":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":159,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":115,"org.easymock.tests2.NameTest.nameForMock":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":68,"org.easymock.tests2.UsageStrictMockTest.differentMethods":280,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":131,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":30,"org.easymock.tests2.MockedExceptionTest.testRealException":248,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":277,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":23,"org.easymock.tests2.NameTest.nameForStrictMock":264,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":368,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":215,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":365,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":301,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":358,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":196,"org.easymock.tests2.UsageStrictMockTest.range":279,"org.easymock.tests2.UsageConstraintsTest.lessThan":308,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":377,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":366,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":391,"org.easymock.tests2.CaptureTest.testCaptureRightOne":324,"org.easymock.tests2.UsageConstraintsTest.testOr":289,"org.easymock.tests.UsageRangeTest.combination":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":212,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":388,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":69,"org.easymock.tests.UsageVarargTest.varargShortAccepted":17,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":81,"org.easymock.tests2.UsageConstraintsTest.cmpTo":293,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":330,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":325,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":367,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":139,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":70,"org.easymock.tests2.CaptureTest.testCapture":404,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.UsageConstraintsTest.constraints":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":176,"org.easymock.tests.UsageStrictMockTest.testVerify":145,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":180,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":49,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":156,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":378,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":62,"org.easymock.tests.LimitationsTest.abstractClass":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":157,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":42,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":255}}]
