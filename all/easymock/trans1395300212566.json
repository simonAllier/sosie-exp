[{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[0],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[35,7,36,8,9,37,10,38,39,40,11,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,13,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,14,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,3,167,168,169,170,171,172,15,16,17,18,19,20,173,174,175,176,177,178,179,180,181,4,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,12,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,21,22,23,24,347,348,349,350,351,352,26,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,31,409,410,32,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,25,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,33,34,496],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[35,7,36,8,9,37,10,39,40,11,41,44,45,46,49,50,52,57,62,74,75,79,82,83,85,90,95,100,111,142,143,144,145,146,147,148,149,150,151,14,152,155,156,167,170,171,172,173,175,176,178,181,4,182,183,184,185,186,191,192,194,225,226,227,229,230,231,232,264,265,266,268,269,271,272,273,274,275,280,285,286,287,288,289,290,293,298,302,303,304,305,307,308,309,310,311,312,315,319,320,324,327,337,343,346,23,347,350,26,353,354,355,356,357,358,359,360,361,363,364,365,366,367,373,380,381,382,383,385,386,387,395,397,399,406,408,409,422,423,425,426,427,431,432,434,436,437,438,439,440,441,448,449,456,466,469,472,473,475,476,478,481,484,485,486,487,488,489,33],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:218","failures":[35,42,43,73,76,294,298,301,327,337,26,406,410,32,411,414,33,34],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[7,36,8,9,37,10,38,39,40,11,41,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,13,105,106,107,108,109,110,122,123,124,125,126,127,128,129,130,131,132,133,142,143,144,145,146,147,148,149,150,151,14,152,153,154,155,156,160,161,163,164,165,166,3,167,168,169,170,171,172,15,16,17,18,19,20,173,174,175,176,177,178,179,180,181,4,182,183,184,185,186,187,193,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,12,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,282,283,284,287,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,346,21,22,23,24,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,385,389,390,391,392,393,394,395,396,397,398,399,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,448,449,450,25,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[79,100,498,121,499,500,155,156,165,3,167,170,171,172,180,4,183,184,185,228,229,230,270,286,297,299,346,356,360,361,364,402,411,412,414,422,425,426,427,431,432,433,434,435,438,439,440,465,481],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[42,43,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,26,382,387,388,501,502,401,404,31,32,503,413,33,34],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[302,304,305,306,307,308,309,311,504,312,313,315],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[348,351,352],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[73,74,75,76,77],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[27,28,29,505,506,31,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:201","failures":[35,42,42,43,43,73,76,157,162,291,294,297,298,301,327,337,343,21,26,400,402,403,405,406,408,409,410,32,412,414,33,34],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[470],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[36,175,395,397,399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","value":"delegateTo","this":"lastResult"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[507,26,353,354],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[27,28,29,505,506,31,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[35,7,36,8,9,37,10,38,39,40,11,41,42,42,43,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,13,105,106,107,108,109,110,111,113,114,115,116,117,118,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,14,152,153,154,155,156,160,162,164,165,166,3,167,168,169,170,171,172,15,16,17,18,19,20,173,174,175,176,177,178,179,180,181,4,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,12,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,324,326,327,329,330,333,334,335,336,337,339,342,343,344,345,346,21,22,23,24,347,348,349,350,351,352,26,353,354,355,356,357,359,360,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,382,383,385,386,394,395,396,397,398,399,402,405,406,407,408,32,411,415,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,448,449,450,25,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,33,34],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:169","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n    java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[508,509],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[481],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[35,42,42,43,43,73,76,157,162,291,294,297,298,301,327,337,343,21,26,400,402,403,405,406,408,409,410,32,412,414,33,34],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"position":"org.easymock.internal.RecordState:233","failures":[35,7,36,8,9,37,10,39,40,11,41,42,42,43,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,13,105,107,108,111,131,132,133,142,143,144,145,146,147,148,149,150,151,14,152,153,154,155,156,165,166,167,168,169,170,171,172,15,16,17,18,19,20,173,175,176,178,180,181,4,182,183,184,185,186,187,191,192,194,214,220,222,224,225,226,227,229,230,231,232,233,234,235,236,237,238,257,258,12,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,280,285,286,287,288,289,290,293,297,298,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,324,327,337,343,346,21,22,23,24,347,348,349,350,351,352,26,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,373,380,381,382,383,385,386,387,390,391,392,393,394,395,396,397,398,399,402,406,408,409,412,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,448,449,450,25,456,463,464,465,466,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,493,495,33],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[77],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[351,352],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":466,"org.easymock.tests2.UsageTest.argumentsOrdered":432,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":208,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":427,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":46,"org.easymock.tests2.DelegateToTest.testReturnException":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":16,"org.easymock.tests.MockingTest.testPartialClassMocking":191,"org.easymock.tests.MockClassControlTest.testToString":136,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":389,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":47,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":327,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":449,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":27,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":473,"org.easymock.tests2.UsageTest.wrongArguments":425,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":150,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":124,"org.easymock.samples.ExampleTest.answerVsDelegate":36,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":162,"org.easymock.tests2.UsageConstraintsTest.testNull":469,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":196,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":288,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":141,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":364,"org.easymock.tests2.CaptureTest.testPrimitive":305,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":153,"org.easymock.tests.UsageTest.moreThanOneArgument":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":66,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":236,"org.easymock.tests.UsageTest.argumentsOrdered":171,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":106,"org.easymock.tests.UsageVarargTest.varargIntAccepted":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":506,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":417,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":260,"org.easymock.tests.ReplayStateInvalidUsageTest.times":253,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":373,"org.easymock.tests2.DependencyTest.testClassMocking":446,"org.easymock.tests2.AnswerTest.answer":347,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":445,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":159,"org.easymock.tests2.CaptureTest.testAnd":302,"org.easymock.tests2.UsageTest.strictResetToDefault":423,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":404,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":235,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":359,"org.easymock.tests2.DelegateToTest.testDelegate":399,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":62,"org.easymock.tests.LimitationsTest.mockFinalMethod":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":130,"org.easymock.tests2.DependencyTest.testClassMockingSupport":447,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":282,"org.easymock.tests2.CaptureTest.testCapture1_2446744":306,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":443,"org.easymock.tests.UsageThrowableTest.throwError":142,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":247,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":161,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":462,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":238,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":345,"org.easymock.samples.PartialClassMockTest.testGetArea":35,"org.easymock.tests.MockingTest.testInterfaceMocking":193,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":68,"org.easymock.tests2.UsageTest.niceToStrict":426,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":48,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":198,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":406,"org.easymock.tests2.MockBuilderTest.testCreateMock":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":376,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":56,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":360,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":158,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":263,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":122,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":342,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":479,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":91,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":231,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":478,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":311,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":267,"org.easymock.tests.MockClassControlTest.testEquals":140,"org.easymock.tests2.EasyMockSupportClassTest.testAll":324,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":75,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":64,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":444,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":128,"org.easymock.tests2.CaptureTest.testCaptureAll":303,"org.easymock.tests.MockNameTest.defaultName":78,"org.easymock.tests2.UsageConstraintsTest.testMatches":480,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":237,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":245,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests.UsageVarargTest.allKinds":275,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":129,"org.easymock.samples.BasicClassMockTest.testPrintContent":45,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":148,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":458,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":20,"org.easymock.tests2.UsageConstraintsTest.greaterThan":482,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":325,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":101,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":299,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":120,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":300,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":317,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":497,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":163,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":291,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":422,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":111,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":357,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":15,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":394,"org.easymock.tests2.CaptureTest.testCaptureFirst":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":358,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":434,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":87,"org.easymock.tests2.UsageTest.moreThanOneArgument":424,"org.easymock.tests2.CaptureTest.testCapture2_2446744":314,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":319,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":216,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":274,"org.easymock.tests.GenericTest.testBridgedEquals":77,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":229,"org.easymock.tests.UsageExpectAndReturnTest.longType":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":126,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":355,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":65,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":487,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":63,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":234,"org.easymock.tests.UsageCallCountTest.tooManyCalls":230,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":147,"org.easymock.tests.MockingTest.testNiceClassMocking":197,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":381,"org.easymock.tests.MockingTest.testClassMocking":189,"org.easymock.tests2.UsageConstraintsTest.testContains":477,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":223,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":23,"org.easymock.tests2.UsageConstraintsTest.testFind":468,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":233,"org.easymock.tests.MockTypeTest.fromEasyMockClass":160,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":495,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":180,"org.easymock.tests.UsageExpectAndReturnTest.object":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":293,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":363,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":28,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":269,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":242,"org.easymock.tests.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":203,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":107,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":96,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":264,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":175,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":452,"org.easymock.tests.MockClassControlTest.testHashCode":139,"org.easymock.tests2.EasyMockSupportTest.testVerify":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":334,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":108,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":173,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":262,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":499,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":442,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":492,"org.easymock.tests.UsageVarargTest.varargCharAccepted":268,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":112,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":221,"org.easymock.tests2.UsageTest.openCallCountByLastCall":428,"org.easymock.tests.DefaultClassInstantiatorTest.object":113,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":261,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":240,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":335,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":451,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":138,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":131,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":343,"org.easymock.tests2.UsageTest.resumeIfFailure":433,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":157,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":18,"org.easymock.tests2.StubTest.stubWithReturnValue":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":488,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":89,"org.easymock.tests2.SerializationTest.testAllMockedMethod":354,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":214,"org.easymock.samples.SupportTest.voteForRemovals":11,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":59,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":507,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":220,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":348,"org.easymock.tests.UsageExpectAndThrowTest.object":57,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":72,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":485,"org.easymock.tests2.DelegateToTest.testWrongClass":397,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":276,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":277,"org.easymock.tests.UsageStrictMockTest.range":184,"org.easymock.samples.ConstructorCalledMockTest.testTax":42,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":420,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":362,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":380,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":408,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":170,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":123,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":69,"org.easymock.tests2.CaptureTest.testCaptureNone":310,"org.easymock.tests.UsageUnorderedTest.message":79,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":498,"org.easymock.tests.UsageVerifyTest.twoReturns":156,"org.easymock.tests.UsageVarargTest.varargByteAccepted":273,"org.easymock.tests2.ThreadingTest.testThreadSafe":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":338,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":227,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":44,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":243,"org.easymock.tests2.CaptureTest.testCapture_2617107":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":284,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":218,"org.easymock.tests2.UsageConstraintsTest.any":475,"org.easymock.tests2.StubTest.stub":450,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":17,"org.easymock.tests.UsageExpectAndThrowTest.longType":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":219,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":117,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":251,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":438,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":456,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests.LimitationsTest.mockNativeMethod":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":99,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":76,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":370,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":441,"org.easymock.tests2.NameTest.nameForMocksControl":393,"org.easymock.tests2.MockedExceptionTest.testMockedException":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":326,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":494,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":51,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":285,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":409,"org.easymock.tests.MockingTest.testNicePartialClassMocking":192,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":290,"org.easymock.tests2.CaptureTest.testCaptureLast":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":368,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":283,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":472,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":387,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":486,"org.easymock.tests.MockingTest.testTwoMocks":190,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":55,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":431,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":490,"org.easymock.samples.ExampleTest.removeNonExistingDocument":38,"org.easymock.tests.UsageStrictMockTest.differentMethods":185,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":453,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":509,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":115,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":318,"org.easymock.tests2.MockBuilderTest.testCreateMockString":414,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":134,"org.easymock.tests.UsageExpectAndThrowTest.floatType":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":328,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":323,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":496,"org.easymock.tests.UsageVerifyTest.twoThrows":155,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":337,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":209,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":298,"org.easymock.tests.LimitationsTest.privateConstructor":279,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":502,"org.easymock.tests2.UsageConstraintsTest.testNotNull":489,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":149,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":21,"org.easymock.tests2.UsageTest.defaultResetToNice":430,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":210,"org.easymock.tests.UsageVarargTest.differentLength":270,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":369,"org.easymock.tests2.CallbackTest.callback":346,"org.easymock.tests2.UsageConstraintsTest.equals":467,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":294,"org.easymock.tests.UsageTest.openCallCountByLastCall":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":14,"org.easymock.tests.UsageCallCountTest.tooFewCalls":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":125,"org.easymock.tests.UsageThrowableTest.throwCheckedException":146,"org.easymock.tests.MockingTest.testStrictClassMocking":188,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":386,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":374,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":382,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":385,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":352,"org.easymock.tests.ObjectMethodsTest.testHashCode":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":505,"org.easymock.tests2.NameTest.nameForNiceMock":392,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":320,"org.easymock.tests2.DependencyTest.testInterfaceMocking":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":29,"org.easymock.samples.ExampleTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":339,"org.easymock.tests2.DelegateToTest.testStubDelegate":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.stubAnswer":351,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":182,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":410,"org.easymock.tests.UsageVarargTest.varargLongAccepted":272,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":98,"org.easymock.tests.UsageExpectAndReturnTest.floatType":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":33,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":43,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":460,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests.UsageThrowableTest.noUpperLimit":143,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":464,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":415,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":307,"org.easymock.tests2.SerializationTest.test":353,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":0,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":114,"org.easymock.tests2.UsageConstraintsTest.testSame":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":81,"org.easymock.samples.SupportTest.addDocument":40,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":384,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":329,"org.easymock.tests.GenericTest.testPackageScope":74,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":459,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":195,"org.easymock.tests2.NameTest.nameForMock":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":92,"org.easymock.tests2.UsageStrictMockTest.differentMethods":440,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":413,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":295,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":61,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":103,"org.easymock.tests2.MockedExceptionTest.testRealException":24,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":164,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":151,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":256,"org.easymock.tests2.NameTest.nameForStrictMock":391,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":405,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":493,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":289,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":419,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":484,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":116,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":402,"org.easymock.tests2.UsageStrictMockTest.range":439,"org.easymock.tests2.UsageConstraintsTest.lessThan":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":206,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":356,"org.easymock.tests2.CaptureTest.testCaptureRightOne":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":333,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":508,"org.easymock.tests2.UsageConstraintsTest.testOr":471,"org.easymock.tests.UsageRangeTest.combination":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":286,"org.easymock.tests.UsageTest.wrongArguments":167,"org.easymock.tests2.MockBuilderTest.testWithConstructor":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":330,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":199,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":118,"org.easymock.tests.UsageVarargTest.varargShortAccepted":271,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":228,"org.easymock.tests2.UsageConstraintsTest.cmpTo":476,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":201,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":429,"org.easymock.tests2.CaptureTest.testCaptureFromStub":313,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":246,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":403,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":226,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":94,"org.easymock.tests2.CaptureTest.testCapture":504,"org.easymock.tests2.UsageConstraintsTest.constraints":465,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.samples.ExampleTest.addAndChangeDocument":39,"org.easymock.tests.UsageStrictMockTest.testVerify":187,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":41,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":127,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":12,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":86,"org.easymock.tests.LimitationsTest.abstractClass":278,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":259,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":361}}]
