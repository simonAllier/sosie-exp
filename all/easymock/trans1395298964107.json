[{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,9,26,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Any:36","failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,43,50,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[90,91,92,28,93],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[95,96,97,98,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[100],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[101],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[103,104,105,106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[107,108,109,110,111,112],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[113,114,115,116,117,118,119],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[120,121,122,123,39,42,124,125,126,127,50,128],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[129,130,131,113,132,111,133,134,135,37,89,136,112,118],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[10,137,137,138,138,139,140,141,0,11,12,13,142,14,143,15,16,144,145,17,18,146,147,148,149,150,19,151,152,153,154,20,21,155,156,22,120,121,122,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,23,174,175,176,177,178,179,180,181,182,24,183,184,185,186,187,25,188,189,9,190,191,192,193,194,195,196,197,26,27,198,199,200,201,202,203,204,205,90,91,92,28,93,206,207,208,209,210,211,212,213,214,215,216,217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[90,91,92,28,93],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[218],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[107,108,109,110,111,112],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[219,220,221,222],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[10,137,138,223,224,225,226,227,228,229,230,231,139,140,232,233,234,141,0,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,103,250,30,94,220,104,31,251,252,253,221,254,255,256,257,105,258,259,260,261,106,262,222,263,264,265,266,11,267,12,13,268,142,14,143,15,1,16,269,144,145,17,270,18,271,32,272,29,273,274,275,33,34,276,277,278,279,35,146,147,280,148,149,150,19,281,151,152,153,154,20,21,155,156,22,282,283,100,284,285,120,121,122,123,286,287,288,289,290,291,292,293,294,295,296,297,55,298,299,129,300,301,302,56,303,130,131,95,304,157,158,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,101,323,324,325,159,160,326,327,161,328,329,330,57,162,163,164,165,331,332,166,167,333,334,335,336,337,338,339,340,341,342,343,344,345,346,168,169,170,171,172,173,23,174,175,176,177,178,179,180,181,182,24,183,184,185,186,187,25,188,189,347,348,349,350,351,352,353,354,36,355,113,114,356,9,357,190,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,191,192,193,194,195,382,196,383,384,197,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,26,402,403,404,405,27,406,407,408,409,410,78,411,412,413,414,415,416,417,418,96,97,98,79,419,111,133,420,80,134,135,421,198,422,115,116,423,424,425,426,427,428,429,430,199,200,201,202,203,204,431,205,37,432,433,434,38,39,435,81,436,82,83,84,85,86,87,90,91,92,28,93,437,438,88,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,99,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,206,207,208,209,210,211,212,213,214,215,216,217,40,41,42,43,44,474,475,476,477,45,46,47,48,49,478,479,480,481,482,483,484,485,486,124,125,126,127,50,128,117,89,136,487,488,489,490,491,492,493,494,495,51,52,496,497,112,53,498,118,119,499,500,501,502,503],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[9,357,190],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[10,223,225,226,228,234,141,12,14,15,16,17,146,147,280,148,149,150,151,20,21,155,284,305,306,101,162,163,164,165,332,166,167,171,23,24,25,36,113,114,362,363,364,365,366,367,370,371,373,374,375,377,378,379,380,381,194,195,196,397,398,399,400,418,96,97,98,216,40,45,46,47,48,49,51,52,53,118,119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:299","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[10,11,504,12,13,14,143,15,16,145,17,505,18,19,20,21,22,23,24,25,9,26,27,28],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[113,114,62,66,67,69,72,366,370,371,373,376,422,423,424,447,118,119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[506,507],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[0,1,3,4,5,8],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[508,256],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[129,130,131,113,413,132,111,133,134,135,37,89,136,112,118],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[90,93],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[509,510,511],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[100],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":247,"org.easymock.tests2.UsageTest.argumentsOrdered":131,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":79,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":449,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":301,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":231,"org.easymock.tests2.DelegateToTest.testReturnException":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":125,"org.easymock.tests.MockingTest.testPartialClassMocking":194,"org.easymock.tests.MockClassControlTest.testToString":208,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":236,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":177,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":58,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":3,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":220,"org.easymock.tests2.UsageTest.wrongArguments":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":40,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":476,"org.easymock.samples.ExampleTest.answerVsDelegate":224,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":27,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":384,"org.easymock.tests2.UsageConstraintsTest.testNull":103,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":148,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":213,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":343,"org.easymock.tests2.CaptureTest.testPrimitive":29,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":44,"org.easymock.tests.UsageTest.moreThanOneArgument":419,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":77,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":399,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":422,"org.easymock.tests.UsageTest.argumentsOrdered":135,"org.easymock.tests.UsageVarargTest.varargIntAccepted":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":45,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":296,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":326,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":49,"org.easymock.tests.ReplayStateInvalidUsageTest.times":393,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":314,"org.easymock.tests2.DependencyTest.testClassMocking":157,"org.easymock.tests2.AnswerTest.answer":347,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":266,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":403,"org.easymock.tests2.CaptureTest.testAnd":271,"org.easymock.tests2.UsageTest.strictResetToDefault":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":398,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":338,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":424,"org.easymock.tests2.DelegateToTest.testDelegate":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":73,"org.easymock.tests.LimitationsTest.mockFinalMethod":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":429,"org.easymock.tests2.DependencyTest.testClassMockingSupport":158,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":414,"org.easymock.tests2.CaptureTest.testCapture1_2446744":273,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":71,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":264,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":387,"org.easymock.tests.UsageThrowableTest.throwError":81,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":405,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":297,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":189,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":388,"org.easymock.tests.MockingTest.testInterfaceMocking":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":502,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":59,"org.easymock.tests2.UsageTest.niceToStrict":300,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":14,"org.easymock.tests2.MockBuilderTest.testCreateMock":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":185,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":317,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":67,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":339,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":402,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":434,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":487,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":474,"org.easymock.tests.UsageOverloadedMethodTest.overloading":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":182,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":78,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":221,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":437,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":373,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":253,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":276,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":465,"org.easymock.tests2.EasyMockSupportClassTest.testAll":171,"org.easymock.tests.MockClassControlTest.testEquals":212,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":427,"org.easymock.tests2.CaptureTest.testCaptureAll":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":265,"org.easymock.tests.MockNameTest.defaultName":435,"org.easymock.tests2.UsageConstraintsTest.testMatches":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":400,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":385,"org.easymock.samples.ExampleTest.voteForRemovals":228,"org.easymock.tests.UsageVarargTest.allKinds":473,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":428,"org.easymock.samples.BasicClassMockTest.testPrintContent":140,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":86,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":293,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":324,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":431,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":8,"org.easymock.tests2.UsageConstraintsTest.greaterThan":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":96,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":155,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":205,"org.easymock.samples.ExampleTest.voteForRemoval":225,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":156,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":19,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":198,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":446,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":336,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":124,"org.easymock.tests2.CaptureTest.testCaptureFirst":35,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":337,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":304,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":369,"org.easymock.tests2.CaptureTest.testCapture2_2446744":279,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":284,"org.easymock.tests2.UsageTest.moreThanOneArgument":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":456,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":17,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":472,"org.easymock.tests.GenericTest.testBridgedEquals":93,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":494,"org.easymock.tests.UsageExpectAndReturnTest.longType":365,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":425,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":334,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":505,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":76,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":417,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":397,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":359,"org.easymock.tests.UsageCallCountTest.tooManyCalls":495,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":370,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":85,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":163,"org.easymock.tests.MockingTest.testNiceClassMocking":197,"org.easymock.tests.MockingTest.testClassMocking":192,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":504,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":488,"org.easymock.tests2.UsageConstraintsTest.testContains":252,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":122,"org.easymock.tests2.UsageConstraintsTest.testFind":249,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":88,"org.easymock.tests.MockTypeTest.fromEasyMockClass":404,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":496,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":243,"org.easymock.tests.UsageExpectAndReturnTest.object":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":342,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":4,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":484,"org.easymock.tests.UsageTest.exactCallCountByLastCall":421,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":478,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":115,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":462,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":378,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":410,"org.easymock.tests.MockClassControlTest.testHashCode":211,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":287,"org.easymock.tests2.EasyMockSupportTest.testVerify":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":180,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":433,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":408,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":263,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":308,"org.easymock.tests.UsageVarargTest.varargCharAccepted":466,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":430,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":461,"org.easymock.tests2.UsageTest.openCallCountByLastCall":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":509,"org.easymock.tests.DefaultClassInstantiatorTest.object":199,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":432,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":482,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":286,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":20,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":210,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":64,"org.easymock.tests.CapturesMatcherTest.test":507,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":25,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":209,"org.easymock.tests2.UsageTest.resumeIfFailure":95,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":127,"org.easymock.tests2.StubTest.stubWithReturnValue":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":1,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":261,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":371,"org.easymock.tests2.SerializationTest.testAllMockedMethod":190,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":455,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":108,"org.easymock.samples.SupportTest.voteForRemovals":234,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":289,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":70,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":460,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":348,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":480,"org.easymock.tests.UsageExpectAndThrowTest.object":68,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":258,"org.easymock.tests2.DelegateToTest.testWrongClass":323,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":51,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":52,"org.easymock.samples.ConstructorCalledMockTest.testTax":137,"org.easymock.tests.UsageStrictMockTest.range":118,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":328,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":69,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":15,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":168,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":475,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":503,"org.easymock.tests2.CaptureTest.testCaptureNone":34,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":218,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests.UsageVerifyTest.twoReturns":136,"org.easymock.tests.UsageVarargTest.varargByteAccepted":471,"org.easymock.tests2.ThreadingTest.testThreadSafe":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":183,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":492,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":485,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":139,"org.easymock.tests2.CaptureTest.testCapture_2617107":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":43,"org.easymock.tests2.UsageConstraintsTest.any":31,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":392,"org.easymock.tests2.StubTest.stub":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":126,"org.easymock.tests.UsageExpectAndThrowTest.longType":61,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":203,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":391,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":355,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":291,"org.easymock.tests.LimitationsTest.mockNativeMethod":216,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":28,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":311,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":356,"org.easymock.tests2.NameTest.nameForMocksControl":240,"org.easymock.tests2.MockedExceptionTest.testMockedException":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":173,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":62,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":196,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":242,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":16,"org.easymock.tests.MockingTest.testNicePartialClassMocking":195,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":150,"org.easymock.tests2.CaptureTest.testCaptureLast":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":2,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":309,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":415,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":167,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":259,"org.easymock.tests.MockingTest.testTwoMocks":193,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":362,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":66,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":130,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":262,"org.easymock.samples.ExampleTest.removeNonExistingDocument":229,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":389,"org.easymock.tests.UsageStrictMockTest.differentMethods":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":288,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":201,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":100,"org.easymock.tests2.MockBuilderTest.testCreateMockString":18,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":174,"org.easymock.tests.UsageExpectAndThrowTest.floatType":60,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":170,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":350,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":235,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":24,"org.easymock.tests.ResultTest.createDelegateResultToString":102,"org.easymock.samples.ExampleTest.voteAgainstRemoval":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":21,"org.easymock.tests.LimitationsTest.privateConstructor":215,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":54,"org.easymock.tests2.UsageConstraintsTest.testNotNull":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":87,"org.easymock.tests2.UsageTest.defaultResetToNice":303,"org.easymock.samples.ExampleTest.voteAgainstRemovals":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":377,"org.easymock.tests.UsageVarargTest.differentLength":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":310,"org.easymock.tests2.CallbackTest.callback":307,"org.easymock.tests2.UsageConstraintsTest.equals":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":152,"org.easymock.tests.UsageTest.openCallCountByLastCall":420,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":42,"org.easymock.tests.UsageCallCountTest.tooFewCalls":490,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":165,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":477,"org.easymock.tests.UsageThrowableTest.throwCheckedException":84,"org.easymock.tests.MockingTest.testStrictClassMocking":191,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":110,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":166,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":315,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":394,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":332,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":352,"org.easymock.tests.ObjectMethodsTest.testHashCode":483,"org.easymock.tests2.CompareToTest.testGreateOrEqual":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":6,"org.easymock.tests2.NameTest.nameForNiceMock":239,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":285,"org.easymock.tests2.DependencyTest.testInterfaceMocking":305,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":5,"org.easymock.samples.ExampleTest.addDocument":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.DelegateToTest.testStubDelegate":101,"org.easymock.tests2.AnswerTest.stubAnswer":351,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":53,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":269,"org.easymock.tests.UsageVarargTest.varargLongAccepted":470,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndReturnTest.floatType":364,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":141,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":138,"org.easymock.tests.UsageThrowableTest.noUpperLimit":436,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":295,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":245,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":159,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":274,"org.easymock.tests2.SerializationTest.test":357,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":200,"org.easymock.tests2.UsageConstraintsTest.testSame":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":363,"org.easymock.samples.SupportTest.addDocument":233,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":331,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":175,"org.easymock.tests.GenericTest.testPackageScope":91,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":294,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":383,"org.easymock.tests2.NameTest.nameForMock":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":374,"org.easymock.tests2.UsageStrictMockTest.differentMethods":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":270,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":153,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":366,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":72,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":481,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":98,"org.easymock.tests2.MockedExceptionTest.testRealException":123,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":452,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":41,"org.easymock.tests2.NameTest.nameForStrictMock":238,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":510,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":241,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":149,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":161,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":105,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":202,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":12,"org.easymock.tests2.UsageStrictMockTest.range":113,"org.easymock.tests2.UsageConstraintsTest.lessThan":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":179,"org.easymock.tests2.CaptureTest.testCaptureRightOne":277,"org.easymock.tests2.UsageConstraintsTest.testOr":30,"org.easymock.tests.UsageRangeTest.combination":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":147,"org.easymock.tests.UsageTest.wrongArguments":133,"org.easymock.tests2.MockBuilderTest.testWithConstructor":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":176,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":375,"org.easymock.tests.UsageVarargTest.varargShortAccepted":469,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":204,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":493,"org.easymock.tests2.UsageConstraintsTest.cmpTo":251,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":442,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":56,"org.easymock.tests2.CaptureTest.testCaptureFromStub":278,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":386,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":13,"org.easymock.tests.UsageTest.unexpectedCallWithArray":111,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":491,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":376,"org.easymock.tests2.CaptureTest.testCapture":506,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":498,"org.easymock.tests2.UsageConstraintsTest.constraints":246,"org.easymock.samples.ExampleTest.addAndChangeDocument":230,"org.easymock.tests.UsageStrictMockTest.testVerify":500,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":232,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":497,"org.easymock.tests2.CompareToTest.testGreateThan":508,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":426,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":47,"org.easymock.tests.LimitationsTest.abstractClass":214,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":368,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":412,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":48,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":340}}]
