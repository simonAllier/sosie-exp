[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[14,15,16,4,5,17],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[14,15,42,43,16,44,45,46,4,47,48,49,50,5,51,17,52],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[57,58,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[67,68,69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[71,72,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[73],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[74,71,72,75,76,77,78,79,80,81,82,83,18,19,20,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,21,22,23,24,25,26,35,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,43,16,44,131,132,45,46,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,27,73,154,155,156,157,7,158,159,160,8,9,161,28,162,163,164,165,166,36,10,167,168,169,170,11,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,29,228,229,230,231,232,233,234,235,236,12,237,238,239,53,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,13,256,54,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,4,277,278,67,68,279,280,281,282,37,283,284,285,286,287,288,289,289,290,290,291,292,293,294,295,296,297,55,298,299,300,301,302,303,304,305,56,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,0,339,340,341,342,1,343,344,345,346,347,348,349,350,351,2,352,353,354,355,3,356,357,57,358,359,360,361,362,363,364,59,365,366,367,47,48,368,369,370,371,372,49,50,373,374,375,376,377,378,38,379,39,380,381,40,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,60,61,30,31,32,33,41,421,422,423,424,425,426,34,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,69,70,454],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[113,159,37,430,432,433,434],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[455,456,457],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[458],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Or:38","sourceCode":"for (final org.easymock.IArgumentMatcher org.easymock.IArgumentMatcher : java.util.List<org.easymock.IArgumentMatcher>) {\n    if (org.easymock.IArgumentMatcher.matches(java.lang.Object)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[336,340],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[75,77,78,79,80,82,83,90,91,92,100,101,102,103,104,105,106,107,25,35,113,114,116,118,119,120,121,122,123,124,125,130,43,44,131,132,45,46,133,134,135,136,138,139,140,141,142,143,144,145,151,153,27,154,155,158,162,166,168,169,170,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,218,219,221,225,226,227,29,228,229,230,247,248,249,250,266,267,268,269,271,272,275,276,4,277,278,67,68,279,280,281,282,37,283,284,285,286,288,291,292,293,294,295,296,297,55,298,299,300,301,303,306,307,308,311,313,320,323,459,460,326,327,328,329,461,330,332,333,334,335,336,338,0,339,340,341,342,1,343,344,345,346,347,348,349,350,351,2,352,353,354,355,3,356,357,57,358,359,360,362,364,462,463,366,367,47,48,368,369,370,371,372,49,50,373,374,38,380,381,40,391,398,399,400,464,401,402,465,403,466,404,405,406,407,467,468,469,470,414,60,32,41,421,422,423,424,425,426,34,427,428,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,447,448,450,451,452,453,69,70,454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[90,91,92,100,102,103,104,105,106,107,116,118,119,120,121,122,123,124,130,43,131,132,133,151,153,154,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,218,219,221,226,227,229,247,248,249,250,267,269,277,67,68,281,282,283,284,286,294,297,55,298,299,300,301,303,306,307,308,311,313,320,323,459,460,326,327,328,329,461,333,334,335,336,338,0,339,340,341,342,343,344,345,346,347,348,349,350,351,2,352,353,355,3,356,357,57,358,360,362,364,462,463,366,367,47,368,370,371,372,373,374,38,381,391,398,399,400,464,401,402,465,403,466,404,405,406,414,60,32,421,422,423,424,425,34,427,428,431,435,436,438,439,442,443,444,445,447,448,452,69,70],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[368],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[289,290,304,471,472,473,474,475],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[45,134,145,37,337,0,3,49],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[90,91,92,100,102,103,104,105,106,107,25,35,113,114,116,118,119,120,121,122,123,124,125,130,43,131,132,133,151,153,27,154,158,162,166,169,170,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,218,219,221,226,227,229,230,247,248,249,250,267,268,269,277,67,68,281,282,37,283,284,286,294,297,55,298,299,300,301,303,306,307,308,311,313,320,323,459,460,326,327,328,329,461,333,334,335,336,338,0,339,340,341,342,343,344,345,346,347,348,349,350,351,2,352,353,354,355,3,356,357,57,358,360,362,364,462,463,366,367,47,368,370,371,372,373,374,38,381,40,391,398,399,400,464,401,402,465,403,466,404,405,406,414,60,32,41,421,422,423,424,425,34,427,428,430,431,432,434,435,436,437,438,439,442,443,444,445,447,448,452,69,70],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[476],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[350,477],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[239],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[14,15,16,4,5,17],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[333,350,352,477],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[302,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[313],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1433","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[14,15,16,4,5,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[2,352],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":336,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":130,"org.easymock.tests2.UsageTest.argumentsOrdered":50,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":164,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":369,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":291,"org.easymock.tests2.DelegateToTest.testReturnException":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":22,"org.easymock.tests.MockingTest.testPartialClassMocking":218,"org.easymock.tests.MockClassControlTest.testToString":260,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":408,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":175,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":313,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":62,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":342,"org.easymock.tests2.UsageTest.wrongArguments":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":226,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":420,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":110,"org.easymock.samples.ExampleTest.answerVsDelegate":37,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":85,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":299,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":404,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":265,"org.easymock.tests2.CaptureTest.testPrimitive":438,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":229,"org.easymock.tests.UsageTest.moreThanOneArgument":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":194,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":253,"org.easymock.tests.UsageTest.argumentsOrdered":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":270,"org.easymock.tests.UsageVarargTest.varargIntAccepted":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":396,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":124,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":414,"org.easymock.tests.ReplayStateInvalidUsageTest.times":243,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":475,"org.easymock.tests2.AnswerTest.answer":38,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":385,"org.easymock.tests2.CaptureTest.testAnd":435,"org.easymock.tests2.UsageTest.strictResetToDefault":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":401,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":249,"org.easymock.tests2.DelegateToTest.testDelegate":434,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":190,"org.easymock.tests.LimitationsTest.mockFinalMethod":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":129,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":256,"org.easymock.tests2.CaptureTest.testCapture1_2446744":439,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":476,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":383,"org.easymock.tests.UsageThrowableTest.throwError":100,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":238,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":255,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":325,"org.easymock.samples.PartialClassMockTest.testGetArea":281,"org.easymock.tests.MockingTest.testInterfaceMocking":220,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":121,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":176,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":98,"org.easymock.tests2.UsageTest.niceToStrict":368,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":7,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":362,"org.easymock.tests2.MockBuilderTest.testCreateMock":365,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":417,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":184,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":402,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":72,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":108,"org.easymock.tests.UsageOverloadedMethodTest.overloading":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":322,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":114,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":347,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":206,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":346,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":444,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":137,"org.easymock.tests.MockClassControlTest.testEquals":264,"org.easymock.tests2.EasyMockSupportClassTest.testAll":311,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":155,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":192,"org.easymock.tests2.CaptureTest.testCaptureAll":436,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":127,"org.easymock.tests.MockNameTest.defaultName":99,"org.easymock.tests2.UsageConstraintsTest.testMatches":348,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":254,"org.easymock.samples.ExampleTest.voteForRemovals":286,"org.easymock.tests.UsageVarargTest.allKinds":145,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":128,"org.easymock.samples.BasicClassMockTest.testPrintContent":296,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":106,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":450,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":433,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":26,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":66,"org.easymock.tests2.UsageConstraintsTest.greaterThan":350,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":248,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":308,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":236,"org.easymock.samples.ExampleTest.voteForRemoval":283,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":422,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":302,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":266,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":366,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":400,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":21,"org.easymock.tests2.CaptureTest.testCaptureFirst":448,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":464,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":374,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":202,"org.easymock.tests2.CaptureTest.testCapture2_2446744":447,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":424,"org.easymock.tests2.UsageTest.moreThanOneArgument":47,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":170,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":144,"org.easymock.tests.GenericTest.testBridgedEquals":157,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":82,"org.easymock.tests.UsageExpectAndReturnTest.longType":198,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":193,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":13,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":251,"org.easymock.tests.UsageCallCountTest.tooManyCalls":83,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":77,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":419,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":105,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":460,"org.easymock.tests.MockingTest.testNiceClassMocking":224,"org.easymock.tests.MockingTest.testClassMocking":216,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":76,"org.easymock.tests2.UsageConstraintsTest.testContains":345,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":32,"org.easymock.tests2.UsageConstraintsTest.testFind":338,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":92,"org.easymock.tests.MockTypeTest.fromEasyMockClass":84,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":332,"org.easymock.tests.UsageExpectAndReturnTest.object":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":466,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":63,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":96,"org.easymock.tests.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":9,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":146,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":271,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":42,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":61,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":211,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":113,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":387,"org.easymock.tests.MockClassControlTest.testHashCode":263,"org.easymock.tests2.EasyMockSupportTest.testVerify":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":317,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":272,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":71,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":382,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":449,"org.easymock.tests.UsageVarargTest.varargCharAccepted":138,"org.easymock.tests2.CaptureTest.testCaptureMultiple":6,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":174,"org.easymock.tests2.UsageTest.openCallCountByLastCall":370,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":456,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":406,"org.easymock.tests.DefaultClassInstantiatorTest.object":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":74,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":94,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":318,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":412,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":386,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":262,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":18,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":323,"org.easymock.tests2.UsageTest.resumeIfFailure":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":24,"org.easymock.tests2.StubTest.stubWithReturnValue":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":58,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":355,"org.easymock.tests2.SerializationTest.testAllMockedMethod":359,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":168,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":17,"org.easymock.samples.SupportTest.voteForRemovals":294,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":187,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":173,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":379,"org.easymock.tests.UsageExpectAndThrowTest.object":185,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":148,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":352,"org.easymock.tests2.DelegateToTest.testWrongClass":432,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":119,"org.easymock.tests.UsageStrictMockTest.range":67,"org.easymock.samples.ConstructorCalledMockTest.testTax":289,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":377,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":403,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":364,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":109,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":14,"org.easymock.tests2.CaptureTest.testCaptureNone":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":89,"org.easymock.tests.UsageUnorderedTest.message":225,"org.easymock.tests.UsageVerifyTest.twoReturns":269,"org.easymock.tests.UsageVarargTest.varargByteAccepted":143,"org.easymock.tests2.ThreadingTest.testThreadSafe":421,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":80,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":97,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":295,"org.easymock.tests2.CaptureTest.testCapture_2617107":437,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":228,"org.easymock.tests2.UsageConstraintsTest.any":343,"org.easymock.tests2.StubTest.stub":426,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":20,"org.easymock.tests.UsageExpectAndThrowTest.longType":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":23,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":234,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":241,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":453,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":391,"org.easymock.tests2.SerializationTest.testClass":57,"org.easymock.tests.LimitationsTest.mockNativeMethod":151,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":156,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":454,"org.easymock.tests2.NameTest.nameForMocksControl":470,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":413,"org.easymock.tests2.MockedExceptionTest.testMockedException":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":312,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":179,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":221,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":331,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":297,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":462,"org.easymock.tests.MockingTest.testNicePartialClassMocking":219,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":301,"org.easymock.tests2.CaptureTest.testCaptureLast":442,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":54,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":461,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":341,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":353,"org.easymock.tests.MockingTest.testTwoMocks":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":183,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":356,"org.easymock.samples.ExampleTest.removeNonExistingDocument":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":416,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":53,"org.easymock.tests.UsageStrictMockTest.differentMethods":68,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":388,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":232,"org.easymock.tests2.ConstraintsToStringTest.andToString":478,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":423,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":258,"org.easymock.tests.UsageExpectAndThrowTest.floatType":177,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":349,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":380,"org.easymock.tests.UsageVerifyTest.twoThrows":268,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":320,"org.easymock.samples.ExampleTest.voteAgainstRemoval":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":87,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":307,"org.easymock.tests.LimitationsTest.privateConstructor":150,"org.easymock.tests2.UsageConstraintsTest.testNotNull":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":107,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":30,"org.easymock.tests2.UsageTest.defaultResetToNice":372,"org.easymock.samples.ExampleTest.voteAgainstRemovals":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests.UsageVarargTest.differentLength":140,"org.easymock.tests2.CallbackTest.callback":41,"org.easymock.tests2.UsageConstraintsTest.equals":337,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":304,"org.easymock.tests.UsageTest.openCallCountByLastCall":131,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":29,"org.easymock.tests.UsageCallCountTest.tooFewCalls":78,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":111,"org.easymock.tests.UsageThrowableTest.throwCheckedException":104,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":15,"org.easymock.tests.MockingTest.testStrictClassMocking":215,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":27,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":329,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":415,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":326,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":328,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":40,"org.easymock.tests.ObjectMethodsTest.testHashCode":95,"org.easymock.tests2.NameTest.nameForNiceMock":469,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":425,"org.easymock.tests2.DependencyTest.testInterfaceMocking":427,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":64,"org.easymock.samples.ExampleTest.addDocument":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":321,"org.easymock.tests2.DelegateToTest.testStubDelegate":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":324,"org.easymock.tests2.AnswerTest.stubAnswer":381,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":277,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":471,"org.easymock.tests.UsageVarargTest.varargLongAccepted":142,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":163,"org.easymock.tests.UsageExpectAndReturnTest.floatType":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":60,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":395,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":115,"org.easymock.tests.UsageThrowableTest.noUpperLimit":101,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":334,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":375,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":440,"org.easymock.tests2.SerializationTest.test":358,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":196,"org.easymock.tests2.UsageConstraintsTest.testSame":339,"org.easymock.samples.SupportTest.addDocument":293,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":314,"org.easymock.tests.GenericTest.testPackageScope":154,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":8,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":394,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":222,"org.easymock.tests2.NameTest.nameForMock":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":473,"org.easymock.tests2.UsageStrictMockTest.differentMethods":70,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":189,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":93,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":250,"org.easymock.tests2.MockedExceptionTest.testRealException":33,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":10,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":378,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":458,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":227,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":246,"org.easymock.tests2.NameTest.nameForStrictMock":468,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":457,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":300,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":376,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":233,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":360,"org.easymock.tests2.UsageStrictMockTest.range":69,"org.easymock.tests2.UsageConstraintsTest.lessThan":357,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":65,"org.easymock.tests2.CaptureTest.testCaptureRightOne":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":316,"org.easymock.tests2.UsageConstraintsTest.testOr":340,"org.easymock.tests.UsageRangeTest.combination":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":55,"org.easymock.tests.UsageTest.wrongArguments":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":315,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":208,"org.easymock.tests.UsageVarargTest.varargShortAccepted":141,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":235,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":81,"org.easymock.tests2.UsageConstraintsTest.cmpTo":344,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":160,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":371,"org.easymock.tests2.CaptureTest.testCaptureFromStub":446,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":237,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":79,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":472,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":209,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.tests2.UsageConstraintsTest.constraints":335,"org.easymock.samples.ExampleTest.addAndChangeDocument":288,"org.easymock.tests.UsageStrictMockTest.testVerify":280,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":292,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":276,"org.easymock.tests2.CompareToTest.testGreateThan":477,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":126,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":122,"org.easymock.tests.LimitationsTest.abstractClass":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":123,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":465,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":135}}]
