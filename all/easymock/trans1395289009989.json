[{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[15,1,2,3,5,16,6,17,18,8,9,10,19,20,21,22,11,23,24,12,13,14,25,26,27,28],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[29,30,31,32],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[0,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,59,60,60,61],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[36,37,38,47,55,59,59,60,60],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:27","sourceCode":"-5160559075998939348L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[62,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[64],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[33],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[66,67,5,7,68,69],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[15,1,2,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,3,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,5,16,104,6,17,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,18,7,8,152,153,9,10,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,36,229,230,231,232,22,233,11,23,234,38,235,236,30,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,31,253,254,255,256,257,32,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,39,40,43,285,44,45,286,48,49,50,287,288,289,290,291,292,293,294,24,12,295,296,297,298,299,13,14,300,301,302,303,304,305,25,26,27,28,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,51,52,53,328,329,330,331,332,333,54,334,335,56,57,336,337,338,339,340,341,342,343,59,59,60,60,61,344,345,346,347,348,349,350,351,352],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[353,354,355],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[175,356,357,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.internal.LastControl:70","failures":[15,1,2,358,70,71,72,359,360,361,362,363,73,74,75,76,77,78,79,80,81,364,365,82,83,84,3,95,5,16,107,108,109,110,111,126,127,128,129,130,182,183,189,22,30,237,238,239,240,241,242,243,244,245,366,246,247,248,249,250,251,252,31,253,254,255,256,257,32,258,259,260,290,291,292,306,307,308,309,310,311,312,313,314,315,316,317,318,319,326,334,337,338],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[0,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[39,285,50,54,58],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:123","sourceCode":"if (java.lang.Object instanceof org.easymock.EasyMockSupport) {\n    java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n} else {\n    java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"mockType","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"message","key":"message"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[368,369,370,371,372,224,373,374,375,376,377,378,379,380,381,382,383,230,384,385,386,387,388,389,343,352],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[80,62,63,108,390,225,226,227,391,228,278,50,287,288,289,325,330],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[392],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[15,1,2,393,394,358,395,396,397,398,359,360,361,362,363,73,74,75,76,77,78,79,80,81,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,364,415,416,417,418,419,365,420,421,82,62,422,423,424,63,425,426,83,84,427,428,429,3,85,86,87,430,88,89,90,91,92,93,94,95,96,97,98,431,432,99,100,101,433,434,102,103,5,16,104,6,17,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,435,436,437,438,439,440,441,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,18,7,8,152,153,9,10,154,155,156,157,158,159,160,161,162,163,0,164,165,33,367,34,442,443,35,444,445,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,446,447,184,448,185,186,187,188,189,190,449,450,451,191,192,193,194,195,196,197,198,356,452,357,199,453,200,201,454,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,368,369,370,371,372,224,373,374,375,376,377,378,390,225,226,227,391,228,229,379,380,381,382,383,230,384,385,386,387,388,389,231,232,22,233,11,23,234,235,236,30,237,238,239,455,240,241,242,243,244,245,366,246,247,248,249,250,251,252,31,253,254,255,256,257,32,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,456,281,282,283,284,39,40,41,42,43,285,44,45,286,48,49,50,287,288,289,290,291,457,292,293,294,24,12,295,296,297,298,299,13,14,300,301,302,458,392,303,304,305,459,25,26,27,28,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,460,461,327,462,51,463,464,465,466,52,467,468,469,470,471,53,328,329,330,331,332,333,54,472,334,473,335,56,57,336,474,58,475,476,337,338,477,478,479,480,339,340,341,342,343,61,344,345,346,347,348,349,350,351,352],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[15,1,2,70,71,72,360,361,73,75,76,83,3,97,98,102,5,16,104,6,17,105,107,108,109,110,111,118,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,18,8,152,153,9,10,154,182,183,184,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,36,229,230,231,22,233,11,23,234,38,235,30,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,31,253,254,255,256,32,258,259,260,261,263,264,265,266,269,271,272,274,275,276,277,278,279,280,43,44,45,48,288,291,292,293,294,24,12,295,296,297,298,13,14,301,302,303,304,305,306,307,308,309,310,311,312,315,316,321,322,324,325,326,51,52,53,328,330,331,333,337,338,340,61,344,345,346,347,349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":239,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.UsageTest.argumentsOrdered":14,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":409,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":296,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":343,"org.easymock.tests2.DelegateToTest.testReturnException":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":186,"org.easymock.tests.MockingTest.testPartialClassMocking":70,"org.easymock.tests.MockClassControlTest.testToString":193,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":459,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":131,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":51,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":19,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":338,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.tests2.UsageTest.wrongArguments":12,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":389,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":168,"org.easymock.samples.ExampleTest.answerVsDelegate":345,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":35,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":397,"org.easymock.tests2.UsageConstraintsTest.testNull":241,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":331,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":198,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":270,"org.easymock.tests2.CaptureTest.testPrimitive":309,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":150,"org.easymock.tests.UsageTest.moreThanOneArgument":18,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":114,"org.easymock.tests.UsageTest.argumentsOrdered":10,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":359,"org.easymock.tests.UsageVarargTest.varargIntAccepted":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":107,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":111,"org.easymock.tests.ReplayStateInvalidUsageTest.times":178,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests2.DependencyTest.testClassMocking":475,"org.easymock.tests2.AnswerTest.answer":302,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":415,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":284,"org.easymock.tests2.CaptureTest.testAnd":306,"org.easymock.tests2.UsageTest.strictResetToDefault":294,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":265,"org.easymock.tests2.DelegateToTest.testDelegate":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":146,"org.easymock.tests.LimitationsTest.mockFinalMethod":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":81,"org.easymock.tests2.DependencyTest.testClassMockingSupport":476,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":439,"org.easymock.tests2.CaptureTest.testCapture1_2446744":310,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":282,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":172,"org.easymock.tests.UsageThrowableTest.throwError":118,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":443,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":116,"org.easymock.samples.PartialClassMockTest.testGetArea":61,"org.easymock.tests.MockingTest.testInterfaceMocking":395,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":173,"org.easymock.tests2.CompareToTest.testLessOrEqual":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":108,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":465,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":434,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":132,"org.easymock.tests2.UsageTest.niceToStrict":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":355,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":43,"org.easymock.tests2.MockBuilderTest.testCreateMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":140,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":68,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":451,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":166,"org.easymock.tests.UsageOverloadedMethodTest.overloading":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":471,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":201,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":250,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":249,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":315,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":430,"org.easymock.tests.MockClassControlTest.testEquals":197,"org.easymock.tests2.EasyMockSupportClassTest.testAll":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":283,"org.easymock.tests2.CaptureTest.testCaptureAll":307,"org.easymock.tests.MockNameTest.defaultName":435,"org.easymock.tests2.UsageConstraintsTest.testMatches":251,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":115,"org.easymock.samples.ExampleTest.voteForRemovals":349,"org.easymock.tests.UsageVarargTest.allKinds":95,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":80,"org.easymock.samples.BasicClassMockTest.testPrintContent":342,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":124,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":374,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":425,"org.easymock.tests2.UsageConstraintsTest.greaterThan":31,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":74,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":336,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":426,"org.easymock.samples.ExampleTest.voteForRemoval":346,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":474,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":54,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":117,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":293,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":263,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":185,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":390,"org.easymock.tests2.CaptureTest.testCaptureFirst":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":264,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":301,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":211,"org.easymock.tests2.UsageTest.moreThanOneArgument":24,"org.easymock.tests2.CaptureTest.testCapture2_2446744":318,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":416,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":94,"org.easymock.tests.GenericTest.testBridgedEquals":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":162,"org.easymock.tests.UsageExpectAndReturnTest.longType":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":77,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":149,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":431,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":112,"org.easymock.tests.UsageCallCountTest.tooManyCalls":163,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":123,"org.easymock.tests.MockingTest.testNiceClassMocking":398,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":275,"org.easymock.tests.MockingTest.testClassMocking":394,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":156,"org.easymock.tests2.UsageConstraintsTest.testContains":248,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":288,"org.easymock.tests2.UsageConstraintsTest.testFind":240,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":98,"org.easymock.tests.MockTypeTest.fromEasyMockClass":442,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":102,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":292,"org.easymock.tests.UsageExpectAndReturnTest.object":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":269,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":89,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":101,"org.easymock.tests.UsageTest.exactCallCountByLastCall":154,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":356,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":37,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":85,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":220,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":200,"org.easymock.tests.MockClassControlTest.testHashCode":196,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":369,"org.easymock.tests2.EasyMockSupportTest.testVerify":273,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":361,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":450,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":281,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":290,"org.easymock.tests.UsageVarargTest.varargCharAccepted":88,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":421,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastCall":297,"org.easymock.tests.DefaultClassInstantiatorTest.object":82,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":449,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":99,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":466,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":368,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":56,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":53,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":194,"org.easymock.tests2.UsageTest.resumeIfFailure":300,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":188,"org.easymock.tests2.StubTest.stubWithReturnValue":321,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":213,"org.easymock.tests2.SerializationTest.testAllMockedMethod":236,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":364,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":69,"org.easymock.samples.SupportTest.voteForRemovals":340,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":143,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":365,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":458,"org.easymock.tests.UsageExpectAndThrowTest.object":141,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":357,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":255,"org.easymock.tests2.DelegateToTest.testWrongClass":227,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":182,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":183,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.samples.ConstructorCalledMockTest.testTax":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":479,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":142,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":460,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":180,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":167,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":429,"org.easymock.tests2.CaptureTest.testCaptureNone":314,"org.easymock.tests.UsageUnorderedTest.message":3,"org.easymock.tests.UsageVerifyTest.twoReturns":2,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":64,"org.easymock.tests.UsageVarargTest.varargByteAccepted":93,"org.easymock.tests2.ThreadingTest.testThreadSafe":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":467,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":160,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":433,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":341,"org.easymock.tests2.CaptureTest.testCapture_2617107":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":129,"org.easymock.tests2.UsageConstraintsTest.any":246,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":177,"org.easymock.tests2.StubTest.stub":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":187,"org.easymock.tests.UsageExpectAndThrowTest.longType":134,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":424,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":176,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":233,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests.LimitationsTest.mockNativeMethod":184,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":223,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":381,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests2.NameTest.nameForMocksControl":28,"org.easymock.tests2.MockedExceptionTest.testMockedException":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":462,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":457,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":135,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":328,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":71,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":333,"org.easymock.tests2.CaptureTest.testCaptureLast":313,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":440,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":244,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":280,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":256,"org.easymock.tests.MockingTest.testTwoMocks":358,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":139,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":259,"org.easymock.samples.ExampleTest.removeNonExistingDocument":350,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":385,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":174,"org.easymock.tests.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":370,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":422,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":324,"org.easymock.tests2.MockBuilderTest.testCreateMockString":49,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":133,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":252,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":303,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":52,"org.easymock.samples.ExampleTest.voteAgainstRemoval":347,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":57,"org.easymock.tests.LimitationsTest.privateConstructor":447,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":65,"org.easymock.tests2.UsageConstraintsTest.testNotNull":258,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":125,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":50,"org.easymock.tests2.UsageTest.defaultResetToNice":299,"org.easymock.samples.ExampleTest.voteAgainstRemovals":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":219,"org.easymock.tests.UsageVarargTest.differentLength":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":380,"org.easymock.tests2.CallbackTest.callback":229,"org.easymock.tests2.UsageConstraintsTest.equals":455,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":55,"org.easymock.tests.UsageTest.openCallCountByLastCall":152,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":128,"org.easymock.tests.UsageCallCountTest.tooFewCalls":158,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":169,"org.easymock.tests.UsageThrowableTest.throwCheckedException":122,"org.easymock.tests.MockingTest.testStrictClassMocking":393,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":67,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":84,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":384,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":276,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":179,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":278,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":305,"org.easymock.tests.ObjectMethodsTest.testHashCode":100,"org.easymock.tests2.NameTest.nameForNiceMock":27,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":326,"org.easymock.tests2.DependencyTest.testInterfaceMocking":337,"org.easymock.samples.ExampleTest.addDocument":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":468,"org.easymock.tests2.DelegateToTest.testStubDelegate":226,"org.easymock.tests2.AnswerTest.stubAnswer":304,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":46,"org.easymock.tests.UsageVarargTest.varargLongAccepted":92,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.floatType":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":36,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":60,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":454,"org.easymock.tests.UsageThrowableTest.noUpperLimit":119,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":237,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":477,"org.easymock.tests2.SerializationTest.test":235,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":311,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":205,"org.easymock.tests2.UsageConstraintsTest.testSame":242,"org.easymock.samples.SupportTest.addDocument":339,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":464,"org.easymock.tests.GenericTest.testPackageScope":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":375,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":396,"org.easymock.tests2.NameTest.nameForMock":25,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":473,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":145,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":76,"org.easymock.tests2.MockedExceptionTest.testRealException":289,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":445,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests2.NameTest.nameForStrictMock":26,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":42,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":291,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":354,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":332,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":478,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":423,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":20,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":40,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.UsageConstraintsTest.lessThan":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":262,"org.easymock.tests2.CaptureTest.testCaptureRightOne":316,"org.easymock.tests2.UsageConstraintsTest.testOr":243,"org.easymock.tests.UsageRangeTest.combination":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":329,"org.easymock.tests.UsageTest.wrongArguments":8,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":63,"org.easymock.tests.UsageVarargTest.varargShortAccepted":91,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":161,"org.easymock.tests2.UsageConstraintsTest.cmpTo":247,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":402,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":298,"org.easymock.tests2.CaptureTest.testCaptureFromStub":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":171,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":41,"org.easymock.tests.UsageTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":159,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":104,"org.easymock.tests2.UsageConstraintsTest.constraints":238,"org.easymock.samples.ExampleTest.addAndChangeDocument":351,"org.easymock.tests.UsageStrictMockTest.testVerify":106,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":352,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":78,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":109,"org.easymock.tests.LimitationsTest.abstractClass":446,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":110,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":21,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":267}}]
