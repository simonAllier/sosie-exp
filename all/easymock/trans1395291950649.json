[{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[8,9],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[11,12,13,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,11,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,2,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,5,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:353","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[109,110,111,112,113,114,115],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[117,109,118,119,120,121,122,123,124,125,126,127,128,129,129,130,130,131,132,19,133,20,21,22,23,134,135,136,24,25,26,27,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,28,153,29,154,30,31,155,32,33,156,157,158,159,110,160,111,112,113,161,162,34,163,164,165,166,167,7,168,8,9,169,170,171,172,173,35,174,175,176,177,178,179,180,181,182,183,36,184,37,38,39,40,41,42,43,44,45,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,46,47,206,49,50,207,208,11,51,53,209,55,56,58,210,211,212,60,213,214,215,216,217,61,218,219,62,64,220,221,222,223,224,225,226,227,228,229,230,231,66,67,68,232,233,69,70,71,234,235,236,237,238,72,239,13,14,15,240,241,242,243,244,73,74,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,16,268,269,17,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,82,304,83,84,305,306,86,87,88,307,5,89,90,91,92,93,308,309,94,115,310,95,96,98,99,100,311,312,313,314,315,316,317,318,319,320,321,101,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,102,342,343,344,345,346,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[129,130,347,348,349,350,351],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[149,150,151,352],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[117,109,118,119,120,121,353,122,123,124,125,126,127,128,129,130,131,132,354,355,19,133,20,21,22,23,134,135,136,24,25,26,27,356,137,138,357,358,359,139,360,361,140,362,363,364,365,366,367,368,369,370,141,371,372,373,374,375,142,376,377,143,144,145,146,147,378,148,149,150,151,152,28,153,29,154,30,31,155,32,33,156,157,158,159,110,160,111,112,113,161,162,34,163,379,164,165,166,167,7,168,8,9,169,170,171,172,173,35,174,175,176,177,178,179,180,181,182,183,36,184,37,38,39,40,41,380,42,43,44,45,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,381,382,383,46,384,385,386,387,388,47,48,389,390,391,392,393,206,49,50,207,394,208,11,51,12,52,347,53,54,395,396,209,397,55,398,56,399,400,57,58,350,59,401,402,210,211,403,404,405,406,407,408,409,212,60,213,214,215,216,410,6,217,351,411,61,218,219,62,412,63,413,414,415,416,417,64,65,418,419,420,421,422,220,221,222,223,224,225,423,424,226,425,227,426,427,428,429,228,430,431,432,433,434,435,229,230,231,66,67,2,68,232,233,69,70,71,234,235,236,237,238,72,436,437,239,13,14,438,15,439,440,441,240,241,442,242,243,244,443,73,74,444,445,446,114,447,448,449,450,451,452,453,454,455,456,457,458,459,245,460,461,462,463,464,246,465,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,466,467,468,469,470,471,472,473,474,475,476,16,268,269,17,270,271,272,273,274,275,276,277,278,279,280,75,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,76,477,478,77,78,79,80,81,301,302,303,82,304,83,84,305,306,85,86,87,88,307,5,89,90,91,92,93,308,309,94,115,310,95,96,97,98,99,100,479,480,481,482,483,484,485,486,487,311,312,313,314,315,316,317,318,319,320,321,101,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,488,340,341,102,342,343,344,345,346,489,103,18,490,104,105,491,492,106,107,108,493,494,495,496],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[117,109,118,119,120,121,353,122,123,124,125,126,127,128,129,130,131,132,354,355,19,133,20,21,22,23,134,135,136,24,25,26,27,356,137,138,357,358,359,139,360,361,140,362,363,364,365,366,367,368,369,370,141,371,372,373,374,375,142,376,377,143,144,145,146,147,378,148,149,150,151,152,28,153,29,154,30,31,155,32,33,156,157,158,159,110,160,111,112,113,161,162,34,163,379,164,165,166,167,7,168,8,9,169,170,171,172,173,35,174,175,176,177,178,179,180,181,182,183,36,184,37,38,39,40,41,380,42,43,44,45,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,381,382,383,46,384,385,386,387,388,47,48,389,390,391,392,393,206,49,50,207,394,208,11,51,12,52,347,53,54,395,396,209,397,55,398,56,399,400,57,58,350,59,401,402,210,211,403,404,405,406,407,408,409,212,60,213,214,215,216,410,6,217,351,411,61,218,219,62,412,63,413,414,415,416,417,64,65,418,419,420,421,422,220,221,222,223,224,225,423,424,226,425,227,426,427,428,429,228,430,431,432,433,434,435,229,230,231,66,67,2,68,232,233,69,70,71,234,235,236,237,238,72,436,437,239,13,14,438,15,439,440,441,240,241,442,242,243,244,443,73,74,444,445,446,114,447,448,449,450,451,452,453,454,455,456,457,458,459,245,460,461,462,463,464,246,465,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,466,467,468,469,470,471,472,473,474,475,476,16,268,269,17,270,271,272,273,274,275,276,277,278,279,280,75,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,76,477,478,77,78,79,80,81,301,302,303,82,304,83,84,305,306,85,86,87,88,307,5,89,90,91,92,93,308,309,94,115,310,95,96,97,98,99,100,479,480,481,482,483,484,485,486,487,311,312,313,314,315,316,317,318,319,320,321,101,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,488,340,341,102,342,343,344,345,346,489,103,18,490,104,105,491,492,106,107,108,493,494,495,496],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[380,42,60,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[128,497,498,149,499,53,209,55,56,58,500,59,410,218,219,76,79,492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[117,109,118,119,120,121,122,123,124,125,126,127,131,19,133,20,22,23,134,135,26,27,137,138,149,150,152,28,153,29,154,30,31,32,33,156,157,110,160,111,113,163,165,167,7,181,184,37,38,39,40,41,185,188,189,191,192,198,199,201,204,46,47,209,55,56,210,211,60,215,219,64,220,221,222,224,229,230,231,66,67,232,233,71,234,235,236,237,238,72,240,241,243,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,16,268,269,17,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,307,89,90,91,92,93,309,115,310,98,99,100,311,312,313,314,315,316,317,318,319,320,321,337,338,339,340,341,342,343,344,345,346],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[501],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[53,58,218,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[117,109,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,20,22,23,136,26,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,28,153,29,154,30,31,155,32,33,156,157,158,110,160,113,161,162,34,163,164,165,166,167,7,168,9,169,170,171,172,173,35,174,175,176,177,178,180,181,182,183,184,37,40,41,42,43,44,45,185,188,189,190,191,192,193,194,196,197,198,199,200,201,204,205,381,382,383,46,47,206,49,50,207,208,11,51,52,209,397,55,56,210,211,212,213,214,215,216,217,61,219,64,220,221,224,225,226,227,426,427,428,431,432,433,434,435,230,231,67,234,235,238,13,14,15,240,241,242,243,444,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,82,304,83,84,305,306,307,89,92,93,308,96,98,99,100,311,312,313,314,315,316,317,318,319,320,321,101,322,323,324,337,338,339,340,341,342,343,344,345,346,492],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[117,118,119,120,121,122,123,124,125,126,127,131,21,23,24,25,151,29,33,156,157,158,179,184,38,39,40,41,192,193,196,197,198,199,204,209,225,68,69,70,236,72,243,73,74,268,84,305,306,86,87,307,5,90,91,92,93,337,338,339,340,341,342,343,344,345,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[19,21,22,23,24,25,26,27,28,30,31,33,34,35,36,38,39,40,46,53,57,58,59,60,218,62,66,2,68,69,70,71,72,503,504,85,86,87,88,5,90,91,92,99,100,101,102,505,496],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[149,150,151],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[125,131,384,385,386,387,388,47,48,389,390,391,392,393,413,414,415,416,417,64,65,418,419,420,421,422],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[117,109,118,119,120,121,122,123,124,125,126,127,128,131,132,19,133,21,22,23,24,25,27,139,140,141,142,145,149,150,151,152,28,153,29,154,30,31,32,33,156,157,158,110,111,113,163,165,7,168,9,169,171,35,176,177,178,179,180,181,184,37,38,39,40,41,185,188,191,192,193,194,196,197,198,199,200,201,204,46,47,206,49,50,207,208,11,51,209,55,56,210,211,212,60,213,214,215,216,217,219,64,223,224,225,226,229,230,68,69,70,71,234,235,236,237,72,13,14,15,242,243,249,250,252,257,262,16,268,269,17,270,271,272,273,283,284,286,291,296,84,305,306,86,87,307,5,89,90,91,92,93,309,115,310,96,99,100,101,337,338,339,340,341,342,343,344,345,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[378],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[506,507,508],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[509,510,511],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":163,"org.easymock.tests2.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":454,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":125,"org.easymock.tests2.DelegateToTest.testReturnException":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":312,"org.easymock.tests.MockingTest.testPartialClassMocking":13,"org.easymock.tests.MockClassControlTest.testToString":106,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":380,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":281,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":211,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":168,"org.easymock.tests2.UsageTest.wrongArguments":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":234,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":422,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":427,"org.easymock.samples.ExampleTest.answerVsDelegate":109,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":79,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":440,"org.easymock.tests2.UsageConstraintsTest.testNull":165,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":214,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":495,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":33,"org.easymock.tests2.CaptureTest.testPrimitive":194,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":238,"org.easymock.tests.UsageTest.moreThanOneArgument":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":300,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":276,"org.easymock.tests.UsageTest.argumentsOrdered":70,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":332,"org.easymock.tests.UsageVarargTest.varargIntAccepted":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":317,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":392,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":321,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":507,"org.easymock.tests.ReplayStateInvalidUsageTest.times":473,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests2.DependencyTest.testClassMocking":401,"org.easymock.tests2.AnswerTest.answer":185,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":460,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":383,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":478,"org.easymock.tests2.CaptureTest.testAnd":191,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":323,"org.easymock.tests2.DelegateToTest.testDelegate":113,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":296,"org.easymock.tests.LimitationsTest.mockFinalMethod":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":435,"org.easymock.tests2.DependencyTest.testClassMockingSupport":402,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":73,"org.easymock.tests2.CaptureTest.testCapture1_2446744":195,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":6,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":381,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":467,"org.easymock.tests.UsageThrowableTest.throwError":16,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":78,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":496,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":377,"org.easymock.samples.PartialClassMockTest.testGetArea":128,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":468,"org.easymock.tests.MockingTest.testInterfaceMocking":438,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":318,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":329,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":105,"org.easymock.tests2.UsageTest.niceToStrict":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":209,"org.easymock.tests2.MockBuilderTest.testCreateMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":419,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":290,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":30,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":477,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":227,"org.easymock.tests.UsageOverloadedMethodTest.overloading":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":375,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":172,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":310,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":258,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":171,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":200,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":488,"org.easymock.tests.MockClassControlTest.testEquals":494,"org.easymock.tests2.EasyMockSupportClassTest.testAll":139,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":243,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":433,"org.easymock.tests2.CaptureTest.testCaptureAll":192,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":349,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":382,"org.easymock.tests.MockNameTest.defaultName":75,"org.easymock.tests2.UsageConstraintsTest.testMatches":173,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":277,"org.easymock.samples.ExampleTest.voteForRemovals":121,"org.easymock.tests.UsageVarargTest.allKinds":346,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":434,"org.easymock.samples.BasicClassMockTest.testPrintContent":127,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":272,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":389,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":316,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":486,"org.easymock.tests2.UsageConstraintsTest.greaterThan":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":62,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":487,"org.easymock.samples.ExampleTest.voteForRemoval":118,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":412,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":80,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":410,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":225,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":153,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":311,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":159,"org.easymock.tests2.CaptureTest.testCaptureFirst":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":29,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":27,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":254,"org.easymock.tests2.UsageTest.moreThanOneArgument":20,"org.easymock.tests2.CaptureTest.testCapture2_2446744":203,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":58,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":345,"org.easymock.tests.GenericTest.testBridgedEquals":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":86,"org.easymock.tests.UsageExpectAndReturnTest.longType":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":431,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":152,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":299,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":179,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":326,"org.easymock.tests.UsageCallCountTest.tooManyCalls":87,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":508,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":286,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":271,"org.easymock.tests.MockingTest.testNiceClassMocking":441,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":49,"org.easymock.tests.MockingTest.testClassMocking":437,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests2.UsageConstraintsTest.testContains":170,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":304,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":145,"org.easymock.tests2.UsageConstraintsTest.testFind":164,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":231,"org.easymock.tests.MockTypeTest.fromEasyMockClass":77,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":148,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":88,"org.easymock.tests.UsageExpectAndReturnTest.object":257,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":217,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":32,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":341,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":490,"org.easymock.tests.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":333,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":354,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":263,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":337,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":115,"org.easymock.tests.MockClassControlTest.testHashCode":493,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":385,"org.easymock.tests2.EasyMockSupportTest.testVerify":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":368,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":506,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":334,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":309,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":503,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":205,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":356,"org.easymock.tests.UsageVarargTest.varargCharAccepted":340,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":479,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":465,"org.easymock.tests2.UsageTest.openCallCountByLastCall":134,"org.easymock.tests.DefaultClassInstantiatorTest.object":480,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":301,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":103,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":369,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":384,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":108,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":287,"org.easymock.tests.CapturesMatcherTest.test":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":142,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":107,"org.easymock.tests2.UsageTest.resumeIfFailure":26,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":314,"org.easymock.tests2.StubTest.stubWithReturnValue":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":398,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":256,"org.easymock.tests2.SerializationTest.testAllMockedMethod":151,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":245,"org.easymock.samples.SupportTest.voteForRemovals":124,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":387,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":293,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":352,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":246,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":186,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":430,"org.easymock.tests.UsageExpectAndThrowTest.object":291,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":177,"org.easymock.tests2.DelegateToTest.testWrongClass":111,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":241,"org.easymock.samples.ConstructorCalledMockTest.testTax":129,"org.easymock.tests.UsageStrictMockTest.range":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":408,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":292,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":55,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":475,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":426,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":199,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":330,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":509,"org.easymock.tests.UsageUnorderedTest.message":72,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":505,"org.easymock.tests.UsageVerifyTest.twoReturns":100,"org.easymock.tests.UsageVarargTest.varargByteAccepted":344,"org.easymock.tests2.ThreadingTest.testThreadSafe":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":371,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":306,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":126,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":104,"org.easymock.tests2.CaptureTest.testCapture_2617107":193,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":237,"org.easymock.tests2.UsageConstraintsTest.any":9,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":472,"org.easymock.tests2.StubTest.stub":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndThrowTest.longType":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":313,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":484,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":471,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":38,"org.easymock.tests2.SerializationTest.testClass":149,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":47,"org.easymock.tests.LimitationsTest.mockNativeMethod":226,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":244,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":266,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":415,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":41,"org.easymock.tests2.NameTest.nameForMocksControl":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":417,"org.easymock.tests2.MockedExceptionTest.testMockedException":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":361,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":233,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":285,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":378,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":212,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":56,"org.easymock.tests.MockingTest.testNicePartialClassMocking":14,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":413,"org.easymock.tests2.CaptureTest.testCaptureLast":198,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":74,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":178,"org.easymock.tests.MockingTest.testTwoMocks":239,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":289,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":182,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":511,"org.easymock.samples.ExampleTest.removeNonExistingDocument":353,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":469,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":418,"org.easymock.tests.UsageStrictMockTest.differentMethods":92,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":386,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":510,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":482,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":222,"org.easymock.tests2.MockBuilderTest.testCreateMockString":59,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":491,"org.easymock.tests.UsageExpectAndThrowTest.floatType":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":362,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":188,"org.easymock.tests.UsageVerifyTest.twoThrows":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":355,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":141,"org.easymock.samples.ExampleTest.voteAgainstRemoval":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":219,"org.easymock.tests.LimitationsTest.privateConstructor":424,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":116,"org.easymock.tests2.UsageConstraintsTest.testNotNull":181,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":143,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":273,"org.easymock.tests2.UsageTest.defaultResetToNice":136,"org.easymock.samples.ExampleTest.voteAgainstRemovals":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":262,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":414,"org.easymock.tests.UsageVarargTest.differentLength":102,"org.easymock.tests2.CallbackTest.callback":46,"org.easymock.tests2.UsageConstraintsTest.equals":379,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":351,"org.easymock.tests.UsageTest.openCallCountByLastCall":232,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":501,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":236,"org.easymock.tests.UsageCallCountTest.tooFewCalls":84,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":428,"org.easymock.tests.UsageThrowableTest.throwCheckedException":270,"org.easymock.tests.MockingTest.testStrictClassMocking":436,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":11,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":280,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":65,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":474,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":208,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":190,"org.easymock.tests.ObjectMethodsTest.testHashCode":18,"org.easymock.tests2.NameTest.nameForNiceMock":44,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":224,"org.easymock.tests2.DependencyTest.testInterfaceMocking":210,"org.easymock.samples.ExampleTest.addDocument":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":372,"org.easymock.tests2.DelegateToTest.testStubDelegate":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.AnswerTest.stubAnswer":189,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":89,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":399,"org.easymock.tests.UsageVarargTest.varargLongAccepted":343,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.floatType":249,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":265,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":132,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":391,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":175,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":95,"org.easymock.tests.UsageThrowableTest.noUpperLimit":268,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":162,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":403,"org.easymock.tests2.SerializationTest.test":150,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":196,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":481,"org.easymock.tests2.UsageConstraintsTest.testSame":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":248,"org.easymock.samples.SupportTest.addDocument":123,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":394,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":363,"org.easymock.tests.GenericTest.testPackageScope":242,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":390,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":439,"org.easymock.tests2.NameTest.nameForMock":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":259,"org.easymock.tests2.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":350,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":411,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":251,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":295,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":489,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":324,"org.easymock.tests2.MockedExceptionTest.testRealException":146,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":457,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":476,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":235,"org.easymock.tests2.NameTest.nameForStrictMock":43,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":396,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":215,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":407,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":483,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":176,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":53,"org.easymock.tests2.UsageStrictMockTest.range":39,"org.easymock.tests2.UsageConstraintsTest.lessThan":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":28,"org.easymock.tests2.CaptureTest.testCaptureRightOne":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":367,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":502,"org.easymock.tests2.UsageConstraintsTest.testOr":167,"org.easymock.tests.UsageRangeTest.combination":101,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":60,"org.easymock.tests.UsageTest.wrongArguments":68,"org.easymock.tests2.MockBuilderTest.testWithConstructor":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":364,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":492,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":260,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":485,"org.easymock.tests.UsageVarargTest.varargShortAccepted":342,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":85,"org.easymock.tests2.UsageConstraintsTest.cmpTo":169,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":447,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests2.CaptureTest.testCaptureFromStub":202,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":466,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":54,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":305,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":261,"org.easymock.tests2.UsageConstraintsTest.constraints":34,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":90,"org.easymock.samples.ExampleTest.addAndChangeDocument":122,"org.easymock.tests.UsageStrictMockTest.testVerify":308,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":131,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":432,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":197,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":319,"org.easymock.tests.LimitationsTest.abstractClass":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":253,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":31,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":338}}]
