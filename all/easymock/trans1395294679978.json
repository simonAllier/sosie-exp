[{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[4,5,6,7],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[8,9,5,10,11,12,13,14,15,16,17],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","state":"shouldBeUsedInOneThread","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[22,23,24,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[26,27,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[26,32,27,28,29,33,30,34,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,0,76,77,78,79,80,81,82,18,4,83,84,85,8,9,86,5,87,10,11,88,12,89,90,91,92,93,94,95,96,97,13,98,99,6,100,14,101,102,23,103,104,105,106,107,108,109,110,111,112,113,15,114,16,115,116,117,118,119,120,121,17,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,24,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,2,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,3,227,228,229,31,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,7,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,19,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[314,93,99,102],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[315,316],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[317,318,34,35,35,36,36,39,41,45,46,47,48,50,51,77,78,79,80,138,140,319,147,148,320,149,150,151,152,153,154,155,156,24,158,159,160,161,162,321,163,164,165,179,322,180,209,216,292,293,294,19],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[97],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[15,16,116,117,118,121,17,122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[323,324,325],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[315,326,327,316,328],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[26,27,28,29,30,34,39,41,42,43,44,45,46,47,48,49,50,51,52,54,56,57,63,64,65,67,69,70,71,74,75,76,77,78,79,80,81,82,18,4,83,84,85,8,9,86,5,87,10,11,88,89,90,91,92,93,94,95,96,97,13,98,99,100,14,101,102,110,15,114,115,116,119,120,121,17,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,145,148,149,151,152,154,156,24,157,158,159,160,162,163,164,165,166,167,168,172,173,174,175,179,180,186,187,189,191,195,197,198,200,201,204,205,208,209,222,224,225,227,228,229,31,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,257,260,262,263,264,265,266,267,293,294,19],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.LastControl:92","failures":[8,9,5,10,11,12,13,14,15,16,17],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[329,26,32,27,28,330,29,33,331,317,318,332,30,37,38,39,40,42,43,44,45,48,49,52,53,333,54,55,56,57,58,62,63,64,65,66,67,68,69,70,72,73,74,75,0,76,77],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[334,335,194,202,336,337],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[34,41,45,46,47,48,49,50,51,77,78,79,80,4,110,148,149,151,152,154,156,157,158,160,209,229,293,294,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[108,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[110],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[26,32,27,28,29,33,30,34,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,56,57,62,63,64,65,67,69,70,71,74,75,0,76,77,78,79,80,81,82,18,4,83,84,85,8,9,86,5,87,10,11,88,89,90,91,92,93,94,95,96,97,13,98,99,100,14,101,102,106,107,108,109,110,111,112,113,15,114,115,116,119,120,121,17,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,141,142,143,144,145,146,148,149,151,152,154,156,24,157,158,159,160,162,163,164,165,166,167,168,172,173,174,175,176,177,178,179,180,186,187,188,189,190,191,192,2,195,197,198,200,201,204,205,208,209,210,211,212,213,214,215,216,217,219,220,222,224,225,226,3,227,228,229,31,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,19,296,303,304,305,306,307,308,309,310,311,313],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[338,339,340,341,342,343,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[142,145,146,345],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[346],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[347,348],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[0,1,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[188,349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[37,38,39,40,63,70,76,168,179,190,200,205,210,211,212,213,214,215,220,226,3,258,260,262,263,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,350],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[329,26,32,27,28,330,29,33,331,317,318,332,30,34,35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,333,54,55,56,57,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,0,76,77,78,79,80,81,82,18,4,83,84,85,8,9,86,5,87,10,11,88,12,89,90,91,92,93,94,95,96,97,13,98,99,6,100,14,101,102,23,103,104,105,106,107,108,109,110,111,112,113,15,114,16,115,116,117,118,119,120,121,17,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,154,156,24,157,158,159,160,162,321,163,164,165,166,167,168,172,173,174,175,176,177,178,179,322,180,186,187,188,189,190,191,192,2,193,351,194,195,196,197,198,199,352,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,3,227,228,229,31,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,353,354,355,356,357,358,359,360,361,7,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,19,295,362,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[54,63,69,70,75,141,189,191,195,200,204,205,208],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[363,88,93,102],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[350,315,326,327,316,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":9,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":200,"org.easymock.tests2.UsageTest.argumentsOrdered":73,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":213,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":68,"org.easymock.tests2.StubTest.stubWithReturnValue":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":344,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":329,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":241,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":100,"org.easymock.tests2.SerializationTest.testAllMockedMethod":140,"org.easymock.tests2.DelegateToTest.testReturnException":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":211,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":192,"org.easymock.tests.MockingTest.testPartialClassMocking":293,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":335,"org.easymock.samples.SupportTest.voteForRemovals":30,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":22,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":269,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":78,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":2,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":142,"org.easymock.tests.UsageExpectAndThrowTest.object":279,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":44,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":339,"org.easymock.tests2.DelegateToTest.testWrongClass":111,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":186,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":187,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":224,"org.easymock.tests2.UsageTest.wrongArguments":66,"org.easymock.tests.UsageStrictMockTest.range":197,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":170,"org.easymock.samples.ExampleTest.answerVsDelegate":32,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":280,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":158,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":151,"org.easymock.tests2.CaptureTest.testPrimitive":115,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":227,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":288,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":206,"org.easymock.tests.UsageTest.moreThanOneArgument":201,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":157,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":169,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":306,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":291,"org.easymock.tests2.CaptureTest.testCaptureNone":120,"org.easymock.tests.UsageUnorderedTest.message":188,"org.easymock.tests.UsageVerifyTest.twoReturns":191,"org.easymock.tests.UsageVarargTest.varargByteAccepted":360,"org.easymock.tests2.ThreadingTest.testThreadSafe":81,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":252,"org.easymock.tests.UsageTest.argumentsOrdered":207,"org.easymock.tests.UsageVarargTest.varargIntAccepted":354,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":299,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":228,"org.easymock.tests2.CaptureTest.testCapture_2617107":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":343,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":3,"org.easymock.tests2.UsageConstraintsTest.any":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":150,"org.easymock.tests2.StubTest.stub":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":231,"org.easymock.tests.UsageExpectAndThrowTest.longType":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":212,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":55,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":52,"org.easymock.tests2.SerializationTest.testClass":138,"org.easymock.tests.LimitationsTest.mockNativeMethod":209,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":251,"org.easymock.tests2.AnswerTest.answer":141,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":180,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":12,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":61,"org.easymock.tests2.CaptureTest.testAnd":15,"org.easymock.tests2.UsageTest.strictResetToDefault":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":321,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":58,"org.easymock.tests2.NameTest.nameForMocksControl":105,"org.easymock.tests2.MockedExceptionTest.testMockedException":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":174,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":205,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":256,"org.easymock.tests2.DelegateToTest.testDelegate":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":273,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":19,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":152,"org.easymock.tests.MockingTest.testNicePartialClassMocking":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":284,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":160,"org.easymock.tests2.CaptureTest.testCaptureLast":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":214,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":313,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":11,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":185,"org.easymock.tests.MockingTest.testTwoMocks":292,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":312,"org.easymock.tests2.CaptureTest.testCapture1_2446744":116,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":232,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":59,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":72,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":101,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":323,"org.easymock.tests.UsageThrowableTest.throwError":260,"org.easymock.tests.UsageStrictMockTest.differentMethods":198,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":326,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":18,"org.easymock.tests2.MockBuilderTest.testCreateMockString":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":308,"org.easymock.tests.UsageExpectAndThrowTest.floatType":271,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":95,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":144,"org.easymock.tests.UsageVerifyTest.twoThrows":190,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":79,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":229,"org.easymock.samples.ExampleTest.voteAgainstRemoval":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":270,"org.easymock.tests2.UsageTest.niceToStrict":67,"org.easymock.tests2.ThreadingTest.testChangeDefault":324,"org.easymock.tests2.UsageConstraintsTest.testNotNull":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":267,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":37,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":149,"org.easymock.tests2.UsageTest.defaultResetToNice":71,"org.easymock.tests2.MockBuilderTest.testCreateMock":153,"org.easymock.samples.ExampleTest.voteAgainstRemovals":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":247,"org.easymock.tests.UsageVarargTest.differentLength":357,"org.easymock.tests2.CallbackTest.callback":62,"org.easymock.tests.UsageTest.openCallCountByLastCall":204,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":278,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":130,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":226,"org.easymock.tests.UsageCallCountTest.tooFewCalls":297,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":220,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":243,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":48,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":166,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":92,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":171,"org.easymock.tests.UsageThrowableTest.throwCheckedException":264,"org.easymock.tests2.EasyMockSupportClassTest.testAll":77,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":322,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":286,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":60,"org.easymock.tests2.CaptureTest.testCaptureAll":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":183,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":258,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":50,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.testMatches":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":49,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":307,"org.easymock.tests2.CompareToTest.testGreateOrEqual":363,"org.easymock.samples.ExampleTest.voteForRemovals":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":342,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":83,"org.easymock.tests2.NameTest.nameForNiceMock":104,"org.easymock.tests.UsageVarargTest.allKinds":7,"org.easymock.tests2.DependencyTest.testInterfaceMocking":43,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":341,"org.easymock.samples.BasicClassMockTest.testPrintContent":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":184,"org.easymock.samples.ExampleTest.addDocument":330,"org.easymock.tests2.DelegateToTest.testStubDelegate":110,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":266,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":53,"org.easymock.tests2.AnswerTest.stubAnswer":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":215,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":112,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":195,"org.easymock.tests2.UsageConstraintsTest.greaterThan":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":173,"org.easymock.tests.UsageVarargTest.varargLongAccepted":359,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":165,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":328,"org.easymock.samples.ExampleTest.voteForRemoval":27,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":250,"org.easymock.tests.UsageExpectAndReturnTest.floatType":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":161,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests.UsageThrowableTest.noUpperLimit":261,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":221,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":97,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":216,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":85,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":117,"org.easymock.tests2.SerializationTest.test":139,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":127,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":233,"org.easymock.tests2.UsageConstraintsTest.testSame":87,"org.easymock.samples.SupportTest.addDocument":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":210,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":108,"org.easymock.tests2.CaptureTest.testCaptureFirst":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":128,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":75,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":239,"org.easymock.tests.GenericTest.testPackageScope":179,"org.easymock.tests2.UsageTest.moreThanOneArgument":65,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":4,"org.easymock.tests2.CaptureTest.testCapture2_2446744":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":154,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":301,"org.easymock.tests2.NameTest.nameForMock":23,"org.easymock.tests.UsageExpectAndReturnTest.longType":235,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":244,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":21,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":268,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":285,"org.easymock.tests2.UsageStrictMockTest.differentMethods":57,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":236,"org.easymock.tests.UsageCallCountTest.tooManyCalls":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":175,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":296,"org.easymock.tests2.MockedExceptionTest.testRealException":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":274,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":54,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":348,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":225,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":46,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":362,"org.easymock.tests2.UsageConstraintsTest.testContains":91,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":20,"org.easymock.tests2.NameTest.nameForStrictMock":103,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":39,"org.easymock.tests2.UsageConstraintsTest.testFind":86,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":106,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":159,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":193,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":107,"org.easymock.tests.UsageExpectAndReturnTest.object":242,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":349,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":327,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":13,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":162,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":148,"org.easymock.tests2.UsageStrictMockTest.range":56,"org.easymock.tests2.UsageConstraintsTest.lessThan":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":133,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":356,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":340,"org.easymock.tests.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":257,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":126,"org.easymock.tests2.CaptureTest.testCaptureRightOne":17,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":253,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":338,"org.easymock.tests.UsageRangeTest.combination":172,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":259,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":24,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":219,"org.easymock.tests.UsageTest.wrongArguments":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":237,"org.easymock.tests2.EasyMockSupportTest.testVerify":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":245,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":254,"org.easymock.tests.UsageVarargTest.varargShortAccepted":358,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":316,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":217,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":177,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":300,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":314,"org.easymock.tests2.UsageConstraintsTest.cmpTo":90,"org.easymock.tests.UsageVarargTest.varargCharAccepted":355,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":143,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":333,"org.easymock.tests2.UsageTest.openCallCountByLastCall":69,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests.DefaultClassInstantiatorTest.object":350,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":136,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":176,"org.easymock.tests2.CaptureTest.testCaptureFromStub":122,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":347,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":320,"org.easymock.tests.UsageTest.unexpectedCallWithArray":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":263,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":194,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":246,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":196,"org.easymock.tests2.UsageConstraintsTest.constraints":8,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":275,"org.easymock.samples.ExampleTest.addAndChangeDocument":33,"org.easymock.tests.UsageStrictMockTest.testVerify":352,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":309,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":331,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":182,"org.easymock.tests2.UsageTest.resumeIfFailure":74,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":31,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":230,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":131}}]
