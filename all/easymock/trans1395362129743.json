[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:65","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","bridgeMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[97,98,64,99,73,76,78,100,101,102,103,104,105,106,107,108],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[109,110],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[111,112,113,114,115,116],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[117,118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[24,26,119,120,60,62,121,122,123,124,125,126,127,128,129,130,131,132],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[134],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[25,61,123,124,135,107],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[136,137],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[138,139,98,96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[140,141,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"failures":[4,142,11,44],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[38,143,144,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"control":"lastControl","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:519","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[146,147,20,21,23,148,149,150,52,53,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[151,152,153,154,155,156,157,158,46,50,159],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[160,161],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[16,162,17,18,163,19,164,146,146,147,147,0,20,1,165,21,166,167,22,23,168,169,170,171,24,172,25,26,119,173,174,175,176,4,142,177,178,179,180,181,182,183,184,185,136,140,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,139,201,95,97,202,203,109,204,110,205,206,98,207,208,209,210,211,27,28,29,30,31,32,33,212,35,37,213,214,215,38,216,217,218,219,148,220,221,222,223,224,225,149,150,226,227,40,228,41,42,43,229,230,133,120,231,232,233,234,235,161,236,237,238,239,240,241,242,243,11,44,45,46,47,48,49,50,244,245,246,51,52,53,54,247,248,249,250,251,55,252,253,254,255,256,257,258,259,260,261,262,56,57,58,59,263,264,265,113,60,266,61,62,121,267,63,64,65,66,67,68,268,99,69,70,269,71,72,73,270,74,75,76,77,78,271,272,273,274,275,276,79,80,81,82,122,123,124,137,277,83,84,85,278,279,86,280,281,282,283,284,285,286,287,288,289,290,291,292,101,126,116,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,87,88,89,90,91,309,92,310,311,312,313,93,94,314,315,316,317,318,319,102,320,321,127,322,323,103,128,129,324,130,325,104,131,326,327,105,328,106,107,329,330,331,332,333,334,335,336,132],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[221,232],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":179,"org.easymock.tests2.UsageTest.argumentsOrdered":237,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":12,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":233,"org.easymock.tests2.StubTest.stubWithReturnValue":256,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":70,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":1,"org.easymock.tests2.SerializationTest.testAllMockedMethod":246,"org.easymock.tests2.DelegateToTest.testReturnException":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":272,"org.easymock.tests.MockingTest.testPartialClassMocking":83,"org.easymock.samples.SupportTest.voteForRemovals":21,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":9,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":319,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":52,"org.easymock.tests.UsageExpectAndThrowTest.object":324,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":144,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":194,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":23,"org.easymock.tests2.DelegateToTest.testWrongClass":252,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":93,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":185,"org.easymock.tests2.UsageTest.wrongArguments":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":92,"org.easymock.tests.UsageStrictMockTest.range":61,"org.easymock.samples.ConstructorCalledMockTest.testTax":146,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":259,"org.easymock.samples.ExampleTest.answerVsDelegate":162,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":44,"org.easymock.tests2.UsageConstraintsTest.testNull":181,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":130,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":41,"org.easymock.tests2.CaptureTest.testPrimitive":95,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":313,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":106,"org.easymock.tests.UsageTest.moreThanOneArgument":126,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":258,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":58,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":114,"org.easymock.tests2.CaptureTest.testCaptureNone":204,"org.easymock.tests.UsageUnorderedTest.message":107,"org.easymock.tests.UsageVerifyTest.twoReturns":124,"org.easymock.tests.UsageVarargTest.varargByteAccepted":306,"org.easymock.tests2.ThreadingTest.testThreadSafe":213,"org.easymock.tests.UsageTest.argumentsOrdered":297,"org.easymock.tests.UsageVarargTest.varargIntAccepted":301,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":285,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":166,"org.easymock.tests2.CaptureTest.testCapture_2617107":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":87,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":227,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":312,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":15,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":228,"org.easymock.tests2.UsageConstraintsTest.any":136,"org.easymock.tests2.StubTest.stub":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":91,"org.easymock.tests.UsageExpectAndThrowTest.longType":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":273,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":289,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.SerializationTest.testClass":244,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":11,"org.easymock.tests.LimitationsTest.mockNativeMethod":86,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":4,"org.easymock.tests2.AnswerTest.answer":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":176,"org.easymock.tests2.CaptureTest.testAnd":200,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":212,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":153,"org.easymock.tests2.NameTest.nameForMocksControl":250,"org.easymock.tests2.MockedExceptionTest.testMockedException":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":81,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":295,"org.easymock.tests2.DelegateToTest.testDelegate":253,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":127,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":42,"org.easymock.tests.MockingTest.testNicePartialClassMocking":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":326,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":32,"org.easymock.tests2.CaptureTest.testCaptureLast":109,"org.easymock.tests2.CompareToTest.testCompareEqual":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":275,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":318,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":195,"org.easymock.tests2.CaptureTest.testCapture1_2446744":97,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":159,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":104,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":174,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":236,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":198,"org.easymock.tests.UsageThrowableTest.throwError":329,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":288,"org.easymock.tests.UsageStrictMockTest.differentMethods":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":6,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":215,"org.easymock.tests2.MockBuilderTest.testCreateMockString":229,"org.easymock.tests.UsageExpectAndThrowTest.floatType":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":263,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":190,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":209,"org.easymock.tests.UsageVerifyTest.twoThrows":123,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":53,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":88,"org.easymock.samples.ExampleTest.voteAgainstRemoval":18,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":35,"org.easymock.tests2.UsageTest.niceToStrict":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":102,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":158,"org.easymock.tests2.UsageConstraintsTest.testNotNull":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":336,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":240,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":40,"org.easymock.tests2.UsageTest.defaultResetToNice":161,"org.easymock.samples.ExampleTest.voteAgainstRemovals":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":74,"org.easymock.tests2.CallbackTest.callback":254,"org.easymock.tests.UsageTest.openCallCountByLastCall":294,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":111,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":129,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":142,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":257,"org.easymock.tests.UsageCallCountTest.tooFewCalls":283,"org.easymock.tests.UsageOverloadedMethodTest.overloading":278,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":47,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":187,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":110,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":260,"org.easymock.tests.UsageThrowableTest.throwCheckedException":333,"org.easymock.tests2.EasyMockSupportClassTest.testAll":51,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":105,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":316,"org.easymock.tests2.CaptureTest.testCaptureAll":139,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":277,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":46,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":290,"org.easymock.tests2.UsageConstraintsTest.testMatches":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":48,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":59,"org.easymock.samples.ExampleTest.voteForRemovals":19,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":134,"org.easymock.tests2.NameTest.nameForNiceMock":249,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":216,"org.easymock.tests.UsageVarargTest.allKinds":308,"org.easymock.tests2.DependencyTest.testInterfaceMocking":22,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":317,"org.easymock.samples.BasicClassMockTest.testPrintContent":167,"org.easymock.samples.ExampleTest.addDocument":163,"org.easymock.tests2.DelegateToTest.testStubDelegate":55,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":335,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":170,"org.easymock.tests2.AnswerTest.stubAnswer":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":13,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":118,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests2.UsageConstraintsTest.greaterThan":191,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":80,"org.easymock.tests.UsageVarargTest.varargLongAccepted":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":36,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":121,"org.easymock.samples.ExampleTest.voteForRemoval":17,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":77,"org.easymock.tests.UsageExpectAndReturnTest.floatType":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":147,"org.easymock.tests.UsageThrowableTest.noUpperLimit":330,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":14,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":309,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":230,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":177,"org.easymock.tests2.SerializationTest.test":245,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":219,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":64,"org.easymock.tests2.UsageConstraintsTest.testSame":182,"org.easymock.samples.SupportTest.addDocument":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":271,"org.easymock.tests2.CaptureTest.testCaptureFirst":207,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":148,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":239,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":145,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":99,"org.easymock.tests.GenericTest.testPackageScope":261,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":38,"org.easymock.tests2.CaptureTest.testCapture2_2446744":98,"org.easymock.tests2.UsageTest.moreThanOneArgument":120,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":100,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":307,"org.easymock.tests2.NameTest.nameForMock":247,"org.easymock.tests.UsageExpectAndReturnTest.longType":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":314,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":327,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":56,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":131,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":82,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":282,"org.easymock.tests2.MockedExceptionTest.testRealException":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":8,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":322,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":310,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":291,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":45,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":281,"org.easymock.tests2.NameTest.nameForStrictMock":248,"org.easymock.tests2.UsageConstraintsTest.testContains":186,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":242,"org.easymock.tests2.UsageConstraintsTest.testFind":180,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":279,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":31,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":169,"org.easymock.tests.UsageExpectAndReturnTest.object":269,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":33,"org.easymock.tests.ErrorMessageTest.testGetters":135,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":7,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":224,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":10,"org.easymock.tests.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":137,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":218,"org.easymock.tests2.CaptureTest.testCaptureRightOne":205,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":143,"org.easymock.tests2.UsageConstraintsTest.testOr":183,"org.easymock.tests.UsageRangeTest.combination":79,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":151,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":299,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":28,"org.easymock.tests.UsageTest.wrongArguments":293,"org.easymock.tests2.MockBuilderTest.testWithConstructor":152,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":292,"org.easymock.tests2.EasyMockSupportTest.testVerify":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":73,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":108,"org.easymock.tests.UsageVarargTest.varargShortAccepted":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageConstraintsTest.cmpTo":140,"org.easymock.tests.UsageVarargTest.varargCharAccepted":302,"org.easymock.tests2.CaptureTest.testCaptureMultiple":138,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests2.UsageTest.openCallCountByLastCall":234,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":150,"org.easymock.tests2.CaptureTest.testCaptureFromStub":206,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":286,"org.easymock.tests.UsageTest.unexpectedCallWithArray":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":103,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":332,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":113,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":2,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":270,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":34,"org.easymock.tests2.UsageConstraintsTest.constraints":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":323,"org.easymock.samples.ExampleTest.addAndChangeDocument":164,"org.easymock.tests.CapturesMatcherTest.test":96,"org.easymock.tests.UsageStrictMockTest.testVerify":267,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":76,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":0,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":315,"org.easymock.tests2.UsageTest.resumeIfFailure":238,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":89,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":90,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":222}}]
