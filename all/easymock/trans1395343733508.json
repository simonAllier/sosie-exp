[{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[285],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[66,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[274],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[330,331,332,34,35,36,37,38,39,40,333,334,335,66,67,329,336,245],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[2,2,3,3,5,6,8,9,10,11,13,15,337,338,339,332,29,30,31,32,33,36,37,40,334,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,67,69,70,340,341,0,342,73,74,75,76,77,78,79,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,343,344,345,120,127,346,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,347,348,168,169,170,171,172,173,174,175,349,350,351,352,353,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,209,211,212,213,216,217,220,222,223,225,230,354,355,231,232,233,238,239,241,242,243,244,246,247,249,250,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,300,302,303,304,305,306,307,309,310,313,314,315,316,317,318,319,320,356,321,322,323,357,324,325,326,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[358,359,360,361],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[2,2,3,3,6,16,17,362,363,364,365,335,41,42,43,366,101,127,128,346,152,156,157,158,159,160,161,162,163,164,225,238,240,241,242,243,244,245,246,367,368,247,248,249,250,251,252,253,254,255,256,257,259,260,293,294,296,297,298,299,300,369,301,302,303,304,370,371,305,372,325,326,327],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[268,269,270,271,272,273,274,275,373,276,285,286,290,291,306,307,308,309,316,317],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[374,375,376,377,378,379,256,260,380,381,382],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[383,384,306,307,308,309,310,311,312,313,315,385,316,317,318,319],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[87,386,182,184,216],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[38,214,387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"o","myArgument":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matched"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[232,233],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[23,388,29,30,31,32,33,34,35,38,39,40,333,334,362,389,390,363,391,392,64,66,67,68,69,70,71,393,394,99,100,118,120,121,124,125,126,155,158,159,160,165,395,396,181,190,192,194,195,197,198,204,205,207,208,209,210,214,215,216,217,218,220,221,222,223,224,226,227,228,229,245,246,367,249,250,251,252,253,255,256,259,260,268,282,294,301,304,371,305,397,320,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[98,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[2,2,3,3,6,16,17,362,363,335,41,42,43,101,127,128,346,399,152,156,157,158,159,160,161,162,163,396,225,238,240,241,242,243,244,245,246,367,247,248,249,250,251,252,253,254,255,256,257,259,260,293,294,296,297,298,299,300,301,302,303,304,371,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[276],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":269,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":32,"org.easymock.tests2.UsageTest.argumentsOrdered":215,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":397,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":210,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":7,"org.easymock.tests2.DelegateToTest.testReturnException":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":103,"org.easymock.tests.MockingTest.testPartialClassMocking":41,"org.easymock.tests.MockClassControlTest.testToString":158,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":342,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":371,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":132,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":242,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":203,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":75,"org.easymock.tests2.UsageTest.wrongArguments":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":94,"org.easymock.samples.ExampleTest.answerVsDelegate":9,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":363,"org.easymock.tests2.UsageConstraintsTest.testNull":271,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":296,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":163,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":198,"org.easymock.tests2.CaptureTest.testPrimitive":309,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":79,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":151,"org.easymock.tests.UsageTest.moreThanOneArgument":33,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":178,"org.easymock.tests.UsageTest.argumentsOrdered":39,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":349,"org.easymock.tests.UsageVarargTest.varargIntAccepted":20,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":108,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":112,"org.easymock.tests.ReplayStateInvalidUsageTest.times":88,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":320,"org.easymock.tests2.AnswerTest.answer":230,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":386,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":237,"org.easymock.tests2.CaptureTest.testAnd":306,"org.easymock.tests2.UsageTest.strictResetToDefault":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":301,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":193,"org.easymock.tests2.DelegateToTest.testDelegate":324,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":353,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":117,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":333,"org.easymock.tests2.CaptureTest.testCapture1_2446744":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":235,"org.easymock.tests.UsageThrowableTest.throwError":168,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":82,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":390,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":180,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":381,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":341,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":396,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":133,"org.easymock.tests2.UsageTest.niceToStrict":209,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":247,"org.easymock.tests2.MockBuilderTest.testCreateMock":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":141,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":329,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":194,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":92,"org.easymock.tests.UsageOverloadedMethodTest.overloading":130,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":98,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":280,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":55,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":279,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":315,"org.easymock.tests.MockClassControlTest.testEquals":162,"org.easymock.tests2.EasyMockSupportClassTest.testAll":241,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":128,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":236,"org.easymock.tests2.CaptureTest.testCaptureAll":307,"org.easymock.tests.MockNameTest.defaultName":388,"org.easymock.tests2.UsageConstraintsTest.testMatches":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":179,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":80,"org.easymock.samples.ExampleTest.voteForRemovals":13,"org.easymock.tests.UsageVarargTest.allKinds":28,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":116,"org.easymock.samples.BasicClassMockTest.testPrintContent":17,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":174,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":107,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":357,"org.easymock.tests2.UsageConstraintsTest.greaterThan":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":182,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":304,"org.easymock.samples.ExampleTest.voteForRemoval":10,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":262,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":370,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":299,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":101,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":191,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":102,"org.easymock.tests2.CaptureTest.testCaptureFirst":319,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":356,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":192,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":217,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":51,"org.easymock.tests2.UsageTest.moreThanOneArgument":207,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":264,"org.easymock.tests2.CaptureTest.testCapture2_2446744":318,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":252,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":27,"org.easymock.tests.GenericTest.testBridgedEquals":399,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":125,"org.easymock.tests.UsageExpectAndReturnTest.longType":47,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":150,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":288,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":344,"org.easymock.tests.UsageCallCountTest.tooManyCalls":126,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":255,"org.easymock.tests.MockingTest.testNiceClassMocking":366,"org.easymock.tests.MockingTest.testClassMocking":365,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":119,"org.easymock.tests2.UsageConstraintsTest.testContains":278,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":327,"org.easymock.tests2.UsageConstraintsTest.testFind":270,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":131,"org.easymock.tests.MockTypeTest.fromEasyMockClass":389,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":186,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":64,"org.easymock.tests.UsageExpectAndReturnTest.object":54,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":197,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":22,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":167,"org.easymock.tests.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":73,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":374,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":60,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":97,"org.easymock.tests.MockClassControlTest.testHashCode":161,"org.easymock.tests2.EasyMockSupportTest.testVerify":201,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":234,"org.easymock.tests.UsageVarargTest.varargCharAccepted":21,"org.easymock.tests2.CaptureTest.testCaptureMultiple":384,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":219,"org.easymock.tests2.UsageTest.openCallCountByLastCall":211,"org.easymock.tests.DefaultClassInstantiatorTest.object":164,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":200,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":337,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":171,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":160,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":138,"org.easymock.tests.CapturesMatcherTest.test":383,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":343,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":244,"org.easymock.tests2.UsageTest.resumeIfFailure":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":105,"org.easymock.tests2.StubTest.stubWithReturnValue":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":377,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":53,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":289,"org.easymock.tests2.SerializationTest.testAllMockedMethod":240,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":347,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":144,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":348,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":354,"org.easymock.tests.UsageExpectAndThrowTest.object":142,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":286,"org.easymock.tests2.DelegateToTest.testWrongClass":323,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":153,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":154,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.UsageStrictMockTest.range":69,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":249,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":93,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":330,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":0,"org.easymock.tests2.CaptureTest.testCaptureNone":314,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":359,"org.easymock.tests.UsageUnorderedTest.message":155,"org.easymock.tests.UsageVerifyTest.twoReturns":31,"org.easymock.tests.UsageVarargTest.varargByteAccepted":26,"org.easymock.tests2.ThreadingTest.testThreadSafe":261,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":123,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":395,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":16,"org.easymock.tests2.CaptureTest.testCapture_2617107":308,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":78,"org.easymock.tests2.UsageConstraintsTest.any":276,"org.easymock.tests2.StubTest.stub":187,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":87,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageExpectAndThrowTest.longType":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":104,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":86,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":221,"org.easymock.tests2.SerializationTest.testClass":238,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":305,"org.easymock.tests.LimitationsTest.mockNativeMethod":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":63,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":346,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests2.NameTest.nameForMocksControl":229,"org.easymock.tests2.MockedExceptionTest.testMockedException":326,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":136,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":43,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":293,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":250,"org.easymock.tests.MockingTest.testNicePartialClassMocking":42,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":298,"org.easymock.tests2.CaptureTest.testCaptureLast":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":334,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":260,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":274,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":287,"org.easymock.tests.MockingTest.testTwoMocks":335,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":140,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":214,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":291,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":361,"org.easymock.samples.ExampleTest.removeNonExistingDocument":14,"org.easymock.tests.UsageStrictMockTest.differentMethods":70,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":84,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":263,"org.easymock.tests2.MockBuilderTest.testCreateMockString":253,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":156,"org.easymock.tests.UsageExpectAndThrowTest.floatType":134,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":282,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":231,"org.easymock.tests.UsageVerifyTest.twoThrows":30,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":243,"org.easymock.samples.ExampleTest.voteAgainstRemoval":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":303,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":382,"org.easymock.tests2.UsageConstraintsTest.testNotNull":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":175,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":325,"org.easymock.tests2.UsageTest.defaultResetToNice":213,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":59,"org.easymock.tests.UsageVarargTest.differentLength":23,"org.easymock.tests2.CallbackTest.callback":204,"org.easymock.tests2.UsageConstraintsTest.equals":387,"org.easymock.tests.UsageTest.openCallCountByLastCall":36,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":77,"org.easymock.tests.UsageCallCountTest.tooFewCalls":121,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":95,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":360,"org.easymock.tests.UsageThrowableTest.throwCheckedException":172,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":331,"org.easymock.tests.MockingTest.testStrictClassMocking":364,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":74,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":398,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":256,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":89,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":258,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":233,"org.easymock.tests.ObjectMethodsTest.testHashCode":166,"org.easymock.tests2.NameTest.nameForNiceMock":228,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":265,"org.easymock.tests2.DependencyTest.testInterfaceMocking":202,"org.easymock.samples.ExampleTest.addDocument":12,"org.easymock.tests2.DelegateToTest.testStubDelegate":322,"org.easymock.tests2.AnswerTest.stubAnswer":232,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":67,"org.easymock.tests.UsageVarargTest.varargLongAccepted":25,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":71,"org.easymock.tests.UsageExpectAndReturnTest.floatType":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":62,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":225,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests.UsageThrowableTest.noUpperLimit":169,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":284,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":267,"org.easymock.tests2.SerializationTest.test":239,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":45,"org.easymock.tests2.UsageConstraintsTest.testSame":272,"org.easymock.samples.SupportTest.addDocument":4,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":85,"org.easymock.tests.GenericTest.testPackageScope":127,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":352,"org.easymock.tests2.NameTest.nameForMock":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":56,"org.easymock.tests2.UsageStrictMockTest.differentMethods":223,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":379,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":48,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":146,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":184,"org.easymock.tests2.MockedExceptionTest.testRealException":328,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":392,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":76,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":91,"org.easymock.tests2.NameTest.nameForStrictMock":227,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":368,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":185,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":297,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":372,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":246,"org.easymock.tests2.UsageStrictMockTest.range":222,"org.easymock.tests2.UsageConstraintsTest.lessThan":292,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":190,"org.easymock.tests2.CaptureTest.testCaptureRightOne":316,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":358,"org.easymock.tests2.UsageConstraintsTest.testOr":273,"org.easymock.tests.UsageRangeTest.combination":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":294,"org.easymock.tests.UsageTest.wrongArguments":35,"org.easymock.tests2.MockBuilderTest.testWithConstructor":375,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":49,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":57,"org.easymock.tests.UsageVarargTest.varargShortAccepted":24,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":124,"org.easymock.tests2.UsageConstraintsTest.cmpTo":277,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":355,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":212,"org.easymock.tests2.CaptureTest.testCaptureFromStub":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":81,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":367,"org.easymock.tests.UsageTest.unexpectedCallWithArray":34,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":122,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":378,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":58,"org.easymock.tests2.CaptureTest.testCapture":385,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":68,"org.easymock.tests2.UsageConstraintsTest.constraints":268,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageStrictMockTest.testVerify":72,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":65,"org.easymock.tests2.CompareToTest.testGreateThan":400,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":114,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":110,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":111,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":195}}]
