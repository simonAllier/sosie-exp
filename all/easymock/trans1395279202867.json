[{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[5,6,7,8,9,10,11,1,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:37","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.String).matcher(((java.lang.String)(java.lang.Object))).find())","type":"CtReturnImpl"},"failures":[60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[61,19,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,34,36,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,38,39,40,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,52,125,126,127,4,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,60,151,152,153,154,155,156,157,158,159,160,161,56,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,14,1,2,12,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,57,58,59,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[61,20,21,22,23,64,215,30,216,217,218,219,69,33,35,36,220,37,221,39,40,222,223,123,53,125,224,54,55,128,129,130,225,134,226,138,144,146,149,56,227,181,185,186,189,228,229,58,59],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[230,231,232,233,5,6,234,235,236,237,1,12,13,238,239,240,192,241,242,193,243,244,245,246,247,248,249,250,251,194,252,253,254,255,256,195,257,258,200,204,259],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[20,24,26,37,42,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[230,231,232,233,5,6,234,235,236,237,260,1,12,13,238,239,240,192,241,242,193,243,244,245,246,247,248,249,250,251,194,252,253,254,255,256,195,257,258,200,204,259],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[261,262,263,264,265,61,19,20,21,62,63,22,23,64,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,216,309,310,311,312,313,314,315,316,317,318,319,320,217,218,219,321,65,322,323,324,325,66,67,326,68,327,328,329,69,70,71,72,330,331,332,333,334,73,335,74,75,76,31,32,336,33,77,78,337,338,79,34,35,36,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,339,101,102,103,104,105,106,340,341,342,343,344,345,107,346,108,347,348,349,350,351,352,353,354,355,109,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,220,412,37,38,221,39,40,413,414,110,111,415,416,417,418,419,420,421,422,423,223,424,425,426,427,428,429,430,431,112,113,114,115,116,432,117,433,118,434,119,120,435,121,436,437,230,231,438,439,440,122,123,124,52,53,125,224,126,127,4,54,55,128,129,441,232,130,442,233,443,131,444,132,5,133,445,6,225,134,235,226,446,447,135,136,137,138,139,140,141,142,448,15,143,449,450,451,144,145,146,452,453,147,148,149,150,454,60,151,152,153,154,155,455,156,157,158,159,160,161,56,162,163,164,165,166,456,167,168,169,170,171,457,458,459,172,460,461,462,463,464,465,466,173,467,468,469,470,174,175,176,177,178,227,471,472,473,474,475,179,476,477,478,479,480,481,482,483,14,484,485,486,1,2,3,12,13,487,180,181,182,183,184,185,186,187,188,189,190,191,488,489,490,491,492,493,494,495,496,497,498,499,500,238,239,240,192,241,242,193,243,244,245,246,247,248,249,250,251,194,252,253,254,255,256,195,257,258,501,502,503,504,505,196,506,507,508,509,510,511,228,512,57,229,58,59,513,514,197,515,198,199,200,201,516,202,203,204,259,205,206,517,207,208,518,519,209,210,211,212,520,213,214],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[277,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[261,262,263,264,265,61,19,20,21,62,63,22,23,64,266,267,268,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,216,309,310,311,312,313,65,322,33,77,78,337,338,79,352,37,38,110,111,112,113,114,115,116,135,136,143,147,148,149,150,60,151,152,153,154,155,455,156,157,158,159,160,161,56,162,163,164,165,166,456,167,168,169,170,468,470,178,57,515,205,206,517,207,208,518,519,209,210,211,212,520,213,214],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[322,337,348,349,350,351,352,353,465,466,173,467],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[5,6,7,8,9,10,11,1,12,13],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[314,323,324,325,329,107,346,347,354,355,109,356,370,371,372,373,374,375,377,424,425,426,427,428,429,430,431,438,439,137,138,140,141,142,143,450,451,146,452,453,466,173,3,494,498,238,192,242,243,244,247,250,252,253,256,198,201],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[521],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:557","failures":[261,262,263,264,265,61,19,62,63,64,266,267,268,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,314,317,65,322,66,67,68,69,70,71,72,330,332,333,73,74,75,76,32,33,77,78,337,338,79,34,35,36,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,339,101,102,103,104,105,106,107,108,348,349,350,351,352,353,109,362,394,400,38,39,40,110,111,415,416,417,418,419,420,421,422,423,112,113,114,115,116,117,118,434,119,120,121,437,230,230,231,231,122,123,124,52,125,126,127,4,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,60,151,152,153,154,155,156,157,158,159,160,161,56,162,163,164,165,166,167,168,169,170,171,457,458,459,172,460,465,466,173,467,468,470,174,175,176,177,178,227,179,482,483,14,484,485,486,1,2,12,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,57,58,59,514,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,520,213,214],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[149,150,151,153,154,455,164,168,205,517,212],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[138],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[19,21,22,23,33,34,35,36,37,38,39,40,52,53,54,55,490,491,492,493,57,58,59],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[261,262,263,264,66,67,68,69,70,71,72,77,80,81,82,83,84,85,88,89,91,92,93,95,96,97,98,99,109,38,39,40,110,111,112,113,114,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,177,14,12,192,193,194,195,57,58,59,198,199,200,201,202,203,204],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[394],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[230,231,232,233,5,6,234,235,236,237,1,12,13,238,239,240,192,241,242,193,243,244,245,246,247,248,249,250,251,194,252,253,254,255,256,195,257,258,200,204,259],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[155,160,170,522],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[261,82,84,98,99,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[456,168,468,470],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:972","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[5,6,7,8,9,10,11,1,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[388,482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":150,"org.easymock.tests2.UsageTest.argumentsOrdered":55,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":388,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":224,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":433,"org.easymock.tests2.DelegateToTest.testReturnException":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":349,"org.easymock.tests.MockingTest.testPartialClassMocking":66,"org.easymock.tests.MockClassControlTest.testToString":426,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":489,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":246,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":283,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":155,"org.easymock.tests2.UsageTest.wrongArguments":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":77,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":511,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":404,"org.easymock.samples.ExampleTest.answerVsDelegate":434,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":274,"org.easymock.tests2.UsageConstraintsTest.testNull":151,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":328,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":140,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":431,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":189,"org.easymock.tests2.CaptureTest.testPrimitive":207,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":79,"org.easymock.tests.UsageTest.moreThanOneArgument":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":302,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":263,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":419,"org.easymock.tests.UsageTest.argumentsOrdered":23,"org.easymock.tests.UsageVarargTest.varargIntAccepted":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":393,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":112,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":480,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":116,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":45,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests.ReplayStateInvalidUsageTest.times":365,"org.easymock.tests2.DependencyTest.testClassMocking":446,"org.easymock.tests2.AnswerTest.answer":171,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":464,"org.easymock.tests2.CaptureTest.testAnd":205,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":271,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":451,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":184,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":71,"org.easymock.tests2.DelegateToTest.testDelegate":486,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":423,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":298,"org.easymock.tests.LimitationsTest.mockFinalMethod":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":352,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":344,"org.easymock.tests2.DependencyTest.testClassMockingSupport":447,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":31,"org.easymock.tests2.CaptureTest.testCapture1_2446744":208,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":462,"org.easymock.tests.UsageThrowableTest.throwError":100,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":359,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":273,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":481,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":265,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":258,"org.easymock.samples.PartialClassMockTest.testGetArea":117,"org.easymock.tests.MockingTest.testInterfaceMocking":326,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":113,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":416,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":411,"org.easymock.tests2.UsageTest.niceToStrict":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":284,"org.easymock.tests2.ThreadingTest.testChangeDefault":18,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":131,"org.easymock.tests2.MockBuilderTest.testCreateMock":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":508,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":292,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":185,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":402,"org.easymock.tests.UsageOverloadedMethodTest.overloading":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":256,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":160,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":333,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":91,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":159,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":211,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":306,"org.easymock.tests.MockClassControlTest.testEquals":430,"org.easymock.tests2.EasyMockSupportClassTest.testAll":192,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":346,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":463,"org.easymock.tests2.CaptureTest.testCaptureAll":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":342,"org.easymock.tests.MockNameTest.defaultName":321,"org.easymock.tests2.UsageConstraintsTest.testMatches":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":264,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":357,"org.easymock.samples.ExampleTest.voteForRemovals":121,"org.easymock.tests.UsageVarargTest.allKinds":313,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":34,"org.easymock.samples.BasicClassMockTest.testPrintContent":439,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":343,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":105,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":228,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":353,"org.easymock.tests2.UsageConstraintsTest.greaterThan":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":11,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":70,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":146,"org.easymock.samples.ExampleTest.voteForRemoval":119,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":452,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":275,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":497,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":448,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":314,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":182,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":348,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":482,"org.easymock.tests2.CaptureTest.testCaptureFirst":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":183,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":87,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":177,"org.easymock.tests2.UsageTest.moreThanOneArgument":52,"org.easymock.tests2.CaptureTest.testCapture2_2446744":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":396,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":134,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":312,"org.easymock.tests.GenericTest.testBridgedEquals":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests.UsageExpectAndReturnTest.longType":83,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":340,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":301,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":456,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":418,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":278,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":25,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":510,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":199,"org.easymock.tests.MockingTest.testNiceClassMocking":329,"org.easymock.tests.MockingTest.testClassMocking":324,"org.easymock.tests2.UsageConstraintsTest.testContains":158,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":316,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":173,"org.easymock.tests2.UsageConstraintsTest.testFind":60,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":76,"org.easymock.tests.MockTypeTest.fromEasyMockClass":272,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":470,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":220,"org.easymock.tests.UsageExpectAndReturnTest.object":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":509,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":308,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":409,"org.easymock.tests.UsageTest.exactCallCountByLastCall":64,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":260,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":420,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":266,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":29,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":96,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":303,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":472,"org.easymock.tests.MockClassControlTest.testHashCode":429,"org.easymock.tests2.EasyMockSupportTest.testVerify":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":249,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":44,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":421,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":281,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":461,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":215,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":515,"org.easymock.tests.UsageVarargTest.varargCharAccepted":307,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":369,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":401,"org.easymock.tests2.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":191,"org.easymock.tests.DefaultClassInstantiatorTest.object":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":280,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":407,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":504,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":471,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":428,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":289,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":277,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":427,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":195,"org.easymock.tests2.UsageTest.resumeIfFailure":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":269,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":351,"org.easymock.tests2.StubTest.stubWithReturnValue":197,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":167,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":89,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":394,"org.easymock.samples.SupportTest.voteForRemovals":122,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":49,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":345,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":295,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":400,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":457,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":268,"org.easymock.tests.UsageExpectAndThrowTest.object":293,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":165,"org.easymock.tests2.DelegateToTest.testWrongClass":484,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":110,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":111,"org.easymock.tests.UsageStrictMockTest.range":39,"org.easymock.samples.ConstructorCalledMockTest.testTax":230,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":499,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":294,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":132,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":238,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":403,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":417,"org.easymock.tests2.CaptureTest.testCaptureNone":210,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":16,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":222,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":311,"org.easymock.tests2.ThreadingTest.testThreadSafe":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":252,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":320,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":438,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":410,"org.easymock.tests2.CaptureTest.testCapture_2617107":517,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":398,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":338,"org.easymock.tests2.UsageConstraintsTest.any":156,"org.easymock.tests2.StubTest.stub":514,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":364,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndThrowTest.longType":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":350,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":374,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":363,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":229,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":179,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":109,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":503,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":513,"org.easymock.tests2.NameTest.nameForMocksControl":493,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":505,"org.easymock.tests2.MockedExceptionTest.testMockedException":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":242,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":63,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":469,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":287,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":137,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":133,"org.easymock.tests.MockingTest.testNicePartialClassMocking":67,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":142,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":501,"org.easymock.tests2.CaptureTest.testCaptureLast":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":32,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":154,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":204,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":166,"org.easymock.tests.MockingTest.testTwoMocks":325,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":259,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":291,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":54,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":169,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":17,"org.easymock.samples.ExampleTest.removeNonExistingDocument":436,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":507,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":473,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":372,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":176,"org.easymock.tests2.ConstraintsToStringTest.andToString":48,"org.easymock.tests2.MockBuilderTest.testCreateMockString":226,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":243,"org.easymock.tests.UsageExpectAndThrowTest.floatType":285,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":240,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":459,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":487,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":194,"org.easymock.samples.ExampleTest.voteAgainstRemoval":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":389,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":145,"org.easymock.tests.LimitationsTest.privateConstructor":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":237,"org.easymock.tests2.UsageConstraintsTest.testNotNull":168,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":465,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":106,"org.easymock.tests2.UsageTest.defaultResetToNice":4,"org.easymock.samples.ExampleTest.voteAgainstRemovals":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":95,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":502,"org.easymock.tests.UsageVarargTest.differentLength":216,"org.easymock.tests2.CallbackTest.callback":227,"org.easymock.tests2.UsageConstraintsTest.equals":454,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":449,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":27,"org.easymock.tests.UsageTest.openCallCountByLastCall":62,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":337,"org.easymock.tests.UsageCallCountTest.tooFewCalls":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":405,"org.easymock.tests.UsageThrowableTest.throwCheckedException":103,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":26,"org.easymock.tests.MockingTest.testStrictClassMocking":323,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":203,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":506,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":200,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":202,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":460,"org.easymock.tests2.CompareToTest.testGreateOrEqual":522,"org.easymock.tests.ObjectMethodsTest.testHashCode":408,"org.easymock.tests2.NameTest.nameForNiceMock":492,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":178,"org.easymock.tests2.DependencyTest.testInterfaceMocking":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.samples.ExampleTest.addDocument":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":253,"org.easymock.tests2.DelegateToTest.testStubDelegate":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":257,"org.easymock.tests2.AnswerTest.stubAnswer":172,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":445,"org.easymock.tests.UsageVarargTest.varargLongAccepted":310,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":98,"org.easymock.tests.UsageExpectAndReturnTest.floatType":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.tests2.ConstraintsToStringTest.orToString":41,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":479,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":163,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests.UsageThrowableTest.noUpperLimit":339,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":148,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":494,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":518,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":371,"org.easymock.tests2.UsageConstraintsTest.testSame":152,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":81,"org.easymock.samples.SupportTest.addDocument":440,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":516,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":244,"org.easymock.tests.GenericTest.testPackageScope":107,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":478,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":327,"org.easymock.tests2.NameTest.nameForMock":490,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":92,"org.easymock.tests2.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":235,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":297,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":72,"org.easymock.tests2.MockedExceptionTest.testRealException":467,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":276,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":391,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":78,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":368,"org.easymock.tests2.NameTest.nameForStrictMock":491,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":443,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":468,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":141,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":498,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":164,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":130,"org.easymock.tests2.UsageStrictMockTest.range":58,"org.easymock.tests2.UsageConstraintsTest.lessThan":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":10,"org.easymock.tests2.CaptureTest.testCaptureRightOne":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":248,"org.easymock.tests2.UsageConstraintsTest.testOr":153,"org.easymock.tests.UsageRangeTest.combination":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":138,"org.easymock.tests.UsageTest.wrongArguments":21,"org.easymock.tests2.MockBuilderTest.testWithConstructor":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":245,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":425,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":379,"org.easymock.tests.UsageVarargTest.varargShortAccepted":309,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":375,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":217,"org.easymock.tests2.UsageConstraintsTest.cmpTo":157,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":381,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.CaptureTest.testCaptureFromStub":520,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":358,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":442,"org.easymock.tests.UsageTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":319,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":234,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":94,"org.easymock.tests2.UsageConstraintsTest.constraints":149,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":221,"org.easymock.samples.ExampleTest.addAndChangeDocument":437,"org.easymock.tests2.ConstraintsToStringTest.notToString":43,"org.easymock.tests.UsageStrictMockTest.testVerify":414,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":432,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":341,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":519,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":114,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":86,"org.easymock.tests.LimitationsTest.abstractClass":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":115,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":186,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":304}}]
