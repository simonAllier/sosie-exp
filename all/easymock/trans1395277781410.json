[{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[8,9,10,11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"i"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:70","failures":[15,16,17,18],"status":-1,"binaryOperator":"(\"between \" + (this.int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[19,8,9,10,20,21,13,22,23,14],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[24,25,26,27,28,29,6,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[33,34,35,36,37],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[24,25,26,27,28],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:262","failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,92,93,2,94,95,96,3,4,97,5,98,99,100,101,102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,19,130,131,132,133,134,135,136,137,138,139,140,141,142,13,22,143,23,14,144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[140,145,144],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[146],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[147],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[148,8,9,10,11,12,21,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[149],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[103,104,150,19,141,142,13,151,22,143,23,14,152],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[142],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[153,36,146,154,155,19,156,157,158,159,160,161,162,163,164,165,166,167,168],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[153,169,170,171,172,173,174,175,176,177,178,103,103,104,104,179,180,181,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,182,183,184,185,34,35,36,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,58,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,59,60,61,62,228,63,64,65,66,67,68,229,230,69,70,231,232,71,233,72,93,2,94,234,73,95,96,235,74,75,76,77,78,79,236,237,238,80,239,240,241,242,243,3,244,245,15,16,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,81,264,265,266,267,268,269,270,271,272,273,82,83,84,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,155,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,108,111,121,127,320,85,86,87,88,321,322,323,324,325,326,19,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,130,345,346,347,131,348,349,350,351,352,353,149,354,355,356,157,159,161,162,163,164,165,166,168,89,357,99,100,358,359,360,90,361,101,102,362,363,364,365,366,367,17,18,368,369,370,371,372,373,374,375,91,376,29,377,6,378,379,380,381,382,7,383,384,385,386,387,388,30,389,390,31,391,392,393,394,395,396,397,398,32,399,400,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[401,358],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[378,7,392],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[153,169,170,171,172,173,174,402,175,176,177,178,103,103,104,104,179,180,181,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,182,183,184,403,185,404,33,34,35,36,37,405,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,58,212,213,214,215,216,217,218,406,407,408,409,410,411,412,219,220,221,222,223,224,225,226,227,59,60,61,413,414,415,416,417,418,419,420,62,228,63,64,65,66,67,68,229,230,69,70,231,232,71,233,146,421,422,154,423,424,72,93,2,94,234,73,95,96,235,74,75,76,77,78,79,236,237,238,80,239,240,241,242,243,3,244,245,15,16,246,247,425,426,248,249,250,427,251,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,252,447,448,449,450,451,253,452,254,453,255,256,257,258,259,260,261,262,263,81,264,265,266,267,268,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,269,270,271,272,273,82,83,84,274,275,276,472,277,278,279,280,281,282,283,284,285,286,473,474,287,475,288,289,476,290,291,292,293,294,295,155,296,150,401,297,298,299,300,477,478,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,320,85,86,87,88,321,322,323,324,325,326,19,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,479,480,481,482,483,342,484,485,486,487,488,489,343,344,130,345,346,347,131,348,349,350,351,352,353,149,354,355,356,157,159,160,490,161,162,163,164,22,165,166,168,491,492,493,494,89,357,99,100,358,359,360,90,361,101,102,362,363,364,365,366,367,17,18,368,369,370,371,372,373,374,375,91,495,496,497,498,499,376,500,501,502,503,504,505,29,377,6,378,506,379,380,381,382,7,383,384,385,386,387,388,30,389,390,31,391,392,393,394,395,396,397,398,32,507,399,508,400,23,14],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[291,297,300,130,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[153,169,170,171,172,173,174,175,176,177,178,103,103,104,104,179,180,181,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,34,35,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,58,218,219,220,221,222,223,224,225,226,227,414,62,228,63,64,65,66,67,68,229,230,69,70,231,232,71,233,72,93,2,94,234,73,95,96,235,74,75,76,77,78,79,240,242,243,3,244,245,15,16,246,247,249,250,251,254,453,255,256,257,258,263,81,264,265,266,267,268,461,463,464,466,469,471,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,290,291,292,293,294,295,296,297,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,108,111,121,127,320,85,86,87,88,321,324,325,326,19,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,130,345,346,347,131,348,349,350,351,353,149,354,356,157,161,162,163,164,166,168,89,357,99,100,358,359,360,90,361,101,102,362,363,364,365,366,367,17,18,368,369,370,371,372,373,374,375,91,376,29,377,6,378,379,380,381,382,7,383,385,386,387,388,30,389,390,31,391,392,393,394,396,397,398,32,399,400,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[140,145,144],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[153,36,146,154,155,19,157,158,159,160,161,163,164,166,167,168],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:108","failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,63,64,65,66,67,68,70,71,72,73,78,80,81,89,90,91],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[437,322,325,326],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[70,446,253,462,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[186,0,509,1,510,511,92,512,232,71,233,93,2,94,95,96,237,239,240,241,3,244,15,16,288,289,513,4,514,515,516,517,97,518,5,519,98,99,100,101,102,366,17,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.ConstructorArgs:77","failures":[140],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[178,181,479,480,481,482,483,342,484,485,486,487,488,489,495,496,497,498,499,376,500,501,502,503,504,505],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,19,130,131,132,133,134,141,142,13,22,520,143,23,14],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":378,"org.easymock.tests2.UsageTest.argumentsOrdered":102,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":441,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":359,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":181,"org.easymock.tests2.DelegateToTest.testReturnException":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":75,"org.easymock.tests.MockingTest.testPartialClassMocking":249,"org.easymock.tests.MockClassControlTest.testToString":415,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":115,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":38,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":374,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":383,"org.easymock.tests2.UsageTest.wrongArguments":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":229,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":489,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":221,"org.easymock.samples.ExampleTest.answerVsDelegate":170,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":154,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":429,"org.easymock.tests2.UsageConstraintsTest.testNull":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":293,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":338,"org.easymock.tests2.CaptureTest.testPrimitive":304,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":57,"org.easymock.tests.UsageTest.moreThanOneArgument":93,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":266,"org.easymock.tests.UsageTest.argumentsOrdered":96,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":213,"org.easymock.tests.UsageVarargTest.varargIntAccepted":276,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":269,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":504,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":273,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":516,"org.easymock.tests.ReplayStateInvalidUsageTest.times":468,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":342,"org.easymock.tests2.AnswerTest.answer":321,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":447,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":372,"org.easymock.tests2.CaptureTest.testAnd":301,"org.easymock.tests2.UsageTest.strictResetToDefault":357,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":333,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":217,"org.easymock.tests2.DelegateToTest.testDelegate":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":53,"org.easymock.tests.LimitationsTest.mockFinalMethod":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":227,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":288,"org.easymock.tests2.CaptureTest.testCapture1_2446744":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":370,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":462,"org.easymock.tests.UsageThrowableTest.throwError":62,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":422,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":505,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":268,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":129,"org.easymock.samples.PartialClassMockTest.testGetArea":153,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":463,"org.easymock.tests.MockingTest.testInterfaceMocking":427,"org.easymock.tests2.CompareToTest.testLessOrEqual":28,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":183,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":39,"org.easymock.tests2.UsageTest.niceToStrict":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":140,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":161,"org.easymock.tests2.MockBuilderTest.testCreateMock":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":124,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":486,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":47,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":334,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":84,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":254,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":219,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":137,"org.easymock.tests.UsageOverloadedMethodTest.overloading":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":120,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":30,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":198,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":262,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":388,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":310,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":472,"org.easymock.tests.MockClassControlTest.testEquals":419,"org.easymock.tests2.EasyMockSupportClassTest.testAll":108,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":35,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":97,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":225,"org.easymock.tests2.CaptureTest.testCaptureAll":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":371,"org.easymock.tests.MockNameTest.defaultName":405,"org.easymock.tests2.UsageConstraintsTest.testMatches":389,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":267,"org.easymock.samples.ExampleTest.voteForRemovals":174,"org.easymock.tests.UsageVarargTest.allKinds":284,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":232,"org.easymock.samples.BasicClassMockTest.testPrintContent":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":226,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":67,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":79,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":355,"org.easymock.tests2.UsageConstraintsTest.greaterThan":31,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":109,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":208,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":300,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":412,"org.easymock.samples.ExampleTest.voteForRemoval":171,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":477,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":316,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":423,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":155,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":89,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":218,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":331,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":74,"org.easymock.tests2.CaptureTest.testCaptureFirst":314,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":332,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":363,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":194,"org.easymock.tests2.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.CaptureTest.testCapture2_2446744":313,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":166,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":283,"org.easymock.tests.GenericTest.testBridgedEquals":37,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":138,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":135,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":260,"org.easymock.tests.UsageExpectAndReturnTest.longType":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":223,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":329,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":56,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":395,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":54,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":264,"org.easymock.tests.UsageCallCountTest.tooManyCalls":261,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":509,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":488,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":66,"org.easymock.tests.MockingTest.testNiceClassMocking":430,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":344,"org.easymock.tests.MockingTest.testClassMocking":426,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":453,"org.easymock.tests2.UsageConstraintsTest.testContains":387,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":158,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":87,"org.easymock.tests2.UsageConstraintsTest.testFind":379,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":81,"org.easymock.tests.MockTypeTest.fromEasyMockClass":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":400,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":242,"org.easymock.tests.UsageExpectAndReturnTest.object":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":487,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":337,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":9,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":278,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":457,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":139,"org.easymock.tests.UsageTest.exactCallCountByLastCall":235,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":214,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":92,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":203,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":238,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":496,"org.easymock.tests.MockClassControlTest.testHashCode":418,"org.easymock.tests2.EasyMockSupportTest.testVerify":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":118,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":515,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":83,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":369,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":507,"org.easymock.tests.UsageVarargTest.varargCharAccepted":277,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":452,"org.easymock.tests2.UsageTest.openCallCountByLastCall":360,"org.easymock.tests.DefaultClassInstantiatorTest.object":406,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":145,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":340,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":82,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":455,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":482,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":495,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":417,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":204,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":59,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":517,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":127,"org.easymock.tests2.UsageTest.resumeIfFailure":362,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":77,"org.easymock.tests2.StubTest.stubWithReturnValue":91,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":196,"org.easymock.tests2.SerializationTest.testAllMockedMethod":328,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":252,"org.easymock.samples.SupportTest.voteForRemovals":177,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":498,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":50,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":253,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":322,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":404,"org.easymock.tests.UsageExpectAndThrowTest.object":48,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":393,"org.easymock.tests2.DelegateToTest.testWrongClass":354,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":285,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":286,"org.easymock.samples.ConstructorCalledMockTest.testTax":103,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":493,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":343,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":136,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":163,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":105,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":220,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":0,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":184,"org.easymock.tests2.CaptureTest.testCaptureNone":309,"org.easymock.tests.UsageUnorderedTest.message":186,"org.easymock.tests.UsageVerifyTest.twoReturns":233,"org.easymock.tests.UsageVarargTest.varargByteAccepted":282,"org.easymock.tests2.ThreadingTest.testThreadSafe":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":122,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":258,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":458,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":179,"org.easymock.tests2.CaptureTest.testCapture_2617107":303,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":98,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":70,"org.easymock.tests2.UsageConstraintsTest.any":385,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":467,"org.easymock.tests2.StubTest.stub":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndThrowTest.longType":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":76,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":410,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":466,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":367,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":376,"org.easymock.tests.LimitationsTest.mockNativeMethod":287,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":481,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":368,"org.easymock.tests2.NameTest.nameForMocksControl":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":483,"org.easymock.tests2.MockedExceptionTest.testMockedException":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":110,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":508,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":42,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":251,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":290,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":164,"org.easymock.tests.MockingTest.testNicePartialClassMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":295,"org.easymock.tests2.CompareToTest.testNotComparable":147,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":479,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":148,"org.easymock.tests2.CompareToTest.testCompareEqual":26,"org.easymock.tests2.CaptureTest.testCaptureLast":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":289,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":131,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":394,"org.easymock.tests.MockingTest.testTwoMocks":248,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":46,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":398,"org.easymock.samples.ExampleTest.removeNonExistingDocument":402,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":485,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":464,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":497,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":408,"org.easymock.tests2.ConstraintsToStringTest.andToString":518,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":317,"org.easymock.tests2.MockBuilderTest.testCreateMockString":168,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":112,"org.easymock.tests.UsageExpectAndThrowTest.floatType":40,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":107,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":152,"org.easymock.tests.UsageVerifyTest.twoThrows":71,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":121,"org.easymock.samples.ExampleTest.voteAgainstRemoval":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":182,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":299,"org.easymock.tests.LimitationsTest.privateConstructor":474,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":134,"org.easymock.tests2.UsageConstraintsTest.testNotNull":397,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":68,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":85,"org.easymock.tests2.UsageTest.defaultResetToNice":361,"org.easymock.samples.ExampleTest.voteAgainstRemovals":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":480,"org.easymock.tests.UsageVarargTest.differentLength":279,"org.easymock.tests2.CallbackTest.callback":320,"org.easymock.tests2.UsageConstraintsTest.equals":506,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":510,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":150,"org.easymock.tests.UsageTest.openCallCountByLastCall":234,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":69,"org.easymock.tests.UsageCallCountTest.tooFewCalls":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":222,"org.easymock.tests.UsageThrowableTest.throwCheckedException":65,"org.easymock.tests.MockingTest.testStrictClassMocking":425,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":1,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":347,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":484,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":469,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":346,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":326,"org.easymock.tests.ObjectMethodsTest.testHashCode":456,"org.easymock.tests2.CompareToTest.testGreateOrEqual":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":11,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":319,"org.easymock.tests2.NameTest.nameForNiceMock":350,"org.easymock.tests2.DependencyTest.testInterfaceMocking":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":10,"org.easymock.samples.ExampleTest.addDocument":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":123,"org.easymock.tests2.DelegateToTest.testStubDelegate":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":128,"org.easymock.tests2.AnswerTest.stubAnswer":325,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":244,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":151,"org.easymock.tests.UsageVarargTest.varargLongAccepted":281,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.floatType":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":23,"org.easymock.tests2.ConstraintsToStringTest.orToString":513,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":503,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":391,"org.easymock.tests.UsageThrowableTest.noUpperLimit":228,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":377,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":491,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":306,"org.easymock.tests2.SerializationTest.test":327,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":188,"org.easymock.tests2.UsageConstraintsTest.testSame":381,"org.easymock.samples.SupportTest.addDocument":176,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":113,"org.easymock.tests.GenericTest.testPackageScope":34,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":502,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":428,"org.easymock.tests2.NameTest.nameForMock":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":199,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":143,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":191,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":52,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":210,"org.easymock.tests2.MockedExceptionTest.testRealException":88,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":424,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":444,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":366,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":471,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":230,"org.easymock.tests2.NameTest.nameForStrictMock":349,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":490,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":399,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":492,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":409,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":392,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":159,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":439,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":117,"org.easymock.tests2.CaptureTest.testCaptureRightOne":311,"org.easymock.tests2.UsageConstraintsTest.testOr":382,"org.easymock.tests.UsageRangeTest.combination":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":291,"org.easymock.tests.UsageTest.wrongArguments":94,"org.easymock.tests2.MockBuilderTest.testWithConstructor":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":114,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":200,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":411,"org.easymock.tests.UsageVarargTest.varargShortAccepted":280,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":259,"org.easymock.tests2.UsageConstraintsTest.cmpTo":386,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":323,"org.easymock.tests2.CompareToTest.testLessThan":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":434,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CaptureTest.testCaptureFromStub":312,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":461,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":160,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":257,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":520,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":201,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":245,"org.easymock.samples.ExampleTest.addAndChangeDocument":175,"org.easymock.tests2.ConstraintsToStringTest.notToString":514,"org.easymock.tests.UsageStrictMockTest.testVerify":247,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":178,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":243,"org.easymock.tests2.CompareToTest.testGreateThan":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":224,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":307,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":271,"org.easymock.tests.LimitationsTest.abstractClass":473,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":193,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":272,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":335}}]
