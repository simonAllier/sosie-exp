[{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,278,279,280,281,282,283,284,285,286,287],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[88,247],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[288,289,136,227,290,291],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1373","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[37,107,109,110,292,288,293,294,295,296,135,183,184,185,220,221,228,230,231,291,297,298,242,245,248,249,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[74,85,86,87,88,131,132,133,150,190,191,192,193,194,195,299,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[300,301,302,303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[85,86,87,88,131,132,133,150,190,191,192,193,194,195],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[304],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[305],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[306],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[2,3,4,6,48,49,50,51,52,53,54,55,56,57,58,59,60,61,71,72,79,82,83,307,246,282],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[308,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,75,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,85,86,87,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,209,388,389,390,391,392,393,394,395,396,397,398,243,399,400,401,402,403,404,405,406,407,278,278,408,408,409,410,411],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[103,104,107,109,110,113,151,160,166,167,168,186,187,188,189,192,207,208,212,228,230,231,256,262,263,264,271],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[355],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[412,413,414],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[81],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[0,2,3,4,6,314,317,327,333,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,336,337,338,76,339,340,341,77,342,343,344,78,345,346,347,349,353,354,355,79,82,83,84,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,359,363,366,368,369,372,105,106,107,108,109,110,111,112,118,119,126,127,128,129,130,378,379,380,381,134,135,137,138,139,140,141,142,143,144,145,385,149,150,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,387,183,184,185,186,187,188,189,194,196,197,198,199,200,201,202,203,204,205,206,415,416,417,207,418,419,216,217,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,395,396,242,244,246,247,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,409,410,281,282,283,284,285,286,287,411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,309,420,421,422,310,423,424,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,7,8,9,10,425,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,426,67,68,69,70,71,427,72,73,74,75,336,337,338,428,76,339,340,429,341,77,342,343,344,78,345,346,347,348,430,349,350,351,352,353,354,355,356,357,79,80,81,82,83,84,85,86,87,88,431,432,433,434,435,89,436,437,438,439,440,441,90,91,92,93,94,95,96,97,98,99,100,101,102,442,443,103,104,359,360,444,361,445,363,364,446,365,366,367,368,447,369,448,370,371,372,449,374,105,106,107,108,109,110,111,450,451,452,453,454,112,455,456,457,458,459,460,113,114,115,116,461,462,463,464,465,466,375,467,117,468,118,119,469,120,470,121,122,123,124,125,126,127,128,129,130,376,377,378,379,380,471,381,472,473,382,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,383,384,385,386,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,474,176,177,178,179,180,181,182,387,183,184,185,186,187,188,189,190,191,192,193,194,195,475,476,477,478,479,480,481,482,483,484,485,486,196,197,198,487,199,200,201,202,203,204,205,206,488,415,489,490,491,492,493,299,416,494,495,496,417,497,498,499,207,418,419,500,501,502,208,503,504,209,388,389,390,391,392,505,393,210,211,212,213,214,215,216,217,218,219,220,221,506,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,394,395,396,397,398,242,243,399,400,401,402,403,404,405,406,507,508,509,510,407,511,512,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,408,279,280,409,410,281,282,283,284,285,286,513,287,411],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[115,119,153,155,156,163,170,195,213,251,252,259,266],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[5,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[21,206,227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[309,310,311,314,316,318,319,322,325,328,329,332,75,338,342,343,344,345,346,347,349,351,352,355,356,357,86,87,376,377,378,382,383,384,385,386,387,209,388,389,390,391,392,393,395,396,398,243,399,400,401,402,403,404,405,409,410],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,336,337,339,340,341,77,342,343,344,78,345,346,347,349,352,354,79,82,83,84,85,86,87,88,103,359,361,366,367,372,374,105,106,107,108,109,110,111,113,114,115,116,461,118,119,121,122,123,124,125,126,127,128,129,130,379,380,381,134,135,136,137,138,139,140,141,142,144,145,385,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,474,176,177,178,179,387,183,184,185,186,187,188,189,190,191,192,193,194,195,479,196,197,198,199,200,202,203,204,205,206,210,211,212,213,214,221,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,395,396,242,399,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,281,282,283,284,285,286,287],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[38,44,45,109,136,137,140,141,184,185,227,230,298,242,250],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[0,1,2,3,4,5,6,314,317,327,333,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,39,41,42,43,46,47,48,49,51,52,55,56,57,58,59,60,61,62,63,64,65,66,71,72,73,74,75,336,337,338,76,339,340,341,77,343,344,78,345,346,347,349,353,354,355,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,359,363,366,368,369,372,107,109,110,112,117,118,119,120,126,127,128,129,130,379,380,381,131,132,133,134,135,138,139,142,143,144,145,146,147,148,385,149,150,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,387,183,184,185,186,187,188,189,190,191,192,193,194,195,207,208,210,211,212,213,214,215,216,217,218,219,221,222,223,224,228,230,231,234,235,236,237,238,239,240,241,395,397,242,244,246,247,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,278,278,408,408,280,281,282,283,284,286,287,411],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:382","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n    if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":10,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":134,"org.easymock.tests2.UsageTest.argumentsOrdered":45,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":495,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":40,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":276,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":191,"org.easymock.tests.MockingTest.testPartialClassMocking":379,"org.easymock.tests.MockClassControlTest.testToString":400,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":426,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":500,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":321,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":155,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":317,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":104,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":16,"org.easymock.tests2.UsageTest.wrongArguments":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":271,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":441,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":153,"org.easymock.samples.ExampleTest.answerVsDelegate":282,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":407,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":473,"org.easymock.tests2.UsageConstraintsTest.testNull":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":345,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":405,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":99,"org.easymock.tests2.CaptureTest.testPrimitive":51,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":275,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":174,"org.easymock.tests.UsageTest.moreThanOneArgument":135,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":212,"org.easymock.tests.UsageTest.argumentsOrdered":141,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":215,"org.easymock.tests.UsageVarargTest.varargIntAccepted":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":499,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":126,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":361,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":459,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":421,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":130,"org.easymock.tests.ReplayStateInvalidUsageTest.times":483,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":89,"org.easymock.tests2.DependencyTest.testClassMocking":442,"org.easymock.tests2.AnswerTest.answer":79,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":418,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":116,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":508,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":94,"org.easymock.tests2.DelegateToTest.testDelegate":6,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":170,"org.easymock.tests.LimitationsTest.mockFinalMethod":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":125,"org.easymock.tests2.DependencyTest.testClassMockingSupport":443,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":220,"org.easymock.tests2.CaptureTest.testCapture1_2446744":52,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":168,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":114,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":477,"org.easymock.tests.UsageThrowableTest.throwError":234,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":510,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":467,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":335,"org.easymock.samples.PartialClassMockTest.testGetArea":411,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":478,"org.easymock.tests.MockingTest.testInterfaceMocking":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":156,"org.easymock.tests2.UsageTest.niceToStrict":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":322,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":375,"org.easymock.tests2.ThreadingTest.testChangeDefault":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":488,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":412,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":366,"org.easymock.tests2.MockBuilderTest.testCreateMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":330,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":438,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":164,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":288,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":507,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":224,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":151,"org.easymock.tests.UsageOverloadedMethodTest.overloading":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":332,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":22,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":247,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":262,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":21,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":487,"org.easymock.tests.MockClassControlTest.testEquals":404,"org.easymock.tests2.EasyMockSupportClassTest.testAll":314,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":396,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":123,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":115,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests.MockNameTest.defaultName":468,"org.easymock.tests2.UsageConstraintsTest.testMatches":23,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":213,"org.easymock.samples.ExampleTest.voteForRemovals":286,"org.easymock.tests.UsageVarargTest.allKinds":206,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":183,"org.easymock.samples.BasicClassMockTest.testPrintContent":410,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":124,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":240,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":456,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":195,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":505,"org.easymock.tests2.UsageConstraintsTest.greaterThan":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":355,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":393,"org.easymock.samples.ExampleTest.voteForRemoval":283,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":63,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":356,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":511,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":348,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":387,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":92,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":190,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":1,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":493,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":93,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":47,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":258,"org.easymock.tests2.UsageTest.moreThanOneArgument":37,"org.easymock.tests2.CaptureTest.testCapture2_2446744":60,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":372,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":205,"org.easymock.tests.GenericTest.testBridgedEquals":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":181,"org.easymock.tests.UsageExpectAndReturnTest.longType":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":121,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":173,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":373,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":117,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":30,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":210,"org.easymock.tests.UsageCallCountTest.tooManyCalls":182,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":239,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":336,"org.easymock.tests.MockingTest.testNiceClassMocking":382,"org.easymock.tests.MockingTest.testClassMocking":377,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":474,"org.easymock.tests2.UsageConstraintsTest.testContains":20,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":362,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":87,"org.easymock.tests2.UsageConstraintsTest.testFind":11,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":145,"org.easymock.tests.MockTypeTest.fromEasyMockClass":509,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":72,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":225,"org.easymock.tests.UsageExpectAndReturnTest.object":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":349,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":98,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":200,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":465,"org.easymock.tests.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":492,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":360,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":246,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":451,"org.easymock.tests.MockClassControlTest.testHashCode":403,"org.easymock.tests2.EasyMockSupportTest.testVerify":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":324,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":217,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":223,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":113,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":461,"org.easymock.tests.UsageVarargTest.varargCharAccepted":199,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":504,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":503,"org.easymock.tests2.UsageTest.openCallCountByLastCall":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":413,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":101,"org.easymock.tests.DefaultClassInstantiatorTest.object":209,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":222,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":463,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":325,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":450,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":402,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":161,"org.easymock.tests.CapturesMatcherTest.test":307,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":131,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":401,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":333,"org.easymock.tests2.UsageTest.resumeIfFailure":46,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":193,"org.easymock.tests2.StubTest.stubWithReturnValue":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":447,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":260,"org.easymock.tests2.SerializationTest.testAllMockedMethod":342,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":207,"org.easymock.samples.SupportTest.voteForRemovals":280,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":289,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":394,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":167,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":208,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":80,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":470,"org.easymock.tests.UsageExpectAndThrowTest.object":165,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":28,"org.easymock.tests2.DelegateToTest.testWrongClass":4,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":119,"org.easymock.tests.UsageStrictMockTest.range":230,"org.easymock.samples.ConstructorCalledMockTest.testTax":278,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":423,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":368,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":485,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":148,"org.easymock.tests2.CaptureTest.testCaptureNone":56,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":301,"org.easymock.tests.UsageUnorderedTest.message":242,"org.easymock.tests.UsageVerifyTest.twoReturns":185,"org.easymock.tests.UsageVarargTest.varargByteAccepted":204,"org.easymock.tests2.ThreadingTest.testThreadSafe":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":328,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":179,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":466,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":409,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":501,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":274,"org.easymock.tests2.UsageConstraintsTest.any":18,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":482,"org.easymock.tests2.StubTest.stub":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":502,"org.easymock.tests.UsageExpectAndThrowTest.longType":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":192,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":391,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":481,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":108,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":112,"org.easymock.tests2.SerializationTest.testClass":341,"org.easymock.tests.LimitationsTest.mockNativeMethod":385,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":397,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":270,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":433,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":111,"org.easymock.tests2.NameTest.nameForMocksControl":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":435,"org.easymock.tests2.MockedExceptionTest.testMockedException":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":316,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":427,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":159,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":381,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":343,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":369,"org.easymock.tests.MockingTest.testNicePartialClassMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":347,"org.easymock.tests2.CompareToTest.testNotComparable":306,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":431,"org.easymock.tests2.CaptureTest.testCaptureLast":55,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":221,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":15,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":340,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":29,"org.easymock.tests.MockingTest.testTwoMocks":378,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":163,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":303,"org.easymock.samples.ExampleTest.removeNonExistingDocument":513,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":437,"org.easymock.tests.UsageStrictMockTest.differentMethods":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":452,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":389,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":64,"org.easymock.tests2.ConstraintsToStringTest.andToString":295,"org.easymock.tests2.MockBuilderTest.testCreateMockString":374,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":243,"org.easymock.tests.UsageExpectAndThrowTest.floatType":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":318,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":444,"org.easymock.tests.UsageVerifyTest.twoThrows":184,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":327,"org.easymock.samples.ExampleTest.voteAgainstRemoval":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":146,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":354,"org.easymock.tests.LimitationsTest.privateConstructor":384,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":241,"org.easymock.tests2.UsageTest.defaultResetToNice":43,"org.easymock.samples.ExampleTest.voteAgainstRemovals":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":266,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":432,"org.easymock.tests.UsageVarargTest.differentLength":201,"org.easymock.tests2.CallbackTest.callback":0,"org.easymock.tests2.UsageConstraintsTest.equals":425,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":350,"org.easymock.tests.UsageTest.openCallCountByLastCall":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":273,"org.easymock.tests.UsageCallCountTest.tooFewCalls":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":154,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":302,"org.easymock.tests.UsageThrowableTest.throwCheckedException":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":291,"org.easymock.tests.MockingTest.testStrictClassMocking":376,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":150,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":436,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":337,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":484,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":76,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":84,"org.easymock.tests.ObjectMethodsTest.testHashCode":464,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":66,"org.easymock.tests2.NameTest.nameForNiceMock":69,"org.easymock.tests2.DependencyTest.testInterfaceMocking":103,"org.easymock.samples.ExampleTest.addDocument":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":329,"org.easymock.tests2.DelegateToTest.testStubDelegate":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":334,"org.easymock.tests2.AnswerTest.stubAnswer":83,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":228,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":448,"org.easymock.tests.UsageVarargTest.varargLongAccepted":203,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":494,"org.easymock.tests.UsageExpectAndReturnTest.floatType":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":269,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":359,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":408,"org.easymock.tests2.ConstraintsToStringTest.orToString":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":458,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":26,"org.easymock.tests.UsageThrowableTest.noUpperLimit":235,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":8,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":309,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":53,"org.easymock.tests2.SerializationTest.test":77,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":388,"org.easymock.tests2.UsageConstraintsTest.testSame":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":252,"org.easymock.samples.SupportTest.addDocument":279,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":428,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":319,"org.easymock.tests.GenericTest.testPackageScope":395,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":491,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":457,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":472,"org.easymock.tests2.NameTest.nameForMock":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":263,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":449,"org.easymock.tests2.UsageStrictMockTest.differentMethods":110,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":169,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":189,"org.easymock.tests2.MockedExceptionTest.testRealException":88,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":498,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":424,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":497,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":107,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":486,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":272,"org.easymock.tests2.NameTest.nameForStrictMock":68,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":365,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":414,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":346,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":310,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":390,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":27,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":363,"org.easymock.tests2.UsageStrictMockTest.range":109,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":454,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":305,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":91,"org.easymock.tests2.CaptureTest.testCaptureRightOne":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":323,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":300,"org.easymock.tests2.UsageConstraintsTest.testOr":14,"org.easymock.tests.UsageRangeTest.combination":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":344,"org.easymock.tests.UsageTest.wrongArguments":137,"org.easymock.tests2.MockBuilderTest.testWithConstructor":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":320,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":399,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":264,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":392,"org.easymock.tests.UsageVarargTest.varargShortAccepted":202,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":180,"org.easymock.tests2.UsageConstraintsTest.cmpTo":19,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":490,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests2.CaptureTest.testCaptureFromStub":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":476,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":364,"org.easymock.tests.UsageTest.unexpectedCallWithArray":136,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":227,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":178,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":265,"org.easymock.tests2.UsageConstraintsTest.constraints":9,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":229,"org.easymock.samples.ExampleTest.addAndChangeDocument":287,"org.easymock.tests2.ConstraintsToStringTest.notToString":293,"org.easymock.tests.UsageStrictMockTest.testVerify":233,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":277,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":122,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":128,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":257,"org.easymock.tests.LimitationsTest.abstractClass":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":129,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":96,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":197}}]
