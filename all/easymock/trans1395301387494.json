[{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1,41,5,42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[43,44,45,46,47,48],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[49,50,51,52,53,54,55,56,22,23,24,25,57,28,29,58,59,1,4,60,42,61,6,62,63,64,32,65,66,36,67,68,69,70,38,71,72,73,10,74,39,40],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.Range:40","failures":[75,76,77,78,79,80,81,82,83,11,12,13,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,49,99,100,101,102,103,104,105,106,50,51,107,52,53,54,55,56,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,14,124,125,16,126,127,128,129,130,131,132,133,134,135,136,137,19,20,138,139,21,22,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,23,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,24,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,25,26,289,290,291,292,293,57,294,27,295,296,28,29,297,298,299,300,301,302,303,304,305,306,307,43,44,308,309,310,311,312,313,314,58,315,316,317,318,319,320,321,45,322,323,324,59,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,0,1,367,41,2,368,3,4,60,5,42,369,370,61,371,372,373,374,375,6,62,63,376,64,7,377,378,379,380,381,382,46,30,383,384,385,386,387,388,389,390,391,392,31,32,48,33,393,394,395,34,65,66,396,397,398,35,36,37,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,67,430,68,431,69,70,432,433,38,71,72,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,73,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,8,476,9,477,478,479,480,481,482,483,10,484,485,486,487,74,488,489,490,39,40,491],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[373],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[275],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[60,371,378,492],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[98,49,99,50,107,52,53,54,55,56,123,124,125,126,127,128,129,130,131,136,137,138,139,140,158,160,161,163,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,234,235,237,241,242,245,247,24,267,268,269,288,26,295,28,29,299,300,302,303,305,311,314,58,315,316,317,318,321,324,59,325,331,334,344,350,353,354,355,356,358,359,360,365,366,0,1,41,2,368,3,4,60,42,369,370,61,371,372,373,374,375,6,62,63,376,64,7,377,378,379,380,30,386,388,390,32,393,394,395,65,396,397,398,37,399,407,411,422,429,67,430,68,431,69,70,432,433,38,71,72,445,452,457,459,460,461,462,463,465,468,469,472,8,476,9,477,478,481,482,483,10,485,486,489,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[321,369,493],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[494],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[495,496,19,27,497,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[78,81,82,83,12,13,51,20,21,22,141,142,143,145,146,147,148,149,150,151,152,164,23,241,243,244,287,57,294,27,295,296,28,29,297,298,300,302,303,304,305,307,308,309,310,311,312,313,5,42,376,64,381,30,386,32,34,66,35,36,410,68,38,71,72,434,436,437,438,439,73,476,9,479,480,481,482,486,74,488,489,490,39,40,491],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[322,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[87,92,156,157,158,159,162,163,164,165,166,231,232,233,234,235,237,240,247,248,249,250,251,252,254,279,280,281,282,283,284,285,286,287,299,43,43,44,44,312,313,314,58,316,317,318,319,321,45,322,323,324,59,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,359,360,379,381,382,30,383,385,386,387,388,390,392,31,32,33,400,401,402,404,452,453,455,456,457,466,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[379,389,392,452,453,499,500,501,502],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[486],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[87,92,105,156,157,158,159,162,163,164,165,166,231,232,233,234,235,237,240,247,248,249,250,251,252,254,279,280,281,282,283,284,285,286,287,299,43,43,44,44,312,313,314,58,316,317,318,319,321,45,322,323,324,59,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,359,360,379,381,382,503,30,383,385,386,387,388,390,392,31,32,504,33,400,404,452,453,505,506,455,456,457],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[507,508,509],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[2,5,6,7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[510],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[43,44,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,355,360,361,379,46,384,389,392,47,48,511,512,452,453],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[14,18,19,20,21,22,23,25,26,27,28,34,35,36,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[125,211,212,219,226,273],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[43,44,45,379,46,384,389,392,47,48,513,514,515,452,453],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests2.UsageTest.argumentsOrdered":36,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":177,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":66,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":308,"org.easymock.tests2.DelegateToTest.testReturnException":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":113,"org.easymock.tests.MockingTest.testPartialClassMocking":234,"org.easymock.tests.MockClassControlTest.testToString":281,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":435,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":191,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":334,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":469,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":499,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":60,"org.easymock.tests2.UsageTest.wrongArguments":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":241,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":451,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":110,"org.easymock.samples.ExampleTest.answerVsDelegate":301,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":92,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":239,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":316,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":38,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":286,"org.easymock.tests2.CaptureTest.testPrimitive":477,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":245,"org.easymock.tests.UsageTest.moreThanOneArgument":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":210,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":272,"org.easymock.tests.UsageTest.argumentsOrdered":22,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":289,"org.easymock.tests.UsageVarargTest.varargIntAccepted":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":126,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":382,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":402,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":130,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":445,"org.easymock.tests.ReplayStateInvalidUsageTest.times":263,"org.easymock.tests2.DependencyTest.testClassMocking":466,"org.easymock.tests2.AnswerTest.answer":407,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":416,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":89,"org.easymock.tests2.UsageTest.strictResetToDefault":394,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":271,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":431,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":268,"org.easymock.tests2.DelegateToTest.testDelegate":475,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":206,"org.easymock.tests.LimitationsTest.mockFinalMethod":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":135,"org.easymock.tests2.DependencyTest.testClassMockingSupport":467,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":276,"org.easymock.tests2.CaptureTest.testCapture1_2446744":478,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":414,"org.easymock.tests.UsageThrowableTest.throwError":50,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":257,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":91,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":428,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":274,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":513,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":352,"org.easymock.samples.PartialClassMockTest.testGetArea":299,"org.easymock.tests.MockingTest.testInterfaceMocking":236,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":96,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":105,"org.easymock.tests2.UsageTest.niceToStrict":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":339,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":167,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":386,"org.easymock.tests2.MockBuilderTest.testCreateMock":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":448,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":200,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":69,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":88,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":77,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":108,"org.easymock.tests.UsageOverloadedMethodTest.overloading":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":349,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":121,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":371,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":222,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":61,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":483,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":144,"org.easymock.tests.MockClassControlTest.testEquals":285,"org.easymock.tests2.EasyMockSupportClassTest.testAll":331,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":164,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":208,"org.easymock.tests2.CaptureTest.testCaptureAll":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":133,"org.easymock.tests.MockNameTest.defaultName":106,"org.easymock.tests2.UsageConstraintsTest.testMatches":372,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":273,"org.easymock.samples.ExampleTest.voteForRemovals":305,"org.easymock.tests.UsageVarargTest.allKinds":152,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":134,"org.easymock.samples.BasicClassMockTest.testPrintContent":313,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":55,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":74,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":474,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":253,"org.easymock.tests2.UsageConstraintsTest.greaterThan":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":267,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":325,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":254,"org.easymock.samples.ExampleTest.voteForRemoval":302,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":460,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":326,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":319,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":393,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":287,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":430,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":112,"org.easymock.tests2.CaptureTest.testCaptureFirst":486,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":68,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":399,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":218,"org.easymock.tests2.CaptureTest.testCapture2_2446744":485,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":462,"org.easymock.tests2.UsageTest.moreThanOneArgument":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":185,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":32,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":151,"org.easymock.tests.GenericTest.testBridgedEquals":166,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":12,"org.easymock.tests.UsageExpectAndReturnTest.longType":214,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":131,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":209,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":275,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":207,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":270,"org.easymock.tests.UsageCallCountTest.tooManyCalls":13,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":54,"org.easymock.tests.MockingTest.testNiceClassMocking":240,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":354,"org.easymock.tests.MockingTest.testClassMocking":232,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":503,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":79,"org.easymock.tests2.UsageConstraintsTest.testContains":370,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":457,"org.easymock.tests2.UsageConstraintsTest.testFind":41,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":99,"org.easymock.tests.MockTypeTest.fromEasyMockClass":90,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":57,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":364,"org.easymock.tests.UsageExpectAndReturnTest.object":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":500,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":146,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":103,"org.easymock.tests.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":172,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":153,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":453,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":227,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":120,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":418,"org.easymock.tests.MockClassControlTest.testHashCode":284,"org.easymock.tests2.EasyMockSupportTest.testVerify":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":341,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":291,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":118,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":76,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":413,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":17,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":487,"org.easymock.tests.UsageVarargTest.varargCharAccepted":145,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":246,"org.easymock.tests2.CaptureTest.testCaptureMultiple":510,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":190,"org.easymock.tests2.UsageTest.openCallCountByLastCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":72,"org.easymock.tests.DefaultClassInstantiatorTest.object":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":75,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":101,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":18,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":443,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":417,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":283,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":228,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":84,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":350,"org.easymock.tests2.UsageTest.resumeIfFailure":37,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":115,"org.easymock.tests2.StubTest.stubWithReturnValue":465,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":389,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":64,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":220,"org.easymock.tests2.SerializationTest.testAllMockedMethod":381,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":183,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":515,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":311,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":203,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":189,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":408,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":155,"org.easymock.tests.UsageExpectAndThrowTest.object":201,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":62,"org.easymock.tests2.DelegateToTest.testWrongClass":473,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":124,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":125,"org.easymock.samples.ConstructorCalledMockTest.testTax":43,"org.easymock.tests.UsageStrictMockTest.range":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":405,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":202,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":109,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":495,"org.easymock.tests2.CaptureTest.testCaptureNone":482,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":97,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":508,"org.easymock.tests.UsageUnorderedTest.message":23,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":15,"org.easymock.tests.UsageVerifyTest.twoReturns":26,"org.easymock.tests.UsageVarargTest.varargByteAccepted":150,"org.easymock.tests2.ThreadingTest.testThreadSafe":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":345,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":83,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":104,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":312,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":244,"org.easymock.tests2.UsageConstraintsTest.any":42,"org.easymock.tests2.StubTest.stub":464,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":114,"org.easymock.tests.UsageExpectAndThrowTest.longType":194,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":251,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":261,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":490,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":422,"org.easymock.tests2.SerializationTest.testClass":379,"org.easymock.tests.LimitationsTest.mockNativeMethod":158,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":442,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":491,"org.easymock.tests2.NameTest.nameForMocksControl":439,"org.easymock.tests2.MockedExceptionTest.testMockedException":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":333,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":195,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":237,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":363,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":314,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":390,"org.easymock.tests.MockingTest.testNicePartialClassMocking":235,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":318,"org.easymock.tests2.CompareToTest.testCompareEqual":493,"org.easymock.tests2.CaptureTest.testCaptureLast":481,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":440,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":277,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":360,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":63,"org.easymock.tests.MockingTest.testTwoMocks":233,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":199,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":377,"org.easymock.samples.ExampleTest.removeNonExistingDocument":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":447,"org.easymock.tests.UsageStrictMockTest.differentMethods":29,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":419,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":509,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":249,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":461,"org.easymock.tests2.MockBuilderTest.testCreateMockString":33,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":279,"org.easymock.tests.UsageExpectAndThrowTest.floatType":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":335,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":410,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":454,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":344,"org.easymock.samples.ExampleTest.voteAgainstRemoval":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":95,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":59,"org.easymock.tests.LimitationsTest.privateConstructor":157,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":512,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":455,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":56,"org.easymock.tests2.UsageTest.defaultResetToNice":398,"org.easymock.samples.ExampleTest.voteAgainstRemovals":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":441,"org.easymock.tests.UsageVarargTest.differentLength":147,"org.easymock.tests2.CallbackTest.callback":73,"org.easymock.tests2.UsageConstraintsTest.equals":367,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":45,"org.easymock.tests.UsageTest.openCallCountByLastCall":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":365,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":243,"org.easymock.tests.UsageCallCountTest.tooFewCalls":81,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":111,"org.easymock.tests.UsageThrowableTest.throwCheckedException":53,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":231,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":161,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":446,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":355,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":358,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":412,"org.easymock.tests2.CompareToTest.testGreateOrEqual":492,"org.easymock.tests.ObjectMethodsTest.testHashCode":102,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":463,"org.easymock.tests2.NameTest.nameForNiceMock":438,"org.easymock.tests2.DependencyTest.testInterfaceMocking":468,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":501,"org.easymock.samples.ExampleTest.addDocument":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":346,"org.easymock.tests2.DelegateToTest.testStubDelegate":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.AnswerTest.stubAnswer":411,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":295,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":391,"org.easymock.tests.UsageVarargTest.varargLongAccepted":149,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":176,"org.easymock.tests.UsageExpectAndReturnTest.floatType":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":229,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":452,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":426,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests.UsageThrowableTest.noUpperLimit":51,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":366,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":400,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":479,"org.easymock.tests2.SerializationTest.test":380,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":212,"org.easymock.tests2.UsageConstraintsTest.testSame":368,"org.easymock.samples.SupportTest.addDocument":310,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":357,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":336,"org.easymock.tests.GenericTest.testPackageScope":163,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":171,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":425,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":238,"org.easymock.tests2.NameTest.nameForMock":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":223,"org.easymock.tests2.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":215,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":205,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":269,"org.easymock.tests2.MockedExceptionTest.testRealException":458,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":514,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":242,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":266,"org.easymock.tests2.NameTest.nameForStrictMock":437,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":362,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":317,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":404,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":250,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":30,"org.easymock.tests2.UsageStrictMockTest.range":39,"org.easymock.tests2.UsageConstraintsTest.lessThan":378,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":505,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":175,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":67,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":340,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":507,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":24,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":58,"org.easymock.tests.UsageTest.wrongArguments":20,"org.easymock.tests2.MockBuilderTest.testWithConstructor":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":337,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":168,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":224,"org.easymock.tests.UsageVarargTest.varargShortAccepted":148,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":252,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":11,"org.easymock.tests2.UsageConstraintsTest.cmpTo":369,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":170,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":397,"org.easymock.tests2.CaptureTest.testCaptureFromStub":484,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":256,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":383,"org.easymock.tests.UsageTest.unexpectedCallWithArray":19,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":82,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":225,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.samples.ExampleTest.addAndChangeDocument":307,"org.easymock.tests.UsageStrictMockTest.testVerify":298,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":309,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":132,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":480,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":128,"org.easymock.tests.LimitationsTest.abstractClass":156,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":129,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":70}}]
