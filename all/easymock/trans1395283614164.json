[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[2,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[81,82,83,84,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[86,87,88,83,89,90,91,92,93,94,95,96,97,98,99,100,101],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[102,103,104],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[2,105,106,107,108,109,35,36,110,11,46,47,111,23,72,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:98","sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","type":"CtReturnImpl"},"failures":[112,113,114,79,115,116,24,117,118,119,120],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[121],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[122,123,124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[125,126,58,59,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[125,128,129,130,131,132,133,134,135,136,137,81,81,82,82,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,2,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,3,4,187,26,27,28,29,30,31,32,33,34,188,189,190,191,192,193,194,195,196,5,6,7,8,9,109,35,36,37,110,38,39,197,198,40,41,42,199,200,201,202,10,203,204,43,205,44,11,45,46,47,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,12,13,14,15,16,230,231,232,233,234,235,236,237,238,239,17,18,240,241,242,243,244,245,246,247,49,248,112,19,113,249,250,251,252,20,21,253,114,254,255,22,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,122,123,124,274,275,50,276,51,52,277,53,54,278,279,280,281,55,282,283,86,284,285,286,87,287,288,289,290,291,104,292,293,56,126,57,58,59,60,61,62,294,111,63,64,65,295,296,66,67,68,297,69,70,298,23,71,72,73,299,74,75,76,77,300,301,302,303,78,304,305,79,115,306,116,307,24,117,308,25,309,310,311,312,313,121,314,315,119,316,317,318,120,319,320,321,322,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.Capture:82","failures":[323,112,113,249,250,251,252,20,253,324,114,254,22],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[325,122,123,124],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[2,183,189,190,192,193,194,195,196,35,41,43,46,47,217,242,248,114,265,275,276,52,277,278,279,280,60,64,65,68,70,72,73,115,117,308,25,311,119,316,317,318],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,326,35,36,38,39,40,41,327,44,46,63,67,68,72],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[328,329,38,44,330,331],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[226,332],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[109,46,47,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[325,122,123,124],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[333],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[125,128,129,130,131,132,133,334,134,135,136,137,81,82,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,335,336,337,338,339,340,341,161,162,342,343,344,2,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,3,4,345,346,347,348,349,350,187,351,352,353,354,355,356,357,358,359,360,26,27,28,29,30,31,32,33,34,361,362,363,364,188,365,366,367,368,369,370,189,190,191,192,193,194,195,196,5,6,7,8,9,109,35,36,371,372,373,374,375,376,377,378,37,110,38,39,197,198,40,41,42,199,200,201,202,10,203,379,380,381,382,383,204,327,43,205,44,11,45,46,47,206,207,384,385,386,208,209,387,210,388,389,390,391,392,393,394,395,396,397,398,399,400,102,401,402,403,404,405,406,407,408,409,410,411,412,413,211,212,213,214,215,216,414,415,416,417,217,218,219,220,221,222,223,418,419,420,421,422,423,424,224,425,225,226,426,227,427,428,228,429,229,12,13,14,15,16,430,431,432,230,231,232,433,233,234,434,235,236,237,238,239,17,18,435,436,240,437,438,332,439,241,242,243,244,245,246,48,440,247,441,442,49,443,248,444,445,446,112,19,113,249,250,251,252,20,21,253,114,254,255,22,256,257,258,259,260,447,448,449,261,450,451,262,452,453,454,455,456,457,458,459,460,263,461,462,463,464,465,264,466,467,265,266,267,268,269,270,468,469,271,272,273,122,123,124,274,275,50,276,51,52,277,53,54,278,279,280,281,470,471,472,473,474,55,475,476,477,478,479,480,282,283,86,284,481,285,286,87,88,482,287,288,289,290,103,291,104,292,483,293,56,95,484,485,96,486,126,57,58,97,59,487,488,489,60,99,61,490,491,492,493,494,495,496,62,294,111,63,64,65,295,296,66,67,68,297,69,70,298,23,71,72,73,299,74,75,76,77,497,498,300,301,302,303,499,500,501,502,503,78,504,505,506,507,508,509,304,305,79,115,510,306,116,307,24,117,308,118,25,309,310,311,312,313,121,314,315,119,316,317,511,318,120,319,320,512,321,513,322,85,100,514],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[103,104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[515],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[121],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[125,342,371,376,48,122,56,516,484,485,126,58,59,60,127,61],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[125,128,129,130,131,132,133,334,134,135,136,137,81,82,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,335,336,337,338,339,340,341,161,162,342,343,344,2,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,3,4,345,346,347,348,349,350,187,351,352,353,354,355,356,357,358,359,360,26,27,28,29,30,31,32,33,34,361,362,363,364,188,365,366,367,368,369,370,189,190,191,192,193,194,195,196,5,6,7,8,9,109,35,36,371,372,373,374,375,376,377,378,37,110,38,39,197,198,40,41,42,199,200,201,202,10,203,379,380,381,382,383,204,327,43,205,44,11,45,46,47,206,207,384,385,386,208,209,387,210,388,389,390,391,392,393,394,395,396,397,398,399,400,102,401,402,403,404,405,406,407,408,409,410,411,412,413,211,212,213,214,215,216,414,415,416,417,217,218,219,220,221,222,223,418,419,420,421,422,423,424,224,425,225,226,426,227,427,428,228,429,229,12,13,14,15,16,430,431,432,230,231,232,433,233,234,434,235,236,237,238,239,17,18,435,436,240,437,438,332,439,241,242,243,244,245,246,48,440,247,441,442,49,443,248,444,445,446,112,19,113,249,250,251,252,20,21,253,114,254,255,22,256,257,258,259,260,447,448,449,261,450,451,262,452,453,454,455,456,457,458,459,460,263,461,462,463,464,465,264,466,467,265,266,267,268,269,270,468,469,271,272,273,122,123,124,274,275,50,276,51,52,277,53,54,278,279,280,281,470,471,472,473,474,55,475,476,477,478,479,480,282,283,86,284,481,285,286,87,88,482,287,288,289,290,103,291,104,292,483,293,56,95,484,485,96,486,126,57,58,97,59,487,488,489,60,99,61,490,491,492,493,494,495,496,62,294,111,63,64,65,295,296,66,67,68,297,69,70,298,23,71,72,73,299,74,75,76,77,497,498,300,301,302,303,499,500,501,502,503,78,504,505,506,507,508,509,304,305,79,115,510,306,116,307,24,117,308,118,25,309,310,311,312,313,121,314,315,119,316,317,511,318,120,319,320,512,321,513,322,85,100,514],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[325,122,123,124],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[511,120,321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":115,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.UsageTest.argumentsOrdered":68,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":102,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":65,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":140,"org.easymock.tests2.DelegateToTest.testReturnException":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":200,"org.easymock.tests.MockingTest.testPartialClassMocking":208,"org.easymock.tests.MockClassControlTest.testToString":365,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":482,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":339,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":141,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":262,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":105,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":301,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":308,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":5,"org.easymock.tests2.UsageTest.wrongArguments":63,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":28,"org.easymock.samples.ExampleTest.answerVsDelegate":129,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":376,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":389,"org.easymock.tests2.UsageConstraintsTest.testNull":116,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":244,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":278,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":370,"org.easymock.tests2.CaptureTest.testPrimitive":249,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":160,"org.easymock.tests.UsageTest.moreThanOneArgument":110,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":221,"org.easymock.tests.UsageTest.argumentsOrdered":41,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":346,"org.easymock.tests.UsageVarargTest.varargIntAccepted":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":508,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":492,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":16,"org.easymock.tests.ReplayStateInvalidUsageTest.times":428,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests2.DependencyTest.testClassMocking":497,"org.easymock.tests2.AnswerTest.answer":270,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":407,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":77,"org.easymock.tests2.CaptureTest.testAnd":112,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":373,"org.easymock.tests2.UsageTest.strictResetToDefault":294,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":96,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":51,"org.easymock.tests2.DelegateToTest.testDelegate":293,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":156,"org.easymock.tests.LimitationsTest.mockFinalMethod":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":34,"org.easymock.tests2.DependencyTest.testClassMockingSupport":498,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":438,"org.easymock.tests2.CaptureTest.testCapture1_2446744":250,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":154,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":75,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":425,"org.easymock.tests.UsageThrowableTest.throwError":189,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":375,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":509,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":223,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":467,"org.easymock.samples.PartialClassMockTest.testGetArea":125,"org.easymock.tests.MockingTest.testInterfaceMocking":387,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":13,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":456,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":423,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":142,"org.easymock.tests2.UsageTest.niceToStrict":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":84,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":126,"org.easymock.tests2.MockBuilderTest.testCreateMock":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":463,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":150,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":330,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":52,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":432,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":26,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":92,"org.easymock.tests.UsageOverloadedMethodTest.overloading":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":312,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":382,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":174,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":0,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":311,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":253,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":433,"org.easymock.tests2.EasyMockSupportClassTest.testAll":261,"org.easymock.tests.MockClassControlTest.testEquals":369,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":32,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":76,"org.easymock.tests.MockNameTest.defaultName":344,"org.easymock.tests2.UsageConstraintsTest.testMatches":313,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":222,"org.easymock.samples.ExampleTest.voteForRemovals":133,"org.easymock.tests.UsageVarargTest.allKinds":239,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":109,"org.easymock.samples.BasicClassMockTest.testPrintContent":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":33,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":195,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":505,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":203,"org.easymock.tests2.UsageConstraintsTest.greaterThan":314,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":184,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":444,"org.easymock.samples.ExampleTest.voteForRemoval":130,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":359,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":445,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":257,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":48,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":187,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":50,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":199,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":103,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":276,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":170,"org.easymock.tests2.UsageTest.moreThanOneArgument":111,"org.easymock.tests2.CaptureTest.testCapture2_2446744":255,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":408,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":60,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":238,"org.easymock.tests.GenericTest.testBridgedEquals":343,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":93,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":415,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":90,"org.easymock.tests.UsageExpectAndReturnTest.longType":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":30,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":159,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":127,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":511,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":362,"org.easymock.tests.UsageCallCountTest.tooManyCalls":416,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":194,"org.easymock.tests.MockingTest.testNiceClassMocking":390,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":283,"org.easymock.tests.MockingTest.testClassMocking":385,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":516,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":212,"org.easymock.tests2.UsageConstraintsTest.testContains":310,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":268,"org.easymock.tests2.UsageConstraintsTest.testFind":306,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":218,"org.easymock.tests.MockTypeTest.fromEasyMockClass":374,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":43,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":322,"org.easymock.tests.UsageExpectAndReturnTest.object":173,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":54,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":234,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":421,"org.easymock.tests.UsageTest.exactCallCountByLastCall":42,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":94,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":338,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":179,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":230,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":500,"org.easymock.tests.MockClassControlTest.testHashCode":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":458,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":431,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":74,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":512,"org.easymock.tests.UsageVarargTest.varargCharAccepted":233,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":351,"org.easymock.tests2.CaptureTest.testCaptureMultiple":323,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastCall":295,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":280,"org.easymock.tests.DefaultClassInstantiatorTest.object":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":430,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":419,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":459,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":499,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":443,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":367,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":180,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":264,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":366,"org.easymock.tests2.UsageTest.resumeIfFailure":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":371,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":491,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":202,"org.easymock.tests2.StubTest.stubWithReturnValue":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":97,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":172,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":318,"org.easymock.tests2.SerializationTest.testAllMockedMethod":124,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":406,"org.easymock.samples.SupportTest.voteForRemovals":136,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":331,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":502,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":153,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":325,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":412,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":468,"org.easymock.tests.UsageExpectAndThrowTest.object":151,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":340,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":316,"org.easymock.tests2.DelegateToTest.testWrongClass":292,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":17,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":18,"org.easymock.tests.UsageStrictMockTest.range":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":495,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":282,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":152,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":447,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":429,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":27,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":328,"org.easymock.tests2.CaptureTest.testCaptureNone":21,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":337,"org.easymock.tests.UsageUnorderedTest.message":2,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":333,"org.easymock.tests.UsageVarargTest.varargByteAccepted":237,"org.easymock.tests2.ThreadingTest.testThreadSafe":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":461,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":216,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":422,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":138,"org.easymock.tests2.CaptureTest.testCapture_2617107":113,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":8,"org.easymock.tests2.UsageConstraintsTest.any":25,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":427,"org.easymock.tests2.StubTest.stub":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndThrowTest.longType":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":201,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":356,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":227,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":71,"org.easymock.tests2.SerializationTest.testClass":122,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":78,"org.easymock.tests.LimitationsTest.mockNativeMethod":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":182,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":342,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":472,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests2.NameTest.nameForMocksControl":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":474,"org.easymock.tests2.MockedExceptionTest.testMockedException":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":451,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":198,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":513,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":145,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":210,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":241,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":59,"org.easymock.tests.MockingTest.testNicePartialClassMocking":209,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":246,"org.easymock.tests2.CompareToTest.testNotComparable":80,"org.easymock.tests2.CompareToTest.testCompareEqual":515,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":470,"org.easymock.tests2.CaptureTest.testCaptureLast":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":332,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":117,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":317,"org.easymock.tests.MockingTest.testTwoMocks":386,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":149,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":67,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":319,"org.easymock.samples.ExampleTest.removeNonExistingDocument":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":226,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":501,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":354,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":258,"org.easymock.tests2.MockBuilderTest.testCreateMockString":61,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":452,"org.easymock.tests.UsageExpectAndThrowTest.floatType":143,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":514,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":263,"org.easymock.samples.ExampleTest.voteAgainstRemoval":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":335,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":248,"org.easymock.tests.LimitationsTest.privateConstructor":436,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":89,"org.easymock.tests2.UsageConstraintsTest.testNotNull":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":196,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":266,"org.easymock.tests2.UsageTest.defaultResetToNice":66,"org.easymock.samples.ExampleTest.voteAgainstRemovals":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":178,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":471,"org.easymock.tests.UsageVarargTest.differentLength":434,"org.easymock.tests2.CallbackTest.callback":265,"org.easymock.tests2.UsageConstraintsTest.equals":510,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":441,"org.easymock.tests.UsageTest.openCallCountByLastCall":197,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":7,"org.easymock.tests.UsageCallCountTest.tooFewCalls":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":29,"org.easymock.tests.UsageThrowableTest.throwCheckedException":193,"org.easymock.tests.MockingTest.testStrictClassMocking":384,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":329,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":475,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":86,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":228,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":285,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":273,"org.easymock.tests.ObjectMethodsTest.testHashCode":420,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":260,"org.easymock.tests2.NameTest.nameForNiceMock":289,"org.easymock.tests2.DependencyTest.testInterfaceMocking":300,"org.easymock.samples.ExampleTest.addDocument":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.DelegateToTest.testStubDelegate":104,"org.easymock.tests2.AnswerTest.stubAnswer":272,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":487,"org.easymock.tests.UsageVarargTest.varargLongAccepted":236,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":181,"org.easymock.tests.UsageExpectAndReturnTest.floatType":165,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":85,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":507,"org.easymock.tests.UsageThrowableTest.noUpperLimit":190,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":315,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":305,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":490,"org.easymock.tests2.SerializationTest.test":123,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":251,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":164,"org.easymock.tests2.UsageConstraintsTest.testSame":307,"org.easymock.samples.SupportTest.addDocument":135,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":481,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":453,"org.easymock.tests.GenericTest.testPackageScope":161,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":506,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":388,"org.easymock.tests2.NameTest.nameForMock":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":175,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":99,"org.easymock.tests2.UsageStrictMockTest.differentMethods":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":442,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":155,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":418,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":186,"org.easymock.tests2.MockedExceptionTest.testRealException":269,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":378,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":403,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":229,"org.easymock.tests2.NameTest.nameForStrictMock":288,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":486,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":101,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":321,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":245,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":494,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":119,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":106,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":355,"org.easymock.tests.ErrorMessageTest.testGetters":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":484,"org.easymock.tests2.UsageStrictMockTest.range":72,"org.easymock.tests2.UsageConstraintsTest.lessThan":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":457,"org.easymock.tests2.CaptureTest.testCaptureRightOne":114,"org.easymock.tests2.UsageConstraintsTest.testOr":24,"org.easymock.tests.UsageRangeTest.combination":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":242,"org.easymock.tests.UsageTest.wrongArguments":39,"org.easymock.tests2.MockBuilderTest.testWithConstructor":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":454,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":176,"org.easymock.tests.UsageVarargTest.varargShortAccepted":235,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":357,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":414,"org.easymock.tests2.UsageConstraintsTest.cmpTo":309,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":394,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":296,"org.easymock.tests2.CaptureTest.testCaptureFromStub":254,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":224,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":485,"org.easymock.tests.UsageTest.unexpectedCallWithArray":38,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":215,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":177,"org.easymock.tests2.CaptureTest.testCapture":324,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.tests2.UsageConstraintsTest.constraints":79,"org.easymock.samples.ExampleTest.addAndChangeDocument":134,"org.easymock.tests.UsageStrictMockTest.testVerify":207,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":137,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":31,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":14,"org.easymock.tests.LimitationsTest.abstractClass":435,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":15,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":108,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":277}}]
