[{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[4,5,6,7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,7,8,210,211,212,213,214,215,216,217,218,219,220],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"defaultValue","methodName":"defaultValue"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[222,223],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[224,225,226],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[75],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[227,69],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[9,11,12,13,14,15,228,229,230,231,232,233,21,23,234,31,32,235,4,33,34,236,38,237,238,42,43,45,46,47,48,51,52,239,62,240,74,241,79,242,85,86,87,88,243,244,245,246,247,248,249,118,250,125,152,153,154,155,156,251,157,158,159,160,161,252,253,254,164,255,165,256,166,257,6,167,168,169,258,259,260,171,173,174,175,176,261,262,263],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[264,265,266,267,256,268],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[9,10,11,12,13,14,15,228,229,269,230,231,232,233,16,17,18,19,20,21,22,270,271,23,24,25,26,234,31,32,235,4,33,34,272,35,36,236,37,38,237,238,40,273,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,274,275,276,277,241,79,278,279,242,280,83,85,86,87,88,281,89,90,282,283,91,92,93,94,95,96,97,98,99,100,101,284,285,286,243,287,288,289,290,244,245,246,247,102,291,103,104,105,106,107,292,109,293,110,111,112,248,249,113,118,119,125,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,251,157,158,159,160,161,163,164,255,165,256,166,257,6,167,168,294,170,258,259,260,295,171,173,174,175,176,261,262,263,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,7,8,215,216,217,218,219,220],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[228,229,269,296,296,297,297,19,21,298,299,300,301,302,303,274,304,305,275,306,307,308,309,310,311,312,313,314,276,315,316,317,318,319,277,320,3,78,222,241,321,322,79,80,278,279,323,324,242,223,325,81,82,83,281,89,90,282,91,92,97,326,102,291,104,105,106,327,107,328,329,108,292,109,293,330,331,125,332,162,333,334,335,336,337,338,339,340,341,342,224,343,344,345,163,164,346,347,348,349,350,351,352,208,353,354,355,356,216,217,218,357],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[9,11,12,14,269,231,17,22,270,32,4,33,274,275,276,277,241,79,278,279,242,281,89,90,282,283,91,92,97,358,102,291,103,104,105,106,107,292,109,293,111,120,121,122,123,166,6,167,179,180,181,182,183,184,185,186,187,188,191,192,194,195,196,198,199,200,201,202,203,204,205,206,207,208,216,217,218,219,220],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:330","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","actualTypeArgument":"actualTypeArgument","variable":"variable","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[32,272,273,93,119,166,295,7,8],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[264,265,266,267,256,268],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[232,233,359,360,361,362],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:52","sourceCode":"final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[363],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[347],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[364,365,366],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[264,265,266,267,256,268],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[367,368,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[19,20,21,369],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[41,42,43,44,50,370,54,55,56,57,58,59,60,61,239,62,71,72,75,76],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[371],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":55,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":294,"org.easymock.tests2.UsageTest.argumentsOrdered":238,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":129,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":38,"org.easymock.tests2.StubTest.stubWithReturnValue":24,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":233,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":192,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":74,"org.easymock.tests2.SerializationTest.testAllMockedMethod":21,"org.easymock.tests2.DelegateToTest.testReturnException":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":127,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":363,"org.easymock.tests.MockingTest.testPartialClassMocking":216,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":265,"org.easymock.samples.SupportTest.voteForRemovals":231,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":345,"org.easymock.tests.MockClassControlTest.testToString":333,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":331,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":309,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":369,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":132,"org.easymock.tests.UsageExpectAndThrowTest.object":142,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":270,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":72,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":219,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":220,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":61,"org.easymock.tests2.UsageTest.wrongArguments":236,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":111,"org.easymock.samples.ConstructorCalledMockTest.testTax":296,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":116,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":281,"org.easymock.tests2.UsageConstraintsTest.testNull":57,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":143,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":338,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":278,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":244,"org.easymock.tests2.CaptureTest.testPrimitive":44,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":301,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":259,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":151,"org.easymock.tests.UsageTest.moreThanOneArgument":170,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":103,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":115,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":122,"org.easymock.tests2.CaptureTest.testCaptureNone":48,"org.easymock.tests.UsageUnorderedTest.message":263,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.UsageVarargTest.varargByteAccepted":159,"org.easymock.tests2.ThreadingTest.testThreadSafe":99,"org.easymock.tests.UsageTest.argumentsOrdered":260,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":252,"org.easymock.tests.UsageVarargTest.varargIntAccepted":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":315,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":176,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":203,"org.easymock.tests2.CaptureTest.testCapture_2617107":43,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":249,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":80,"org.easymock.tests2.UsageConstraintsTest.any":62,"org.easymock.tests2.StubTest.stub":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":128,"org.easymock.tests.UsageExpectAndThrowTest.longType":135,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":365,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":224,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":235,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests.LimitationsTest.mockNativeMethod":208,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":371,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":346,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":202,"org.easymock.tests2.AnswerTest.answer":93,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":30,"org.easymock.tests2.CaptureTest.testAnd":41,"org.easymock.tests2.UsageTest.strictResetToDefault":35,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":34,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":108,"org.easymock.tests2.NameTest.nameForMocksControl":88,"org.easymock.tests2.MockedExceptionTest.testMockedException":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":181,"org.easymock.tests2.DelegateToTest.testDelegate":18,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":136,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":279,"org.easymock.tests.MockingTest.testNicePartialClassMocking":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":147,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":106,"org.easymock.tests.LimitationsTest.mockFinalMethod":353,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":359,"org.easymock.tests2.CaptureTest.testCaptureLast":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":130,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":92,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":214,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":73,"org.easymock.tests.MockingTest.testTwoMocks":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":140,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":237,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":76,"org.easymock.tests.UsageStrictMockTest.differentMethods":167,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":341,"org.easymock.tests2.MockBuilderTest.testCreateMockString":325,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":124,"org.easymock.tests.UsageExpectAndThrowTest.floatType":134,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":303,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":94,"org.easymock.tests.ResultTest.createReturnResultToString":1,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":276,"org.easymock.samples.PartialClassMockTest.testGetArea":269,"org.easymock.tests.ResultTest.createDelegateResultToString":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":204,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":250,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":109,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":310,"org.easymock.tests2.UsageTest.niceToStrict":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":133,"org.easymock.tests.LimitationsTest.privateConstructor":352,"org.easymock.tests2.UsageConstraintsTest.testNotNull":75,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":81,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.MockBuilderTest.testCreateMock":324,"org.easymock.tests2.UsageTest.defaultResetToNice":39,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":317,"org.easymock.tests.UsageVarargTest.differentLength":251,"org.easymock.tests2.CallbackTest.callback":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":328,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":141,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":288,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":52,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":248,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":114,"org.easymock.tests.UsageCallCountTest.tooFewCalls":174,"org.easymock.tests.UsageOverloadedMethodTest.overloading":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":314,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":194,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":225,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":65,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":117,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":221,"org.easymock.tests.UsageThrowableTest.throwCheckedException":367,"org.easymock.tests.MockClassControlTest.testEquals":337,"org.easymock.tests2.EasyMockSupportClassTest.testAll":274,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":164,"org.easymock.tests.MockingTest.testStrictClassMocking":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":267,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":29,"org.easymock.tests2.CaptureTest.testCaptureAll":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":360,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":90,"org.easymock.tests2.UsageConstraintsTest.testMatches":67,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":283,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":123,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests2.NameTest.nameForNiceMock":87,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":101,"org.easymock.tests.UsageVarargTest.allKinds":161,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":209,"org.easymock.tests2.DependencyTest.testInterfaceMocking":22,"org.easymock.samples.BasicClassMockTest.testPrintContent":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":213,"org.easymock.samples.ExampleTest.addDocument":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":320,"org.easymock.tests2.DelegateToTest.testStubDelegate":17,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":234,"org.easymock.tests2.AnswerTest.stubAnswer":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":131,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":166,"org.easymock.tests2.UsageConstraintsTest.greaterThan":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":180,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":293,"org.easymock.tests.UsageVarargTest.varargLongAccepted":158,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":168,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":344,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":330,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":201,"org.easymock.tests.UsageExpectAndReturnTest.floatType":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":97,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":297,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":70,"org.easymock.tests.UsageThrowableTest.noUpperLimit":118,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":272,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":53,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":125,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":298,"org.easymock.tests2.SerializationTest.test":20,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":45,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":323,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":226,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":286,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":119,"org.easymock.tests2.UsageConstraintsTest.testSame":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":302,"org.easymock.samples.SupportTest.addDocument":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":126,"org.easymock.tests2.CaptureTest.testCaptureFirst":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":243,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":307,"org.easymock.tests.GenericTest.testPackageScope":163,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":358,"org.easymock.tests2.UsageTest.moreThanOneArgument":36,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":242,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":160,"org.easymock.tests.GenericTest.testBridgedEquals":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":261,"org.easymock.tests2.NameTest.nameForMock":85,"org.easymock.tests.UsageExpectAndReturnTest.longType":186,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":210,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":150,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":240,"org.easymock.tests2.UsageStrictMockTest.differentMethods":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":120,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":329,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":187,"org.easymock.tests.UsageCallCountTest.tooManyCalls":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":366,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":146,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":182,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":318,"org.easymock.tests2.MockedExceptionTest.testRealException":84,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":191,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":112,"org.easymock.tests.MockingTest.testNiceClassMocking":357,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":89,"org.easymock.tests.MockingTest.testClassMocking":355,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":222,"org.easymock.tests2.NameTest.nameForStrictMock":86,"org.easymock.tests2.UsageConstraintsTest.testContains":64,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":172,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":83,"org.easymock.tests2.UsageConstraintsTest.testFind":56,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":178,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":322,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":255,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":26,"org.easymock.tests.UsageExpectAndReturnTest.object":193,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":299,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":342,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":241,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":290,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":156,"org.easymock.tests.UsageTest.exactCallCountByLastCall":295,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":215,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":311,"org.easymock.tests2.CaptureTest.testCaptureRightOne":50,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":253,"org.easymock.tests2.UsageConstraintsTest.testOr":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":326,"org.easymock.tests.UsageRangeTest.combination":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":291,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":199,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":152,"org.easymock.tests.UsageTest.wrongArguments":258,"org.easymock.tests.ResultTest.createThrowResultToString":2,"org.easymock.tests.MockClassControlTest.testHashCode":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":308,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":162,"org.easymock.tests2.EasyMockSupportTest.testVerify":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":312,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":364,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":254,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":343,"org.easymock.tests.UsageVarargTest.varargShortAccepted":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":27,"org.easymock.tests2.UsageConstraintsTest.cmpTo":63,"org.easymock.tests.UsageVarargTest.varargCharAccepted":155,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":31,"org.easymock.tests.DefaultClassInstantiatorTest.object":339,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":246,"org.easymock.tests2.CaptureTest.testCaptureFromStub":370,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":321,"org.easymock.tests.UsageTest.unexpectedCallWithArray":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":139,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":256,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":175,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":361,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":197,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":335,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":292,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.tests2.UsageConstraintsTest.constraints":54,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":200,"org.easymock.tests.UsageStrictMockTest.testVerify":169,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":232,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":277,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests2.CompareToTest.testGreateThan":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":211,"org.easymock.tests2.UsageTest.resumeIfFailure":40,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":46,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":205,"org.easymock.tests.LimitationsTest.abstractClass":351,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":206,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":289,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":5,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":153}}]
