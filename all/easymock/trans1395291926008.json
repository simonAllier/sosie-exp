[{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ONCE"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[5,6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,8,29,30,31,32,33,34,35,36,1,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[64,4,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[67,68,69,70,71,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[74,75,76,77,78,79,80,81,82,83,84,85,64,86,87,88,89,90,91,92,93,94,0,8,95,35,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[74,119,120,81,121,122,96,123,124,101,125,126,114],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[89,102,111,113,114,127,128],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[129],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[130,48],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[131,132,133,134,135,136,137,138,139,65,140,141,142,143,144,145,146,121,147,148,149,150,151,152,153,154,155,156,157,158,125,159,160,161,162,163],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:60","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[164,165,166,167,168,169,170,74,171,172,76,119,120,173,80,81,133,12,174,175,176,22,177,178,179,82,180,181,182,83,84,183,184,85,185,186,187,134,135,64,188,136,137,138,139,4,189,190,191,65,192,140,141,86,142,143,66,193,194,195,144,145,146,121,89,90,196,197,198,199,200,201,202,203,204,205,206,207,24,208,209,25,210,211,212,92,213,214,215,94,216,217,28,8,218,29,30,31,32,95,219,35,220,221,222,223,224,225,40,226,227,228,229,96,230,123,124,101,148,149,150,231,232,233,151,152,46,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,158,125,111,112,267,126,114,159,160,161,162,163,115,268,269,270,271,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[164,67,165,166,273,167,274,275,170,74,171,172,75,76,77,119,120,173,78,79,80,81,276,133,277,21,22,278,279,280,177,178,23,68,187,69,71,134,135,64,188,136,137,138,139,4,189,190,191,65,192,140,141,86,142,143,66,193,194,281,195,144,145,146,87,282,121,88,89,90,283,284,285,286,287,122,288,196,289,197,198,290,199,200,291,292,201,202,203,204,147,205,206,293,294,295,296,91,208,209,211,212,297,92,213,298,93,94,0,216,28,8,218,29,30,31,299,32,34,95,219,35,221,222,223,224,225,37,40,300,301,302,303,304,305,306,307,308,227,228,229,96,230,97,98,123,124,99,100,101,148,149,309,310,150,102,231,232,233,151,152,46,47,311,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,312,313,314,315,316,317,318,319,320,321,322,323,260,324,261,262,263,264,265,266,153,154,155,156,157,158,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,105,106,107,108,352,109,125,110,111,112,353,354,355,356,73,357,267,358,126,113,114,49,359,360,361,362,363,364,159,160,161,162,163,115,268,269,270,365,366,367,368,369,116,370,371,372,373,374,375,376,377,56,57,58,59,60,61,62,63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[170,378,379,380,381,382,177,383,384],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[67,279,385,280,122,288,196],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[170,378,379,380,381,386,382,177,383,384],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[188,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[164,67,165,166,273,167,387,168,388,9,10,169,389,170,74,171,75,76,77,78,79,81,390,276,12,174,175,176,22,177,178,23,179,82,180,181,182,83,84,184,85,185,186,391,68,69,188,4,189,190,191,192,86,66,193,194,281,195,282,88,283,122,288,197,198,290,199,291,292,201,202,203,204,206,207,24,208,209,25,210,211,212,213,214,215,216,217,28,8,218,29,30,31,32,219,220,224,225,37,40,227,228,98,99,100,101,310,231,232,233,46,47,311,242,243,245,250,255,316,260,324,261,262,263,264,265,266,328,329,331,336,341,350,351,106,107,352,109,110,353,355,73,357,267,113,114,365,366,367,368,369,370,371,372,373,374],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[49,50,51,52,54,55],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1291","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[170,378,379,380,381,382,177,383,384],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[172,75,78,79,392,393,394,395,230,97,98,99,100,396,397,398,109],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[77,86,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[390,276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":188,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests2.UsageTest.argumentsOrdered":79,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":185,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":77,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":388,"org.easymock.tests2.DelegateToTest.testReturnException":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":360,"org.easymock.tests.MockingTest.testPartialClassMocking":231,"org.easymock.tests.MockClassControlTest.testToString":58,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":1,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":326,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":379,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":148,"org.easymock.tests2.UsageTest.wrongArguments":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":302,"org.easymock.samples.ExampleTest.answerVsDelegate":67,"org.easymock.tests2.UsageConstraintsTest.testNull":137,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":29,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":63,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":85,"org.easymock.tests2.CaptureTest.testPrimitive":199,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":150,"org.easymock.tests.UsageTest.moreThanOneArgument":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":345,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":155,"org.easymock.tests.UsageTest.argumentsOrdered":100,"org.easymock.tests.UsageVarargTest.varargIntAccepted":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":159,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":297,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":163,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":220,"org.easymock.tests.ReplayStateInvalidUsageTest.times":320,"org.easymock.tests2.AnswerTest.answer":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":296,"org.easymock.tests2.CaptureTest.testAnd":197,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":269,"org.easymock.tests2.DelegateToTest.testDelegate":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":341,"org.easymock.tests.LimitationsTest.mockFinalMethod":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":363,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":308,"org.easymock.tests2.CaptureTest.testCapture1_2446744":200,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":6,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":294,"org.easymock.tests.UsageThrowableTest.throwError":260,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":314,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":157,"org.easymock.samples.PartialClassMockTest.testGetArea":169,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":16,"org.easymock.tests2.UsageTest.niceToStrict":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":327,"org.easymock.tests2.ThreadingTest.testChangeDefault":7,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":213,"org.easymock.tests2.MockBuilderTest.testCreateMock":93,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":392,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":335,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":300,"org.easymock.tests.UsageOverloadedMethodTest.overloading":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":20,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":140,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":357,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":251,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":192,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":203,"org.easymock.tests2.EasyMockSupportClassTest.testAll":12,"org.easymock.tests.MockClassControlTest.testEquals":62,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":47,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":393,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":343,"org.easymock.tests2.CaptureTest.testCaptureAll":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":306,"org.easymock.tests2.UsageConstraintsTest.testMatches":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":312,"org.easymock.samples.ExampleTest.voteForRemovals":167,"org.easymock.tests.UsageVarargTest.allKinds":374,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":126,"org.easymock.samples.BasicClassMockTest.testPrintContent":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":307,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":265,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":87,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":364,"org.easymock.tests2.UsageConstraintsTest.greaterThan":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":268,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":35,"org.easymock.samples.ExampleTest.voteForRemoval":165,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":55,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":36,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":299,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":37,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":180,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":359,"org.easymock.tests2.CaptureTest.testCaptureFirst":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":181,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":81,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":247,"org.easymock.tests2.UsageTest.moreThanOneArgument":172,"org.easymock.tests2.CaptureTest.testCapture2_2446744":205,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":2,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":94,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":373,"org.easymock.tests.GenericTest.testBridgedEquals":48,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":106,"org.easymock.tests.UsageExpectAndReturnTest.longType":243,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":344,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":153,"org.easymock.tests.UsageCallCountTest.tooManyCalls":107,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":264,"org.easymock.tests.MockingTest.testNiceClassMocking":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":208,"org.easymock.tests.MockingTest.testClassMocking":43,"org.easymock.tests2.UsageConstraintsTest.testContains":65,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":347,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":22,"org.easymock.tests2.UsageConstraintsTest.testFind":136,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":229,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":108,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":280,"org.easymock.tests.UsageExpectAndReturnTest.object":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":184,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":369,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":380,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":377,"org.easymock.tests.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":158,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":398,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":378,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":256,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":73,"org.easymock.tests.MockClassControlTest.testHashCode":61,"org.easymock.tests2.EasyMockSupportTest.testVerify":391,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":3,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":355,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":103,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":293,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":390,"org.easymock.tests.UsageVarargTest.varargCharAccepted":368,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":239,"org.easymock.tests2.UsageTest.openCallCountByLastCall":119,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":186,"org.easymock.tests.DefaultClassInstantiatorTest.object":49,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":375,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":262,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":60,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":176,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":59,"org.easymock.tests2.UsageTest.resumeIfFailure":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":362,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":383,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":195,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":249,"org.easymock.tests2.SerializationTest.testAllMockedMethod":23,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":394,"org.easymock.samples.SupportTest.voteForRemovals":168,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":338,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":129,"org.easymock.tests.UsageExpectAndThrowTest.object":336,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":193,"org.easymock.tests2.DelegateToTest.testWrongClass":69,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":151,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":152,"org.easymock.samples.ConstructorCalledMockTest.testTax":131,"org.easymock.tests.UsageStrictMockTest.range":111,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":183,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":337,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":214,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":11,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":301,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":396,"org.easymock.tests2.CaptureTest.testCaptureNone":202,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":272,"org.easymock.tests.UsageUnorderedTest.message":102,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":117,"org.easymock.tests.UsageVerifyTest.twoReturns":114,"org.easymock.tests.UsageVarargTest.varargByteAccepted":372,"org.easymock.tests2.ThreadingTest.testThreadSafe":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":18,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":351,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":9,"org.easymock.tests2.CaptureTest.testCapture_2617107":290,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":310,"org.easymock.tests2.UsageConstraintsTest.any":190,"org.easymock.tests2.StubTest.stub":276,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":238,"org.easymock.tests.UsageExpectAndThrowTest.longType":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":361,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":318,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":88,"org.easymock.tests2.SerializationTest.testClass":177,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.LimitationsTest.mockNativeMethod":40,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":259,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests2.NameTest.nameForMocksControl":287,"org.easymock.tests2.MockedExceptionTest.testMockedException":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":13,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":385,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":215,"org.easymock.tests.MockingTest.testNicePartialClassMocking":232,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":31,"org.easymock.tests2.CaptureTest.testCaptureLast":201,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":311,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":212,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":194,"org.easymock.tests.MockingTest.testTwoMocks":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":334,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":145,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":5,"org.easymock.samples.ExampleTest.removeNonExistingDocument":274,"org.easymock.tests.UsageStrictMockTest.differentMethods":112,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":316,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":51,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":223,"org.easymock.tests2.MockBuilderTest.testCreateMockString":0,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":14,"org.easymock.tests.UsageExpectAndThrowTest.floatType":328,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":288,"org.easymock.tests.UsageVerifyTest.twoThrows":113,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":175,"org.easymock.samples.ExampleTest.voteAgainstRemoval":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":236,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":219,"org.easymock.tests.LimitationsTest.privateConstructor":39,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":266,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":277,"org.easymock.tests2.UsageTest.defaultResetToNice":173,"org.easymock.samples.ExampleTest.voteAgainstRemovals":164,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":255,"org.easymock.tests.UsageVarargTest.differentLength":116,"org.easymock.tests2.CallbackTest.callback":91,"org.easymock.tests.UsageTest.openCallCountByLastCall":123,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":309,"org.easymock.tests.UsageCallCountTest.tooFewCalls":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":303,"org.easymock.tests.UsageThrowableTest.throwCheckedException":263,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":397,"org.easymock.tests.MockingTest.testStrictClassMocking":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":211,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":325,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":209,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":210,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests.ObjectMethodsTest.testHashCode":376,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":225,"org.easymock.tests2.NameTest.nameForNiceMock":286,"org.easymock.tests2.DependencyTest.testInterfaceMocking":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":381,"org.easymock.samples.ExampleTest.addDocument":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":19,"org.easymock.tests2.DelegateToTest.testStubDelegate":187,"org.easymock.tests2.AnswerTest.stubAnswer":196,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":125,"org.easymock.tests.UsageVarargTest.varargLongAccepted":371,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":235,"org.easymock.tests.UsageExpectAndReturnTest.floatType":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":170,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":132,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":143,"org.easymock.tests.UsageThrowableTest.noUpperLimit":324,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":26,"org.easymock.tests2.SerializationTest.test":178,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":291,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":50,"org.easymock.tests2.UsageConstraintsTest.testSame":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":241,"org.easymock.samples.SupportTest.addDocument":387,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":15,"org.easymock.tests.GenericTest.testPackageScope":46,"org.easymock.tests2.NameTest.nameForMock":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":252,"org.easymock.tests2.UsageStrictMockTest.differentMethods":90,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":340,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":270,"org.easymock.tests2.MockedExceptionTest.testRealException":278,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":149,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":323,"org.easymock.tests2.NameTest.nameForStrictMock":285,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":279,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":30,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":27,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":127,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":52,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":66,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":92,"org.easymock.tests2.UsageStrictMockTest.range":89,"org.easymock.tests2.UsageConstraintsTest.lessThan":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":82,"org.easymock.tests2.CaptureTest.testCaptureRightOne":204,"org.easymock.tests2.UsageConstraintsTest.testOr":139,"org.easymock.tests.UsageRangeTest.combination":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":8,"org.easymock.tests.UsageTest.wrongArguments":98,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":253,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":54,"org.easymock.tests.UsageVarargTest.varargShortAccepted":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":105,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests2.CaptureTest.testCaptureFromStub":147,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":313,"org.easymock.tests.UsageTest.unexpectedCallWithArray":97,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":350,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":254,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.tests2.UsageConstraintsTest.constraints":64,"org.easymock.samples.ExampleTest.addAndChangeDocument":275,"org.easymock.tests.UsageStrictMockTest.testVerify":354,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":389,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":352,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":305,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":161,"org.easymock.tests.LimitationsTest.abstractClass":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":162,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":267,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":84,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":366}}]
