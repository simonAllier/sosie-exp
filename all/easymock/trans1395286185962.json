[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.ConstructorArgs:54","failures":[25,185,26,186,187,31,35,188,189,190,191,192,193,194,195,196,197,101,198,199,102,200,201,202,203,204,205,206,207,208,103,209,210,211,212,213,104,214,215,216,217],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[4,5,6,49,218,219,220,221,222,223,224,225,226,113,114,115,172,227,173,178,228,229,230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[96,231],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[36,38,44,59,60,62,64,65,232,76,81],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[76,77],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[23,233,234,235],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[25,186,187,216,217],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:228","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[236],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[237,238,226,239,240,241],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[26,27,242,243],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[25,244,26,242,29,30,31,32,34,35,84,85,87,88,89,245,90,246,91,92,93,247,94,248,95,249,96,97,250,98,251,100,101,102,103,104,252,253,216,216,217,217,110,111,254,112,128,255,129,130,131,256],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[36,38,44,59,60,64,65,232,76],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[188],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[237,238,226,239,240,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[257,258,259],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[185,257,261,262,263,258,259,264,26,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[59,66,71,83],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[116,117,118,161],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[265,83],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[60,64,232],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[266,267,268,269,270,7,271,272,273,274,275,276,277,278,279,280,281,99,282,283,284,285,286,287,288,289],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[36,37,38,39,40,290,291,41,42,43,44,292,45,46,293],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[36,38,44,59,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[25,185,261,262,263,294,264,26,191,192],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:210","failures":[25,185,26,295,192,216,216,217,217],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[296,297,100,298,299,160,300,301,302,303,304,305],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[36,38,44,59,60,64,65,232,76],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[76,77],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":60,"org.easymock.tests2.UsageTest.argumentsOrdered":220,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":177,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":282,"org.easymock.tests2.StubTest.stubWithReturnValue":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":191,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":289,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":80,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":148,"org.easymock.tests2.SerializationTest.testAllMockedMethod":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":301,"org.easymock.tests.MockingTest.testPartialClassMocking":129,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":238,"org.easymock.samples.SupportTest.voteForRemovals":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":280,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":203,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":243,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":102,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":235,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":77,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":182,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":183,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":66,"org.easymock.tests2.UsageTest.wrongArguments":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":124,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":276,"org.easymock.samples.ConstructorCalledMockTest.testTax":216,"org.easymock.tests.UsageStrictMockTest.range":114,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":15,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":29,"org.easymock.tests2.UsageConstraintsTest.testNull":62,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":96,"org.easymock.tests2.CaptureTest.testPrimitive":39,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":126,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":195,"org.easymock.tests.UsageTest.moreThanOneArgument":178,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":86,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":239,"org.easymock.tests2.CaptureTest.testCaptureNone":42,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":118,"org.easymock.tests.UsageUnorderedTest.message":225,"org.easymock.tests.UsageVerifyTest.twoReturns":173,"org.easymock.tests2.ThreadingTest.testThreadSafe":20,"org.easymock.tests.UsageTest.argumentsOrdered":230,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":209,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":252,"org.easymock.tests2.CaptureTest.testCapture_2617107":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":259,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":121,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":249,"org.easymock.tests2.UsageConstraintsTest.any":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":122,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":7,"org.easymock.tests.LimitationsTest.mockNativeMethod":128,"org.easymock.tests2.AnswerTest.answer":2,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":112,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":158,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":232,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":268,"org.easymock.tests2.CaptureTest.testAnd":36,"org.easymock.tests2.UsageTest.strictResetToDefault":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":246,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":190,"org.easymock.tests2.NameTest.nameForMocksControl":224,"org.easymock.tests2.MockedExceptionTest.testMockedException":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":12,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":170,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":131,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":97,"org.easymock.tests.MockingTest.testNicePartialClassMocking":130,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":257,"org.easymock.tests2.CaptureTest.testCaptureLast":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":304,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":65,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":35,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":78,"org.easymock.tests.MockingTest.testTwoMocks":255,"org.easymock.tests2.CaptureTest.testCapture1_2446744":40,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":188,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":139,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":82,"org.easymock.tests.UsageThrowableTest.throwError":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":272,"org.easymock.tests.UsageStrictMockTest.differentMethods":115,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":279,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":22,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":287,"org.easymock.tests2.MockBuilderTest.testCreateMockString":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":200,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":197,"org.easymock.tests.UsageVerifyTest.twoThrows":227,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":103,"org.easymock.samples.PartialClassMockTest.testGetArea":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":163,"org.easymock.samples.ExampleTest.voteAgainstRemoval":107,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":116,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":120,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":204,"org.easymock.tests2.UsageTest.niceToStrict":50,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":187,"org.easymock.tests2.UsageConstraintsTest.testNotNull":81,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":95,"org.easymock.tests2.MockBuilderTest.testCreateMock":250,"org.easymock.tests2.UsageTest.defaultResetToNice":53,"org.easymock.samples.ExampleTest.voteAgainstRemovals":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":295,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":273,"org.easymock.tests.UsageTest.openCallCountByLastCall":179,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":237,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":299,"org.easymock.tests.UsageOverloadedMethodTest.overloading":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":32,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":150,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":70,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":43,"org.easymock.tests.UsageThrowableTest.throwCheckedException":135,"org.easymock.tests2.EasyMockSupportClassTest.testAll":101,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":240,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":244,"org.easymock.tests2.CaptureTest.testCaptureAll":37,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":271,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":31,"org.easymock.tests2.UsageConstraintsTest.testMatches":72,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":33,"org.easymock.samples.ExampleTest.voteForRemovals":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":258,"org.easymock.tests2.NameTest.nameForNiceMock":223,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":24,"org.easymock.tests2.DependencyTest.testInterfaceMocking":0,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":263,"org.easymock.samples.BasicClassMockTest.testPrintContent":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":214,"org.easymock.tests2.DelegateToTest.testStubDelegate":56,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.AnswerTest.stubAnswer":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":283,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":264,"org.easymock.tests2.UsageConstraintsTest.greaterThan":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":169,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":93,"org.easymock.samples.ExampleTest.voteForRemoval":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":119,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":21,"org.easymock.tests.UsageExpectAndReturnTest.floatType":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":25,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":285,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":75,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":256,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":58,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":290,"org.easymock.tests2.SerializationTest.test":27,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":10,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests2.UsageConstraintsTest.testSame":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":300,"org.easymock.tests2.CaptureTest.testCaptureFirst":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":11,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":55,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":201,"org.easymock.tests.GenericTest.testPackageScope":111,"org.easymock.tests2.UsageTest.moreThanOneArgument":49,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":23,"org.easymock.tests2.CaptureTest.testCapture2_2446744":45,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":236,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":98,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":284,"org.easymock.tests.GenericTest.testBridgedEquals":260,"org.easymock.tests2.NameTest.nameForMock":221,"org.easymock.tests.UsageExpectAndReturnTest.longType":142,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":8,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":151,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":79,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":194,"org.easymock.tests2.UsageStrictMockTest.differentMethods":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":171,"org.easymock.tests2.MockedExceptionTest.testRealException":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":275,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":30,"org.easymock.tests2.NameTest.nameForStrictMock":222,"org.easymock.tests2.UsageConstraintsTest.testContains":69,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":100,"org.easymock.tests2.UsageConstraintsTest.testFind":61,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests.UsageExpectAndReturnTest.object":149,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":76,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":274,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.UsageConstraintsTest.lessThan":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":281,"org.easymock.tests.UsageTest.exactCallCountByLastCall":181,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":294,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":205,"org.easymock.tests2.CaptureTest.testCaptureRightOne":44,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":234,"org.easymock.tests2.UsageConstraintsTest.testOr":64,"org.easymock.tests.UsageRangeTest.combination":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":85,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":155,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":167,"org.easymock.tests.UsageTest.wrongArguments":228,"org.easymock.tests2.MockBuilderTest.testWithConstructor":189,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":206,"org.easymock.tests2.UsageConstraintsTest.cmpTo":68,"org.easymock.tests2.CompareToTest.testLessThan":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":123,"org.easymock.tests2.UsageTest.openCallCountByLastCall":51,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":52,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":19,"org.easymock.tests2.CaptureTest.testCaptureFromStub":292,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":248,"org.easymock.tests.UsageTest.unexpectedCallWithArray":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":207,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":269,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":193,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":277,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":153,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":91,"org.easymock.tests2.UsageConstraintsTest.constraints":59,"org.easymock.tests.CapturesMatcherTest.test":293,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":156,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":104,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":291,"org.easymock.tests2.UsageTest.resumeIfFailure":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":145,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":165,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":14}}]
