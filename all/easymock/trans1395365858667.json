[{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,0,140,141,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[30,31,32,33,50,70,71,295,72,73,74,75,76,77,78,96,98,99,116,117,118,119,121,122,129,130,132,133,134,135,136,137,138,139,0,296,297,298,299,300,301,302,303,140,157,304,169,170,171,305,306,277,278,307,289,290,292,292,293,293,294],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[308],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[1,15,18,27,65,66,67,81,95,101,107,108,113,114,127,128,146,309,186,226,227,233,239,243,245,249,255,261,265,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[42,43,163,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[310,36,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[3,4,6,8,9,311,20,25,100,102,110],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[312,313,314,315,316,317,118,122,318,319,320,321],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[322,323],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[92,94,95,148,281],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1988","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjenesisClassInstantiator:26","sourceCode":"return org.objenesis.ObjenesisHelper.org.objenesis.ObjenesisHelper.newInstance(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[324,325,326,327,30,328,31,329,330,331,332,333,334,335,32,336,337,338,339,340,33,48,49,50,70,71,295,341,72,73,74,75,76,77,78,98,116,117,119,121,129,130,132,133,134,135,136,342,137,138,139,0,343,296,298,299,300,301,302,303,344,345,346,347,140,348,157,349,350,304,169,170,171,351,305,306,352,277,278,307,353,289,290,294],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[96,97,354],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","sourceCode":"return (((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[46,79,86,146,149,155,167,355,356,357,175,358,185,190,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[116,119,129,132,133,134,136,345,353],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[359,360,361],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[362,363,364,365,366,367,368,96,99,317,118,122,130,369,137,0,292,292,293,293],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1,2,3,4,370,5,6,7,8,9,10,311,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,324,325,371,372,322,323,28,29,326,327,30,328,31,329,330,332,335,32,336,337,338,339,340,33,34,310,373,35,36,37,38,39,40,41,42,43,44,45,46,374,375,376,377,378,47,379,380,381,382,383,384,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,295,341,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,385,92,93,94,386,95,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,387,388,389,390,391,115,392,393,394,395,396,397,398,116,117,119,120,318,123,124,125,126,127,399,128,129,130,131,132,133,134,135,400,136,342,137,138,139,0,343,296,401,402,403,404,405,406,407,408,409,410,297,298,299,300,301,302,303,344,345,346,347,140,348,411,412,413,414,415,416,417,418,419,420,421,422,423,142,143,144,145,146,147,424,148,149,425,426,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,427,166,167,168,428,429,430,355,356,357,349,350,304,431,432,433,351,434,435,436,172,173,174,175,176,177,437,178,179,438,439,440,358,441,442,443,444,445,446,447,448,309,449,450,451,452,453,454,455,456,457,458,459,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,460,461,203,204,205,206,207,208,209,462,305,463,464,306,465,466,210,211,212,467,213,214,215,216,217,218,219,220,221,222,223,224,225,226,468,469,470,471,472,473,474,475,476,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,477,478,479,480,481,482,483,484,485,486,487,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,352,277,278,307,353,279,280,281,282,283,284,285,488,286,287,288,289,290,291,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[1,15,18,27,65,66,67,81,95,101,107,108,113,114,127,128,146,452,186,226,227,233,239,243,245,249,255,261,265,267,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,120,127,128,129,130,131,132,133,134,136,0,406,409,344,345,140,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,427,166,167,168,172,173,174,175,176,177,178,179,185,186,188,189,190,191,192,193,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,469,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,484,485,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,353,279,280,281,282,283,284,285,286,287,288,289,290,291],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests2.UsageTest.argumentsOrdered":89,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":447,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":84,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":291,"org.easymock.tests2.DelegateToTest.testReturnException":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":152,"org.easymock.tests.MockingTest.testPartialClassMocking":169,"org.easymock.tests.MockClassControlTest.testToString":300,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":401,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":249,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":29,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":172,"org.easymock.tests2.UsageTest.wrongArguments":82,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":196,"org.easymock.samples.ExampleTest.answerVsDelegate":281,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":306,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":433,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":132,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":61,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":345,"org.easymock.tests2.CaptureTest.testPrimitive":103,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":176,"org.easymock.tests.UsageTest.moreThanOneArgument":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":268,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":200,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":483,"org.easymock.tests.UsageTest.argumentsOrdered":192,"org.easymock.tests.UsageVarargTest.varargIntAccepted":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":383,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":225,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":360,"org.easymock.tests.ReplayStateInvalidUsageTest.times":419,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.DependencyTest.testClassMocking":322,"org.easymock.tests2.AnswerTest.answer":34,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":453,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":126,"org.easymock.tests2.CaptureTest.testAnd":100,"org.easymock.tests2.UsageTest.strictResetToDefault":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":137,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":56,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":487,"org.easymock.tests2.DelegateToTest.testDelegate":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":264,"org.easymock.tests.LimitationsTest.mockFinalMethod":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":184,"org.easymock.tests2.DependencyTest.testClassMockingSupport":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":477,"org.easymock.tests2.CaptureTest.testCapture1_2446744":104,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":262,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":124,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":413,"org.easymock.tests.UsageThrowableTest.throwError":269,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":464,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":202,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":367,"org.easymock.samples.PartialClassMockTest.testGetArea":294,"org.easymock.tests.MockingTest.testInterfaceMocking":431,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":222,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":429,"org.easymock.tests2.UsageTest.niceToStrict":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":250,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.MockBuilderTest.testCreateMock":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":394,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":258,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":57,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":357,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":194,"org.easymock.tests.UsageOverloadedMethodTest.overloading":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":365,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":149,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":15,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":238,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":14,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":109,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":467,"org.easymock.tests2.EasyMockSupportClassTest.testAll":30,"org.easymock.tests.MockClassControlTest.testEquals":344,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":182,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":125,"org.easymock.tests2.CaptureTest.testCaptureAll":101,"org.easymock.tests.MockNameTest.defaultName":423,"org.easymock.tests2.UsageConstraintsTest.testMatches":16,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":201,"org.easymock.samples.ExampleTest.voteForRemovals":285,"org.easymock.tests.UsageVarargTest.allKinds":220,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":183,"org.easymock.samples.BasicClassMockTest.testPrintContent":290,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":275,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":38,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":380,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":475,"org.easymock.tests2.UsageConstraintsTest.greaterThan":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":363,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":0,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":476,"org.easymock.samples.ExampleTest.voteForRemoval":282,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":66,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":343,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":135,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":157,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":79,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":54,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":151,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":385,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":55,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":234,"org.easymock.tests2.CaptureTest.testCapture2_2446744":112,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":68,"org.easymock.tests2.UsageTest.moreThanOneArgument":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":454,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":77,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":219,"org.easymock.tests.GenericTest.testBridgedEquals":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":208,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":321,"org.easymock.tests.UsageExpectAndReturnTest.longType":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":180,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":267,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":462,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":481,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":198,"org.easymock.tests.UsageCallCountTest.tooManyCalls":209,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":361,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":339,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":274,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":117,"org.easymock.tests.MockingTest.testNiceClassMocking":351,"org.easymock.tests.MockingTest.testClassMocking":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":461,"org.easymock.tests2.UsageConstraintsTest.testContains":13,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":5,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":146,"org.easymock.tests.MockTypeTest.fromEasyMockClass":463,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":158,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":128,"org.easymock.tests.UsageExpectAndReturnTest.object":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":60,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":214,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":409,"org.easymock.tests.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":484,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":434,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":317,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":243,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":148,"org.easymock.tests.MockClassControlTest.testHashCode":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":375,"org.easymock.tests2.EasyMockSupportTest.testVerify":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":334,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":359,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":485,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":147,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":123,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":398,"org.easymock.tests.UsageVarargTest.varargCharAccepted":213,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":468,"org.easymock.tests2.CaptureTest.testCaptureMultiple":308,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":459,"org.easymock.tests2.UsageTest.openCallCountByLastCall":85,"org.easymock.tests.DefaultClassInstantiatorTest.object":469,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":63,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":355,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":335,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":390,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":374,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":138,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":255,"org.easymock.tests.CapturesMatcherTest.test":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":33,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":301,"org.easymock.tests2.UsageTest.resumeIfFailure":90,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":154,"org.easymock.tests2.StubTest.stubWithReturnValue":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":314,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":236,"org.easymock.tests2.SerializationTest.testAllMockedMethod":98,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":452,"org.easymock.samples.SupportTest.voteForRemovals":288,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":352,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":377,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":261,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":354,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":458,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":310,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":436,"org.easymock.tests.UsageExpectAndThrowTest.object":259,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":21,"org.easymock.tests2.DelegateToTest.testWrongClass":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":248,"org.easymock.tests.UsageStrictMockTest.range":163,"org.easymock.samples.ConstructorCalledMockTest.testTax":292,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":371,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":59,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":260,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":74,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":421,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":195,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":430,"org.easymock.tests2.CaptureTest.testCaptureNone":108,"org.easymock.tests.UsageUnorderedTest.message":226,"org.easymock.tests.UsageVerifyTest.twoReturns":168,"org.easymock.tests.UsageVarargTest.varargByteAccepted":218,"org.easymock.tests2.ThreadingTest.testThreadSafe":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":336,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":206,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":410,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":289,"org.easymock.tests2.CaptureTest.testCapture_2617107":102,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":175,"org.easymock.tests2.UsageConstraintsTest.any":11,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":418,"org.easymock.tests2.StubTest.stub":45,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":252,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":473,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":417,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.tests2.SerializationTest.testClass":96,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":47,"org.easymock.tests.LimitationsTest.mockNativeMethod":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":246,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":307,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":389,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":44,"org.easymock.tests2.NameTest.nameForMocksControl":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":391,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":328,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":190,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":399,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":253,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":75,"org.easymock.tests.MockingTest.testNicePartialClassMocking":170,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":134,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":387,"org.easymock.tests2.CaptureTest.testCaptureLast":107,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":478,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":122,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":22,"org.easymock.tests.MockingTest.testTwoMocks":304,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":257,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":26,"org.easymock.samples.ExampleTest.removeNonExistingDocument":488,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":393,"org.easymock.tests.UsageStrictMockTest.differentMethods":164,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":376,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":471,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":67,"org.easymock.tests2.MockBuilderTest.testCreateMockString":78,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":298,"org.easymock.tests.UsageExpectAndThrowTest.floatType":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":329,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":35,"org.easymock.tests.UsageVerifyTest.twoThrows":167,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":428,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":139,"org.easymock.tests.LimitationsTest.privateConstructor":347,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":320,"org.easymock.tests2.UsageConstraintsTest.testNotNull":25,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":276,"org.easymock.tests2.UsageTest.defaultResetToNice":87,"org.easymock.samples.ExampleTest.voteAgainstRemovals":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":388,"org.easymock.tests.UsageVarargTest.differentLength":215,"org.easymock.tests2.CallbackTest.callback":114,"org.easymock.tests2.UsageConstraintsTest.equals":370,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":369,"org.easymock.tests.UsageTest.openCallCountByLastCall":189,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":174,"org.easymock.tests.UsageCallCountTest.tooFewCalls":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":197,"org.easymock.tests.UsageThrowableTest.throwCheckedException":273,"org.easymock.tests.MockingTest.testStrictClassMocking":349,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":143,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":392,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":118,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":420,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":120,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":37,"org.easymock.tests.ObjectMethodsTest.testHashCode":408,"org.easymock.tests2.NameTest.nameForNiceMock":404,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":69,"org.easymock.tests2.DependencyTest.testInterfaceMocking":28,"org.easymock.samples.ExampleTest.addDocument":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":337,"org.easymock.tests2.DelegateToTest.testStubDelegate":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.stubAnswer":36,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":161,"org.easymock.tests.UsageVarargTest.varargLongAccepted":217,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.floatType":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":99,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":293,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":19,"org.easymock.tests.UsageThrowableTest.noUpperLimit":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":2,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":324,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":105,"org.easymock.tests2.SerializationTest.test":97,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":470,"org.easymock.tests2.UsageConstraintsTest.testSame":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":228,"org.easymock.samples.SupportTest.addDocument":287,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":330,"org.easymock.tests.GenericTest.testPackageScope":277,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":381,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":432,"org.easymock.tests2.NameTest.nameForMock":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":239,"org.easymock.tests2.UsageStrictMockTest.differentMethods":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":316,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":342,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":231,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":263,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":179,"org.easymock.tests2.MockedExceptionTest.testRealException":51,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":449,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":40,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":173,"org.easymock.tests2.NameTest.nameForStrictMock":403,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":341,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":133,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":325,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":472,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":71,"org.easymock.tests2.UsageStrictMockTest.range":42,"org.easymock.tests2.UsageConstraintsTest.lessThan":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":53,"org.easymock.tests2.CaptureTest.testCaptureRightOne":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":333,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":130,"org.easymock.tests.UsageTest.wrongArguments":188,"org.easymock.tests2.MockBuilderTest.testWithConstructor":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":331,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":240,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":474,"org.easymock.tests.UsageVarargTest.varargShortAccepted":216,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":207,"org.easymock.tests2.UsageConstraintsTest.cmpTo":12,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":358,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":86,"org.easymock.tests2.CaptureTest.testCaptureFromStub":111,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":412,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":295,"org.easymock.tests.UsageTest.unexpectedCallWithArray":187,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":160,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":205,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":241,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":162,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.samples.ExampleTest.addAndChangeDocument":286,"org.easymock.tests.UsageStrictMockTest.testVerify":427,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":279,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":181,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":233,"org.easymock.tests.LimitationsTest.abstractClass":346,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":58,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":211}}]
