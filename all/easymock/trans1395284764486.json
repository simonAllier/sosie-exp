[{"position":"org.easymock.internal.MockBuilder:235","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,18,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,13,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[20,95,97,98,268],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[309],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[115,118,120,125,310,129,130,132,133,135,142,145,311,147,148,151,152,155,312,313,314,315,316,156,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[57,63,68,170],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[101,102,108,109,331,332,333,334,335,336,337,224,225,226,229,230,284],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[99,106,223,228,256,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[56,18,67,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[2,5,340,341,342,343,344,345,346,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[33,44,58,92,99,102,103,104,108,109,110,111,113,117,118,121,126,131,132,133,135,143,145,161,164,165,166,199,209,223,225,226,229,230,231,256,257,281,282,284,286,287,288,305,306,307],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[2,34,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[101,163,165,166,224,255,256,257,281,285,287,288,347,348,349,350],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,351,352,2,353,354,355,36,356,357,37,358,359,360,361,362,363,364,365,366,38,367,368,369,370,371,39,372,373,3,4,5,6,7,8,148,152,374,13,14],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[375,376],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[58,104,138],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1291","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,377],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[102,108,109,165,378,225,226,229,230,256,257,270,281,284,287],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[0,0,1,1,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,2,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,379,52,53,54,55,56,57,58,59,60,61,62,18,63,64,65,66,67,68,380,381,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,382,95,96,97,383,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,313,314,315,316,13,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,384,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,385,386,199,387,200,201,388,202,203,389,390,204,205,206,207,208,209,210,211,212,213,214,215,216,391,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,392,393,394,16,395,396,258,259,260,261,262,263,264,265,266,267,397,268,269,398,399,270,271,272,273,274,275,400,401,276,277,278,279,280,17,402,403,281,282,283,284,285,286,287,288,289,404,290,291,292,293,294,295,405,406,407,308,408,296,297,298,299,300,409,301,302,303,304,305,306,307],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[102,108,109,165,410,378,225,226,229,230,256,257,270,281,284,287],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":45,"org.easymock.tests2.UsageTest.argumentsOrdered":109,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":317,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":104,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":29,"org.easymock.tests2.DelegateToTest.testReturnException":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":291,"org.easymock.tests.MockingTest.testPartialClassMocking":176,"org.easymock.tests.MockClassControlTest.testToString":322,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":390,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":232,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":347,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":341,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":51,"org.easymock.tests2.UsageTest.wrongArguments":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":172,"org.easymock.samples.ExampleTest.answerVsDelegate":20,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":328,"org.easymock.tests2.UsageConstraintsTest.testNull":47,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":121,"org.easymock.tests2.CaptureTest.testPrimitive":79,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":222,"org.easymock.tests.UsageTest.moreThanOneArgument":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":298,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":405,"org.easymock.tests.UsageTest.argumentsOrdered":230,"org.easymock.tests.UsageVarargTest.varargIntAccepted":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":271,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":345,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":275,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":155,"org.easymock.tests2.AnswerTest.answer":68,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":75,"org.easymock.tests2.CaptureTest.testAnd":76,"org.easymock.tests2.UsageTest.strictResetToDefault":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":200,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":408,"org.easymock.tests2.DelegateToTest.testDelegate":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":280,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":385,"org.easymock.tests2.CaptureTest.testCapture1_2446744":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":73,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":15,"org.easymock.tests.UsageThrowableTest.throwError":258,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":300,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":9,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":373,"org.easymock.samples.PartialClassMockTest.testGetArea":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":272,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":393,"org.easymock.tests2.UsageTest.niceToStrict":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":233,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":362,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":127,"org.easymock.tests2.MockBuilderTest.testCreateMock":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":241,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":331,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":117,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":403,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":409,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":170,"org.easymock.tests.UsageOverloadedMethodTest.overloading":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":56,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":190,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":55,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":85,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":203,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":249,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":74,"org.easymock.tests2.CaptureTest.testCaptureAll":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":278,"org.easymock.tests.MockNameTest.defaultName":318,"org.easymock.tests2.UsageConstraintsTest.testMatches":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":299,"org.easymock.samples.ExampleTest.voteForRemovals":24,"org.easymock.tests.UsageVarargTest.allKinds":214,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":255,"org.easymock.samples.BasicClassMockTest.testPrintContent":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":279,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":264,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":295,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":383,"org.easymock.tests2.UsageConstraintsTest.greaterThan":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":145,"org.easymock.samples.ExampleTest.voteForRemoval":21,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":91,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":329,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":140,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":99,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":217,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":114,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":290,"org.easymock.tests2.CaptureTest.testCaptureFirst":89,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":115,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":111,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":186,"org.easymock.tests2.UsageTest.moreThanOneArgument":101,"org.easymock.tests2.CaptureTest.testCapture2_2446744":88,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":132,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":213,"org.easymock.tests.GenericTest.testBridgedEquals":376,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":306,"org.easymock.tests.UsageExpectAndReturnTest.longType":182,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":250,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":391,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":248,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":296,"org.easymock.tests.UsageCallCountTest.tooManyCalls":307,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":263,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":147,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":159,"org.easymock.tests2.UsageConstraintsTest.testFind":46,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":254,"org.easymock.tests.MockTypeTest.fromEasyMockClass":326,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":41,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests.UsageExpectAndReturnTest.object":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":120,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":342,"org.easymock.tests.UsageTest.exactCallCountByLastCall":231,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":174,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":406,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":195,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":204,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":268,"org.easymock.tests2.EasyMockSupportTest.testVerify":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":364,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":407,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":402,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":267,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":72,"org.easymock.tests.UsageVarargTest.varargCharAccepted":207,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":162,"org.easymock.tests2.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":123,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":17,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":319,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":378,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":261,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":143,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":238,"org.easymock.tests.CapturesMatcherTest.test":377,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":39,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":323,"org.easymock.tests2.UsageTest.resumeIfFailure":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":293,"org.easymock.tests2.StubTest.stubWithReturnValue":169,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":188,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":64,"org.easymock.tests2.SerializationTest.testAllMockedMethod":35,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":400,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":11,"org.easymock.samples.SupportTest.voteForRemovals":32,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":333,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":244,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":401,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":380,"org.easymock.tests.UsageExpectAndThrowTest.object":242,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":62,"org.easymock.tests2.DelegateToTest.testWrongClass":97,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":216,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":287,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":243,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":129,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":171,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":335,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":394,"org.easymock.tests2.CaptureTest.testCaptureNone":84,"org.easymock.tests.UsageUnorderedTest.message":281,"org.easymock.tests.UsageVerifyTest.twoReturns":257,"org.easymock.tests.UsageVarargTest.varargByteAccepted":212,"org.easymock.tests2.ThreadingTest.testThreadSafe":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":367,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":304,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":26,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":320,"org.easymock.tests2.CaptureTest.testCapture_2617107":78,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":221,"org.easymock.tests2.UsageConstraintsTest.any":52,"org.easymock.tests2.StubTest.stub":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":396,"org.easymock.tests.UsageExpectAndThrowTest.longType":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":292,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":338,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":266,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":389,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":198,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests2.NameTest.nameForMocksControl":316,"org.easymock.tests2.MockedExceptionTest.testMockedException":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":357,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":228,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":236,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":309,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":130,"org.easymock.tests.MockingTest.testNicePartialClassMocking":177,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.CaptureTest.testCaptureLast":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":386,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":152,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":50,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":18,"org.easymock.tests.MockingTest.testTwoMocks":384,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":240,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":108,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":66,"org.easymock.tests.UsageStrictMockTest.differentMethods":288,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":92,"org.easymock.tests2.MockBuilderTest.testCreateMockString":133,"org.easymock.tests.UsageExpectAndThrowTest.floatType":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":358,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":69,"org.easymock.tests.UsageVerifyTest.twoThrows":256,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.ExampleTest.voteAgainstRemoval":22,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":392,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":144,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":352,"org.easymock.tests2.UsageConstraintsTest.testNotNull":65,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":265,"org.easymock.tests2.UsageTest.defaultResetToNice":107,"org.easymock.samples.ExampleTest.voteAgainstRemovals":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":194,"org.easymock.tests.UsageVarargTest.differentLength":209,"org.easymock.tests2.CallbackTest.callback":33,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":12,"org.easymock.tests.UsageTest.openCallCountByLastCall":227,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":220,"org.easymock.tests.UsageCallCountTest.tooFewCalls":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":149,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":173,"org.easymock.tests.UsageThrowableTest.throwCheckedException":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":336,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":151,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":150,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":344,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":94,"org.easymock.tests2.NameTest.nameForNiceMock":315,"org.easymock.tests2.DependencyTest.testInterfaceMocking":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":343,"org.easymock.samples.ExampleTest.addDocument":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":368,"org.easymock.tests2.DelegateToTest.testStubDelegate":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.stubAnswer":70,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":285,"org.easymock.tests.UsageVarargTest.varargLongAccepted":211,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":289,"org.easymock.tests.UsageExpectAndReturnTest.floatType":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":13,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":398,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":60,"org.easymock.tests.UsageThrowableTest.noUpperLimit":259,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":43,"org.easymock.tests2.SerializationTest.test":34,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":180,"org.easymock.tests2.UsageConstraintsTest.testSame":48,"org.easymock.samples.SupportTest.addDocument":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":359,"org.easymock.tests.GenericTest.testPackageScope":202,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":308,"org.easymock.tests2.NameTest.nameForMock":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":191,"org.easymock.tests2.UsageStrictMockTest.differentMethods":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":8,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":201,"org.easymock.tests2.MockedExceptionTest.testRealException":160,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":330,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":10,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":219,"org.easymock.tests2.NameTest.nameForStrictMock":314,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":138,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":61,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":348,"org.easymock.tests.ErrorMessageTest.testGetters":349,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":126,"org.easymock.tests2.UsageStrictMockTest.range":165,"org.easymock.tests2.UsageConstraintsTest.lessThan":67,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":113,"org.easymock.tests2.CaptureTest.testCaptureRightOne":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":363,"org.easymock.tests2.UsageConstraintsTest.testOr":49,"org.easymock.tests.UsageRangeTest.combination":199,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":226,"org.easymock.tests2.MockBuilderTest.testWithConstructor":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":360,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":192,"org.easymock.tests.UsageVarargTest.varargShortAccepted":210,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":305,"org.easymock.tests2.UsageConstraintsTest.cmpTo":53,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":381,"org.easymock.tests2.CompareToTest.testLessThan":339,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.CaptureTest.testCaptureFromStub":87,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":310,"org.easymock.tests.UsageTest.unexpectedCallWithArray":225,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":303,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":193,"org.easymock.tests2.UsageConstraintsTest.constraints":44,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":286,"org.easymock.samples.ExampleTest.addAndChangeDocument":25,"org.easymock.tests.UsageStrictMockTest.testVerify":404,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":28,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":277,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":185,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":118,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":205,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":350}}]
