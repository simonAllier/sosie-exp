[{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,0,92,93,1,2,3,4,5,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,6,7,8,9,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,10,11,12,13,14,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,15,234,235,236,237,238,239,16,17,18,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,19,256,257,258,259,260,261,262,263,264,20,21,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,22,294,295,296,297,23,24,298,299,25,300,301,302,303,304,305,306,307,308,309,310,311,312,26,313,314,315,27,316,317,318,319,28,320,321,322,323,29,324,325,30,326,31,327,328,329,330,331,332,32,333,334,335,336,337,338,339,340,341,33,342,343,344,345,346,34,347,348,35,36,349,37,350,38,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,39,389,390,40,391,41,392,42,43,393,44,394,395,396,45,397,46,398,399,400,401,47,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,48,49,50,51,420,421,422,423,424,52,53,425,426,427,428,429,54,55,56,57,58,59,60,430,61,62,63,64,431,65,66,67,68,69,432,433,434,435,436,70,71,437,438,439,440,441,442,443,444,445,446,447,448,72,449,450,451,452,453,454,455,456,457,458,73,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,74,480,481,482,75,76,483],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[393,443,484,485,486,487,488],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[489,490,137,295,491,492],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[493,137,138,141,142,240,287,288,295,23,401,406,407,75],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[107,110],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[372],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[170,174,175,184,189],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[363,368,378,383],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[367,373,385,494],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[393,443,484,485,486,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"this","actual":"o"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[99,107,109,110,111,112,113,114,119,124,135,140,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,244,287,398,404,455],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[386,393,395,442,443,484,485,486,495],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[185,192,256],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[179,181,190,191,193],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[386,393,395,442,443,484,485,486,496,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[182,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[107,110],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[490,497,493,136,240,274,275,286,287,288,296,23,24,400,498,491,499,500,501,502,481,75,76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[124,448],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:189","failures":[6,7,8,9,10,11,12,13,14,135,137,138,141,142,143,240,287,288,22,295,297,23,24,28,29,359,39,42,43,44,45,46,398,401,47,402,405,406,407,409,48,49,50,51,52,56,58,59,430,61,70,74,482,75,76],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[183,354,356,414,72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[503],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[504,386,387,388],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[176,415,418,419],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[97,98,99,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,128,129,130,131,132,133,134,135,136,139,140,143,144,145,146,148,149,151,152,153,154,155,163,167,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,240,241,242,243,244,245,268,269,270,271,272,286,287,288,294,296,297,23,24,298,300,301,302,303,304,305,307,310,311,312,26,313,314,27,318,325,360,363,365,366,383,386,387,392,43,44,398,399,400,47,402,403,404,408,409,414,417,418,52,54,55,56,57,58,59,60,61,62,63,64,70,72,449,450,451,453,454,455,458,73,460,461,462,464,465,466,472,473,475,478,480,481,482,75,76,483],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[165,169],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[505,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":360,"org.easymock.tests2.UsageTest.argumentsOrdered":407,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":180,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":402,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":310,"org.easymock.tests2.DelegateToTest.testReturnException":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":116,"org.easymock.tests.MockingTest.testPartialClassMocking":236,"org.easymock.tests.MockClassControlTest.testToString":279,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":65,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":336,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":194,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":484,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":367,"org.easymock.tests2.UsageTest.wrongArguments":401,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":241,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":441,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":8,"org.easymock.samples.ExampleTest.answerVsDelegate":301,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":3,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":17,"org.easymock.tests2.UsageConstraintsTest.testNull":363,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":317,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":62,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":284,"org.easymock.tests2.CaptureTest.testPrimitive":468,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":245,"org.easymock.tests.UsageTest.moreThanOneArgument":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":213,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":270,"org.easymock.tests.UsageTest.argumentsOrdered":142,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":289,"org.easymock.tests.UsageVarargTest.varargIntAccepted":146,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":488,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":428,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":134,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":70,"org.easymock.tests.ReplayStateInvalidUsageTest.times":262,"org.easymock.tests2.DependencyTest.testClassMocking":456,"org.easymock.tests2.AnswerTest.answer":414,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":51,"org.easymock.tests2.CaptureTest.testAnd":465,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":93,"org.easymock.tests2.UsageTest.strictResetToDefault":399,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":58,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":266,"org.easymock.tests2.DelegateToTest.testDelegate":464,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":209,"org.easymock.tests.LimitationsTest.mockFinalMethod":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":14,"org.easymock.tests2.DependencyTest.testClassMockingSupport":457,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":274,"org.easymock.tests2.CaptureTest.testCapture1_2446744":469,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":49,"org.easymock.tests.UsageThrowableTest.throwError":107,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":256,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":2,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":429,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":348,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.MockingTest.testInterfaceMocking":238,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":95,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":105,"org.easymock.tests2.UsageTest.niceToStrict":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":170,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":392,"org.easymock.tests2.MockBuilderTest.testCreateMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":344,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":438,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":203,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":59,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":92,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":6,"org.easymock.tests.UsageOverloadedMethodTest.overloading":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":346,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":124,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":373,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":225,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":372,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":474,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":147,"org.easymock.tests.MockClassControlTest.testEquals":283,"org.easymock.tests2.EasyMockSupportClassTest.testAll":330,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":167,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":211,"org.easymock.tests2.CaptureTest.testCaptureAll":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":12,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":50,"org.easymock.tests.MockNameTest.defaultName":106,"org.easymock.tests2.UsageConstraintsTest.testMatches":374,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":271,"org.easymock.samples.ExampleTest.voteForRemovals":305,"org.easymock.tests.UsageVarargTest.allKinds":155,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":13,"org.easymock.samples.BasicClassMockTest.testPrintContent":314,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":113,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":74,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":495,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":253,"org.easymock.tests2.UsageConstraintsTest.greaterThan":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":254,"org.easymock.samples.ExampleTest.voteForRemoval":302,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":450,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":326,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":4,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":28,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":398,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":285,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":56,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":115,"org.easymock.tests2.CaptureTest.testCaptureFirst":478,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":57,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":409,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":127,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":221,"org.easymock.tests2.CaptureTest.testCapture2_2446744":477,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":452,"org.easymock.tests2.UsageTest.moreThanOneArgument":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":188,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":154,"org.easymock.tests.GenericTest.testBridgedEquals":169,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":87,"org.easymock.tests.UsageExpectAndReturnTest.longType":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":10,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":212,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":273,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":210,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":268,"org.easymock.tests.UsageCallCountTest.tooManyCalls":88,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":345,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":199,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":112,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":36,"org.easymock.tests.MockingTest.testNiceClassMocking":18,"org.easymock.tests.MockingTest.testClassMocking":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":81,"org.easymock.tests2.UsageConstraintsTest.testContains":371,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":447,"org.easymock.tests2.UsageConstraintsTest.testFind":362,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":99,"org.easymock.tests.MockTypeTest.fromEasyMockClass":1,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":22,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":356,"org.easymock.tests.UsageExpectAndReturnTest.object":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":485,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":149,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":103,"org.easymock.tests.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":175,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":156,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":443,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":230,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":123,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":421,"org.easymock.tests.MockClassControlTest.testHashCode":282,"org.easymock.tests2.EasyMockSupportTest.testVerify":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":339,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":291,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":48,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":479,"org.easymock.tests.UsageVarargTest.varargCharAccepted":148,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":246,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":193,"org.easymock.tests2.UsageTest.openCallCountByLastCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":64,"org.easymock.tests.DefaultClassInstantiatorTest.object":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":77,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":101,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":420,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":281,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":200,"org.easymock.tests.CapturesMatcherTest.test":505,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":89,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":34,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":280,"org.easymock.tests2.UsageTest.resumeIfFailure":408,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":118,"org.easymock.tests2.StubTest.stubWithReturnValue":455,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":393,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":223,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":382,"org.easymock.tests2.SerializationTest.testAllMockedMethod":388,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":186,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":492,"org.easymock.samples.SupportTest.voteForRemovals":26,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":206,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":504,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":192,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":415,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":158,"org.easymock.tests.UsageExpectAndThrowTest.object":204,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":379,"org.easymock.tests2.DelegateToTest.testWrongClass":462,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":129,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":308,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":412,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":430,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":205,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":43,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":141,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":7,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":489,"org.easymock.tests2.CaptureTest.testCaptureNone":473,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":96,"org.easymock.tests.UsageUnorderedTest.message":240,"org.easymock.tests.UsageVerifyTest.twoReturns":288,"org.easymock.tests.UsageVarargTest.varargByteAccepted":153,"org.easymock.tests2.ThreadingTest.testThreadSafe":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":342,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":85,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":104,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":313,"org.easymock.tests2.CaptureTest.testCapture_2617107":467,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":244,"org.easymock.tests2.UsageConstraintsTest.any":369,"org.easymock.tests2.StubTest.stub":454,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":117,"org.easymock.tests.UsageExpectAndThrowTest.longType":197,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":251,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":260,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":482,"org.easymock.tests2.SerializationTest.testClass":386,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":52,"org.easymock.tests.LimitationsTest.mockNativeMethod":161,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":233,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":434,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":483,"org.easymock.tests2.NameTest.nameForMocksControl":69,"org.easymock.tests2.MockedExceptionTest.testMockedException":446,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":332,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":198,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":239,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":355,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":315,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":44,"org.easymock.tests.MockingTest.testNicePartialClassMocking":237,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":319,"org.easymock.tests2.CompareToTest.testNotComparable":503,"org.easymock.tests2.CaptureTest.testCaptureLast":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":432,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":275,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":352,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":366,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":380,"org.easymock.tests.MockingTest.testTwoMocks":235,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":202,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":406,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":384,"org.easymock.samples.ExampleTest.removeNonExistingDocument":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":437,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":258,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":422,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":249,"org.easymock.tests2.ConstraintsToStringTest.andToString":501,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":451,"org.easymock.tests2.MockBuilderTest.testCreateMockString":46,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":277,"org.easymock.tests.UsageExpectAndThrowTest.floatType":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":333,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":417,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":444,"org.easymock.tests.UsageVerifyTest.twoThrows":287,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":33,"org.easymock.samples.ExampleTest.voteAgainstRemoval":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":181,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":94,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":325,"org.easymock.tests.LimitationsTest.privateConstructor":160,"org.easymock.tests2.UsageConstraintsTest.testNotNull":383,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":445,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":114,"org.easymock.tests2.UsageTest.defaultResetToNice":405,"org.easymock.samples.ExampleTest.voteAgainstRemovals":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":229,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":433,"org.easymock.tests.UsageVarargTest.differentLength":150,"org.easymock.tests2.CallbackTest.callback":72,"org.easymock.tests2.UsageConstraintsTest.equals":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":322,"org.easymock.tests.UsageTest.openCallCountByLastCall":139,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":357,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":243,"org.easymock.tests.UsageCallCountTest.tooFewCalls":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":9,"org.easymock.tests.UsageThrowableTest.throwCheckedException":111,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":490,"org.easymock.tests.MockingTest.testStrictClassMocking":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":164,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":71,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":349,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":38,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":419,"org.easymock.tests2.CompareToTest.testGreateOrEqual":494,"org.easymock.tests.ObjectMethodsTest.testHashCode":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":487,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":453,"org.easymock.tests2.NameTest.nameForNiceMock":68,"org.easymock.tests2.DependencyTest.testInterfaceMocking":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":486,"org.easymock.samples.ExampleTest.addDocument":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":343,"org.easymock.tests2.DelegateToTest.testStubDelegate":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.AnswerTest.stubAnswer":418,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":296,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":394,"org.easymock.tests.UsageVarargTest.varargLongAccepted":152,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":179,"org.easymock.tests.UsageExpectAndReturnTest.floatType":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":232,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":442,"org.easymock.tests2.ConstraintsToStringTest.orToString":498,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":427,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":125,"org.easymock.tests.UsageThrowableTest.noUpperLimit":108,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":377,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":358,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":410,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":470,"org.easymock.tests2.SerializationTest.test":387,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":215,"org.easymock.tests2.UsageConstraintsTest.testSame":364,"org.easymock.samples.SupportTest.addDocument":312,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":350,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":334,"org.easymock.tests.GenericTest.testPackageScope":166,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":174,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":426,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":16,"org.easymock.tests2.NameTest.nameForMock":66,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":226,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":397,"org.easymock.tests2.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":208,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":267,"org.easymock.tests2.MockedExceptionTest.testRealException":448,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":5,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":184,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":497,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":183,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":242,"org.easymock.tests2.NameTest.nameForStrictMock":67,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":41,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":354,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":318,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":411,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":250,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":390,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":178,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":55,"org.easymock.tests2.CaptureTest.testCaptureRightOne":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":338,"org.easymock.tests2.UsageConstraintsTest.testOr":365,"org.easymock.tests.UsageRangeTest.combination":21,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":138,"org.easymock.tests2.MockBuilderTest.testWithConstructor":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":335,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":227,"org.easymock.tests.UsageVarargTest.varargShortAccepted":151,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":252,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":86,"org.easymock.tests2.UsageConstraintsTest.cmpTo":370,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":173,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":404,"org.easymock.tests2.CaptureTest.testCaptureFromStub":476,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":19,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":40,"org.easymock.tests.UsageTest.unexpectedCallWithArray":137,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":228,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.tests2.UsageConstraintsTest.constraints":359,"org.easymock.samples.ExampleTest.addAndChangeDocument":307,"org.easymock.tests2.ConstraintsToStringTest.notToString":499,"org.easymock.tests.UsageStrictMockTest.testVerify":299,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":311,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":11,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":132,"org.easymock.tests.LimitationsTest.abstractClass":159,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":133,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":60}}]
