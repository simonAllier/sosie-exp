[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[7,8],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[9,10,11,12],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[24,25,26,27,28],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[33,34,35,36,37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[38,39,40,41,42,43,44,45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[49,50],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[53,54,24,25,26,33,55,56,57,58,59,27,60,61,62,63,34,35,36,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.Capture:82","failures":[74,13,14,75,76,77,78,79,80,81,15,82,83],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:189","failures":[85,86,0,87,88,89,90,3,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,35,36,64,121,122,123,11,124,125,126,127,128,129,130,131,132,16],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[53,54,24,25,26,33,55,56,57,58,59,27,60,61,62,63,34,35,36,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:197","sourceCode":"java.lang.Thread = java.lang.Thread.java.lang.Thread.currentThread()","type":"CtAssignmentImpl"},"failures":[134,135],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[24,25,26,27,28],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[136,137,138,50],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[139,140,141,142,143,85,0,88,89,144,145,3,91,92,93,146,147,100,101,109,110,112,116,117,148,63,149,64,121,12],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[151,152,153,154,52,62,155,156,157,30],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[85,0,158,88,89,159,160,1,161,2,162,145,163,3,164,100,101,165,109,110,166,167,4,168,169,170,171,172,5,173],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[151,152,153,174,175,155,156],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[63,64,66,176,177],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[63,64,66,176,177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[178,179,180],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[181,182,183,184,185,186,187,188,189,190,191,192,53,193,158,89,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,163,218,219,54,220,221,222,95,96,97,98,99,223,224,225,226,227,228,229,230,231,232,233,24,25,26,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,147,265,266,267,164,100,101,102,103,104,105,268,269,270,271,272,273,274,275,276,277,278,279,280,281,165,110,282,283,284,56,57,27,60,285,166,113,114,115,148,286,287,288,289,290,291,292,62,293,294,295,296,119,34,120,69,70,71,297,72,298,123,299,300,301,302,303,304,305,306,73,307,13,308,14,75,77,78,79,309,80,15,83,129,130,131,132,310,311,16,17,312,18,313,19,20,137,314,315,316,133,138,317,318,8,319,22,320,321,29,23,322,50,30,31,32,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":17,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":90,"org.easymock.tests2.UsageTest.argumentsOrdered":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":237,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":114,"org.easymock.tests2.StubTest.stubWithReturnValue":284,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":207,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":29,"org.easymock.tests2.SerializationTest.testAllMockedMethod":32,"org.easymock.tests2.DelegateToTest.testReturnException":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":235,"org.easymock.tests.MockingTest.testPartialClassMocking":24,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":245,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":66,"org.easymock.tests.UsageExpectAndThrowTest.object":255,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":151,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":241,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":137,"org.easymock.tests2.UsageTest.wrongArguments":112,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":190,"org.easymock.tests.UsageStrictMockTest.range":88,"org.easymock.samples.ConstructorCalledMockTest.testTax":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":104,"org.easymock.samples.ExampleTest.answerVsDelegate":274,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":55,"org.easymock.tests2.UsageConstraintsTest.testNull":18,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":256,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":71,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":12,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":35,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":264,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests.UsageTest.moreThanOneArgument":163,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":270,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests2.CaptureTest.testCaptureNone":309,"org.easymock.tests.UsageUnorderedTest.message":85,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":142,"org.easymock.tests.UsageVerifyTest.twoReturns":101,"org.easymock.tests.UsageVarargTest.varargByteAccepted":231,"org.easymock.tests2.ThreadingTest.testThreadSafe":290,"org.easymock.tests.UsageTest.argumentsOrdered":93,"org.easymock.tests.UsageVarargTest.varargIntAccepted":226,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":187,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":150,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":219,"org.easymock.tests2.CaptureTest.testCapture_2617107":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":175,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":47,"org.easymock.tests2.UsageConstraintsTest.any":314,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":120,"org.easymock.tests2.StubTest.stub":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":222,"org.easymock.tests.UsageExpectAndThrowTest.longType":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":236,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":170,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":178,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":108,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests.LimitationsTest.mockNativeMethod":53,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":44,"org.easymock.tests2.AnswerTest.answer":300,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":217,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":132,"org.easymock.tests2.CaptureTest.testAnd":13,"org.easymock.tests2.UsageTest.strictResetToDefault":285,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":123,"org.easymock.tests2.NameTest.nameForMocksControl":296,"org.easymock.tests2.MockedExceptionTest.testMockedException":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":269,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":124,"org.easymock.tests2.DelegateToTest.testDelegate":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":249,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":84,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":26,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":69,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":36,"org.easymock.tests.MockingTest.testNicePartialClassMocking":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":260,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":72,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":238,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":160,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":60,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":20,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":159,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":130,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":116,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":322,"org.easymock.tests.UsageStrictMockTest.differentMethods":89,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":135,"org.easymock.tests2.ConstraintsToStringTest.andToString":172,"org.easymock.tests2.MockBuilderTest.testCreateMockString":121,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":272,"org.easymock.tests.UsageExpectAndThrowTest.floatType":247,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":318,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":301,"org.easymock.tests.UsageVerifyTest.twoThrows":100,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":67,"org.easymock.samples.PartialClassMockTest.testGetArea":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":54,"org.easymock.samples.ExampleTest.voteAgainstRemoval":276,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":246,"org.easymock.tests2.UsageTest.niceToStrict":113,"org.easymock.tests2.ThreadingTest.testChangeDefault":134,"org.easymock.tests2.UsageConstraintsTest.testNotNull":23,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":286,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.UsageTest.defaultResetToNice":115,"org.easymock.tests2.MockBuilderTest.testCreateMock":149,"org.easymock.samples.ExampleTest.voteAgainstRemovals":273,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":213,"org.easymock.tests2.CallbackTest.callback":323,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":45,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":254,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":125,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":102,"org.easymock.tests.UsageCallCountTest.tooFewCalls":185,"org.easymock.tests.UsageOverloadedMethodTest.overloading":243,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":58,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":133,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":179,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":105,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":51,"org.easymock.tests2.EasyMockSupportClassTest.testAll":65,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":189,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests2.CaptureTest.testCaptureAll":308,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":131,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":27,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":57,"org.easymock.tests2.UsageConstraintsTest.testMatches":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":59,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":271,"org.easymock.tests2.CompareToTest.testGreateOrEqual":136,"org.easymock.samples.ExampleTest.voteForRemovals":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":174,"org.easymock.tests2.NameTest.nameForNiceMock":295,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":292,"org.easymock.tests.UsageVarargTest.allKinds":233,"org.easymock.tests2.DependencyTest.testInterfaceMocking":280,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":98,"org.easymock.samples.ExampleTest.addDocument":277,"org.easymock.tests2.DelegateToTest.testStubDelegate":73,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":107,"org.easymock.tests2.AnswerTest.stubAnswer":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":239,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":52,"org.easymock.tests2.UsageConstraintsTest.greaterThan":8,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":265,"org.easymock.tests.UsageVarargTest.varargLongAccepted":230,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.samples.ExampleTest.voteForRemoval":275,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":291,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":216,"org.easymock.tests.UsageExpectAndReturnTest.floatType":200,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":122,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":39,"org.easymock.tests2.ConstraintsToStringTest.orToString":167,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":319,"org.easymock.tests.UsageThrowableTest.noUpperLimit":196,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":311,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":218,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":77,"org.easymock.tests2.SerializationTest.test":31,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":157,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":11,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests2.UsageConstraintsTest.testSame":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":234,"org.easymock.tests2.CaptureTest.testCaptureFirst":83,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":118,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":205,"org.easymock.tests.GenericTest.testPackageScope":188,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":61,"org.easymock.tests2.UsageTest.moreThanOneArgument":166,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":64,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":232,"org.easymock.tests2.NameTest.nameForMock":293,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":140,"org.easymock.tests.UsageExpectAndReturnTest.longType":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":210,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":261,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":42,"org.easymock.tests2.UsageStrictMockTest.differentMethods":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":202,"org.easymock.tests.UsageCallCountTest.tooManyCalls":141,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":259,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":161,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":9,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":267,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":184,"org.easymock.tests2.MockedExceptionTest.testRealException":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":206,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":250,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":191,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":56,"org.easymock.tests2.UsageConstraintsTest.testContains":316,"org.easymock.tests2.NameTest.nameForStrictMock":294,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":183,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":288,"org.easymock.tests2.UsageConstraintsTest.testFind":312,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":244,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":304,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":297,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":305,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":86,"org.easymock.tests.UsageExpectAndReturnTest.object":208,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":298,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":63,"org.easymock.tests2.UsageStrictMockTest.range":109,"org.easymock.tests2.UsageConstraintsTest.lessThan":50,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":127,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":152,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":10,"org.easymock.tests.UsageTest.exactCallCountByLastCall":94,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":154,"org.easymock.tests2.CaptureTest.testCaptureRightOne":15,"org.easymock.tests2.UsageConstraintsTest.testOr":19,"org.easymock.tests.UsageRangeTest.combination":147,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":155,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":224,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":6,"org.easymock.tests.UsageTest.wrongArguments":91,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":211,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":169,"org.easymock.tests.UsageVarargTest.varargShortAccepted":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":129,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":139,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":144,"org.easymock.tests2.UsageConstraintsTest.cmpTo":315,"org.easymock.tests.UsageVarargTest.varargCharAccepted":227,"org.easymock.tests2.CaptureTest.testCaptureMultiple":74,"org.easymock.tests2.CompareToTest.testLessThan":49,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests2.CaptureTest.testCaptureFromStub":82,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":252,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":186,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":212,"org.easymock.tests2.CaptureTest.testCapture":81,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":87,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":176,"org.easymock.samples.ExampleTest.addAndChangeDocument":279,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":251,"org.easymock.tests2.ConstraintsToStringTest.notToString":168,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":215,"org.easymock.tests.UsageStrictMockTest.testVerify":195,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":68,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":171,"org.easymock.tests2.CompareToTest.testGreateThan":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":96,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":78,"org.easymock.tests2.UsageTest.resumeIfFailure":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":220,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":204,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":221,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":225,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":46}}]
