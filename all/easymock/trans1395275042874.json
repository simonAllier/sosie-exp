[{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[18,19,20],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MocksControl:136","failures":[26,27,27,28,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,23,25,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,24,18,117,19,20,118,119,120,121,122,123,124,125,126,127,128,129],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[144,145,146,21,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,43,166,167,168,169,170,171,172,173,174,175,176,177,178,130,179,180,131,132,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,133,196,197,136,137,138,198,199,200,201,202,203,204,205,206,207,208,140,209,142,210,143,211],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[212,213,37,55,23],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[157],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[32,214,215,216,217,218,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[148],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[220,221],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[21,150,160],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[222,182,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,199,247,201,202,203,204,205,248,249,208,250,140],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[178],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[251,252,253,254,208],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[26,27,28,255,256,257,258,259,260,261,262,0,29,30,1,263,264,31,32,265,266,267,268,269,270,271,272,273,144,145,146,21,274,147,275,148,149,150,151,22,152,276,153,154,155,156,157,158,159,160,161,162,277,163,278,164,165,279,280,281,282,33,283,34,35,284,36,37,38,39,214,40,285,41,42,43,286,44,166,167,168,169,170,171,172,173,287,174,175,176,177,178,45,46,288,47,48,49,50,289,51,52,53,54,55,23,25,56,57,290,291,292,293,294,58,59,60,295,2,3,4,296,5,297,6,7,8,298,299,9,222,300,301,130,179,180,302,303,304,131,132,305,306,61,62,307,308,181,309,10,11,12,310,13,311,14,15,16,312,313,17,314,315,316,317,318,319,63,64,65,320,66,321,322,251,182,67,68,69,70,323,324,71,72,325,326,183,184,185,186,187,188,327,189,190,191,192,328,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,329,330,331,332,193,333,194,334,195,335,133,196,336,98,337,99,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,100,101,102,103,104,362,105,363,364,106,365,366,252,367,368,369,370,371,372,373,374,375,376,377,378,379,380,107,381,382,383,384,108,385,386,387,388,389,243,390,391,392,393,394,395,396,197,397,398,399,244,400,135,136,401,402,137,138,403,109,404,405,406,407,408,409,410,220,411,412,413,110,111,112,113,114,115,414,116,139,415,245,246,198,416,417,199,200,247,201,202,203,204,205,24,18,117,19,20,418,206,248,419,420,421,249,422,423,424,425,426,427,428,429,430,431,432,253,433,434,435,436,437,438,254,439,440,441,442,443,444,445,446,447,448,449,450,451,118,119,120,121,122,123,124,125,126,127,128,129,207,452,453,208,454,455,456,457,458,221,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,250,476,477,140,141,478,479,480,481,482,483,484,485,486,487,488,209,489,142,210,490,143,211,491,492,493,494,495],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[404],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[256,271,273,181,329,331,332,333,387],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[27,28,283,496,497,286,52],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[498],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[297,301,130,131,132,311,321,195,133,196,383,386,393,394,400,135,136,137,138,139,417,467,470,477,140,141,142,210,143,211],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[499],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[500,151,155,165],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[501,144,158,163],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[502],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests2.UsageTest.argumentsOrdered":132,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":244,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":191,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":428,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":180,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":473,"org.easymock.tests.MockingTest.testPartialClassMocking":103,"org.easymock.tests.MockClassControlTest.testToString":120,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":266,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":83,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":223,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":215,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":151,"org.easymock.tests2.UsageTest.wrongArguments":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":207,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":457,"org.easymock.samples.ExampleTest.answerVsDelegate":256,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":108,"org.easymock.tests2.UsageConstraintsTest.testNull":275,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":364,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":47,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":190,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":125,"org.easymock.tests2.CaptureTest.testPrimitive":169,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":454,"org.easymock.tests.UsageTest.moreThanOneArgument":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":242,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":378,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":404,"org.easymock.tests.UsageTest.argumentsOrdered":138,"org.easymock.tests.UsageVarargTest.varargIntAccepted":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":219,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":299,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":462,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":311,"org.easymock.tests.ReplayStateInvalidUsageTest.times":372,"org.easymock.tests2.DependencyTest.testClassMocking":61,"org.easymock.tests2.AnswerTest.answer":329,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":282,"org.easymock.tests2.CaptureTest.testAnd":166,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":382,"org.easymock.tests2.UsageTest.strictResetToDefault":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":186,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":408,"org.easymock.tests2.DelegateToTest.testDelegate":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":238,"org.easymock.tests.LimitationsTest.mockFinalMethod":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":412,"org.easymock.tests2.DependencyTest.testClassMockingSupport":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":393,"org.easymock.tests2.CaptureTest.testCapture1_2446744":170,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":289,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":280,"org.easymock.tests.UsageThrowableTest.throwError":199,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":252,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":384,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":9,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":97,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests.MockingTest.testInterfaceMocking":362,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":367,"org.easymock.tests2.CompareToTest.testLessOrEqual":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":459,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":494,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":471,"org.easymock.tests2.UsageTest.niceToStrict":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":37,"org.easymock.tests2.MockBuilderTest.testCreateMock":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":92,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":232,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":455,"org.easymock.tests.UsageOverloadedMethodTest.overloading":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":155,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":243,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":353,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":154,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":174,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":443,"org.easymock.tests.MockClassControlTest.testEquals":124,"org.easymock.tests2.EasyMockSupportClassTest.testAll":76,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":117,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":240,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":497,"org.easymock.tests2.CaptureTest.testCaptureAll":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":281,"org.easymock.tests.MockNameTest.defaultName":417,"org.easymock.tests2.UsageConstraintsTest.testMatches":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":379,"org.easymock.samples.ExampleTest.voteForRemovals":260,"org.easymock.tests.UsageVarargTest.allKinds":451,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":477,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":411,"org.easymock.samples.BasicClassMockTest.testPrintContent":30,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":204,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":414,"org.easymock.tests2.UsageConstraintsTest.greaterThan":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":77,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":397,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":116,"org.easymock.samples.ExampleTest.voteForRemoval":257,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":56,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":291,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":50,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":109,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":222,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":184,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":472,"org.easymock.tests2.CaptureTest.testCaptureFirst":178,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":185,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":306,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":349,"org.easymock.tests2.CaptureTest.testCapture2_2446744":177,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":293,"org.easymock.tests2.UsageTest.moreThanOneArgument":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":450,"org.easymock.tests.GenericTest.testBridgedEquals":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":485,"org.easymock.tests.UsageExpectAndReturnTest.longType":345,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":409,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":326,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":241,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":396,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":277,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":239,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":376,"org.easymock.tests.UsageCallCountTest.tooManyCalls":486,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":350,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":203,"org.easymock.tests.MockingTest.testNiceClassMocking":106,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":68,"org.easymock.tests.MockingTest.testClassMocking":101,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":479,"org.easymock.tests2.UsageConstraintsTest.testContains":153,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":213,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":60,"org.easymock.tests2.UsageConstraintsTest.testFind":147,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":248,"org.easymock.tests.MockTypeTest.fromEasyMockClass":383,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":209,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":273,"org.easymock.tests.UsageExpectAndReturnTest.object":352,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":189,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":445,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":216,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":469,"org.easymock.tests.UsageTest.exactCallCountByLastCall":403,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":405,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":32,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":440,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":358,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":389,"org.easymock.tests.MockClassControlTest.testHashCode":123,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":3,"org.easymock.tests2.EasyMockSupportTest.testVerify":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":86,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":406,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":387,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":279,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":309,"org.easymock.tests.UsageVarargTest.varargCharAccepted":444,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":413,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":439,"org.easymock.tests2.UsageTest.openCallCountByLastCall":302,"org.easymock.tests.DefaultClassInstantiatorTest.object":110,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":192,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":415,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":467,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":87,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":310,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":229,"org.easymock.tests.CapturesMatcherTest.test":498,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":359,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":338,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":95,"org.easymock.tests2.UsageTest.resumeIfFailure":305,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":475,"org.easymock.tests2.StubTest.stubWithReturnValue":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":214,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":351,"org.easymock.tests2.SerializationTest.testAllMockedMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":433,"org.easymock.samples.SupportTest.voteForRemovals":264,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":235,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":254,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":330,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":465,"org.easymock.tests.UsageExpectAndThrowTest.object":233,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":161,"org.easymock.tests2.DelegateToTest.testWrongClass":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":487,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":488,"org.easymock.tests.UsageStrictMockTest.range":143,"org.easymock.samples.ConstructorCalledMockTest.testTax":27,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":321,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":234,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":39,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":73,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":456,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":495,"org.easymock.tests2.CaptureTest.testCaptureNone":287,"org.easymock.tests.UsageUnorderedTest.message":139,"org.easymock.tests.UsageVerifyTest.twoReturns":141,"org.easymock.tests.UsageVarargTest.varargByteAccepted":449,"org.easymock.tests2.ThreadingTest.testThreadSafe":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":90,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":483,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":470,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":29,"org.easymock.tests2.CaptureTest.testCapture_2617107":168,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":208,"org.easymock.tests2.UsageConstraintsTest.any":152,"org.easymock.tests2.StubTest.stub":251,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":371,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndThrowTest.longType":226,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":114,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":370,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":335,"org.easymock.tests2.SerializationTest.testClass":98,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":297,"org.easymock.tests.LimitationsTest.mockNativeMethod":128,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":19,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":361,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":12,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":336,"org.easymock.tests2.NameTest.nameForMocksControl":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":13,"org.easymock.tests2.MockedExceptionTest.testMockedException":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":78,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":402,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":227,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":272,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":45,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":40,"org.easymock.tests.MockingTest.testNicePartialClassMocking":104,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":49,"org.easymock.tests2.CompareToTest.testNotComparable":502,"org.easymock.tests2.CaptureTest.testCaptureLast":173,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":10,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":394,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":72,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":162,"org.easymock.tests.MockingTest.testTwoMocks":102,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":231,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":131,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":164,"org.easymock.samples.ExampleTest.removeNonExistingDocument":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":15,"org.easymock.tests.UsageStrictMockTest.differentMethods":211,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":4,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":112,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":292,"org.easymock.tests2.MockBuilderTest.testCreateMockString":44,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":80,"org.easymock.tests.UsageExpectAndThrowTest.floatType":225,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":75,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":332,"org.easymock.tests.UsageVerifyTest.twoThrows":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":265,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":89,"org.easymock.samples.ExampleTest.voteAgainstRemoval":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":23,"org.easymock.tests.LimitationsTest.privateConstructor":127,"org.easymock.tests2.UsageConstraintsTest.testNotNull":278,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":205,"org.easymock.tests2.UsageTest.defaultResetToNice":304,"org.easymock.samples.ExampleTest.voteAgainstRemovals":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":357,"org.easymock.tests.UsageVarargTest.differentLength":446,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":11,"org.easymock.tests2.CallbackTest.callback":181,"org.easymock.tests2.UsageConstraintsTest.equals":274,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":52,"org.easymock.tests.UsageTest.openCallCountByLastCall":401,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":453,"org.easymock.tests.UsageCallCountTest.tooFewCalls":481,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":458,"org.easymock.tests.UsageThrowableTest.throwCheckedException":202,"org.easymock.tests.MockingTest.testStrictClassMocking":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":416,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":69,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":324,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":333,"org.easymock.tests2.CompareToTest.testGreateOrEqual":500,"org.easymock.tests.ObjectMethodsTest.testHashCode":468,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":218,"org.easymock.tests2.NameTest.nameForNiceMock":269,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":294,"org.easymock.tests2.DependencyTest.testInterfaceMocking":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":217,"org.easymock.samples.ExampleTest.addDocument":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":96,"org.easymock.tests2.DelegateToTest.testStubDelegate":316,"org.easymock.tests2.AnswerTest.stubAnswer":193,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":210,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":285,"org.easymock.tests.UsageVarargTest.varargLongAccepted":448,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.floatType":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":31,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":28,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":159,"org.easymock.tests.UsageThrowableTest.noUpperLimit":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":145,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":63,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":171,"org.easymock.tests2.SerializationTest.test":337,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":111,"org.easymock.tests2.UsageConstraintsTest.testSame":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":343,"org.easymock.samples.SupportTest.addDocument":263,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":323,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":81,"org.easymock.tests.GenericTest.testPackageScope":18,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":8,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":363,"org.easymock.tests2.NameTest.nameForMock":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":354,"org.easymock.tests2.UsageStrictMockTest.differentMethods":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":53,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":237,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":466,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":399,"org.easymock.tests2.MockedExceptionTest.testRealException":295,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":431,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":452,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":375,"org.easymock.tests2.NameTest.nameForStrictMock":268,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":36,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":271,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":48,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":66,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":160,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":113,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":34,"org.easymock.tests2.UsageStrictMockTest.range":133,"org.easymock.tests2.UsageConstraintsTest.lessThan":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":5,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":212,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":183,"org.easymock.tests2.CaptureTest.testCaptureRightOne":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":85,"org.easymock.tests2.UsageConstraintsTest.testOr":149,"org.easymock.tests.UsageRangeTest.combination":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":46,"org.easymock.tests.UsageTest.wrongArguments":136,"org.easymock.tests2.MockBuilderTest.testWithConstructor":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":82,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":355,"org.easymock.tests.UsageVarargTest.varargShortAccepted":447,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":115,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":484,"org.easymock.tests2.UsageConstraintsTest.cmpTo":276,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":249,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":303,"org.easymock.tests2.CaptureTest.testCaptureFromStub":176,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":35,"org.easymock.tests.UsageTest.unexpectedCallWithArray":135,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":142,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":482,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":496,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":356,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":490,"org.easymock.tests2.UsageConstraintsTest.constraints":146,"org.easymock.samples.ExampleTest.addAndChangeDocument":262,"org.easymock.tests.UsageStrictMockTest.testVerify":492,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":489,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":410,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":460,"org.easymock.tests.LimitationsTest.abstractClass":126,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":461,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":188}}]
