[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[21,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[23,24],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:562","sourceCode":"return ((org.easymock.IExpectationSetters<T>)(org.easymock.internal.MocksControl))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[16,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[6,7,16,64,65,66,67,68,18,69,70,71,72,73,74,75,76,77],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[78,79,80],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[81,82,83,84,85,86,87,33,37,38,40,43,88,56,89,90,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[93,94,95,96,97,2,98,99,56,89,5,100,101,102],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[93,82,94,95,96,97,2,98,86,103,104,105,99,56,89,5,100,101,102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[106,107,108,109,110,111,112,113,114,115,116,81,117,93,82,83,118,119,120,121,122,6,123,124,125,16,62,63,126,25,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,26,145,84,94,146,147,148,27,149,95,96,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,23,24,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,65,193,67,194,195,70,196,197,198,199,200,201,202,203,204,205,206,97,207,208,209,210,211,212,213,214,215,216,217,2,85,218,98,86,87,219,220,221,222,223,224,225,226,227,228,28,229,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,230,231,232,233,49,234,50,51,52,53,54,55,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,88,56,89,281,57,58,90,5,100,282,59,101,102,283,284,285,286,287,288,289,290,92,291,292,293,294,295,61,296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[81,93,82,84,97,85,98,86,297,298,299,300,88,56,89,90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[182,301,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[6,302,303,304,16,63,305,127,128,306,129,130,185,186,188,189,190,307,191,192,308,65,301,193,309,310,311,67,194,312,313,69,195,314,70,198,315,71,72,316,317,318,73,73,74,74,75,213,214,77,215,230,319,231,232,233,320,321,291],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[322,145],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[146,323],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[115,117,93,82,324,325,326,327,123,26,94,146,147,95,96,150,151,159,171,186,308,301,310,69,195,70,97,216,2,218,98,86,328,329,330,103,104,331,277,105,99,56,89,58,5,100,101,102,283],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[106,107,108,109,110,332,111,112,113,114,115,116,81,117,93,82,83,333,322,324,334,335,336,325,326,337,338,327,339,340,341,118,119,120,121,122,6,123,124,125,16,62,63,126,25,305,127,128,306,342,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,26,145,84,94,146,147,148,27,149,95,96,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,23,24,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,65,193,67,194,312,313,195,70,343,196,197,198,199,315,71,72,316,344,317,318,200,201,202,203,204,205,206,73,73,74,74,345,346,347,75,97,348,349,207,350,351,352,208,209,210,211,212,213,214,215,216,217,2,85,218,98,86,87,219,220,221,222,223,224,225,226,227,228,28,229,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,230,231,232,233,49,234,50,51,52,53,54,55,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,88,56,89,281,57,58,90,5,100,282,59,101,102,283,284,285,286,287,288,289,290,92,291,292,293,294,295,61,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[353,24,169,180],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[354,355],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if (int != int) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"length":"i","initArgs":"methodArgs","paramTypes":"methodTypes"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[81,25,142,157,158,161,162,163,164,167,169,170,172,173,174,178,179,180,73,73,74,74,356,208,209,210,211,212,85,357,358,359,360,361,226,227,229,255,262,263,264,265,266,362,289,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[16,307,308,65,66,193,310,311,67,194,312,313,69,195,70,71,72,316,75,77,320,321],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[363,364,365],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[366,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[368],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[25,26,369,370,371,372,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[374],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[375,354,355],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":160,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":58,"org.easymock.tests2.UsageTest.argumentsOrdered":96,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":295,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":147,"org.easymock.tests2.StubTest.stubWithReturnValue":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":17,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":347,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":244,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":177,"org.easymock.tests2.SerializationTest.testAllMockedMethod":63,"org.easymock.tests2.DelegateToTest.testReturnException":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":293,"org.easymock.tests.MockingTest.testPartialClassMocking":231,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":20,"org.easymock.samples.SupportTest.voteForRemovals":346,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":41,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":29,"org.easymock.tests.UsageExpectAndThrowTest.object":39,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":297,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":332,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":9,"org.easymock.tests2.DelegateToTest.testWrongClass":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":290,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":226,"org.easymock.tests2.UsageTest.wrongArguments":94,"org.easymock.samples.ConstructorCalledMockTest.testTax":73,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":286,"org.easymock.samples.ExampleTest.answerVsDelegate":201,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":337,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":305,"org.easymock.tests2.UsageConstraintsTest.testNull":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":188,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":327,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":312,"org.easymock.tests2.CaptureTest.testPrimitive":134,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":229,"org.easymock.tests.UsageTest.moreThanOneArgument":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":48,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":285,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":210,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":139,"org.easymock.tests.UsageUnorderedTest.message":97,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":103,"org.easymock.tests.UsageVerifyTest.twoReturns":89,"org.easymock.tests.UsageVarargTest.varargByteAccepted":274,"org.easymock.tests2.ThreadingTest.testThreadSafe":118,"org.easymock.tests.UsageTest.argumentsOrdered":102,"org.easymock.tests.UsageVarargTest.varargIntAccepted":269,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":225,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":262,"org.easymock.tests2.CaptureTest.testCapture_2617107":133,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":28,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":194,"org.easymock.tests2.UsageConstraintsTest.any":165,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":366,"org.easymock.tests2.StubTest.stub":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":294,"org.easymock.tests.UsageExpectAndThrowTest.longType":32,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":117,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":343,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":333,"org.easymock.tests.LimitationsTest.mockNativeMethod":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":254,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":77,"org.easymock.tests2.AnswerTest.answer":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":367,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":109,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":304,"org.easymock.tests2.CaptureTest.testAnd":131,"org.easymock.tests2.UsageTest.strictResetToDefault":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":192,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":83,"org.easymock.tests2.NameTest.nameForMocksControl":184,"org.easymock.tests2.MockedExceptionTest.testMockedException":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":279,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests2.DelegateToTest.testDelegate":155,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":33,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":313,"org.easymock.tests.MockingTest.testNicePartialClassMocking":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":44,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":8,"org.easymock.tests2.CaptureTest.testCaptureLast":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":288,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":23,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":261,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":176,"org.easymock.tests.MockingTest.testTwoMocks":319,"org.easymock.tests2.CaptureTest.testCapture1_2446744":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":107,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":179,"org.easymock.tests.UsageThrowableTest.throwError":49,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":207,"org.easymock.tests.UsageStrictMockTest.differentMethods":86,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":120,"org.easymock.tests2.MockBuilderTest.testCreateMockString":70,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":212,"org.easymock.tests.UsageExpectAndThrowTest.floatType":31,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":171,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":112,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":72,"org.easymock.samples.PartialClassMockTest.testGetArea":75,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":263,"org.easymock.samples.ExampleTest.voteAgainstRemoval":203,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":30,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests2.UsageConstraintsTest.testNotNull":178,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":80,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":69,"org.easymock.tests2.UsageTest.defaultResetToNice":149,"org.easymock.samples.ExampleTest.voteAgainstRemovals":200,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":250,"org.easymock.tests.UsageVarargTest.differentLength":331,"org.easymock.tests2.CallbackTest.callback":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":64,"org.easymock.tests.UsageTest.openCallCountByLastCall":282,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":38,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":325,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":284,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":228,"org.easymock.tests.UsageCallCountTest.tooFewCalls":223,"org.easymock.tests.UsageOverloadedMethodTest.overloading":281,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":60,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":246,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":168,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":287,"org.easymock.tests.UsageThrowableTest.throwCheckedException":52,"org.easymock.tests2.EasyMockSupportClassTest.testAll":315,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":214,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":46,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":259,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":108,"org.easymock.tests2.CaptureTest.testCaptureAll":132,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":256,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":129,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":128,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":351,"org.easymock.tests2.UsageConstraintsTest.testMatches":170,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":342,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":114,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":211,"org.easymock.tests2.CompareToTest.testGreateOrEqual":353,"org.easymock.samples.ExampleTest.voteForRemovals":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":13,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":122,"org.easymock.tests2.NameTest.nameForNiceMock":183,"org.easymock.tests.UsageVarargTest.allKinds":276,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":88,"org.easymock.tests2.DependencyTest.testInterfaceMocking":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":11,"org.easymock.samples.BasicClassMockTest.testPrintContent":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":260,"org.easymock.samples.ExampleTest.addDocument":204,"org.easymock.tests2.DelegateToTest.testStubDelegate":153,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":54,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":115,"org.easymock.tests2.AnswerTest.stubAnswer":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":296,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":85,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":364,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":15,"org.easymock.tests2.UsageConstraintsTest.greaterThan":172,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":68,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":301,"org.easymock.tests.UsageVarargTest.varargLongAccepted":273,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":87,"org.easymock.samples.ExampleTest.voteForRemoval":202,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":253,"org.easymock.tests.UsageExpectAndReturnTest.floatType":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":307,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":6,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":74,"org.easymock.tests.UsageThrowableTest.noUpperLimit":234,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":173,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":291,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":158,"org.easymock.tests2.SerializationTest.test":62,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":136,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":18,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":334,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":236,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.samples.SupportTest.addDocument":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":292,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":365,"org.easymock.tests2.CaptureTest.testCaptureFirst":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":335,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":242,"org.easymock.tests.GenericTest.testPackageScope":213,"org.easymock.tests2.UsageTest.moreThanOneArgument":84,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":329,"org.easymock.tests2.NameTest.nameForMock":181,"org.easymock.tests.UsageExpectAndReturnTest.longType":238,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":257,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":47,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":362,"org.easymock.tests2.UsageStrictMockTest.differentMethods":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":239,"org.easymock.tests.UsageCallCountTest.tooManyCalls":330,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":43,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":280,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":222,"org.easymock.tests2.MockedExceptionTest.testRealException":199,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":19,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":34,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":352,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":227,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":127,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":309,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":221,"org.easymock.tests2.UsageConstraintsTest.testContains":167,"org.easymock.tests2.NameTest.nameForStrictMock":182,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":198,"org.easymock.tests2.UsageConstraintsTest.testFind":161,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":57,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":79,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":124,"org.easymock.tests.MockTypeTest.fromEasyMockClass":368,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":189,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":216,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":125,"org.easymock.tests.UsageExpectAndReturnTest.object":245,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":298,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":191,"org.easymock.tests.ErrorMessageTest.testGetters":299,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":310,"org.easymock.tests2.UsageStrictMockTest.range":93,"org.easymock.tests2.UsageConstraintsTest.lessThan":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":338,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":10,"org.easymock.tests.UsageTest.exactCallCountByLastCall":283,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":324,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":12,"org.easymock.tests2.CaptureTest.testCaptureRightOne":141,"org.easymock.tests2.UsageConstraintsTest.testOr":164,"org.easymock.tests.UsageRangeTest.combination":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":7,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":267,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":186,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":22,"org.easymock.tests.UsageTest.wrongArguments":100,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":215,"org.easymock.tests2.EasyMockSupportTest.testVerify":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":370,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":355,"org.easymock.tests.UsageVarargTest.varargShortAccepted":272,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":21,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":328,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":106,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":156,"org.easymock.tests2.UsageConstraintsTest.cmpTo":166,"org.easymock.tests.UsageVarargTest.varargCharAccepted":270,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":372,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":116,"org.easymock.tests2.UsageTest.openCallCountByLastCall":148,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":27,"org.easymock.tests.DefaultClassInstantiatorTest.object":375,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":78,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":369,"org.easymock.tests2.CaptureTest.testCaptureFromStub":142,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":348,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":311,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":308,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":218,"org.easymock.tests2.UsageConstraintsTest.constraints":159,"org.easymock.samples.ExampleTest.addAndChangeDocument":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":35,"org.easymock.tests.CapturesMatcherTest.test":373,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":252,"org.easymock.tests.UsageStrictMockTest.testVerify":219,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":316,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":258,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":137,"org.easymock.tests2.UsageTest.resumeIfFailure":150,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":264,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":265,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":326,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":300,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":268}}]
