[{"position":"org.easymock.internal.matchers.Find:41","failures":[0],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[20,21,22,23,24,25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[28,29,30,31],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[32,33,34,35,1,2,36,37,38,39,40,41,42,43,44,45,46,47,3,48,49,50,51,52,53,54,55,56,57,58,59,60,4,61,61,62,62,63,64,65,66,67,68,69,5,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,6,8,9,112,10,11,12,13,113,14,15,17,18,114,115,116,117],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,70,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,29,161,162,163,164,165,30,166,167,168,169,19,170,171,172,173,174,175,31,176,26,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[125,126,177,134,178,179,180,181,182,183,137,184,185,186,187,188,189,190,191,192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[193],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[194,18,195],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[111,196,197,198,199,200,201],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[138,139,140,141,148,149,154,155,156,157,158,159,160,29,161,162,19,170,174,175],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[125,126,202,177,203,67,69,137,204,184],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[205,206,207,208,209,131],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[210,211,126,177,212,213,178,179,180,137,184,214,185],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[36,43,215],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[216],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[217,168],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[218,31],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[138,140,148,154,160],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[45,3,4,61,62,71,75,78,91,101,110,111,10,219,113,14,17,18],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[220,21,221,222,223,224],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":155,"org.easymock.tests2.UsageTest.argumentsOrdered":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":201,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":207,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":173,"org.easymock.tests2.SerializationTest.testAllMockedMethod":114,"org.easymock.tests2.DelegateToTest.testReturnException":221,"org.easymock.tests.MockingTest.testPartialClassMocking":33,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":45,"org.easymock.tests.MockClassControlTest.testToString":51,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":95,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":194,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":91,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":170,"org.easymock.tests2.DelegateToTest.testWrongClass":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":196,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":123,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":124,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":118,"org.easymock.tests2.UsageTest.wrongArguments":186,"org.easymock.tests.UsageStrictMockTest.range":202,"org.easymock.samples.ConstructorCalledMockTest.testTax":61,"org.easymock.samples.ExampleTest.answerVsDelegate":21,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":79,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":2,"org.easymock.tests2.UsageConstraintsTest.testNull":157,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":67,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":12,"org.easymock.tests2.CaptureTest.testPrimitive":141,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":85,"org.easymock.tests.UsageTest.moreThanOneArgument":180,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.CaptureTest.testCaptureNone":146,"org.easymock.tests.UsageUnorderedTest.message":134,"org.easymock.tests.UsageVerifyTest.twoReturns":179,"org.easymock.tests.UsageTest.argumentsOrdered":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":102,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":127,"org.easymock.tests2.CaptureTest.testCapture_2617107":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":200,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":121,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":11,"org.easymock.tests2.UsageConstraintsTest.any":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":131,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":41,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests.LimitationsTest.mockNativeMethod":56,"org.easymock.tests2.AnswerTest.answer":23,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":3,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":161,"org.easymock.tests2.CaptureTest.testAnd":138,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":73,"org.easymock.tests2.NameTest.nameForMocksControl":192,"org.easymock.tests2.MockedExceptionTest.testMockedException":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":90,"org.easymock.tests2.DelegateToTest.testDelegate":224,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":35,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":65,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":13,"org.easymock.tests.MockingTest.testNicePartialClassMocking":34,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":69,"org.easymock.tests.LimitationsTest.mockFinalMethod":57,"org.easymock.tests2.CaptureTest.testCaptureLast":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":160,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":171,"org.easymock.tests.MockingTest.testTwoMocks":32,"org.easymock.tests2.CaptureTest.testCapture1_2446744":142,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":187,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":175,"org.easymock.tests.UsageStrictMockTest.differentMethods":177,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":39,"org.easymock.tests2.MockBuilderTest.testCreateMockString":17,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":92,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":24,"org.easymock.tests.UsageVerifyTest.twoThrows":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":101,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":128,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":96,"org.easymock.tests2.UsageConstraintsTest.testNotNull":174,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":115,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":104,"org.easymock.tests2.CallbackTest.callback":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":71,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":106,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":82,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":165,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":147,"org.easymock.tests2.EasyMockSupportClassTest.testAll":88,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":47,"org.easymock.tests2.CaptureTest.testCaptureAll":139,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":81,"org.easymock.tests2.UsageConstraintsTest.testMatches":166,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":25,"org.easymock.tests2.CompareToTest.testGreateOrEqual":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":199,"org.easymock.tests2.NameTest.nameForNiceMock":191,"org.easymock.tests.UsageVarargTest.allKinds":133,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":198,"org.easymock.samples.BasicClassMockTest.testPrintContent":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":103,"org.easymock.tests2.DelegateToTest.testStubDelegate":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":108,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":126,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":43,"org.easymock.tests2.UsageConstraintsTest.greaterThan":168,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":76,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":212,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":44,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":110,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":62,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":169,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":58,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":153,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":63,"org.easymock.tests2.SerializationTest.test":195,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":143,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":113,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":38,"org.easymock.tests2.UsageConstraintsTest.testSame":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":86,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":215,"org.easymock.tests2.CaptureTest.testCaptureFirst":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":93,"org.easymock.tests.GenericTest.testPackageScope":46,"org.easymock.tests2.CaptureTest.testCapture2_2446744":150,"org.easymock.tests2.UsageTest.moreThanOneArgument":185,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":15,"org.easymock.tests.GenericTest.testBridgedEquals":48,"org.easymock.tests2.NameTest.nameForMock":189,"org.easymock.tests.UsageExpectAndReturnTest.longType":206,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":16,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":172,"org.easymock.tests2.UsageStrictMockTest.differentMethods":184,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":105,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":119,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":80,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":7,"org.easymock.tests2.UsageConstraintsTest.testContains":164,"org.easymock.tests2.NameTest.nameForStrictMock":190,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":117,"org.easymock.tests2.UsageConstraintsTest.testFind":156,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":112,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":26,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":68,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":27,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":64,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":19,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":70,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":8,"org.easymock.tests2.UsageStrictMockTest.range":204,"org.easymock.tests2.UsageConstraintsTest.lessThan":31,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":197,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":97,"org.easymock.tests2.CaptureTest.testCaptureRightOne":148,"org.easymock.tests2.ConstraintsToStringTest.findToString":0,"org.easymock.tests2.UsageConstraintsTest.testOr":159,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":66,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":220,"org.easymock.tests.UsageTest.wrongArguments":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":94,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":98,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":20,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":42,"org.easymock.tests2.UsageConstraintsTest.cmpTo":163,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":176,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":36,"org.easymock.tests2.CompareToTest.testLessThan":218,"org.easymock.tests.DefaultClassInstantiatorTest.object":37,"org.easymock.tests2.CaptureTest.testCaptureFromStub":149,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":99,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":125,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":74,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":53,"org.easymock.tests2.UsageConstraintsTest.constraints":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":209,"org.easymock.tests.UsageStrictMockTest.testVerify":203,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":107,"org.easymock.tests2.CompareToTest.testGreateThan":217,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":129,"org.easymock.tests.LimitationsTest.abstractClass":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":1,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":130}}]
