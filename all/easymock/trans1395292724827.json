[{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[66,67,68,69,70],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[23],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[71,26,32,44],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[25,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[72,73,74,75,47,76,77,78,79,80,81,57,82,83],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[84,85,86],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[66,66,67,67,89,90,91,92,93,94,95,96,97,0,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,68,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[68,142,118],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[143],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[124,144,125,145],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[146],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[34],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[148,149,150,151,152,153,154,155,156,157,158,159],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[71,19,26,32,44],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,161,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[66,67,89,162,90,91,163,164,165,166,167,168,169,170,171,172,173,92,93,174,94,95,96,97,175,0,176,177,98,99,100,101,178,179,180,181,102,182,183,184,1,185,72,186,187,188,189,190,191,192,2,3,4,5,6,7,8,9,10,11,12,13,14,15,193,148,149,194,150,195,196,151,152,197,198,153,199,200,201,202,203,204,205,73,206,207,208,209,210,74,75,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,103,105,106,226,107,108,109,110,227,228,111,112,114,229,230,231,232,233,68,142,118,119,120,121,234,235,122,123,236,237,238,239,240,241,242,243,244,245,246,247,248,161,124,144,125,249,154,155,250,156,251,252,157,158,253,254,159,255,256,257,126,258,259,127,260,261,262,263,264,265,266,267,268,128,269,270,271,272,273,129,274,275,276,277,278,279,280,281,282,87,283,284,285,286,287,16,288,17,18,19,20,143,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,289,290,291,292,45,293,46,294,295,296,297,298,299,300,301,302,130,131,132,303,133,304,305,306,307,308,47,48,309,76,310,311,312,49,50,51,52,53,54,55,313,314,315,160,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,77,78,368,369,79,80,370,134,371,372,373,374,135,375,376,377,378,379,380,381,382,136,383,384,385,386,387,388,389,390,391,392,393,394,88,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,56,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,57,469,82,83,470,471,472,473,474,475,476,477,478,479,480,481,482,58,59,60,61,62,137,483,138,139,140,484,485,486,487,488,489,490,491,63,492,493,494,141,495,496,497,498,499,500,501,64,65,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[425,426,430],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[163,165,166,168,172,60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[522,32,39,44],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[89,97,103,104,105,106,107,108,109,110,111,112,113,114,124,134,135,140],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[66,67,176,523,524,525,526],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[104,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.LastControl:95","failures":[2,4,12,19,20,22,24,25,27,37,42],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[180,181,102,182,278,51,488,489,490,491,63,492,65],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[527,528],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":20,"org.easymock.tests2.UsageTest.argumentsOrdered":75,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":366,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":402,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":207,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":162,"org.easymock.tests2.DelegateToTest.testReturnException":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":489,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.tests.MockClassControlTest.testToString":383,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":188,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":263,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":346,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":292,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":465,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":49,"org.easymock.tests2.UsageTest.wrongArguments":73,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":153,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":380,"org.easymock.samples.ExampleTest.answerVsDelegate":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":135,"org.easymock.tests2.UsageConstraintsTest.testNull":22,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":305,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":94,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":388,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":222,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":365,"org.easymock.tests.UsageTest.moreThanOneArgument":367,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":480,"org.easymock.tests.UsageTest.argumentsOrdered":80,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":333,"org.easymock.tests.UsageVarargTest.varargIntAccepted":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":58,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":254,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":62,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":449,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":85,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests.ReplayStateInvalidUsageTest.times":320,"org.easymock.tests2.DependencyTest.testClassMocking":289,"org.easymock.tests2.AnswerTest.answer":243,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":202,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":372,"org.easymock.tests2.UsageTest.strictResetToDefault":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":479,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":217,"org.easymock.tests2.DelegateToTest.testDelegate":283,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":337,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":448,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":361,"org.easymock.tests.LimitationsTest.mockFinalMethod":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":345,"org.easymock.tests2.DependencyTest.testClassMockingSupport":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":338,"org.easymock.tests2.CaptureTest.testCapture1_2446744":6,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":200,"org.easymock.tests.UsageThrowableTest.throwError":470,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":315,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":374,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":482,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":275,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":452,"org.easymock.samples.PartialClassMockTest.testGetArea":89,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":160,"org.easymock.tests.MockingTest.testInterfaceMocking":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":59,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":497,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":424,"org.easymock.tests2.UsageTest.niceToStrict":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":347,"org.easymock.tests2.ThreadingTest.testChangeDefault":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":70,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":107,"org.easymock.tests2.MockBuilderTest.testCreateMock":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":271,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":355,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":371,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":468,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":378,"org.easymock.tests.UsageOverloadedMethodTest.overloading":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":273,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":32,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":513,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":416,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":31,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":11,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":436,"org.easymock.tests.MockClassControlTest.testEquals":387,"org.easymock.tests2.EasyMockSupportClassTest.testAll":126,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":363,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":115,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":525,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":343,"org.easymock.tests.MockNameTest.defaultName":432,"org.easymock.tests2.UsageConstraintsTest.testMatches":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":481,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":313,"org.easymock.samples.ExampleTest.voteForRemovals":168,"org.easymock.tests.UsageVarargTest.allKinds":56,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":469,"org.easymock.samples.BasicClassMockTest.testPrintContent":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":344,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":476,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":157,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":87,"org.easymock.tests2.UsageConstraintsTest.greaterThan":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":390,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":101,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":453,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":431,"org.easymock.samples.ExampleTest.voteForRemoval":165,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":178,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":286,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":375,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":97,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":445,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":137,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":215,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":488,"org.easymock.tests2.CaptureTest.testCaptureFirst":15,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":509,"org.easymock.tests2.CaptureTest.testCapture2_2446744":14,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":16,"org.easymock.tests2.UsageTest.moreThanOneArgument":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":443,"org.easymock.tests.GenericTest.testBridgedEquals":484,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":147,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":331,"org.easymock.tests.UsageExpectAndReturnTest.longType":505,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":341,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":364,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":40,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":500,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":478,"org.easymock.tests.UsageCallCountTest.tooManyCalls":332,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":86,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":272,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":510,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":475,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":119,"org.easymock.tests.MockingTest.testNiceClassMocking":306,"org.easymock.tests.MockingTest.testClassMocking":302,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":104,"org.easymock.tests2.UsageConstraintsTest.testContains":30,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":325,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":102,"org.easymock.tests2.UsageConstraintsTest.testFind":21,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":418,"org.easymock.tests.MockTypeTest.fromEasyMockClass":373,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":46,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":307,"org.easymock.tests.UsageExpectAndReturnTest.object":512,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":0,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":221,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":438,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":422,"org.easymock.tests.UsageTest.exactCallCountByLastCall":370,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":485,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":142,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":518,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":433,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":296,"org.easymock.tests.MockClassControlTest.testHashCode":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":154,"org.easymock.tests2.EasyMockSupportTest.testVerify":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":266,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":84,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":199,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":161,"org.easymock.tests.UsageVarargTest.varargCharAccepted":437,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastCall":208,"org.easymock.tests.DefaultClassInstantiatorTest.object":425,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":466,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":420,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":267,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":353,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":473,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":194,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":249,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":451,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":385,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":352,"org.easymock.tests.CapturesMatcherTest.test":528,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":519,"org.easymock.tests.ReplayStateInvalidCallsTest.times":457,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":499,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":458,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":129,"org.easymock.tests2.UsageTest.resumeIfFailure":211,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":134,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":491,"org.easymock.tests2.StubTest.stubWithReturnValue":278,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":511,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":41,"org.easymock.tests2.SerializationTest.testAllMockedMethod":125,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":408,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":358,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":145,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":414,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":244,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":487,"org.easymock.tests.UsageExpectAndThrowTest.object":356,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":38,"org.easymock.tests2.DelegateToTest.testWrongClass":282,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":455,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":54,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":55,"org.easymock.samples.ConstructorCalledMockTest.testTax":66,"org.easymock.tests.UsageStrictMockTest.range":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":241,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":357,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":255,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":379,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":447,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":498,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":230,"org.easymock.tests.UsageUnorderedTest.message":57,"org.easymock.tests.UsageVerifyTest.twoReturns":83,"org.easymock.tests.UsageVarargTest.varargByteAccepted":442,"org.easymock.tests2.ThreadingTest.testThreadSafe":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":269,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":329,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":423,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":90,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":52,"org.easymock.tests2.UsageConstraintsTest.any":28,"org.easymock.tests2.StubTest.stub":277,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndThrowTest.longType":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":429,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":318,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.tests2.SerializationTest.testClass":124,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":251,"org.easymock.tests.LimitationsTest.mockNativeMethod":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":521,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":149,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":117,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":463,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":187,"org.easymock.tests2.NameTest.nameForMocksControl":192,"org.easymock.tests2.MockedExceptionTest.testMockedException":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":259,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":369,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":350,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":110,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":96,"org.easymock.tests2.CompareToTest.testCompareEqual":146,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":193,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":339,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":462,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":123,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":25,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":39,"org.easymock.tests.MockingTest.testTwoMocks":130,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":459,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":502,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":354,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":74,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":43,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":233,"org.easymock.samples.ExampleTest.removeNonExistingDocument":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":151,"org.easymock.tests.UsageStrictMockTest.differentMethods":310,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":155,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":427,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":232,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":287,"org.easymock.tests2.MockBuilderTest.testCreateMockString":114,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":260,"org.easymock.tests.UsageExpectAndThrowTest.floatType":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":257,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":246,"org.easymock.tests.UsageVerifyTest.twoThrows":82,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":128,"org.easymock.samples.ExampleTest.voteAgainstRemoval":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":403,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":100,"org.easymock.tests.LimitationsTest.privateConstructor":494,"org.easymock.tests2.UsageConstraintsTest.testNotNull":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":477,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":180,"org.easymock.tests2.UsageTest.defaultResetToNice":210,"org.easymock.samples.ExampleTest.voteAgainstRemovals":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":404,"org.easymock.tests.UsageVarargTest.differentLength":439,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":148,"org.easymock.tests2.CallbackTest.callback":276,"org.easymock.tests2.UsageConstraintsTest.equals":143,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":176,"org.easymock.tests.UsageTest.openCallCountByLastCall":368,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":51,"org.easymock.tests.UsageCallCountTest.tooFewCalls":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":381,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":231,"org.easymock.tests.UsageThrowableTest.throwCheckedException":474,"org.easymock.tests.MockingTest.testStrictClassMocking":301,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":196,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":235,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":248,"org.easymock.tests.ObjectMethodsTest.testHashCode":421,"org.easymock.tests2.CompareToTest.testGreateOrEqual":71,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":461,"org.easymock.tests2.NameTest.nameForNiceMock":191,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":288,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":456,"org.easymock.tests2.DependencyTest.testInterfaceMocking":291,"org.easymock.samples.ExampleTest.addDocument":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":274,"org.easymock.tests2.DelegateToTest.testStubDelegate":281,"org.easymock.tests2.AnswerTest.stubAnswer":247,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":48,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":227,"org.easymock.tests.UsageVarargTest.varargLongAccepted":441,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":520,"org.easymock.tests.UsageExpectAndReturnTest.floatType":504,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":68,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":67,"org.easymock.tests.UsageThrowableTest.noUpperLimit":471,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":253,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":237,"org.easymock.tests2.SerializationTest.test":144,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":7,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":503,"org.easymock.tests2.UsageConstraintsTest.testSame":23,"org.easymock.samples.SupportTest.addDocument":171,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":234,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":446,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":261,"org.easymock.tests.GenericTest.testPackageScope":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":158,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":304,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":444,"org.easymock.tests2.NameTest.nameForMock":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":514,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":526,"org.easymock.tests2.UsageStrictMockTest.differentMethods":186,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":506,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":360,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":419,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":392,"org.easymock.tests2.MockedExceptionTest.testRealException":182,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":405,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":50,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":323,"org.easymock.tests2.NameTest.nameForStrictMock":190,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":226,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":95,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":240,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":428,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":37,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":105,"org.easymock.tests2.UsageStrictMockTest.range":72,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":450,"org.easymock.tests2.UsageConstraintsTest.lessThan":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":214,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":265,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":229,"org.easymock.tests2.UsageConstraintsTest.testOr":24,"org.easymock.tests.UsageRangeTest.combination":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":93,"org.easymock.tests.UsageTest.wrongArguments":78,"org.easymock.tests2.MockBuilderTest.testWithConstructor":523,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":262,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":507,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":394,"org.easymock.tests.UsageVarargTest.varargShortAccepted":440,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":430,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":330,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":464,"org.easymock.tests2.UsageConstraintsTest.cmpTo":29,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":245,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":454,"org.easymock.tests2.CompareToTest.testLessThan":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":395,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":209,"org.easymock.tests2.CaptureTest.testCaptureFromStub":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":314,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":106,"org.easymock.tests.UsageTest.unexpectedCallWithArray":77,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":460,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":328,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":524,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":516,"org.easymock.tests2.CaptureTest.testCapture":527,"org.easymock.tests2.UsageConstraintsTest.constraints":19,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":309,"org.easymock.samples.ExampleTest.addAndChangeDocument":170,"org.easymock.tests.UsageStrictMockTest.testVerify":312,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":173,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":308,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":342,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":8,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":60,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":508,"org.easymock.tests.LimitationsTest.abstractClass":493,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":61,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":219}}]
