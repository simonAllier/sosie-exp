[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[127,128,129,7,130,8,9,10,11,12,28,31,131,132,133,134,135,37,136,41,42,43,137,138,44,139,45,46,47,48,140,49,50,51,52,141,53,54,55,56,62,68,142,73,143,144,145,146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[147,148,149,150],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[0,127,1,2,128,129,3,151,152,4,32,33,34,35,36,153,37,38,39,154,155,65,156,157,82,83,158,86,159,87,88,160,161,89,90,91,92,162,163,93,164,101,102,103,104,105,106,107,108,109,110,165,111,166,112,113,114,115,116,117,118,119,120,121,167,122,123,124,125],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[168],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","i":"i"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[170,171,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[0,1,2,3,4,32,33,34,35,36,38,39,173,174,175,176,177,178,178,179,179,65,68,162,101,102,105,106,107,108,112,114,115,117,118,123,124,125],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[147,148,149,150],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[180,181,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[82,83,167,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[127,183,184,185,132,133,134,135,37,136,143,144,145,146],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[151,5,186,187,62,188,66],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[152,189,190,191,29,192,193,194,195,70,196,197,198,199,200,201,202],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,169,232,233,234,235,148],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[236],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[5,187,62,188,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:229","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.get(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[237,238,239],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[86,159,88,160,161,89,90,93,116,167],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[240,241,242,243,244,245,246,247,205,148],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[248,249,250,151,152,4,6,130,28,29,193,30,31,194,195,251,252,153,253,41,61,62,188,63,65,67,142,70,196,72,73,197,198,254,255,256,257,258,259,85,106,107,111,166,123,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"minimum"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[260,261,262,246,263,264,247,265,266,267,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[269,270,271,272,273,274,275,276,277,278,279,280,178,178,179,179,64,281,282,283,284,285,286,287,260,288,289,261,145,245,290,291,292,293,77,294,295,296,297,298,299,300,209,212,222,228,301,302,303,78,304,305,157,306,307,79,308,148,150],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[309,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[311,309],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[312,313,314,315,316,317,318,319,320,321,322,323,71,144,145,324,245,306,325,326,327,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[329],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[178,179,263,265,330,266,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[332,333],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[122],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":104,"org.easymock.tests2.UsageTest.argumentsOrdered":198,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":135,"org.easymock.tests2.StubTest.stubWithReturnValue":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":19,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":122,"org.easymock.tests2.SerializationTest.testAllMockedMethod":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":133,"org.easymock.tests.MockingTest.testPartialClassMocking":275,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":201,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":216,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":147,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":42,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":309,"org.easymock.tests.UsageExpectAndThrowTest.object":140,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":120,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":38,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":39,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":110,"org.easymock.tests2.UsageTest.wrongArguments":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":1,"org.easymock.tests.UsageStrictMockTest.range":5,"org.easymock.samples.ConstructorCalledMockTest.testTax":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":321,"org.easymock.samples.ExampleTest.answerVsDelegate":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":286,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":279,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":169,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":317,"org.easymock.tests2.UsageConstraintsTest.testNull":106,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":295,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":99,"org.easymock.tests2.CaptureTest.testPrimitive":87,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":206,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":194,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":56,"org.easymock.tests.UsageTest.moreThanOneArgument":29,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":175,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":189,"org.easymock.tests2.CaptureTest.testCaptureNone":90,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":170,"org.easymock.tests.UsageUnorderedTest.message":151,"org.easymock.tests.UsageVerifyTest.twoReturns":188,"org.easymock.tests2.ThreadingTest.testThreadSafe":75,"org.easymock.tests.UsageTest.argumentsOrdered":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":223,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":249,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":32,"org.easymock.tests2.CaptureTest.testCapture_2617107":159,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":202,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":129,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":294,"org.easymock.tests2.UsageConstraintsTest.any":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":36,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":134,"org.easymock.tests.UsageExpectAndThrowTest.longType":138,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":237,"org.easymock.tests2.SerializationTest.testClass":148,"org.easymock.tests.LimitationsTest.mockNativeMethod":272,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":271,"org.easymock.tests2.AnswerTest.answer":259,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":27,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":328,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":285,"org.easymock.tests2.CaptureTest.testAnd":158,"org.easymock.tests2.UsageTest.strictResetToDefault":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":264,"org.easymock.tests2.NameTest.nameForMocksControl":258,"org.easymock.tests2.MockedExceptionTest.testMockedException":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":59,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":31,"org.easymock.tests2.DelegateToTest.testDelegate":85,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":44,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":301,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":296,"org.easymock.tests.MockingTest.testNicePartialClassMocking":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":141,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":304,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":261,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":316,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":121,"org.easymock.tests.MockingTest.testTwoMocks":274,"org.easymock.tests2.CaptureTest.testCapture1_2446744":88,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":326,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":47,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":197,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":124,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":172,"org.easymock.tests.UsageThrowableTest.throwError":7,"org.easymock.tests.UsageStrictMockTest.differentMethods":6,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":171,"org.easymock.tests2.MockBuilderTest.testCreateMockString":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":213,"org.easymock.tests.UsageExpectAndThrowTest.floatType":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":177,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":208,"org.easymock.tests.UsageVerifyTest.twoThrows":62,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":222,"org.easymock.samples.PartialClassMockTest.testGetArea":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":33,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":253,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":217,"org.easymock.tests2.UsageTest.niceToStrict":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":43,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":268,"org.easymock.tests2.UsageConstraintsTest.testNotNull":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":12,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":143,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":235,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":77,"org.easymock.tests2.MockBuilderTest.testCreateMock":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":225,"org.easymock.tests2.CallbackTest.callback":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":331,"org.easymock.tests.UsageTest.openCallCountByLastCall":30,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":199,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":48,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":101,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":128,"org.easymock.tests.UsageCallCountTest.tooFewCalls":248,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":232,"org.easymock.tests.UsageOverloadedMethodTest.overloading":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":114,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":288,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":20,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":238,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":113,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":91,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":322,"org.easymock.tests.UsageThrowableTest.throwCheckedException":9,"org.easymock.tests2.EasyMockSupportClassTest.testAll":209,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":270,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":200,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":54,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":190,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":283,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":314,"org.easymock.tests2.CaptureTest.testCaptureAll":86,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":289,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":260,"org.easymock.tests2.UsageConstraintsTest.testMatches":115,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":176,"org.easymock.tests2.NameTest.nameForNiceMock":257,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":156,"org.easymock.tests.UsageVarargTest.allKinds":153,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":61,"org.easymock.tests2.DependencyTest.testInterfaceMocking":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":315,"org.easymock.samples.BasicClassMockTest.testPrintContent":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":229,"org.easymock.tests2.DelegateToTest.testStubDelegate":84,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":11,"org.easymock.tests2.AnswerTest.stubAnswer":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":136,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":244,"org.easymock.tests2.UsageConstraintsTest.greaterThan":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":58,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":308,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":76,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":245,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":179,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":118,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":273,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":102,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests2.SerializationTest.test":149,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":160,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":205,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":239,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":96,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":14,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":132,"org.easymock.tests2.CaptureTest.testCaptureFirst":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":311,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":214,"org.easymock.tests.GenericTest.testPackageScope":269,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":324,"org.easymock.tests2.UsageTest.moreThanOneArgument":70,"org.easymock.tests2.CaptureTest.testCapture2_2446744":163,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":298,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":233,"org.easymock.tests2.NameTest.nameForMock":255,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":312,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":94,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":299,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":21,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":167,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":266,"org.easymock.tests2.UsageStrictMockTest.differentMethods":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":15,"org.easymock.tests.UsageCallCountTest.tooManyCalls":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":226,"org.easymock.tests2.MockedExceptionTest.testRealException":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":18,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":2,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":10,"org.easymock.tests.MockingTest.testNiceClassMocking":318,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":287,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":291,"org.easymock.tests2.NameTest.nameForStrictMock":256,"org.easymock.tests2.UsageConstraintsTest.testContains":112,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":145,"org.easymock.tests2.UsageConstraintsTest.testFind":105,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":204,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":78,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":83,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":119,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":157,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":292,"org.easymock.tests2.UsageStrictMockTest.range":66,"org.easymock.tests2.UsageConstraintsTest.lessThan":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":241,"org.easymock.tests.UsageTest.exactCallCountByLastCall":251,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":234,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":243,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":218,"org.easymock.tests2.CaptureTest.testCaptureRightOne":92,"org.easymock.tests2.UsageConstraintsTest.testOr":108,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":191,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":246,"org.easymock.tests.UsageRangeTest.combination":57,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":302,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":252,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":24,"org.easymock.tests.UsageTest.wrongArguments":193,"org.easymock.tests2.MockBuilderTest.testWithConstructor":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":215,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":219,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":325,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":164,"org.easymock.tests2.UsageConstraintsTest.cmpTo":166,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":310,"org.easymock.tests2.UsageTest.openCallCountByLastCall":72,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests.DefaultClassInstantiatorTest.object":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":203,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":100,"org.easymock.tests2.CaptureTest.testCaptureFromStub":162,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":293,"org.easymock.tests.UsageTest.unexpectedCallWithArray":192,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":8,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":152,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":23,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":307,"org.easymock.tests2.UsageConstraintsTest.constraints":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":45,"org.easymock.tests.CapturesMatcherTest.test":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":25,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":313,"org.easymock.tests2.UsageTest.resumeIfFailure":74,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":161,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":98,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":187,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":180}}]
