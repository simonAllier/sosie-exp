[{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[0,1,2,3],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[4],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[5],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,6,85,86,87,88,89,90,8,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,9,10,115,11,116,12,13,117,118,119,120,121,122,123,124,125,126,15,127,128,129,16,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,1,2,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[177,178,179,180,181,182,183],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[184,17,185,186,187,188,44,189,45,190,191,192,193,194,195,196,197,66,67,68,198,199,200,201,202,203,204,205,206,207,79,208,209,210,210,211,211,93,94,96,97,98,212,99,213,214,215,100,101,102,216,217,107,177,218,219,220,109,221,222,110,223,224,225,226,227,228,229,230,231,111,232,233,234,235,236,112,237,238,1,3,239,240,162,163,164,165,167,168,241,169,242,243,170,244,171,172,245,246,173,247,248,249,174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[186,187,45,79,212,100,101,217,110,111,112,1,241,169,242,170,244,171,172,246,173,247],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[136,137],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[17,250,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,251,252,253,254,255,256,257,41,42,258,259,43,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,44,45,46,47,48,49,50,51,52,53,283,54,55,56,57,58,59,60,284,285,286,287,288,289,290,291,292,293,294,61,62,63,64,65,66,67,68,295,296,297,298,299,69,300,301,302,303,304,305,70,306,71,207,72,73,74,75,76,77,78,307,308,309,79,210,210,211,211,80,81,310,82,83,84,311,312,6,85,86,87,88,89,90,8,313,91,92,93,94,95,96,97,98,99,100,101,102,314,103,104,105,106,107,108,109,110,111,112,113,114,9,10,115,11,116,12,13,117,118,119,120,121,122,123,124,125,126,15,127,128,129,16,130,131,315,316,132,317,318,319,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,1,2,153,154,155,156,157,158,159,160,161,320,321,162,163,164,165,166,167,168,169,170,171,172,173,248,249,174,322,175,323,324,325,176,326],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[327,297,310,312,175,324,326],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[113,9,125,129,328],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[76,80,81,82,83,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[329,330,331],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[332,38,39,40,333,96,98,104,105,106],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[177,178,179,180,181,182,183],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[334],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,52,53,54,55,56,57,58,59,290,61,64,299,306,103,153,158],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[113,125,127,336],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[332,337,338,339,340,341],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[188],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[100,217,169,173],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","method":"bridgeMethod"}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[15,127],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[342],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[14],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[250,281,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":10,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":289,"org.easymock.tests2.StubTest.stubWithReturnValue":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":27,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":129,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests2.DelegateToTest.testReturnException":316,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":287,"org.easymock.tests.MockingTest.testPartialClassMocking":66,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":341,"org.easymock.samples.SupportTest.voteForRemovals":80,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":188,"org.easymock.tests.MockClassControlTest.testToString":193,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":272,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":226,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":260,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":110,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":323,"org.easymock.tests.UsageExpectAndThrowTest.object":270,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":127,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":134,"org.easymock.tests2.DelegateToTest.testWrongClass":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":72,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":73,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":41,"org.easymock.samples.ConstructorCalledMockTest.testTax":210,"org.easymock.tests.UsageStrictMockTest.range":39,"org.easymock.samples.ExampleTest.answerVsDelegate":310,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":187,"org.easymock.tests2.UsageConstraintsTest.testNull":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":271,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":171,"org.easymock.tests2.CaptureTest.testPrimitive":86,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":218,"org.easymock.tests.UsageTest.moreThanOneArgument":62,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":95,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":303,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":282,"org.easymock.tests2.CaptureTest.testCaptureNone":89,"org.easymock.tests.UsageUnorderedTest.message":300,"org.easymock.tests.UsageVerifyTest.twoReturns":71,"org.easymock.tests2.ThreadingTest.testThreadSafe":135,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":232,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":74,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":259,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":244,"org.easymock.tests2.UsageConstraintsTest.any":118,"org.easymock.tests2.StubTest.stub":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":288,"org.easymock.tests.UsageExpectAndThrowTest.longType":263,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":203,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":140,"org.easymock.tests.LimitationsTest.mockNativeMethod":17,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":342,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":37,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":45,"org.easymock.tests2.AnswerTest.answer":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":14,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests2.UsageTest.strictResetToDefault":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":215,"org.easymock.tests2.MockedExceptionTest.testMockedException":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":64,"org.easymock.tests2.DelegateToTest.testDelegate":319,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":264,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":68,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":172,"org.easymock.tests.MockingTest.testNicePartialClassMocking":67,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":275,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests2.CompareToTest.testNotComparable":334,"org.easymock.tests.LimitationsTest.mockFinalMethod":185,"org.easymock.tests2.CaptureTest.testCaptureLast":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":13,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":168,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":128,"org.easymock.tests.MockingTest.testTwoMocks":197,"org.easymock.tests2.CaptureTest.testCapture1_2446744":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":18,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":268,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":130,"org.easymock.tests.UsageThrowableTest.throwError":53,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":201,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":137,"org.easymock.tests2.MockBuilderTest.testCreateMockString":247,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":305,"org.easymock.tests.UsageExpectAndThrowTest.floatType":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":223,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":220,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":325,"org.easymock.tests.UsageVerifyTest.twoThrows":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":111,"org.easymock.samples.PartialClassMockTest.testGetArea":79,"org.easymock.tests2.CompareToTest.testLessOrEqual":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":75,"org.easymock.samples.ExampleTest.voteAgainstRemoval":83,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":281,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":280,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":227,"org.easymock.tests2.UsageTest.niceToStrict":156,"org.easymock.tests2.UsageConstraintsTest.testNotNull":16,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":59,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":331,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":170,"org.easymock.tests2.MockBuilderTest.testCreateMock":246,"org.easymock.tests2.UsageTest.defaultResetToNice":159,"org.easymock.samples.ExampleTest.voteAgainstRemovals":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":234,"org.easymock.tests2.CallbackTest.callback":312,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":213,"org.easymock.tests.UsageTest.openCallCountByLastCall":63,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":269,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":113,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":258,"org.easymock.tests.UsageOverloadedMethodTest.overloading":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":231,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":299,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":122,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":50,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":165,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":5,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":121,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":90,"org.easymock.tests.UsageThrowableTest.throwCheckedException":56,"org.easymock.tests2.EasyMockSupportClassTest.testAll":109,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":189,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":277,"org.easymock.tests2.CaptureTest.testCaptureAll":85,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":284,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":167,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":164,"org.easymock.tests2.UsageConstraintsTest.testMatches":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":166,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":304,"org.easymock.samples.ExampleTest.voteForRemovals":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":181,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":139,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":70,"org.easymock.tests2.DependencyTest.testInterfaceMocking":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":180,"org.easymock.samples.BasicClassMockTest.testPrintContent":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.DelegateToTest.testStubDelegate":132,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":58,"org.easymock.tests2.AnswerTest.stubAnswer":176,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":291,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":205,"org.easymock.tests2.UsageConstraintsTest.greaterThan":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":47,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":102,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":206,"org.easymock.samples.ExampleTest.voteForRemoval":82,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":216,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":136,"org.easymock.tests.UsageExpectAndReturnTest.floatType":20,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":36,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":107,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":211,"org.easymock.tests.UsageThrowableTest.noUpperLimit":283,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":126,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":207,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":114,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":239,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":245,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":19,"org.easymock.tests2.UsageConstraintsTest.testSame":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":286,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":315,"org.easymock.tests2.CaptureTest.testCaptureFirst":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":224,"org.easymock.tests.GenericTest.testPackageScope":44,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":138,"org.easymock.tests2.UsageTest.moreThanOneArgument":155,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":173,"org.easymock.tests.GenericTest.testBridgedEquals":190,"org.easymock.tests.UsageExpectAndReturnTest.longType":21,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":30,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":276,"org.easymock.tests2.UsageStrictMockTest.differentMethods":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":301,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":22,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":49,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":256,"org.easymock.tests2.MockedExceptionTest.testRealException":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":265,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":42,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":163,"org.easymock.tests2.UsageConstraintsTest.testContains":120,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":174,"org.easymock.tests2.UsageConstraintsTest.testFind":115,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":52,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":330,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":321,"org.easymock.tests.UsageExpectAndReturnTest.object":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":240,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":202,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":15,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":169,"org.easymock.tests2.UsageStrictMockTest.range":105,"org.easymock.tests2.UsageConstraintsTest.lessThan":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":179,"org.easymock.tests.UsageTest.exactCallCountByLastCall":65,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":60,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":228,"org.easymock.tests2.CaptureTest.testCaptureRightOne":8,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":252,"org.easymock.tests2.UsageConstraintsTest.testOr":12,"org.easymock.tests.UsageRangeTest.combination":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":34,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":225,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":229,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":253,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":293,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":204,"org.easymock.tests2.UsageConstraintsTest.cmpTo":119,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":198,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":324,"org.easymock.tests2.UsageTest.openCallCountByLastCall":157,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":329,"org.easymock.tests.DefaultClassInstantiatorTest.object":199,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":152,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":292,"org.easymock.tests2.CaptureTest.testCaptureFromStub":313,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":242,"org.easymock.tests.UsageTest.unexpectedCallWithArray":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":230,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":332,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":55,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":32,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":195,"org.easymock.tests2.UsageConstraintsTest.constraints":9,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":100,"org.easymock.samples.ExampleTest.addAndChangeDocument":311,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":266,"org.easymock.tests.CapturesMatcherTest.test":4,"org.easymock.tests.UsageStrictMockTest.testVerify":333,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":307,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":112,"org.easymock.tests2.CompareToTest.testGreateThan":336,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":24,"org.easymock.tests.LimitationsTest.abstractClass":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":77,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":147}}]
