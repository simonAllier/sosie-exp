[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[7,8],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,22,23,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[64,62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,56,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[79,80,81,82,83],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[84,85],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[86,81,87,88,89],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[90,91,92,93,94,95,96,97,98,99,100,101],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[102],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[103,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[104,105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[106,62,107,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[81,108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[109],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[0,110,111,112,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[113],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[114],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[21,45,47,49,50,52,54],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[115],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[81,116,117,118,108,113,119,109,90,91,99],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[62,107,63],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[106,62,107,63],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matching"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[120,121,122,123,124,125,126,127,128,129],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[130,131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[132,133,9,134,135,136,137,138,139,140,65,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,0,1,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,130,181,182,10,183,184,185,186,11,187,188,12,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,114,13,14,15,207,208,209,210,211,212,213,214,215,216,217,104,66,218,219,220,221,222,120,223,224,225,226,131,227,228,229,230,231,232,4,233,234,235,236,237,238,239,240,241,5,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,16,293,67,68,69,7,294,295,8,296,297,298,299,300,301,84,302,303,304,85,305,306,307,308,17,18,19,309,20,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,111,112,328,329,330,70,71,72,73,74,75,331,332,333,334,335,121,336,337,338,339,340,341,342,343,21,344,345,346,122,347,348,349,350,351,352,22,23,24,25,123,105,124,125,353,126,26,27,354,28,29,30,31,355,32,356,357,33,34,35,36,358,359,127,360,361,362,363,2,3,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,37,38,39,40,382,383,41,42,384,43,385,45,46,386,387,47,48,49,388,50,389,64,51,52,390,54,55,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,76,77,56,78,80,417,81,116,418,419,117,420,118,108,87,113,421,422,423,424,88,425,426,82,427,119,102,428,429,83,109,430,89,431,432,90,433,91,92,93,94,95,96,434,97,99,100,435,101,436,437,438,58,439,440,59,441,442,443,444,445,446,447,448,449,60,450,451,452,453,454,61,455,456,128,457,129,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,62,107,63],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[132,163,164,0,1,319,321,324,325,327,111,112,362,2,3,394,395,396,397,465,466,472,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[81,108,90,91,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[114,207],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[234],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:274","failures":[121,122,123,125,353,126,127,128,129],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[81,116,117,118,108,113,119,109,90,91,99],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[133,9,134,135,136,137,138,139,10,11,12,114,13,14,15,207,291,292,16,293,301,84,302,303,304,85,306,307,308,17,18,19,20,312,21,22,22,23,23,24,25,26,27,28,29,30,31,32,356,357,33,34,35,36,358,359,37,38,39,40,41,42,43,45,46,387,47,48,49,50,64,51,52,54,55,391,76,77,56,436,437,438,58,439,440,59,441,442,443,444,445,446,447,448,449,60,450,451,452,453,454,61,455,456,476,477,478,480,483,484,62,63],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":116,"org.easymock.tests2.UsageTest.argumentsOrdered":473,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":318,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":379,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":220,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":468,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":342,"org.easymock.tests2.DelegateToTest.testReturnException":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":71,"org.easymock.tests.MockingTest.testPartialClassMocking":18,"org.easymock.tests.MockClassControlTest.testToString":134,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":393,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":444,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":242,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":486,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":87,"org.easymock.tests2.UsageTest.wrongArguments":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":198,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":498,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":177,"org.easymock.samples.ExampleTest.answerVsDelegate":122,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":11,"org.easymock.tests2.UsageConstraintsTest.testNull":117,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":311,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":28,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":139,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":378,"org.easymock.tests2.CaptureTest.testPrimitive":92,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":261,"org.easymock.tests.UsageTest.moreThanOneArgument":319,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":315,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":179,"org.easymock.tests.UsageTest.argumentsOrdered":325,"org.easymock.tests.UsageVarargTest.varargIntAccepted":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":153,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":478,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":157,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":492,"org.easymock.tests.ReplayStateInvalidUsageTest.times":239,"org.easymock.tests2.DependencyTest.testClassMocking":483,"org.easymock.tests2.AnswerTest.answer":123,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":368,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":184,"org.easymock.tests2.CaptureTest.testAnd":90,"org.easymock.tests2.UsageTest.strictResetToDefault":464,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":373,"org.easymock.tests2.DelegateToTest.testDelegate":403,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":257,"org.easymock.tests.LimitationsTest.mockFinalMethod":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":287,"org.easymock.tests2.DependencyTest.testClassMockingSupport":484,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":328,"org.easymock.tests2.CaptureTest.testCapture1_2446744":93,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":255,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":366,"org.easymock.tests.UsageThrowableTest.throwError":7,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":233,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":186,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":456,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":234,"org.easymock.tests.MockingTest.testInterfaceMocking":309,"org.easymock.tests2.CompareToTest.testLessOrEqual":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":332,"org.easymock.tests2.UsageTest.niceToStrict":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":445,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":47,"org.easymock.tests2.MockBuilderTest.testCreateMock":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":452,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":251,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":374,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":205,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":175,"org.easymock.tests.UsageOverloadedMethodTest.overloading":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":88,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":273,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":288,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":424,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":97,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":144,"org.easymock.tests.MockClassControlTest.testEquals":138,"org.easymock.tests2.EasyMockSupportClassTest.testAll":58,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":259,"org.easymock.tests2.CaptureTest.testCaptureAll":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":367,"org.easymock.tests.MockNameTest.defaultName":174,"org.easymock.tests2.UsageConstraintsTest.testMatches":425,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":316,"org.easymock.samples.ExampleTest.voteForRemovals":350,"org.easymock.tests.UsageVarargTest.allKinds":152,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":327,"org.easymock.samples.BasicClassMockTest.testPrintContent":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":298,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":75,"org.easymock.tests2.UsageConstraintsTest.greaterThan":82,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":209,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":36,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":306,"org.easymock.samples.ExampleTest.voteForRemoval":347,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":459,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":358,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":187,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":31,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":463,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":12,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":371,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":70,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":398,"org.easymock.tests2.CaptureTest.testCaptureFirst":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":372,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":475,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":269,"org.easymock.tests2.UsageTest.moreThanOneArgument":465,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":461,"org.easymock.tests2.CaptureTest.testCapture2_2446744":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":131,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":52,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":151,"org.easymock.tests.GenericTest.testBridgedEquals":207,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":196,"org.easymock.tests.UsageExpectAndReturnTest.longType":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":283,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":369,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":260,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":429,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":282,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":313,"org.easymock.tests.UsageCallCountTest.tooManyCalls":197,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":497,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":247,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":297,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":38,"org.easymock.tests.MockingTest.testNiceClassMocking":312,"org.easymock.tests.MockingTest.testClassMocking":308,"org.easymock.tests2.UsageConstraintsTest.testContains":423,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":190,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":44,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":56,"org.easymock.tests2.UsageConstraintsTest.testFind":419,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":290,"org.easymock.tests.MockTypeTest.fromEasyMockClass":185,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":161,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":129,"org.easymock.tests.UsageExpectAndReturnTest.object":272,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":377,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":146,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":171,"org.easymock.tests.UsageTest.exactCallCountByLastCall":326,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":217,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":180,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":158,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":391,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":278,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":405,"org.easymock.tests.MockClassControlTest.testHashCode":137,"org.easymock.tests2.EasyMockSupportTest.testVerify":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":447,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":130,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":365,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":416,"org.easymock.tests.UsageVarargTest.varargCharAccepted":145,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":300,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":231,"org.easymock.tests2.UsageTest.openCallCountByLastCall":469,"org.easymock.tests.DefaultClassInstantiatorTest.object":301,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":203,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":448,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":490,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":404,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":248,"org.easymock.tests.CapturesMatcherTest.test":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":67,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":61,"org.easymock.tests2.UsageTest.resumeIfFailure":474,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":10,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":73,"org.easymock.tests2.StubTest.stubWithReturnValue":432,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":388,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":271,"org.easymock.tests2.SerializationTest.testAllMockedMethod":63,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":225,"org.easymock.samples.SupportTest.voteForRemovals":345,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":254,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":106,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":230,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":105,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":160,"org.easymock.tests.UsageExpectAndThrowTest.object":252,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":102,"org.easymock.tests2.DelegateToTest.testWrongClass":401,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":334,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":335,"org.easymock.tests.UsageStrictMockTest.range":0,"org.easymock.samples.ConstructorCalledMockTest.testTax":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":481,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":376,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":253,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":436,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":241,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":176,"org.easymock.tests2.CaptureTest.testCaptureNone":434,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":333,"org.easymock.tests.UsageUnorderedTest.message":132,"org.easymock.tests.UsageVerifyTest.twoReturns":112,"org.easymock.tests.UsageVarargTest.varargByteAccepted":150,"org.easymock.tests2.ThreadingTest.testThreadSafe":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":450,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":194,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":172,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":24,"org.easymock.tests2.CaptureTest.testCapture_2617107":91,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":228,"org.easymock.tests2.UsageConstraintsTest.any":421,"org.easymock.tests2.StubTest.stub":431,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":229,"org.easymock.tests.UsageExpectAndThrowTest.longType":245,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":304,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":237,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":363,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":409,"org.easymock.tests2.SerializationTest.testClass":62,"org.easymock.tests.LimitationsTest.mockNativeMethod":16,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":15,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":281,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":489,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":364,"org.easymock.tests2.NameTest.nameForMocksControl":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":491,"org.easymock.tests2.MockedExceptionTest.testMockedException":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":440,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":323,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":457,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":246,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":50,"org.easymock.tests.MockingTest.testNicePartialClassMocking":19,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":30,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":487,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":329,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":108,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":428,"org.easymock.tests.MockingTest.testTwoMocks":17,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":384,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":250,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":472,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":430,"org.easymock.samples.ExampleTest.removeNonExistingDocument":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":494,"org.easymock.tests.UsageStrictMockTest.differentMethods":1,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":235,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":406,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":302,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":460,"org.easymock.tests2.MockBuilderTest.testCreateMockString":54,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":441,"org.easymock.tests.UsageExpectAndThrowTest.floatType":244,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":125,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":392,"org.easymock.tests.UsageVerifyTest.twoThrows":111,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":60,"org.easymock.samples.ExampleTest.voteAgainstRemoval":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":221,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":331,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":35,"org.easymock.tests.LimitationsTest.privateConstructor":292,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":299,"org.easymock.tests2.UsageTest.defaultResetToNice":471,"org.easymock.samples.ExampleTest.voteAgainstRemovals":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":222,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":277,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":488,"org.easymock.tests.UsageVarargTest.differentLength":147,"org.easymock.tests2.CallbackTest.callback":127,"org.easymock.tests2.UsageConstraintsTest.equals":418,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":356,"org.easymock.tests.UsageTest.openCallCountByLastCall":322,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":200,"org.easymock.tests.UsageCallCountTest.tooFewCalls":192,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":178,"org.easymock.tests.UsageThrowableTest.throwCheckedException":296,"org.easymock.tests.MockingTest.testStrictClassMocking":307,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":41,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":493,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":39,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":383,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":126,"org.easymock.tests.ObjectMethodsTest.testHashCode":170,"org.easymock.tests2.CompareToTest.testGreateOrEqual":86,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":462,"org.easymock.tests2.NameTest.nameForNiceMock":396,"org.easymock.tests2.DependencyTest.testInterfaceMocking":485,"org.easymock.samples.ExampleTest.addDocument":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.DelegateToTest.testStubDelegate":400,"org.easymock.tests2.AnswerTest.stubAnswer":353,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":164,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":389,"org.easymock.tests.UsageVarargTest.varargLongAccepted":149,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":219,"org.easymock.tests.UsageExpectAndReturnTest.floatType":264,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":280,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":55,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":23,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":427,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests.UsageThrowableTest.noUpperLimit":294,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":417,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":476,"org.easymock.tests2.SerializationTest.test":107,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":94,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":115,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":84,"org.easymock.tests2.UsageConstraintsTest.testSame":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":263,"org.easymock.samples.SupportTest.addDocument":344,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":382,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":442,"org.easymock.tests.GenericTest.testPackageScope":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":310,"org.easymock.tests2.NameTest.nameForMock":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":274,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":390,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":357,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":266,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":256,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":211,"org.easymock.tests2.MockedExceptionTest.testRealException":78,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":188,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":120,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":362,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":199,"org.easymock.tests2.NameTest.nameForStrictMock":395,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":128,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":29,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":480,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":119,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":303,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":45,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":408,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":218,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":446,"org.easymock.tests2.CaptureTest.testCaptureRightOne":99,"org.easymock.tests2.UsageConstraintsTest.testOr":118,"org.easymock.tests.UsageRangeTest.combination":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":321,"org.easymock.tests2.MockBuilderTest.testWithConstructor":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":443,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":9,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":275,"org.easymock.tests.UsageVarargTest.varargShortAccepted":148,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":85,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":195,"org.easymock.tests2.UsageConstraintsTest.cmpTo":422,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":215,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":470,"org.easymock.tests2.CaptureTest.testCaptureFromStub":100,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":4,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":46,"org.easymock.tests.UsageTest.unexpectedCallWithArray":320,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":163,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":193,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":276,"org.easymock.tests2.CaptureTest.testCapture":98,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":165,"org.easymock.tests2.UsageConstraintsTest.constraints":81,"org.easymock.samples.ExampleTest.addAndChangeDocument":352,"org.easymock.tests.UsageStrictMockTest.testVerify":167,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":343,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":284,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":155,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":57,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":268,"org.easymock.tests.LimitationsTest.abstractClass":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":156,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":142,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":375}}]
