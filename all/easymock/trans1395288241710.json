[{"position":"org.easymock.internal.matchers.Same:37","failures":[0],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,0,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[503],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[9,65,66,73,76,79,80,81,85,88,121,123,124,127,128,129,132,133,0,134,140,141,142,143,145,146,153,154,160,162,168,170,171,173,174,176,177,181,182,237,242,243,244,245,269,270,302,303,306,307,310,311,361,362,365,367,368,369,370,372,373,374,375,377,378,379,380,402,410,411,414,416,417,418,419,421,422,423,424,426,427,428,429,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[249,253],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[203,204],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[269,504],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[63,134,138,170,176,177,182,267,268,269,300,323,351,352,353,354,355,356,357,358,359,360,386,387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[506,142,149,154],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[507,508,509],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[510],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[46,48,436,437,439],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[497,511,512],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[131],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Invocation:99","failures":[4,5,7,9,14,15,138,192,194,209,242,513],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[11,12,15,16,16,17,17,20,22,40,41,42,43,46,47,99,102,112,118,196,198,205,206,207,209,210,211,212,215,216,217,218,219,221,222,223,224,226,229,230,231,232,234,250,251,252,253,254,259,317,325,331,435,436,437,439,452,453,454,455,456,457,458,459],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[133,137,147,152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[514],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,17,17,18,19,20,21,22,23,515,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,0,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,516,206,207,503,208,209,210,211,517,212,214,215,216,518,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,490,491,492,519,493,494,495,496,497,498,520,499,500,501,502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[61,64,67,73,76,77,79,83,84,129,144,521,522,523,524,297,299,301,304,307,308,309,312,313,525,526,527],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,16,17,17,18,19,20,21,22,29,38,39,40,41,42,43,45,46,47,54,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,99,102,112,118,121,123,124,125,126,127,128,129,130,132,133,0,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,156,157,158,159,160,162,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,202,203,204,205,209,210,211,212,216,217,218,219,220,221,222,223,226,229,231,236,237,238,239,240,241,242,243,244,245,250,251,262,263,264,265,266,267,268,269,270,271,272,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,317,319,320,321,322,323,324,325,333,335,336,338,341,343,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,386,387,388,389,390,392,393,395,396,397,398,399,401,402,403,404,405,406,407,408,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,436,437,439,443,444,445,446,447,448,453,463,464,465,466,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.Range:44","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,515,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,528,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,0,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,516,206,207,503,208,209,210,211,517,212,213,214,215,216,518,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,490,491,492,519,493,494,495,496,497,498,520,499,529,500,501,502],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"name","key":"name"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[2,4,5,7,14,15,16,16,17,17,22,40,41,42,43,45,46,47,99,102,112,118,125,165,203,206,209,211,212,216,218,220,221,223,267,268,317,357,358,360,361,362,363,364,365,369,370,376,377,378,379,380,436,437,439,463,464,466],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":130,"org.easymock.tests2.UsageTest.argumentsOrdered":84,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":306,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":283,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":79,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":1,"org.easymock.tests2.DelegateToTest.testReturnException":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":320,"org.easymock.tests.MockingTest.testPartialClassMocking":436,"org.easymock.tests.MockClassControlTest.testToString":454,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":155,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":410,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":102,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":39,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":136,"org.easymock.tests2.UsageTest.wrongArguments":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":351,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":240,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":259,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":441,"org.easymock.tests2.UsageConstraintsTest.testNull":133,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":221,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":192,"org.easymock.tests2.CaptureTest.testPrimitive":172,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":355,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":429,"org.easymock.tests.UsageTest.moreThanOneArgument":307,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":465,"org.easymock.tests.UsageTest.argumentsOrdered":313,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":381,"org.easymock.tests.UsageVarargTest.varargIntAccepted":390,"org.easymock.tests.InvocationTest.testEquals":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":356,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":92,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":360,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":473,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":29,"org.easymock.tests.ReplayStateInvalidUsageTest.times":340,"org.easymock.tests2.DependencyTest.testClassMocking":36,"org.easymock.tests2.AnswerTest.answer":199,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":72,"org.easymock.tests2.CaptureTest.testAnd":169,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":256,"org.easymock.tests2.UsageTest.strictResetToDefault":75,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":503,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":244,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":385,"org.easymock.tests2.DelegateToTest.testDelegate":168,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":472,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":425,"org.easymock.tests.LimitationsTest.mockFinalMethod":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":266,"org.easymock.tests2.DependencyTest.testClassMockingSupport":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":500,"org.easymock.tests2.CaptureTest.testCapture1_2446744":173,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":423,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":70,"org.easymock.tests.UsageThrowableTest.throwError":401,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":334,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":258,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":529,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":120,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":476,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.MockingTest.testInterfaceMocking":438,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":357,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":431,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":107,"org.easymock.tests2.UsageTest.niceToStrict":78,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":331,"org.easymock.tests2.ThreadingTest.testChangeDefault":122,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":209,"org.easymock.tests2.MockBuilderTest.testCreateMock":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":32,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":521,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":419,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":255,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":443,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":238,"org.easymock.tests.UsageOverloadedMethodTest.overloading":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":142,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":347,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":372,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":511,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":141,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":178,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":391,"org.easymock.tests.MockClassControlTest.testEquals":458,"org.easymock.tests2.EasyMockSupportClassTest.testAll":99,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":251,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":522,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":427,"org.easymock.tests2.CaptureTest.testCaptureAll":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":264,"org.easymock.tests.MockNameTest.defaultName":400,"org.easymock.tests2.UsageConstraintsTest.testMatches":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":466,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":332,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":399,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":270,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":265,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":407,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":61,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":324,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":520,"org.easymock.tests2.UsageConstraintsTest.greaterThan":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":243,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":232,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":477,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":499,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":123,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":233,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":260,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":528,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":224,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":469,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":325,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":185,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":319,"org.easymock.tests2.CaptureTest.testCaptureFirst":182,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":186,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":86,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":368,"org.easymock.tests2.CaptureTest.testCapture2_2446744":181,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":125,"org.easymock.tests2.UsageTest.moreThanOneArgument":76,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":291,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":398,"org.easymock.tests.GenericTest.testBridgedEquals":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":450,"org.easymock.tests.UsageExpectAndReturnTest.longType":364,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":428,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":409,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":426,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":491,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":463,"org.easymock.tests.UsageCallCountTest.tooManyCalls":451,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":415,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":406,"org.easymock.tests.MockingTest.testNiceClassMocking":442,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":41,"org.easymock.tests.MockingTest.testClassMocking":434,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":444,"org.easymock.tests2.UsageConstraintsTest.testContains":140,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":20,"org.easymock.tests2.UsageConstraintsTest.testFind":132,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":237,"org.easymock.tests.MockTypeTest.fromEasyMockClass":257,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":162,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndReturnTest.object":371,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":191,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":393,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":329,"org.easymock.tests.UsageTest.exactCallCountByLastCall":314,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":382,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":527,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":23,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":388,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":377,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":346,"org.easymock.tests.MockClassControlTest.testHashCode":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":50,"org.easymock.tests2.EasyMockSupportTest.testVerify":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":109,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":383,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":69,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":68,"org.easymock.tests.UsageVarargTest.varargCharAccepted":392,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":519,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":296,"org.easymock.tests2.UsageTest.openCallCountByLastCall":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":507,"org.easymock.tests.DefaultClassInstantiatorTest.object":493,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":194,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":246,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":27,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":49,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":475,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":456,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":230,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":416,"org.easymock.tests.CapturesMatcherTest.test":505,"org.easymock.tests.ReplayStateInvalidCallsTest.times":481,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":378,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":490,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":482,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":118,"org.easymock.tests2.UsageTest.resumeIfFailure":85,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":254,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":322,"org.easymock.tests2.StubTest.stubWithReturnValue":89,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":517,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":151,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":370,"org.easymock.tests2.SerializationTest.testAllMockedMethod":198,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":289,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":523,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":422,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":295,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":200,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":462,"org.easymock.tests.UsageExpectAndThrowTest.object":420,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":148,"org.easymock.tests2.DelegateToTest.testWrongClass":166,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":479,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":267,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":268,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests.UsageStrictMockTest.range":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":94,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":190,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":421,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":96,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":312,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":239,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":525,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":471,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":432,"org.easymock.tests2.CaptureTest.testCaptureNone":177,"org.easymock.tests.UsageUnorderedTest.message":269,"org.easymock.tests.UsageVerifyTest.twoReturns":272,"org.easymock.tests.UsageVarargTest.varargByteAccepted":397,"org.easymock.tests2.ThreadingTest.testThreadSafe":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":113,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":448,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":330,"org.easymock.tests2.CaptureTest.testCapture_2617107":171,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":524,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":354,"org.easymock.tests2.UsageConstraintsTest.any":138,"org.easymock.tests2.StubTest.stub":88,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":492,"org.easymock.tests.UsageExpectAndThrowTest.longType":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":321,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":497,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":338,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":64,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":54,"org.easymock.tests2.SerializationTest.testClass":196,"org.easymock.tests.LimitationsTest.mockNativeMethod":317,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":380,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":26,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":487,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":67,"org.easymock.tests2.NameTest.nameForMocksControl":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":28,"org.easymock.tests2.MockedExceptionTest.testMockedException":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":101,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":311,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":439,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":414,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":161,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":218,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":212,"org.easymock.tests.MockingTest.testNicePartialClassMocking":437,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":223,"org.easymock.tests2.CaptureTest.testCaptureLast":176,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":501,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":486,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":135,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":149,"org.easymock.tests.MockingTest.testTwoMocks":435,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":483,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":418,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":83,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":153,"org.easymock.samples.ExampleTest.removeNonExistingDocument":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":31,"org.easymock.tests.UsageStrictMockTest.differentMethods":303,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":51,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":495,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":87,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":124,"org.easymock.tests2.MockBuilderTest.testCreateMockString":217,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":452,"org.easymock.tests.UsageExpectAndThrowTest.floatType":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":103,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":515,"org.easymock.tests.UsageVerifyTest.twoThrows":271,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":112,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":284,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":231,"org.easymock.tests.LimitationsTest.privateConstructor":316,"org.easymock.tests2.UsageConstraintsTest.testNotNull":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":408,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":18,"org.easymock.tests2.UsageTest.defaultResetToNice":82,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":285,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":376,"org.easymock.tests.UsageVarargTest.differentLength":394,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":25,"org.easymock.tests2.CallbackTest.callback":73,"org.easymock.tests2.UsageConstraintsTest.equals":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":227,"org.easymock.tests.UsageTest.openCallCountByLastCall":310,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":510,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":353,"org.easymock.tests.UsageCallCountTest.tooFewCalls":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":241,"org.easymock.tests.UsageThrowableTest.throwCheckedException":405,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":526,"org.easymock.tests.MockingTest.testStrictClassMocking":433,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":387,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":30,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":45,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":204,"org.easymock.tests.ObjectMethodsTest.testHashCode":328,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":485,"org.easymock.tests2.NameTest.nameForNiceMock":158,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":126,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":480,"org.easymock.tests2.DependencyTest.testInterfaceMocking":38,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":114,"org.easymock.tests2.DelegateToTest.testStubDelegate":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":119,"org.easymock.tests2.AnswerTest.stubAnswer":203,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":300,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":213,"org.easymock.tests.UsageVarargTest.varargLongAccepted":396,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":282,"org.easymock.tests.UsageExpectAndReturnTest.floatType":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":379,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.UsageThrowableTest.noUpperLimit":402,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":58,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":128,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":90,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":174,"org.easymock.tests2.SerializationTest.test":197,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":512,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":494,"org.easymock.tests2.UsageConstraintsTest.testSame":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":362,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":44,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":470,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":104,"org.easymock.tests.GenericTest.testPackageScope":250,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":277,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":57,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":440,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":468,"org.easymock.tests2.NameTest.nameForMock":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":373,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":518,"org.easymock.tests2.UsageStrictMockTest.differentMethods":66,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":424,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":326,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":245,"org.easymock.tests2.MockedExceptionTest.testRealException":21,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":261,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":286,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":343,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":352,"org.easymock.tests2.NameTest.nameForStrictMock":157,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":208,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":508,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":160,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":222,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":93,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":504,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":496,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":147,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":206,"org.easymock.tests2.UsageStrictMockTest.range":65,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":474,"org.easymock.tests2.UsageConstraintsTest.lessThan":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":53,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":281,"org.easymock.tests2.CaptureTest.testCaptureRightOne":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":108,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":514,"org.easymock.tests2.UsageConstraintsTest.testOr":134,"org.easymock.tests.UsageRangeTest.combination":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":219,"org.easymock.tests.UsageTest.wrongArguments":309,"org.easymock.tests2.MockBuilderTest.testWithConstructor":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":105,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":374,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":498,"org.easymock.tests.UsageVarargTest.varargShortAccepted":395,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":449,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":488,"org.easymock.tests2.UsageConstraintsTest.cmpTo":139,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":201,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":478,"org.easymock.tests2.CompareToTest.testLessThan":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":276,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":81,"org.easymock.tests2.CaptureTest.testCaptureFromStub":180,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":333,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":207,"org.easymock.tests.UsageTest.unexpectedCallWithArray":308,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":484,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":447,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":375,"org.easymock.tests2.UsageConstraintsTest.constraints":129,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageStrictMockTest.testVerify":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":10,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":263,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":358,"org.easymock.tests.LimitationsTest.abstractClass":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":367,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":359,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":189}}]
