[{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[47,4,5,6,48,49,18,19,20,21,22,23,24,31,32,33,34,35,36,50,51,52,53,41,54,42,43,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[66,67],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[68,69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[4,5,6,72,73,74,75,18,19,20,21,76,77,78,22,23,24,33,34,35,36,41,42,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[79],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[80,23,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[110,111,112,113,114,115,116,117,118,119,120,121,47,122,123,124,4,5,6,57,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,48,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,80,172,173,174,175,176,177,178,179,180,181,182,183,184,0,185,186,71,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,55,18,206,207,208,209,210,211,212,213,214,215,22,23,24,216,217,218,219,220,81,221,82,83,84,85,86,34,35,36,87,1,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,88,39,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,42,263,264,265],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[56,57,58,62,65,266],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[267,110,111,112,113,114,268,115,269,270,271,271,272,272,273,116,274,275,276,117,118,119,120,121,47,122,123,124,277,278,4,279,5,6,280,57,125,281,126,127,128,129,130,131,132,133,134,135,136,137,138,282,283,139,140,141,142,284,143,144,145,146,147,148,149,150,285,151,286,152,153,154,287,288,289,290,155,291,48,292,293,294,295,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,296,297,80,172,173,174,175,176,177,178,179,180,181,182,183,184,0,185,186,71,187,188,189,190,191,192,193,194,195,196,72,73,74,75,197,298,198,199,299,200,201,300,202,203,301,204,302,205,55,18,19,206,303,207,208,209,20,21,210,211,212,213,214,215,304,305,306,307,22,23,24,216,217,218,219,220,81,308,221,82,83,84,85,86,309,310,33,34,311,35,36,312,313,314,50,68,315,316,317,318,319,87,320,321,322,323,324,325,326,327,328,329,1,330,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,331,332,333,334,335,336,337,338,339,340,341,342,242,243,88,39,40,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,41,244,245,246,343,344,345,346,347,247,248,348,109,249,250,251,252,349,350,351,352,353,354,355,356,357,358,359,253,254,360,361,362,363,364,255,256,257,69,365,366,367,368,70,369,370,371,258,259,260,261,262,42,43,44,263,264,45,46,265],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:32","sourceCode":"-4859402739599754147L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[372],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[271,272,124,56,373,57,129,133,374,375,376,377,378,379,380,381,382,383,384,65,385,386,387,388,389,212,390,391,213,392,393,394,395,396,397,398,399,400,214,401,402,403,404,405,215,406,407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[289,290,155,291,80,205,208,23,81,221,82,83,84,85,86,316,317,318,319,87,320,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,246,348,109,252,262,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[408,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":175,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":262,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":170,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":303,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":273,"org.easymock.tests2.DelegateToTest.testReturnException":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":317,"org.easymock.tests.MockingTest.testPartialClassMocking":255,"org.easymock.tests.MockClassControlTest.testToString":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":89,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":213,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":76,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":123,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":59,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":181,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":306,"org.easymock.samples.ExampleTest.answerVsDelegate":112,"org.easymock.tests2.UsageConstraintsTest.testNull":177,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":148,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":169,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":370,"org.easymock.tests2.CaptureTest.testPrimitive":137,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":108,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":362,"org.easymock.tests.UsageTest.argumentsOrdered":46,"org.easymock.tests.UsageVarargTest.varargIntAccepted":351,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":299,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":220,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":11,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":47,"org.easymock.tests.ReplayStateInvalidUsageTest.times":339,"org.easymock.tests2.AnswerTest.answer":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":295,"org.easymock.tests2.CaptureTest.testAnd":134,"org.easymock.tests2.UsageTest.strictResetToDefault":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":260,"org.easymock.tests2.DelegateToTest.testDelegate":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":347,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":31,"org.easymock.tests2.CaptureTest.testCapture1_2446744":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":293,"org.easymock.tests.UsageThrowableTest.throwError":81,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":407,"org.easymock.samples.PartialClassMockTest.testGetArea":116,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":396,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":90,"org.easymock.tests2.UsageTest.niceToStrict":206,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":382,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":201,"org.easymock.tests2.MockBuilderTest.testCreateMock":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":403,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":98,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":8,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":304,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":379,"org.easymock.tests.UsageOverloadedMethodTest.overloading":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":185,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":233,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":250,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":141,"org.easymock.tests2.EasyMockSupportClassTest.testAll":212,"org.easymock.tests.MockClassControlTest.testEquals":369,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":106,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":13,"org.easymock.tests2.CaptureTest.testCaptureAll":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":345,"org.easymock.tests.MockNameTest.defaultName":54,"org.easymock.tests2.UsageConstraintsTest.testMatches":186,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":363,"org.easymock.samples.ExampleTest.voteForRemovals":115,"org.easymock.tests.UsageVarargTest.allKinds":359,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":22,"org.easymock.samples.BasicClassMockTest.testPrintContent":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":346,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":85,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":320,"org.easymock.tests2.UsageConstraintsTest.greaterThan":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":154,"org.easymock.samples.ExampleTest.voteForRemoval":113,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":285,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":371,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":162,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":316,"org.easymock.tests2.CaptureTest.testCaptureFirst":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":163,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":229,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":120,"org.easymock.tests2.UsageTest.moreThanOneArgument":18,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":204,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":358,"org.easymock.tests.GenericTest.testBridgedEquals":3,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":377,"org.easymock.tests.UsageExpectAndReturnTest.longType":225,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":343,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":107,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":329,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":26,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":84,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":128,"org.easymock.tests2.UsageConstraintsTest.testContains":184,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":322,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":155,"org.easymock.tests2.UsageConstraintsTest.testFind":176,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":252,"org.easymock.tests.MockTypeTest.fromEasyMockClass":52,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":288,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests.UsageExpectAndReturnTest.object":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":60,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":353,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":315,"org.easymock.tests.UsageTest.exactCallCountByLastCall":265,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":381,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":29,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":238,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":349,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":243,"org.easymock.tests.MockClassControlTest.testHashCode":70,"org.easymock.tests2.EasyMockSupportTest.testVerify":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":398,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":10,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":292,"org.easymock.tests.UsageVarargTest.varargCharAccepted":352,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":278,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":171,"org.easymock.tests.DefaultClassInstantiatorTest.object":314,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":50,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":399,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":96,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":152,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":368,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":239,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":215,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":367,"org.easymock.tests2.UsageTest.resumeIfFailure":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":319,"org.easymock.tests2.StubTest.stubWithReturnValue":80,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":193,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":231,"org.easymock.tests2.SerializationTest.testAllMockedMethod":281,"org.easymock.samples.SupportTest.voteForRemovals":110,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":15,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":101,"org.easymock.tests.UsageExpectAndThrowTest.object":99,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":190,"org.easymock.tests2.DelegateToTest.testWrongClass":158,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":253,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":254,"org.easymock.tests.UsageStrictMockTest.range":35,"org.easymock.samples.ConstructorCalledMockTest.testTax":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":49,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":167,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":127,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":387,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":305,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":25,"org.easymock.tests2.CaptureTest.testCaptureNone":140,"org.easymock.tests.UsageUnorderedTest.message":41,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":357,"org.easymock.tests2.ThreadingTest.testThreadSafe":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":401,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":326,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":51,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":136,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":109,"org.easymock.tests2.UsageConstraintsTest.any":182,"org.easymock.tests2.StubTest.stub":297,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":338,"org.easymock.tests.UsageExpectAndThrowTest.longType":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":318,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":337,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":279,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests2.SerializationTest.testClass":57,"org.easymock.tests.LimitationsTest.mockNativeMethod":244,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":2,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":241,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":280,"org.easymock.tests2.NameTest.nameForMocksControl":75,"org.easymock.tests2.MockedExceptionTest.testMockedException":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":391,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":264,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":93,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":257,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":203,"org.easymock.tests.MockingTest.testNicePartialClassMocking":256,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":150,"org.easymock.tests2.CaptureTest.testCaptureLast":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":32,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":133,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":191,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":97,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":195,"org.easymock.samples.ExampleTest.removeNonExistingDocument":269,"org.easymock.tests.UsageStrictMockTest.differentMethods":36,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":335,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":67,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":119,"org.easymock.tests2.ConstraintsToStringTest.andToString":14,"org.easymock.tests2.MockBuilderTest.testCreateMockString":302,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":392,"org.easymock.tests.UsageExpectAndThrowTest.floatType":91,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":298,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":214,"org.easymock.samples.ExampleTest.voteAgainstRemoval":114,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":153,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":376,"org.easymock.tests2.UsageConstraintsTest.testNotNull":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":86,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":289,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":237,"org.easymock.tests.UsageVarargTest.differentLength":354,"org.easymock.tests2.CallbackTest.callback":126,"org.easymock.tests.UsageTest.openCallCountByLastCall":263,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":348,"org.easymock.tests.UsageCallCountTest.tooFewCalls":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":307,"org.easymock.tests.UsageThrowableTest.throwCheckedException":83,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":27,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":132,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":246,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":129,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":340,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":131,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":199,"org.easymock.tests.ObjectMethodsTest.testHashCode":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":62,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":121,"org.easymock.tests2.NameTest.nameForNiceMock":74,"org.easymock.tests2.DependencyTest.testInterfaceMocking":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":61,"org.easymock.samples.ExampleTest.addDocument":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":406,"org.easymock.tests2.DelegateToTest.testStubDelegate":157,"org.easymock.tests2.AnswerTest.stubAnswer":198,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests.UsageVarargTest.varargLongAccepted":356,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":312,"org.easymock.tests.UsageExpectAndReturnTest.floatType":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":124,"org.easymock.tests2.ConstraintsToStringTest.orToString":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":272,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":188,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests.UsageThrowableTest.noUpperLimit":308,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":173,"org.easymock.tests2.SerializationTest.test":125,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":282,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":79,"org.easymock.tests2.UsageConstraintsTest.testSame":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":223,"org.easymock.samples.SupportTest.addDocument":267,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":393,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests2.NameTest.nameForMock":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":234,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":386,"org.easymock.tests2.UsageStrictMockTest.differentMethods":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":226,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":261,"org.easymock.tests2.MockedExceptionTest.testRealException":291,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":53,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":266,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":248,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":342,"org.easymock.tests2.NameTest.nameForStrictMock":73,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":373,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":149,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":189,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":200,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.UsageConstraintsTest.lessThan":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":397,"org.easymock.tests2.CaptureTest.testCaptureRightOne":142,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":66,"org.easymock.tests2.UsageConstraintsTest.testOr":179,"org.easymock.tests.UsageRangeTest.combination":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":146,"org.easymock.tests.UsageTest.wrongArguments":44,"org.easymock.tests2.MockBuilderTest.testWithConstructor":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":394,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":365,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":235,"org.easymock.tests.UsageVarargTest.varargShortAccepted":355,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":327,"org.easymock.tests2.UsageConstraintsTest.cmpTo":183,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.CaptureTest.testCaptureFromStub":284,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":332,"org.easymock.tests.UsageTest.unexpectedCallWithArray":43,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":325,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":236,"org.easymock.tests2.UsageConstraintsTest.constraints":174,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":311,"org.easymock.samples.ExampleTest.addAndChangeDocument":270,"org.easymock.tests2.ConstraintsToStringTest.notToString":9,"org.easymock.tests.UsageStrictMockTest.testVerify":313,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":276,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":344,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":228,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":166,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":78,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":350}}]
