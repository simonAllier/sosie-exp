[{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.LastControl:85","failures":[17,18,19,20],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[21,22,22,23,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,3,5,56,57,6,7,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,8,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,9,10,222,223,224,225,226,11,12,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,17,276,277,278,279,18,280,281,282,283,284,285,286,287,288,19,289,290,291,292,20,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,3,4,5,56,57,6,7,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,8,84,85,86,87,88,94,95,96,97,98,99,100,331,332,333,334,101,102,103,335,105,106,107,108,109,110,111,112,113,114,115,116,336,337,338,339,340,121,122,123,124,341,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,342,342,153,154,155,156,181,182,183,184,185,186,187,188,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,9,10,222,223,224,225,226,11,12,227,228,229,230,231,232,233,234,235,236,241,244,245,246,343,344,345,346,247,248,249,250,251,252,253,347,254,255,348,256,257,349,258,350,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,17,276,277,278,279,280,281,282,283,284,285,286,287,288,19,289,290,291,292,20,293,294,295,296,297,298,299,300,351,301,352,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,326,327,328,329,330],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[353,53,54,86,233],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[0,1,51,4,5,56,57,6,7,58,354,355,356,8,84,13,15,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[53,55,57,99,103,110,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,181,183,184,185,186,187,188,203,220,225],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:35","sourceCode":"final java.lang.Object java.lang.Object = org.easymock.internal.matchers.Equals.getExpected()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[21,24,25,27,28,29,30,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,3,5,56,57,6,7,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,8,84,85,86,87,88,89,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,121,122,123,124,125,126,127,128,357,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,358,359,360,361,362,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,214,215,216,217,218,219,220,221,9,10,222,223,224,225,11,12,227,228,229,230,231,232,233,234,235,241,244,245,246,248,249,250,259,262,263,266,267,268,269,270,271,272,273,274,275,17,276,277,278,279,280,281,282,283,284,285,286,287,288,19,289,290,291,292,20,293,294,295,296,297,298,299,300,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,326,327,328,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[28,29,30,31,32,33,363,34,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,3,4,5,56,57,6,7,58,355,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,8,84,85,86,87,88,89,94,95,96,97,98,99,100,364,365,366,367,368,369,370,371,372,373,374,375,331,332,333,334,101,376,102,103,104,335,105,106,107,108,109,110,111,112,113,114,115,116,336,337,338,339,340,120,377,121,122,123,124,341,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,358,378,379,380,381,382,359,360,383,384,385,362,181,182,183,184,185,186,187,188,191,192,193,194,195,196,197,198,199,200,201,202,203,217,219,220,221,9,10,222,223,224,225,226,11,12,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,244,245,246,343,344,345,346,247,248,249,347,254,255,348,349,258,350,260,261,264,265,266,267,268,269,270,271,272,273,274,275,17,276,277,278,279,280,281,282,283,284,285,286,287,288,19,289,290,291,292,20,293,294,295,296,297,298,299,300,351,301,352,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,323,324,326,327,328,329,330],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[22,22,26,29,31,363,35,41,45,50,53,55,4,57,7,354,60,63,67,69,71,74,77,79,81,8,85,87,95,98,100,332,334,376,386,105,107,109,111,113,115,336,338,340,122,124,125,127,129,132,134,138,140,142,145,148,150,152,155,358,182,184,186,188,192,194,196,199,201,203,205,207,209,211,213,215,216,220,9,222,223,224,226,12,228,231,233,235,237,242,245,343,345,249,251,253,254,348,257,258,260,262,264],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[99,202],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[90],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[95,98,106,107,108,109,110,111,117,118,119,164,203,327,328,329,330],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[26,387,388,129,247,347,389,254,390,255,348,256,257,349,258,391,350,351,392],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[94,280],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (this.int)) + \" and \") + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[53,54,3,5,6,7,8,84,87,156,9,10,11,12,231,234,237,238,239,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum","maximum":"minimum"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[393,394,395,396,397,398,261,265,399,400,401,402],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[403,404],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[405],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.EasyMock.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[406,407],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"methodArgs":"methodArgs","this":"this","methodTypes":"methodTypes","i":"i"}},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[313,315,408],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[393,396,409,410,411,412,413],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[414,415,353,52,53,54,3,5,6,7,8,84,86,87,156,9,10,11,12,231,233,234,237,238,239,240],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[25,26,28,29,30,31,33,52,53,54,55,3,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,86,87,94,95,96,97,100,364,101,102,103,104,110,112,113,114,115,116,336,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,181,183,184,185,186,187,188,196,197,198,199,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,9,222,224,225,226,227,228,231,233,234,236,241,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,17,276,277,278,279,280,281,282,283,284,285,286,287,288,19,289,290,291,292,20,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,314,315,316,318,319,320,322,323,324,326,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":274,"org.easymock.tests2.UsageTest.argumentsOrdered":12,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":167,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":223,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testReturnException":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":107,"org.easymock.tests.MockingTest.testPartialClassMocking":59,"org.easymock.tests.MockClassControlTest.testToString":379,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":133,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":251,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":414,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":409,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":96,"org.easymock.tests2.UsageTest.wrongArguments":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":333,"org.easymock.samples.ExampleTest.answerVsDelegate":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":388,"org.easymock.tests2.UsageConstraintsTest.testNull":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":298,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":213,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":360,"org.easymock.tests2.CaptureTest.testPrimitive":309,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":100,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":152,"org.easymock.tests.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":193,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.UsageVarargTest.varargIntAccepted":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":413,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":347,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":116,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":320,"org.easymock.tests.ReplayStateInvalidUsageTest.times":372,"org.easymock.tests2.AnswerTest.answer":241,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":174,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":346,"org.easymock.tests2.CaptureTest.testAnd":306,"org.easymock.tests2.UsageTest.strictResetToDefault":221,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":208,"org.easymock.tests2.DelegateToTest.testDelegate":326,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":354,"org.easymock.tests2.CaptureTest.testCapture1_2446744":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":344,"org.easymock.tests.UsageThrowableTest.throwError":181,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":195,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":400,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":113,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":134,"org.easymock.tests2.UsageTest.niceToStrict":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":157,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":255,"org.easymock.tests2.MockBuilderTest.testCreateMock":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":142,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":13,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":209,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":331,"org.easymock.tests.UsageOverloadedMethodTest.overloading":131,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":103,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":284,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":73,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":283,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":315,"org.easymock.tests2.EasyMockSupportClassTest.testAll":250,"org.easymock.tests.MockClassControlTest.testEquals":359,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":128,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":150,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":14,"org.easymock.tests2.CaptureTest.testCaptureAll":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":345,"org.easymock.tests2.UsageConstraintsTest.testMatches":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":194,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":364,"org.easymock.samples.ExampleTest.voteForRemovals":33,"org.easymock.tests.UsageVarargTest.allKinds":50,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":52,"org.easymock.samples.BasicClassMockTest.testPrintContent":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":339,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":187,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":111,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":325,"org.easymock.tests2.UsageConstraintsTest.greaterThan":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":304,"org.easymock.samples.ExampleTest.voteForRemoval":30,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":351,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":105,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":206,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":106,"org.easymock.tests2.CaptureTest.testCaptureFirst":319,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":163,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":207,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":228,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":69,"org.easymock.tests2.UsageTest.moreThanOneArgument":9,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":269,"org.easymock.tests2.CaptureTest.testCapture2_2446744":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":175,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":258,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":49,"org.easymock.tests.GenericTest.testBridgedEquals":357,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":402,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":125,"org.easymock.tests.UsageExpectAndReturnTest.longType":65,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":336,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":391,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":151,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":51,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":118,"org.easymock.tests.UsageCallCountTest.tooManyCalls":126,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":121,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":260,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":389,"org.easymock.tests2.UsageConstraintsTest.testContains":282,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":377,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":329,"org.easymock.tests2.UsageConstraintsTest.testFind":275,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":132,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":82,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":201,"org.easymock.tests.UsageExpectAndReturnTest.object":72,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":212,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":410,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":44,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":362,"org.easymock.tests.UsageTest.exactCallCountByLastCall":58,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":162,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":189,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":2,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":393,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":40,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":78,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":102,"org.easymock.tests.MockClassControlTest.testHashCode":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":216,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":190,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":343,"org.easymock.tests.UsageVarargTest.varargCharAccepted":43,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":180,"org.easymock.tests2.UsageTest.openCallCountByLastCall":224,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":215,"org.easymock.tests.DefaultClassInstantiatorTest.object":383,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":37,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":140,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":184,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":302,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":381,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":139,"org.easymock.tests.CapturesMatcherTest.test":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":79,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":253,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":380,"org.easymock.tests2.UsageTest.resumeIfFailure":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":109,"org.easymock.tests2.StubTest.stubWithReturnValue":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":71,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":292,"org.easymock.tests2.SerializationTest.testAllMockedMethod":249,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":173,"org.easymock.samples.SupportTest.voteForRemovals":25,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":145,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":179,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":242,"org.easymock.tests.UsageExpectAndThrowTest.object":143,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":289,"org.easymock.tests2.DelegateToTest.testWrongClass":324,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":155,"org.easymock.samples.ConstructorCalledMockTest.testTax":22,"org.easymock.tests.UsageStrictMockTest.range":86,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":256,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":332,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":0,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":92,"org.easymock.tests2.CaptureTest.testCaptureNone":314,"org.easymock.tests.UsageUnorderedTest.message":156,"org.easymock.tests.UsageVerifyTest.twoReturns":54,"org.easymock.tests.UsageVarargTest.varargByteAccepted":48,"org.easymock.tests2.ThreadingTest.testThreadSafe":266,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":124,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":35,"org.easymock.tests2.CaptureTest.testCapture_2617107":308,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":99,"org.easymock.tests2.UsageConstraintsTest.any":280,"org.easymock.tests2.StubTest.stub":202,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":371,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":178,"org.easymock.tests.UsageExpectAndThrowTest.longType":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":108,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":370,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":232,"org.easymock.tests2.SerializationTest.testClass":247,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":305,"org.easymock.tests.LimitationsTest.mockNativeMethod":153,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":81,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests2.NameTest.nameForMocksControl":240,"org.easymock.tests2.MockedExceptionTest.testMockedException":328,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":137,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":61,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":295,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":257,"org.easymock.tests.MockingTest.testNicePartialClassMocking":60,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":300,"org.easymock.tests2.CaptureTest.testCaptureLast":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":355,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":265,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":278,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":290,"org.easymock.tests.MockingTest.testTwoMocks":356,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":141,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":293,"org.easymock.samples.ExampleTest.removeNonExistingDocument":363,"org.easymock.tests.UsageStrictMockTest.differentMethods":87,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":368,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":404,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":268,"org.easymock.tests2.MockBuilderTest.testCreateMockString":350,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.floatType":135,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":286,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":244,"org.easymock.tests.UsageVerifyTest.twoThrows":53,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":252,"org.easymock.samples.ExampleTest.voteAgainstRemoval":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":168,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":90,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":303,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":401,"org.easymock.tests2.UsageConstraintsTest.testNotNull":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":327,"org.easymock.tests2.UsageTest.defaultResetToNice":226,"org.easymock.samples.ExampleTest.voteAgainstRemovals":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":77,"org.easymock.tests.UsageVarargTest.differentLength":45,"org.easymock.tests2.CallbackTest.callback":219,"org.easymock.tests.UsageTest.openCallCountByLastCall":56,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":98,"org.easymock.tests.UsageCallCountTest.tooFewCalls":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":334,"org.easymock.tests.UsageThrowableTest.throwCheckedException":185,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":1,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":95,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":264,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":261,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":263,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests.ObjectMethodsTest.testHashCode":385,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":412,"org.easymock.tests2.NameTest.nameForNiceMock":239,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":270,"org.easymock.tests2.DependencyTest.testInterfaceMocking":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":411,"org.easymock.samples.ExampleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testStubDelegate":323,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":84,"org.easymock.tests.UsageVarargTest.varargLongAccepted":47,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":166,"org.easymock.tests.UsageExpectAndReturnTest.floatType":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":236,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":23,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":386,"org.easymock.tests.UsageThrowableTest.noUpperLimit":182,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":272,"org.easymock.tests2.SerializationTest.test":248,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":311,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":406,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":63,"org.easymock.tests2.UsageConstraintsTest.testSame":276,"org.easymock.samples.SupportTest.addDocument":24,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":369,"org.easymock.tests.GenericTest.testPackageScope":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":161,"org.easymock.tests2.NameTest.nameForMock":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":398,"org.easymock.tests2.UsageStrictMockTest.differentMethods":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":66,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":147,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":199,"org.easymock.tests2.MockedExceptionTest.testRealException":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":171,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":170,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":97,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":375,"org.easymock.tests2.NameTest.nameForStrictMock":238,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":200,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":299,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":415,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":254,"org.easymock.tests2.UsageStrictMockTest.range":233,"org.easymock.tests2.UsageConstraintsTest.lessThan":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":205,"org.easymock.tests2.CaptureTest.testCaptureRightOne":316,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":403,"org.easymock.tests2.UsageConstraintsTest.testOr":277,"org.easymock.tests.UsageRangeTest.combination":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":296,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor":394,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":378,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":75,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":407,"org.easymock.tests.UsageVarargTest.varargShortAccepted":46,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":341,"org.easymock.tests2.UsageConstraintsTest.cmpTo":281,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":160,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":225,"org.easymock.tests2.CaptureTest.testCaptureFromStub":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":365,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":390,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":123,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":397,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":76,"org.easymock.tests2.CaptureTest.testCapture":408,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.UsageConstraintsTest.constraints":273,"org.easymock.samples.ExampleTest.addAndChangeDocument":34,"org.easymock.tests.UsageStrictMockTest.testVerify":89,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":21,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":337,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":312,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":114,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":115,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":104,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":210,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":353}}]
