[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1952","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:107","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2128","sourceCode":"return org.easymock.internal.Invocation.getArguments()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[41,41,42,42,3,43,44,45,46,47,48,4,49,50,51,52,53,54,55,56,57,58,59,60,6,61,62,63,64,65,66,67,68,69,70,71,72,7,9,10,73,11,12,13,14,74,15,16,18,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,19,20,110,111,112,21,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[134,135,136,137,138,139,140,141,142,31,32,143,144,145,146,147,148,149,150],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[151,152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[153,154,155,156,157,158,159,160,161,41,42,162,3,43,44,163,164,165,166,167,168,169,170,171,47,172,173,134,23,24,135,136,4,174,49,25,50,51,52,53,175,54,55,176,177,178,179,180,181,182,183,184,185,186,187,188,189,56,57,190,58,59,60,6,61,64,65,66,67,191,192,70,71,72,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,0,221,222,223,1,224,225,226,227,228,229,230,231,26,232,233,234,235,236,237,238,239,240,241,242,243,244,245,7,9,11,12,13,14,15,16,18,27,246,141,247,248,249,250,251,252,253,254,255,28,81,84,94,100,256,257,258,259,142,31,32,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,144,33,34,145,146,276,277,278,279,280,281,148,149,282,283,284,35,36,111,112,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,37,116,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,121,122,123,362,362,133,38,363,364,39,150,365,366,367,368,369,370,40],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[153,154,155,156,157,158,159,160,371,161,41,41,42,42,162,3,43,44,163,164,165,166,167,168,372,373,374,375,376,169,377,378,379,380,381,382,45,46,170,171,47,48,383,172,173,134,23,24,135,136,4,174,49,25,50,51,52,53,175,54,55,176,177,178,179,180,181,182,183,184,185,186,187,188,189,56,57,190,58,59,60,6,384,61,62,63,64,65,66,67,68,69,191,385,192,70,71,72,193,386,387,388,389,390,194,391,392,393,394,395,396,397,195,196,197,198,398,199,200,201,399,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,0,400,221,222,223,1,224,225,2,226,227,228,229,230,231,26,232,233,234,235,236,237,238,239,240,241,401,137,138,139,140,242,402,403,243,244,245,7,404,9,10,405,73,11,12,13,406,14,74,15,16,407,18,75,77,408,409,27,246,141,247,248,249,250,251,252,253,254,255,28,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,410,411,412,413,256,257,258,259,142,31,32,260,261,262,263,264,414,415,416,417,418,143,265,266,267,268,269,270,271,272,273,274,275,144,33,34,145,146,419,420,421,422,423,103,104,105,106,107,108,424,109,425,426,427,428,429,430,276,277,278,279,280,281,19,431,432,20,433,434,147,435,148,149,282,283,284,35,36,110,111,112,21,113,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,436,437,438,439,440,441,442,443,444,445,446,447,305,448,306,307,449,450,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,37,114,115,116,117,451,452,151,453,454,329,330,455,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,456,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,118,119,120,121,122,457,123,458,459,124,125,126,127,128,129,130,131,132,133,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,152,481,482,483,484,485,38,486,363,364,39,150,365,366,367,368,369,370,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"position":"org.easymock.internal.LastControl:94","failures":[176,177,178,179,186,187,220,0,221,222,223,1,224,225,2,226,234,235,239,240],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[488,230,236,241],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[59,249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[285,286,293,300,356,360],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[226,329],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.UsageTest.argumentsOrdered":254,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":473,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":249,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":162,"org.easymock.tests2.DelegateToTest.testReturnException":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":277,"org.easymock.tests.MockingTest.testPartialClassMocking":121,"org.easymock.tests.MockClassControlTest.testToString":127,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":401,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":481,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":88,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":309,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":225,"org.easymock.tests2.UsageTest.wrongArguments":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":336,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":258,"org.easymock.samples.ExampleTest.answerVsDelegate":156,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":20,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":459,"org.easymock.tests2.UsageConstraintsTest.testNull":222,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":58,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":132,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":212,"org.easymock.tests2.CaptureTest.testPrimitive":179,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":340,"org.easymock.tests.UsageTest.moreThanOneArgument":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":328,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":359,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":451,"org.easymock.tests.UsageTest.argumentsOrdered":370,"org.easymock.tests.UsageVarargTest.varargIntAccepted":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":478,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":260,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":395,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":264,"org.easymock.tests.ReplayStateInvalidUsageTest.times":444,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":169,"org.easymock.tests2.DependencyTest.testClassMocking":45,"org.easymock.tests2.AnswerTest.answer":242,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":480,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":198,"org.easymock.tests2.CaptureTest.testAnd":176,"org.easymock.tests2.UsageTest.strictResetToDefault":246,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":405,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":363,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":454,"org.easymock.tests2.DelegateToTest.testDelegate":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":324,"org.easymock.tests.LimitationsTest.mockFinalMethod":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":335,"org.easymock.tests2.DependencyTest.testClassMockingSupport":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":417,"org.easymock.tests2.CaptureTest.testCapture1_2446744":180,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":196,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":438,"org.easymock.tests.UsageThrowableTest.throwError":265,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":432,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":102,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.MockingTest.testInterfaceMocking":457,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":412,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":89,"org.easymock.tests2.UsageTest.niceToStrict":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":11,"org.easymock.tests2.MockBuilderTest.testCreateMock":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":97,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":318,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":208,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":462,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":256,"org.easymock.tests.UsageOverloadedMethodTest.overloading":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":230,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":296,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":341,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":229,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":185,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":456,"org.easymock.tests.MockClassControlTest.testEquals":131,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":112,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":326,"org.easymock.tests2.CaptureTest.testCaptureAll":177,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":197,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":333,"org.easymock.tests.MockNameTest.defaultName":455,"org.easymock.tests2.UsageConstraintsTest.testMatches":231,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":436,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":360,"org.easymock.samples.ExampleTest.voteForRemovals":160,"org.easymock.tests.UsageVarargTest.allKinds":354,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":142,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":334,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":271,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":172,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":281,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":424,"org.easymock.tests2.UsageConstraintsTest.greaterThan":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":82,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":486,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.samples.ExampleTest.voteForRemoval":157,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":109,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":165,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":68,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":6,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":133,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":205,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":276,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":398,"org.easymock.tests2.CaptureTest.testCaptureFirst":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":206,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":28,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":292,"org.easymock.tests2.CaptureTest.testCapture2_2446744":188,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":167,"org.easymock.tests2.UsageTest.moreThanOneArgument":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":16,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":353,"org.easymock.tests.GenericTest.testBridgedEquals":113,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":35,"org.easymock.tests.UsageExpectAndReturnTest.longType":288,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":331,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":17,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":327,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":410,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":357,"org.easymock.tests.UsageCallCountTest.tooManyCalls":36,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":293,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":314,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":270,"org.easymock.tests.MockingTest.testNiceClassMocking":124,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.MockingTest.testClassMocking":119,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":435,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":8,"org.easymock.tests2.UsageConstraintsTest.testContains":228,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":221,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":343,"org.easymock.tests.MockTypeTest.fromEasyMockClass":431,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":192,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":273,"org.easymock.tests.UsageExpectAndReturnTest.object":295,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":211,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":348,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":428,"org.easymock.tests.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":452,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":414,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":48,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":301,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":306,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":387,"org.easymock.tests.MockClassControlTest.testHashCode":130,"org.easymock.tests2.EasyMockSupportTest.testVerify":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":91,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":461,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":195,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":397,"org.easymock.tests.UsageVarargTest.varargCharAccepted":347,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":423,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":485,"org.easymock.tests2.UsageTest.openCallCountByLastCall":250,"org.easymock.tests.DefaultClassInstantiatorTest.object":103,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":214,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":460,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":386,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":129,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":315,"org.easymock.tests.CapturesMatcherTest.test":362,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":420,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":100,"org.easymock.tests2.UsageTest.resumeIfFailure":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":279,"org.easymock.tests2.StubTest.stubWithReturnValue":217,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":406,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":238,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":294,"org.easymock.tests2.SerializationTest.testAllMockedMethod":49,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":479,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":487,"org.easymock.samples.SupportTest.voteForRemovals":154,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":321,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":484,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":402,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":416,"org.easymock.tests.UsageExpectAndThrowTest.object":319,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":235,"org.easymock.tests2.DelegateToTest.testWrongClass":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":355,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":356,"org.easymock.samples.ConstructorCalledMockTest.testTax":41,"org.easymock.tests.UsageStrictMockTest.range":34,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":408,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":320,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":13,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":78,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":257,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":413,"org.easymock.tests2.CaptureTest.testCaptureNone":184,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests.UsageVerifyTest.twoReturns":32,"org.easymock.tests.UsageVarargTest.varargByteAccepted":352,"org.easymock.tests2.ThreadingTest.testThreadSafe":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":95,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":283,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":429,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests2.CaptureTest.testCapture_2617107":178,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":482,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":339,"org.easymock.tests2.UsageConstraintsTest.any":226,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":443,"org.easymock.tests2.StubTest.stub":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":278,"org.easymock.tests.UsageExpectAndThrowTest.longType":312,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":107,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":442,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":23,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests.LimitationsTest.mockNativeMethod":116,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":304,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":374,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":136,"org.easymock.tests2.NameTest.nameForMocksControl":140,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":83,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":368,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":385,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":313,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":56,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":14,"org.easymock.tests.MockingTest.testNicePartialClassMocking":122,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":60,"org.easymock.tests2.CompareToTest.testNotComparable":22,"org.easymock.tests2.CaptureTest.testCaptureLast":183,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":418,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":224,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":236,"org.easymock.tests.MockingTest.testTwoMocks":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":317,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":253,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":240,"org.easymock.samples.ExampleTest.removeNonExistingDocument":371,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":440,"org.easymock.tests.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":388,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":105,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":166,"org.easymock.tests2.MockBuilderTest.testCreateMockString":18,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":85,"org.easymock.tests.UsageExpectAndThrowTest.floatType":311,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":243,"org.easymock.tests.UsageVerifyTest.twoThrows":31,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":383,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":94,"org.easymock.samples.ExampleTest.voteAgainstRemoval":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":474,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":411,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests.LimitationsTest.privateConstructor":115,"org.easymock.tests2.UsageConstraintsTest.testNotNull":239,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":70,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":272,"org.easymock.tests2.UsageTest.defaultResetToNice":252,"org.easymock.samples.ExampleTest.voteAgainstRemovals":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":300,"org.easymock.tests.UsageVarargTest.differentLength":349,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":373,"org.easymock.tests2.CallbackTest.callback":25,"org.easymock.tests2.UsageConstraintsTest.equals":400,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":62,"org.easymock.tests.UsageTest.openCallCountByLastCall":367,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":338,"org.easymock.tests.UsageCallCountTest.tooFewCalls":149,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":259,"org.easymock.tests.UsageThrowableTest.throwCheckedException":269,"org.easymock.tests.MockingTest.testStrictClassMocking":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":330,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":445,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":175,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":245,"org.easymock.tests.ObjectMethodsTest.testHashCode":427,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":168,"org.easymock.tests2.NameTest.nameForNiceMock":139,"org.easymock.tests2.DependencyTest.testInterfaceMocking":170,"org.easymock.samples.ExampleTest.addDocument":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":101,"org.easymock.tests2.DelegateToTest.testStubDelegate":200,"org.easymock.tests2.AnswerTest.stubAnswer":244,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":144,"org.easymock.tests.UsageVarargTest.varargLongAccepted":351,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.floatType":287,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":303,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":47,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":42,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":394,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":233,"org.easymock.tests.UsageThrowableTest.noUpperLimit":266,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":219,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":75,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":181,"org.easymock.tests2.SerializationTest.test":174,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":104,"org.easymock.tests2.UsageConstraintsTest.testSame":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":286,"org.easymock.samples.SupportTest.addDocument":153,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":86,"org.easymock.tests.GenericTest.testPackageScope":111,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":393,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":458,"org.easymock.tests2.NameTest.nameForMock":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":297,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":407,"org.easymock.tests2.UsageStrictMockTest.differentMethods":135,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":323,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":364,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":476,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":134,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":337,"org.easymock.tests2.NameTest.nameForStrictMock":138,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":73,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":77,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":106,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":29,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":234,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":9,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":204,"org.easymock.tests2.CaptureTest.testCaptureRightOne":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":90,"org.easymock.tests2.UsageConstraintsTest.testOr":1,"org.easymock.tests.UsageRangeTest.combination":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":57,"org.easymock.tests.UsageTest.wrongArguments":366,"org.easymock.tests2.MockBuilderTest.testWithConstructor":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":87,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":298,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":108,"org.easymock.tests.UsageVarargTest.varargShortAccepted":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":284,"org.easymock.tests2.UsageConstraintsTest.cmpTo":227,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":403,"org.easymock.tests2.CompareToTest.testLessThan":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":466,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":251,"org.easymock.tests2.CaptureTest.testCaptureFromStub":187,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":437,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":10,"org.easymock.tests.UsageTest.unexpectedCallWithArray":365,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":299,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":33,"org.easymock.tests2.UsageConstraintsTest.constraints":220,"org.easymock.samples.ExampleTest.addAndChangeDocument":161,"org.easymock.tests.UsageStrictMockTest.testVerify":419,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":163,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":332,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":182,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":262,"org.easymock.tests.LimitationsTest.abstractClass":114,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":291,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":263,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":30,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":209,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":345}}]
