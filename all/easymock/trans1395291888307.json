[{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:73","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int);\n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5,6,7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[37,38,39,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[60],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,11,76,77,78,79,80,81,22,82,83,84,85,86,87,88,89,29],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[42,90,91,92,93,94,95,96,97],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[98,62,63,64,99,100,101,102],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[103,98,104,105,106,107,61,108,109,110,111,41,112,113,62,42,114,115,116,117,118,119,63,64,65,120,121,122,123,124,125,126,9,10,127,128,129,130,131,66,132,133,67,134,135,136,137,138,139,140,141,68,99,100,142,101,143,69,144,145,146,147,148,70,71,149,150,151,72,73,74,152,153,154,155,156,157,75,158,159,11,12,160,161,162,163,164,13,14,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,45,47,49,50,52,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,15,16,17,18,200,201,202,203,204,19,205,20,21,206,207,208,209,210,211,212,213,76,214,215,216,217,218,77,219,220,221,222,223,78,224,225,226,79,227,80,228,229,230,231,232,233,234,235,0,1,2,3,4,5,6,7,8,236,237,238,39,239,240,241,242,243,244,22,23,245,246,24,25,247,82,248,249,250,251,252,83,253,254,255,256,257,84,258,259,260,85,261,86,262,263,264,87,26,27,28,265,266,267,268,269,270,271,272,273,102,274,275,276,277,278,279,280,281,29,282,283,30,31,284,32,33,285,286,287,288,289,290,291,292,293,294,295,296],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[133,161,184,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[42,114,115,300],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[122,126,127],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[121,301,302,303,304,158,12,160,161,164,13,14,166,169,171,172,174,175,43,48,49,50,52,54,55,305,199,201,203,205,20,21,306,307,308,309,244,310,23,24,25,247,27,28,311,312,313,314,315,29,282,30,284,32,33],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[305],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[316,317,202,318,210,241,319,320,321,322,287,323],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[325,325,326,326,108,109,41,42,115,116,117,118,119,43,44,45,46,47,48,49,50,51,52,53,54,180,181,183,184,185,55,186,305,187,188,189,190,191,192,193,195,196,327,56,200,202,324,211,212,213,328,233,234,57,39,58,59,273],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[325,326,329,330,331],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[60],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[121,122,126,9,127,135,143,144,150],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[42,114,115,300],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[11,12,13,14,333,334,335,336,337,338,339,340,341,342,343,19,20,21,344,345,346,347,348,349,350,351,352,22,310,23,24,25,26,27,28,353,354,276,355,29,30,31,32,33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[68,356],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[158,163,316,317,202,318,208,210,241,242,244,246,82,248,249,250,251,252,83,253,254,255,256,257,84,258,259,260,85,261,86,262,87,27,265,267,268,269,270,271,272,275,319,320,321,322,287,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":122,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":244,"org.easymock.tests2.UsageTest.argumentsOrdered":14,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":322,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":161,"org.easymock.tests2.StubTest.stubWithReturnValue":208,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":221,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":111,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":139,"org.easymock.tests2.SerializationTest.testAllMockedMethod":115,"org.easymock.tests2.DelegateToTest.testReturnException":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":320,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":89,"org.easymock.tests.MockingTest.testPartialClassMocking":211,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":341,"org.easymock.samples.SupportTest.voteForRemovals":113,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":84,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":82,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":117,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":298,"org.easymock.tests.UsageExpectAndThrowTest.object":256,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":34,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":198,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":92,"org.easymock.tests2.DelegateToTest.testWrongClass":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":237,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":238,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":239,"org.easymock.tests2.UsageTest.wrongArguments":12,"org.easymock.samples.ConstructorCalledMockTest.testTax":325,"org.easymock.tests.UsageStrictMockTest.range":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":308,"org.easymock.samples.ExampleTest.answerVsDelegate":98,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":59,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":190,"org.easymock.tests2.UsageConstraintsTest.testNull":124,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":257,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":176,"org.easymock.tests2.CaptureTest.testPrimitive":145,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":262,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":307,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":182,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":344,"org.easymock.tests2.CaptureTest.testCaptureNone":71,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.UsageVerifyTest.twoReturns":28,"org.easymock.tests.UsageVarargTest.varargByteAccepted":7,"org.easymock.tests2.ThreadingTest.testThreadSafe":73,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageVarargTest.varargIntAccepted":1,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":294,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":108,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":277,"org.easymock.tests2.CaptureTest.testCapture_2617107":144,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":343,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":242,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":48,"org.easymock.tests2.UsageConstraintsTest.any":128,"org.easymock.tests2.StubTest.stub":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":321,"org.easymock.tests.UsageExpectAndThrowTest.longType":250,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":337,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":297,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":205,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":201,"org.easymock.tests2.SerializationTest.testClass":42,"org.easymock.tests.LimitationsTest.mockNativeMethod":273,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":199,"org.easymock.tests.ReplayStateInvalidUsageTest.times":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":228,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":57,"org.easymock.tests2.AnswerTest.answer":99,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":304,"org.easymock.tests2.CaptureTest.testAnd":143,"org.easymock.tests2.UsageTest.strictResetToDefault":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":305,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":206,"org.easymock.tests2.NameTest.nameForMocksControl":18,"org.easymock.tests2.MockedExceptionTest.testMockedException":317,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":171,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":246,"org.easymock.tests2.DelegateToTest.testDelegate":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":251,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":213,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":50,"org.easymock.tests.MockingTest.testNicePartialClassMocking":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":260,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":185,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":37,"org.easymock.tests2.CaptureTest.testCaptureLast":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":352,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":196,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":315,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":137,"org.easymock.tests.MockingTest.testTwoMocks":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":351,"org.easymock.tests2.CaptureTest.testCapture1_2446744":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":254,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":141,"org.easymock.tests.UsageThrowableTest.throwError":265,"org.easymock.tests.UsageStrictMockTest.differentMethods":33,"org.easymock.tests2.ConstraintsToStringTest.andToString":340,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":152,"org.easymock.tests2.MockBuilderTest.testCreateMockString":54,"org.easymock.tests.UsageExpectAndThrowTest.floatType":249,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":133,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":100,"org.easymock.tests.UsageVerifyTest.twoThrows":27,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":118,"org.easymock.samples.PartialClassMockTest.testGetArea":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":278,"org.easymock.samples.ExampleTest.voteAgainstRemoval":105,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":248,"org.easymock.tests2.UsageTest.niceToStrict":160,"org.easymock.tests.LimitationsTest.privateConstructor":40,"org.easymock.tests2.UsageConstraintsTest.testNotNull":140,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":272,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":47,"org.easymock.tests2.MockBuilderTest.testCreateMock":51,"org.easymock.tests2.UsageTest.defaultResetToNice":164,"org.easymock.samples.ExampleTest.voteAgainstRemovals":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":88,"org.easymock.tests.UsageVarargTest.differentLength":4,"org.easymock.tests2.CallbackTest.callback":62,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":347,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":331,"org.easymock.tests.UsageTest.openCallCountByLastCall":245,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":255,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":172,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":65,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":290,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":241,"org.easymock.tests.UsageCallCountTest.tooFewCalls":292,"org.easymock.tests.UsageOverloadedMethodTest.overloading":264,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":275,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":66,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":193,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":131,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":149,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":309,"org.easymock.tests.UsageThrowableTest.throwCheckedException":269,"org.easymock.tests2.EasyMockSupportClassTest.testAll":116,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":234,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":346,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":261,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":303,"org.easymock.tests2.CaptureTest.testCaptureAll":69,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":210,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":195,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":192,"org.easymock.tests2.UsageConstraintsTest.testMatches":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":194,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":101,"org.easymock.samples.ExampleTest.voteForRemovals":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":95,"org.easymock.tests2.NameTest.nameForNiceMock":17,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":154,"org.easymock.tests.UsageVarargTest.allKinds":236,"org.easymock.tests2.DependencyTest.testInterfaceMocking":197,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":26,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":314,"org.easymock.samples.BasicClassMockTest.testPrintContent":109,"org.easymock.samples.ExampleTest.addDocument":106,"org.easymock.tests2.DelegateToTest.testStubDelegate":156,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":271,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":203,"org.easymock.tests2.AnswerTest.stubAnswer":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":323,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":31,"org.easymock.tests2.UsageConstraintsTest.greaterThan":67,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":230,"org.easymock.tests.UsageVarargTest.varargLongAccepted":6,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":189,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":285,"org.easymock.samples.ExampleTest.voteForRemoval":104,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":74,"org.easymock.tests.UsageExpectAndReturnTest.floatType":215,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":55,"org.easymock.tests2.ConstraintsToStringTest.orToString":333,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":326,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests.UsageThrowableTest.noUpperLimit":266,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":134,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":39,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":120,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":158,"org.easymock.tests2.SerializationTest.test":114,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":147,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":169,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":214,"org.easymock.tests2.UsageConstraintsTest.testSame":125,"org.easymock.samples.SupportTest.addDocument":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":319,"org.easymock.tests2.CaptureTest.testCaptureFirst":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":170,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":166,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":219,"org.easymock.tests.GenericTest.testPackageScope":233,"org.easymock.tests2.UsageTest.moreThanOneArgument":11,"org.easymock.tests2.CaptureTest.testCapture2_2446744":151,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":52,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":8,"org.easymock.tests.GenericTest.testBridgedEquals":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":295,"org.easymock.tests2.NameTest.nameForMock":15,"org.easymock.tests.UsageExpectAndReturnTest.longType":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":311,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":78,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":53,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":85,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":217,"org.easymock.tests.UsageCallCountTest.tooManyCalls":296,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":259,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":232,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":291,"org.easymock.tests2.MockedExceptionTest.testRealException":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":220,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":252,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":19,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":270,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":240,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":191,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":38,"org.easymock.tests2.NameTest.nameForStrictMock":16,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":44,"org.easymock.tests2.UsageConstraintsTest.testContains":130,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":202,"org.easymock.tests2.UsageConstraintsTest.testFind":123,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":87,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":63,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":184,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":64,"org.easymock.tests.UsageExpectAndReturnTest.object":222,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":35,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":186,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":45,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests2.UsageConstraintsTest.lessThan":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":93,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":3,"org.easymock.tests.UsageTest.exactCallCountByLastCall":247,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":209,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":168,"org.easymock.tests2.CaptureTest.testCaptureRightOne":150,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":349,"org.easymock.tests2.UsageConstraintsTest.testOr":126,"org.easymock.tests.UsageRangeTest.combination":229,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":97,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":235,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":181,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":274,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests2.MockBuilderTest.testWithConstructor":329,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":218,"org.easymock.tests2.EasyMockSupportTest.testVerify":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":224,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":336,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":289,"org.easymock.tests.UsageVarargTest.varargShortAccepted":5,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":301,"org.easymock.tests2.UsageConstraintsTest.cmpTo":129,"org.easymock.tests.UsageVarargTest.varargCharAccepted":2,"org.easymock.tests2.CompareToTest.testLessThan":356,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":204,"org.easymock.tests2.UsageTest.openCallCountByLastCall":162,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":163,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":178,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":46,"org.easymock.tests.UsageTest.unexpectedCallWithArray":310,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":268,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":293,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":225,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.tests2.UsageConstraintsTest.constraints":121,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":187,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":83,"org.easymock.samples.ExampleTest.addAndChangeDocument":61,"org.easymock.tests2.ConstraintsToStringTest.notToString":335,"org.easymock.tests.UsageStrictMockTest.testVerify":286,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":227,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":110,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":338,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":312,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":148,"org.easymock.tests2.UsageTest.resumeIfFailure":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":279,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":56,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":77,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":280,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":0,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":173}}]
