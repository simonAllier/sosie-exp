[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[57,58,59,60],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[61,62,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[64,46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,58,82,83,84,85,86,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,3,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[121,127,128,129,130,131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[66,81,35,132,36,38,39,40,41,133,134,43,135,136,137,138,44,64,139,140,141,142,47,111,143,48,4,144,145,146,147,148,149,150,151,124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[152],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[153,154,155,156,157,126],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[158,159,160,161,111,146],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[162,163,164,165,166,167,168,169],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:114","sourceCode":"continue","type":"CtContinueImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[90,37,170,171,172,112,49,173,174,4,144,175,176],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[177,178,179,180,181,182,183,184,185,186,187,188,189,42,190,191,192,193,194,195,196,197,198,199,200,64,201,202,203,204,108,46,139,205,140,206,207,208,209,210,211,212,213,214,215,216,217,218,51,52,219,220,221,222,223,224,225,226,227,168,168,169,169,228],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[229,230,231,232,191,193,233,234,235,236,237,238,239,240,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[97,98,99,101,242,105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[133,243,4,145,244,245],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,83,84,87,88,92,93,94,95,102,103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[246,185,139,205],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[196,247,64,46,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[248,116],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[249,250],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1621","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[251,252],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[229,230,191,193,233,235,236,237,238,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":67,"org.easymock.tests2.UsageTest.argumentsOrdered":137,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":145,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":135,"org.easymock.tests2.StubTest.stubWithReturnValue":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":229,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":59,"org.easymock.tests2.SerializationTest.testAllMockedMethod":192,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":232,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.samples.SupportTest.voteForRemovals":131,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":159,"org.easymock.tests.MockClassControlTest.testToString":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":9,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":178,"org.easymock.tests.UsageExpectAndThrowTest.object":19,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":235,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":126,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":113,"org.easymock.tests2.UsageTest.wrongArguments":134,"org.easymock.tests.UsageStrictMockTest.range":48,"org.easymock.samples.ConstructorCalledMockTest.testTax":168,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":194,"org.easymock.tests2.UsageConstraintsTest.testNull":69,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":20,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":215,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":41,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":187,"org.easymock.tests2.CaptureTest.testPrimitive":95,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":28,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":148,"org.easymock.tests.UsageTest.moreThanOneArgument":175,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":160,"org.easymock.tests2.CaptureTest.testCaptureNone":100,"org.easymock.tests.UsageUnorderedTest.message":124,"org.easymock.tests.UsageVerifyTest.twoReturns":144,"org.easymock.tests.UsageTest.argumentsOrdered":149,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":226,"org.easymock.tests2.CaptureTest.testCapture_2617107":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":182,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":116,"org.easymock.tests2.UsageConstraintsTest.any":75,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":186,"org.easymock.tests2.StubTest.stub":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":123,"org.easymock.tests.UsageExpectAndThrowTest.longType":12,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":61,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":132,"org.easymock.tests2.SerializationTest.testClass":191,"org.easymock.tests.LimitationsTest.mockNativeMethod":216,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":166,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":224,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":74,"org.easymock.tests2.CaptureTest.testAnd":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":46,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":244,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":219,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":13,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":200,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":188,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":24,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":234,"org.easymock.tests2.CaptureTest.testCaptureLast":99,"org.easymock.tests2.CompareToTest.testCompareEqual":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":3,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":199,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":72,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":85,"org.easymock.tests.MockingTest.testTwoMocks":218,"org.easymock.tests2.CaptureTest.testCapture1_2446744":96,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":17,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":136,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":88,"org.easymock.tests.UsageThrowableTest.throwError":29,"org.easymock.tests.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.MockBuilderTest.testCreateMockString":190,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":208,"org.easymock.tests.UsageExpectAndThrowTest.floatType":11,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":81,"org.easymock.tests.UsageVerifyTest.twoThrows":4,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":179,"org.easymock.samples.PartialClassMockTest.testGetArea":228,"org.easymock.tests.MockingTest.testInterfaceMocking":53,"org.easymock.tests2.CompareToTest.testLessOrEqual":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":120,"org.easymock.samples.ExampleTest.voteAgainstRemoval":129,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":205,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":10,"org.easymock.tests2.UsageTest.niceToStrict":43,"org.easymock.tests2.UsageConstraintsTest.testNotNull":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":34,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":185,"org.easymock.tests2.MockBuilderTest.testCreateMock":189,"org.easymock.samples.ExampleTest.voteAgainstRemovals":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":157,"org.easymock.tests.UsageVarargTest.differentLength":151,"org.easymock.tests2.CallbackTest.callback":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":167,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":18,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":158,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":57,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":115,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":79,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":2,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":197,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":78,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":101,"org.easymock.tests.UsageThrowableTest.throwCheckedException":31,"org.easymock.tests.MockClassControlTest.testEquals":214,"org.easymock.tests2.EasyMockSupportClassTest.testAll":177,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":26,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":161,"org.easymock.tests2.CaptureTest.testCaptureAll":93,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":198,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":110,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":196,"org.easymock.tests2.UsageConstraintsTest.testMatches":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":153,"org.easymock.samples.ExampleTest.voteForRemovals":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":239,"org.easymock.tests.UsageVarargTest.allKinds":118,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":237,"org.easymock.samples.BasicClassMockTest.testPrintContent":227,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":33,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":35,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":241,"org.easymock.tests2.UsageConstraintsTest.greaterThan":58,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":162,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":140,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":173,"org.easymock.samples.ExampleTest.voteForRemoval":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":204,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":193,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":169,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":82,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":217,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":97,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":230,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":63,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":245,"org.easymock.tests2.UsageConstraintsTest.testSame":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":155,"org.easymock.tests2.CaptureTest.testCaptureFirst":105,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":45,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":138,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":142,"org.easymock.tests.GenericTest.testPackageScope":222,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":91,"org.easymock.tests2.CaptureTest.testCapture2_2446744":104,"org.easymock.tests2.UsageTest.moreThanOneArgument":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":42,"org.easymock.tests.GenericTest.testBridgedEquals":225,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":27,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":86,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":25,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":164,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":231,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":114,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":195,"org.easymock.tests.MockingTest.testNiceClassMocking":55,"org.easymock.tests.MockingTest.testClassMocking":50,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":246,"org.easymock.tests2.UsageConstraintsTest.testContains":77,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":181,"org.easymock.tests2.UsageConstraintsTest.testFind":68,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":1,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":106,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":202,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":47,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":107,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":108,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":183,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":236,"org.easymock.tests.UsageTest.exactCallCountByLastCall":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":38,"org.easymock.tests2.CaptureTest.testCaptureRightOne":102,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":250,"org.easymock.tests2.UsageConstraintsTest.testOr":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":233,"org.easymock.tests.UsageRangeTest.combination":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":64,"org.easymock.tests.UsageTest.wrongArguments":147,"org.easymock.tests.MockClassControlTest.testHashCode":213,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":249,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":6,"org.easymock.tests2.UsageConstraintsTest.cmpTo":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":8,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":5,"org.easymock.tests2.CaptureTest.testCaptureFromStub":103,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":184,"org.easymock.tests.UsageTest.unexpectedCallWithArray":146,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":141,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":30,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":111,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":163,"org.easymock.tests2.CaptureTest.testCapture":242,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":212,"org.easymock.tests2.UsageConstraintsTest.constraints":66,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":139,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":15,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":180,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":122,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":40}}]
