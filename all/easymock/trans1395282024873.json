[{"position":"org.easymock.internal.MockBuilder:80","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[19,20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[21,22],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,0,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,1,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,2,6,7,8,9,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[126,155,172,176,177,184,191,201,204,205,212,219,244],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:277","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[135,265,168,169,170],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"position":"org.easymock.internal.LastControl:95","failures":[77,78,80,82,83,266,94,98,113,115,122],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[29,40,55,56,74,75,89,92,100,114,119,120,123,128,148,149,267,163,164,268,269,270,176,182,188,192,194,204,210,216,220,222],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[24,55,56,109,271,110,112,128,272],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[273,274,275,276,277,278,279],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[45,280,281,282,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[21],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[85],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[23,24,25,26,27,28,284,29,30,31,32,33,34,0,35,36,37,38,273,285,286,39,40,287,41,42,288,289,43,290,291,44,292,293,45,46,294,295,296,47,297,298,48,299,300,301,302,303,304,305,306,307,49,308,309,310,311,312,50,313,314,51,52,53,54,55,315,56,1,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,316,72,73,317,318,74,75,76,77,78,319,79,80,81,82,83,84,266,85,86,87,88,89,90,91,92,93,94,95,96,320,97,98,99,100,321,101,102,322,323,103,104,324,105,106,107,108,109,325,271,110,111,112,113,114,115,116,326,117,118,119,120,121,122,327,328,123,124,125,126,127,128,329,330,331,332,333,129,334,335,336,337,338,339,130,131,132,133,340,134,135,136,265,2,341,4,5,342,343,6,7,8,279,9,344,345,10,11,346,14,347,348,137,138,349,350,351,352,353,354,355,139,356,140,141,142,143,15,357,144,358,359,145,360,146,361,362,363,364,365,366,367,368,147,369,370,371,372,373,374,148,149,267,375,150,151,376,377,152,378,153,154,155,156,379,380,381,157,158,159,160,161,382,162,163,383,164,384,385,386,387,388,389,390,165,166,391,280,167,268,392,393,394,168,169,395,170,396,397,398,171,172,21,173,174,16,22,399,400,175,401,402,403,404,405,406,407,408,409,410,411,412,269,413,414,281,270,415,416,417,418,419,282,420,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,421,422,283,423,424,425,426,427,428,429,430,431,432,196,197,433,434,435,436,437,198,199,200,201,202,203,438,439,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,17,440,441,442,443,18,444,445,446,447,448,224,225,226,227,228,229,449,450,451,452,230,453,231,454,455,232,233,234,272,456,457,458,459,235,460,236,237,238,461,462,463,464,465,466,467,468,469,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,470,471,472,473,474,475,476,477,478,479,480,481,254,255,256,482,257,258,483,259,260,261,262,263,484,485,486,487,488,489,490,264,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:28","sourceCode":"-2722051869610289637L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[98],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:471","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[67],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,0,37,38,286,39,40,287,41,42,288,289,290,291,44,292,45,46,47,48,49,50,53,55,56,1,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,317,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,320,97,98,99,100,101,102,322,323,103,104,109,110,111,113,114,115,116,326,117,118,119,120,121,122,328,123,128,129,130,131,132,133,134,135,136,6,8,9,137,138,139,356,140,141,142,143,144,146,147,148,149,267,375,150,151,152,382,162,163,383,164,385,386,387,388,389,390,165,166,391,280,167,268,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,432,196,197,433,434,435,436,437,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,226,227,228,229,450,451,230,453,231,454,455,232,233,272,457,458,235,236,237,238,243,245,246,247,248,249,250,252,253,478,479,254,255,256,257,258,259,260,261,262,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[21,173,174,16,22],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:133","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[113,115,116,326,117,118,119,121,19,122,327,123],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[356,145],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[316,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[35,36,38,273,294,295,296,47,297,298,48,299,300,301,302,303,304,305,306,307,49,308,309,310,311,312,50,313,314,502,503,1,132,136,265,341,342,279,345,504,346],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[318,403],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[132,135,8,349,18,489,491,492,493,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[75,92,97,505],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[401,402,403,404,405,406,407,408,409,410,411,412,269,413,414,281,415,416,417,418,419,420],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[323,268,455,237,238,506,507],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[46,280,404,432,433,434,435,436,437,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,446,447,448,458,237,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[23,24,25,26,28,29,31,0,35,35,36,36,38,286,39,40,287,41,42,288,289,43,290,291,44,292,45,46,47,48,49,50,51,52,53,54,55,56,1,57,59,60,61,62,63,64,65,66,67,68,69,70,316,72,73,317,318,74,75,76,77,78,79,80,81,82,83,84,266,85,86,87,88,89,90,91,92,93,94,95,96,320,97,98,99,100,321,102,322,323,103,104,109,325,271,110,111,112,113,114,115,116,326,117,118,119,120,121,122,327,328,123,124,125,126,127,128,129,130,131,132,133,134,135,136,2,4,6,7,8,9,10,11,14,137,138,139,356,140,141,142,143,15,144,145,360,146,361,147,148,149,267,375,150,151,152,153,154,155,156,380,157,158,159,160,161,382,162,163,383,164,384,385,386,387,388,389,390,165,166,391,280,167,268,394,168,169,170,171,172,173,16,399,400,270,282,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,432,196,197,433,434,435,436,437,198,199,200,201,202,203,438,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,446,447,448,226,452,453,231,454,455,232,233,272,457,458,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,470,471,472,473,474,475,476,477,478,479,480,481,263],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[508,509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"key","key":"key"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[284,43,45,51,52,59,66,71,124,125,126,127,129,2,7,10,14,15,145,147,153,154,155,156,157,158,159,160,161,384,421,422,283,423,424,425,426,427,428,429,430,431,225,449,234,460,462,485,486,487,490,264,491,492,493,494,495,496],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":78,"org.easymock.tests2.UsageTest.argumentsOrdered":291,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":383,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":411,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":42,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testReturnException":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":240,"org.easymock.tests.MockingTest.testPartialClassMocking":168,"org.easymock.tests.MockClassControlTest.testToString":491,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":324,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":302,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":204,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":274,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":165,"org.easymock.tests2.UsageTest.wrongArguments":287,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":155,"org.easymock.samples.ExampleTest.answerVsDelegate":24,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":18,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":397,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":141,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":496,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":68,"org.easymock.tests2.CaptureTest.testPrimitive":116,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":167,"org.easymock.tests.UsageTest.moreThanOneArgument":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":223,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":200,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":477,"org.easymock.tests.UsageTest.argumentsOrdered":389,"org.easymock.tests.UsageVarargTest.varargIntAccepted":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":2,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":351,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":249,"org.easymock.tests.ReplayStateInvalidUsageTest.times":428,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests2.DependencyTest.testClassMocking":347,"org.easymock.tests2.AnswerTest.answer":109,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":415,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":127,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":441,"org.easymock.tests2.CaptureTest.testAnd":113,"org.easymock.tests2.UsageTest.strictResetToDefault":39,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":252,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":481,"org.easymock.tests2.DelegateToTest.testDelegate":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":219,"org.easymock.tests.LimitationsTest.mockFinalMethod":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":161,"org.easymock.tests2.DependencyTest.testClassMockingSupport":348,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":399,"org.easymock.tests2.CaptureTest.testCapture1_2446744":326,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":125,"org.easymock.tests.UsageThrowableTest.throwError":432,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":283,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":443,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":497,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":202,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":314,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":423,"org.easymock.tests.MockingTest.testInterfaceMocking":395,"org.easymock.tests2.CompareToTest.testLessOrEqual":505,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":246,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":474,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":489,"org.easymock.tests2.UsageTest.niceToStrict":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":303,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":6,"org.easymock.tests2.MockBuilderTest.testCreateMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":310,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":213,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":440,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":448,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":153,"org.easymock.tests.UsageOverloadedMethodTest.overloading":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":312,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":458,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":187,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":382,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":88,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":121,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":482,"org.easymock.tests.MockClassControlTest.testEquals":495,"org.easymock.tests2.EasyMockSupportClassTest.testAll":47,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":174,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":159,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":126,"org.easymock.tests2.CaptureTest.testCaptureAll":114,"org.easymock.tests.MockNameTest.defaultName":439,"org.easymock.tests2.UsageConstraintsTest.testMatches":90,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":201,"org.easymock.samples.ExampleTest.voteForRemovals":28,"org.easymock.tests.UsageVarargTest.allKinds":263,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":160,"org.easymock.samples.BasicClassMockTest.testPrintContent":34,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":436,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":244,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":335,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":468,"org.easymock.tests2.UsageConstraintsTest.greaterThan":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":251,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":361,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":469,"org.easymock.samples.ExampleTest.voteForRemoval":25,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":149,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":362,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":12,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":15,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":151,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":286,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":61,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":239,"org.easymock.tests2.CaptureTest.testCaptureFirst":123,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":62,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":292,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":183,"org.easymock.tests2.UsageTest.moreThanOneArgument":40,"org.easymock.tests2.CaptureTest.testCapture2_2446744":328,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":416,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":11,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":262,"org.easymock.tests.GenericTest.testBridgedEquals":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":450,"org.easymock.tests.UsageExpectAndReturnTest.longType":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":157,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":59,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":222,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":476,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":471,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":198,"org.easymock.tests.UsageCallCountTest.tooManyCalls":451,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":209,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":435,"org.easymock.tests.MockingTest.testNiceClassMocking":398,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":131,"org.easymock.tests.MockingTest.testClassMocking":393,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":3,"org.easymock.tests2.UsageConstraintsTest.testContains":87,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":225,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":163,"org.easymock.tests.MockTypeTest.fromEasyMockClass":442,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":452,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":56,"org.easymock.tests.UsageExpectAndReturnTest.object":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":67,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":275,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":487,"org.easymock.tests.UsageTest.exactCallCountByLastCall":390,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":478,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":379,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":273,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":192,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":457,"org.easymock.tests.MockClassControlTest.testHashCode":494,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":330,"org.easymock.tests2.EasyMockSupportTest.testVerify":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":305,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":479,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":447,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":124,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":293,"org.easymock.tests.UsageVarargTest.varargCharAccepted":257,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":461,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastCall":288,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":499,"org.easymock.tests.DefaultClassInstantiatorTest.object":462,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":446,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":485,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":306,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":329,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":493,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":360,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":210,"org.easymock.tests.CapturesMatcherTest.test":20,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":470,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":50,"org.easymock.tests2.UsageTest.resumeIfFailure":44,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":242,"org.easymock.tests2.StubTest.stubWithReturnValue":46,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":279,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":185,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":97,"org.easymock.tests2.SerializationTest.testAllMockedMethod":58,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":270,"org.easymock.samples.SupportTest.voteForRemovals":31,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":216,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":282,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":325,"org.easymock.tests.UsageExpectAndThrowTest.object":214,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":381,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":95,"org.easymock.tests2.DelegateToTest.testWrongClass":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":171,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":172,"org.easymock.tests.UsageStrictMockTest.range":455,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":354,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":215,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":8,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":430,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":475,"org.easymock.tests2.CaptureTest.testCaptureNone":120,"org.easymock.tests.UsageUnorderedTest.message":268,"org.easymock.tests.UsageVerifyTest.twoReturns":238,"org.easymock.tests.UsageVarargTest.varargByteAccepted":261,"org.easymock.tests2.ThreadingTest.testThreadSafe":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":308,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":229,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":488,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":33,"org.easymock.tests2.CaptureTest.testCapture_2617107":115,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":280,"org.easymock.tests2.UsageConstraintsTest.any":85,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":427,"org.easymock.tests2.StubTest.stub":45,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndThrowTest.longType":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":241,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":466,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":426,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":322,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":152,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":16,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":195,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":366,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":104,"org.easymock.tests2.NameTest.nameForMocksControl":108,"org.easymock.tests2.MockedExceptionTest.testMockedException":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":298,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":387,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":170,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":208,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":315,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":9,"org.easymock.tests.MockingTest.testNicePartialClassMocking":169,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":143,"org.easymock.tests2.CaptureTest.testCaptureLast":119,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":364,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":400,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":136,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":83,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":96,"org.easymock.tests.MockingTest.testTwoMocks":394,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":212,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":290,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":99,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":509,"org.easymock.samples.ExampleTest.removeNonExistingDocument":284,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":424,"org.easymock.tests.UsageStrictMockTest.differentMethods":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":331,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":508,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":464,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":267,"org.easymock.tests2.MockBuilderTest.testCreateMockString":14,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":490,"org.easymock.tests.UsageExpectAndThrowTest.floatType":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":299,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":296,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":110,"org.easymock.tests.UsageVerifyTest.twoThrows":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":285,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":49,"org.easymock.samples.ExampleTest.voteAgainstRemoval":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":412,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":146,"org.easymock.tests.LimitationsTest.privateConstructor":377,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":503,"org.easymock.tests2.UsageConstraintsTest.testNotNull":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":437,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":51,"org.easymock.tests2.UsageTest.defaultResetToNice":43,"org.easymock.samples.ExampleTest.voteAgainstRemovals":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":269,"org.easymock.tests.UsageVarargTest.differentLength":483,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":365,"org.easymock.tests2.CallbackTest.callback":128,"org.easymock.tests2.UsageConstraintsTest.equals":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":358,"org.easymock.tests.UsageTest.openCallCountByLastCall":386,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":391,"org.easymock.tests.UsageCallCountTest.tooFewCalls":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":156,"org.easymock.tests.UsageThrowableTest.throwCheckedException":434,"org.easymock.tests.MockingTest.testStrictClassMocking":392,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":438,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":135,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":429,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":134,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":112,"org.easymock.tests.ObjectMethodsTest.testHashCode":486,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":277,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":150,"org.easymock.tests2.NameTest.nameForNiceMock":107,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":276,"org.easymock.samples.ExampleTest.addDocument":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":309,"org.easymock.tests2.DelegateToTest.testStubDelegate":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.AnswerTest.stubAnswer":111,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":231,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":344,"org.easymock.tests.UsageVarargTest.varargLongAccepted":260,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.floatType":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":38,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":93,"org.easymock.tests.UsageThrowableTest.noUpperLimit":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":349,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":117,"org.easymock.tests2.SerializationTest.test":57,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":177,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.samples.SupportTest.addDocument":30,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":340,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":300,"org.easymock.tests.GenericTest.testPackageScope":173,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":336,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":396,"org.easymock.tests2.NameTest.nameForMock":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":188,"org.easymock.tests2.UsageStrictMockTest.differentMethods":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":346,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":359,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":180,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":218,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":253,"org.easymock.tests2.MockedExceptionTest.testRealException":54,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":413,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":102,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":431,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":166,"org.easymock.tests2.NameTest.nameForStrictMock":106,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":343,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":500,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":142,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":353,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":506,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":465,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":4,"org.easymock.tests2.UsageStrictMockTest.range":323,"org.easymock.tests2.UsageConstraintsTest.lessThan":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":60,"org.easymock.tests2.CaptureTest.testCaptureRightOne":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":304,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":498,"org.easymock.tests2.UsageConstraintsTest.testOr":82,"org.easymock.tests.UsageRangeTest.combination":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":356,"org.easymock.tests.UsageTest.wrongArguments":385,"org.easymock.tests2.MockBuilderTest.testWithConstructor":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":301,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":189,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":467,"org.easymock.tests.UsageVarargTest.varargShortAccepted":259,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":449,"org.easymock.tests2.UsageConstraintsTest.cmpTo":86,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":289,"org.easymock.tests2.CaptureTest.testCaptureFromStub":327,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":422,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":5,"org.easymock.tests.UsageTest.unexpectedCallWithArray":384,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":453,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":228,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":504,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":190,"org.easymock.tests2.CaptureTest.testCapture":19,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":454,"org.easymock.tests2.UsageConstraintsTest.constraints":77,"org.easymock.samples.ExampleTest.addAndChangeDocument":29,"org.easymock.tests.UsageStrictMockTest.testVerify":234,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":37,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":158,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":182,"org.easymock.tests.LimitationsTest.abstractClass":376,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":248,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":507,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":65,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":255}}]
