[{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[48,49,50,51,52,52,53,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,12,119,120,121,122,123,124,125,126,13,127,128,14,15,129,130,131,132,133,134,16,17,135,18,19,20,21,22,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,23,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,24,204,205,25,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,26,253,254,27,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,28,29,294,30,31,32,295,33,34,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,35,315,316,317,318,319,320,321,322,323,324,325,326,36,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,37,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,38,39,40,409,410,411,41,42,412,413,2,3,414,11,415,416,43,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,44,45,446,447,448,449,450,46,451,47,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[16,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[372,481,37,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[381,382,383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[482,428,483],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[48,49,50,52,52,53,53,75,76,77,78,79,80,81,82,83,112,136,137,138,139,140,141,142,143,144,145,146,147,149,152,192,193,194,195,196,197,198,199,210,213,268,299,300,303,304,305,381,383,394,484,395,396,397,398,399,400,401,402,403,404,485,405,2,3,486,487,488,489,490,421,422,424,425,426,427,429,430,431,432,433,434,435,436,437,438,439,440,441,443,444,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[192,197,265],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[48,49,50,52,52,53,53,76,77,78,79,82,112,145,146,147,149,192,193,194,195,196,197,198,199,210,213,268,305,381,383,394,395,396,398,399,400,401,403,404,405,2,421,422,424,425,426,427,429,432,433,434,435,437,438,439,440,441,443,444,459,462,472,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"this","value":"delegateTo","this":"lastResult"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[313,317,36,331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","list":"candidateMethods"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[137,141],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":310,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":124,"org.easymock.tests2.UsageTest.argumentsOrdered":42,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":296,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":279,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":40,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":51,"org.easymock.tests2.DelegateToTest.testReturnException":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":85,"org.easymock.tests.MockingTest.testPartialClassMocking":146,"org.easymock.tests.MockClassControlTest.testToString":194,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":446,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":462,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":216,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":380,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":316,"org.easymock.tests2.UsageTest.wrongArguments":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":251,"org.easymock.samples.ExampleTest.answerVsDelegate":58,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":213,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":151,"org.easymock.tests2.UsageConstraintsTest.testNull":313,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":34,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":199,"org.easymock.tests2.CaptureTest.testPrimitive":367,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":206,"org.easymock.tests.UsageTest.moreThanOneArgument":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":235,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":115,"org.easymock.tests.UsageTest.argumentsOrdered":15,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":65,"org.easymock.tests.UsageVarargTest.varargIntAccepted":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":173,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":394,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":345,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":177,"org.easymock.tests.ReplayStateInvalidUsageTest.times":108,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":357,"org.easymock.tests2.DependencyTest.testClassMocking":377,"org.easymock.tests2.AnswerTest.answer":414,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":393,"org.easymock.tests2.CaptureTest.testAnd":364,"org.easymock.tests2.UsageTest.strictResetToDefault":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":30,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":202,"org.easymock.tests2.DelegateToTest.testDelegate":389,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":231,"org.easymock.tests.LimitationsTest.mockFinalMethod":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":74,"org.easymock.tests2.DependencyTest.testClassMockingSupport":378,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":207,"org.easymock.tests2.CaptureTest.testCapture1_2446744":368,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":391,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":102,"org.easymock.tests.UsageThrowableTest.throwError":16,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":212,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":480,"org.easymock.samples.PartialClassMockTest.testGetArea":48,"org.easymock.tests.MockingTest.testInterfaceMocking":148,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":467,"org.easymock.tests2.UsageTest.niceToStrict":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":217,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":268,"org.easymock.tests2.ThreadingTest.testChangeDefault":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":269,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":398,"org.easymock.tests2.MockBuilderTest.testCreateMock":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":475,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":225,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":31,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":249,"org.easymock.tests.UsageOverloadedMethodTest.overloading":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":242,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":164,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":118,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":321,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":373,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":183,"org.easymock.tests2.EasyMockSupportClassTest.testAll":459,"org.easymock.tests.MockClassControlTest.testEquals":198,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":233,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":486,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":72,"org.easymock.tests2.CaptureTest.testCaptureAll":365,"org.easymock.tests.MockNameTest.defaultName":123,"org.easymock.tests2.UsageConstraintsTest.testMatches":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":116,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":100,"org.easymock.samples.ExampleTest.voteForRemovals":62,"org.easymock.tests.UsageVarargTest.allKinds":191,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":178,"org.easymock.samples.BasicClassMockTest.testPrintContent":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":73,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":21,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":10,"org.easymock.tests2.UsageConstraintsTest.greaterThan":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":435,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":142,"org.easymock.samples.ExampleTest.voteForRemoval":59,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":436,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":348,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":427,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":406,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":112,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":29,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":84,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":384,"org.easymock.tests2.CaptureTest.testCaptureFirst":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":294,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":413,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":160,"org.easymock.tests2.UsageTest.moreThanOneArgument":408,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":350,"org.easymock.tests2.CaptureTest.testCapture2_2446744":375,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":287,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":190,"org.easymock.tests.GenericTest.testBridgedEquals":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":97,"org.easymock.tests.UsageExpectAndReturnTest.longType":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":70,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":293,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":485,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":234,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":236,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":113,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":247,"org.easymock.tests.UsageCallCountTest.tooManyCalls":98,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":20,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":439,"org.easymock.tests.MockingTest.testNiceClassMocking":152,"org.easymock.tests.MockingTest.testClassMocking":144,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":484,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":91,"org.easymock.tests2.UsageConstraintsTest.testContains":320,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":305,"org.easymock.tests2.UsageConstraintsTest.testFind":312,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":119,"org.easymock.tests.MockTypeTest.fromEasyMockClass":211,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":420,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":26,"org.easymock.tests.UsageExpectAndReturnTest.object":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":429,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":33,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":266,"org.easymock.tests.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":274,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":120,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":241,"org.easymock.tests.MockClassControlTest.testHashCode":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":336,"org.easymock.tests2.EasyMockSupportTest.testVerify":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":469,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":133,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":390,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":334,"org.easymock.tests.UsageVarargTest.varargCharAccepted":184,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":292,"org.easymock.tests2.UsageTest.openCallCountByLastCall":409,"org.easymock.tests.DefaultClassInstantiatorTest.object":136,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":132,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":470,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":223,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":490,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":335,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":433,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":478,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":195,"org.easymock.tests2.UsageTest.resumeIfFailure":412,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":87,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":330,"org.easymock.tests2.SerializationTest.testAllMockedMethod":383,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":285,"org.easymock.samples.SupportTest.voteForRemovals":56,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":228,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":291,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":11,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":122,"org.easymock.tests.UsageExpectAndThrowTest.object":226,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":327,"org.easymock.tests2.DelegateToTest.testWrongClass":387,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":237,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":238,"org.easymock.samples.ConstructorCalledMockTest.testTax":52,"org.easymock.tests.UsageStrictMockTest.range":256,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":301,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":295,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":438,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":456,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":110,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":262,"org.easymock.tests2.CaptureTest.testCaptureNone":372,"org.easymock.tests.UsageUnorderedTest.message":99,"org.easymock.tests.UsageVerifyTest.twoReturns":179,"org.easymock.tests.UsageVarargTest.varargByteAccepted":189,"org.easymock.tests2.ThreadingTest.testThreadSafe":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":473,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":95,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":49,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":267,"org.easymock.tests2.CaptureTest.testCapture_2617107":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":289,"org.easymock.tests2.UsageConstraintsTest.any":318,"org.easymock.tests2.StubTest.stub":445,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":107,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":86,"org.easymock.tests.UsageExpectAndThrowTest.longType":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":290,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":140,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":106,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":452,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":340,"org.easymock.tests2.SerializationTest.testClass":381,"org.easymock.tests.LimitationsTest.mockNativeMethod":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":172,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":78,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":354,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":455,"org.easymock.tests2.NameTest.nameForMocksControl":450,"org.easymock.tests2.MockedExceptionTest.testMockedException":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":461,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":419,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":220,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":421,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":401,"org.easymock.tests.MockingTest.testNicePartialClassMocking":147,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":426,"org.easymock.tests2.CompareToTest.testCompareEqual":491,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":352,"org.easymock.tests2.CaptureTest.testCaptureLast":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":208,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":444,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":315,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":328,"org.easymock.tests.MockingTest.testTwoMocks":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":224,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":332,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":483,"org.easymock.samples.ExampleTest.removeNonExistingDocument":63,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":104,"org.easymock.tests.UsageStrictMockTest.differentMethods":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":337,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":138,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":349,"org.easymock.tests2.MockBuilderTest.testCreateMockString":405,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":218,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":416,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":472,"org.easymock.samples.ExampleTest.voteAgainstRemoval":60,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":280,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":434,"org.easymock.tests.LimitationsTest.privateConstructor":81,"org.easymock.tests2.UsageConstraintsTest.testNotNull":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":22,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":303,"org.easymock.tests2.UsageTest.defaultResetToNice":411,"org.easymock.samples.ExampleTest.voteAgainstRemovals":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":281,"org.easymock.tests.UsageVarargTest.differentLength":186,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":353,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests2.UsageConstraintsTest.equals":311,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":430,"org.easymock.tests.UsageTest.openCallCountByLastCall":127,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":205,"org.easymock.tests.UsageCallCountTest.tooFewCalls":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":441,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":252,"org.easymock.tests.UsageThrowableTest.throwCheckedException":19,"org.easymock.tests.MockingTest.testStrictClassMocking":143,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":443,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":131,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":358,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":442,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":417,"org.easymock.tests.ObjectMethodsTest.testHashCode":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":8,"org.easymock.tests2.NameTest.nameForNiceMock":449,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":351,"org.easymock.tests2.DependencyTest.testInterfaceMocking":379,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.samples.ExampleTest.addDocument":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":479,"org.easymock.tests2.DelegateToTest.testStubDelegate":386,"org.easymock.tests2.AnswerTest.stubAnswer":43,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":27,"org.easymock.tests.UsageVarargTest.varargLongAccepted":188,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":278,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":171,"org.easymock.tests.UsageExpectAndReturnTest.floatType":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":2,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":53,"org.easymock.tests.UsageThrowableTest.noUpperLimit":17,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":344,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":308,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":299,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":369,"org.easymock.tests2.SerializationTest.test":382,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":154,"org.easymock.tests2.UsageConstraintsTest.testSame":314,"org.easymock.samples.SupportTest.addDocument":55,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":464,"org.easymock.tests.GenericTest.testPackageScope":76,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":343,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":150,"org.easymock.tests2.NameTest.nameForMock":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":165,"org.easymock.tests2.UsageStrictMockTest.differentMethods":454,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":431,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":157,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":230,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":263,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":203,"org.easymock.tests2.MockedExceptionTest.testRealException":306,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":1,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":282,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":204,"org.easymock.tests2.NameTest.nameForStrictMock":448,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":397,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":418,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":300,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":139,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":36,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":395,"org.easymock.tests2.UsageStrictMockTest.range":453,"org.easymock.tests2.UsageConstraintsTest.lessThan":333,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":339,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":468,"org.easymock.tests2.CaptureTest.testCaptureRightOne":37,"org.easymock.tests2.UsageConstraintsTest.testOr":35,"org.easymock.tests.UsageRangeTest.combination":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":422,"org.easymock.tests.UsageTest.wrongArguments":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":465,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":270,"org.easymock.tests.UsageVarargTest.varargShortAccepted":187,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":141,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":96,"org.easymock.tests2.UsageConstraintsTest.cmpTo":319,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":272,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":410,"org.easymock.tests2.CaptureTest.testCaptureFromStub":374,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":101,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":396,"org.easymock.tests.UsageTest.unexpectedCallWithArray":126,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":94,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":167,"org.easymock.tests2.CaptureTest.testCapture":481,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.tests2.UsageConstraintsTest.constraints":309,"org.easymock.samples.ExampleTest.addAndChangeDocument":64,"org.easymock.tests.UsageStrictMockTest.testVerify":259,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":54,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":71,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":370,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":488,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":175,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":159,"org.easymock.tests.LimitationsTest.abstractClass":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":176,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":32}}]
