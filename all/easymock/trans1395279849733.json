[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:210","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:119","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[320,232,233,234],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[321,322,322,323,323,324,325,28,29,326,57,69,70,71,72,92,95,327,130,131,133,328,187,190,191,193,194,195,196,197,199,200,201,202,329,330,331,332,333,226,232,234,334,235,236,335,237,238,247,248,249,251,252,336,337,253,254,255,318],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[321,0,1,2,3,4,5,6,7,338,339,340,322,322,323,323,324,325,341,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,342,343,344,345,346,347,348,28,29,326,349,350,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,351,352,353,354,355,356,57,58,357,358,359,360,361,362,59,60,61,62,63,64,65,66,67,363,364,365,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,366,117,118,119,120,121,122,123,124,125,126,127,128,129,327,130,131,132,133,134,135,136,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,391,154,155,156,392,328,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,393,394,395,174,175,176,396,177,178,179,180,181,182,183,184,185,186,397,398,187,399,400,188,189,190,191,192,193,194,195,196,197,401,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,402,330,403,331,404,405,406,407,408,409,332,410,411,333,412,413,223,224,225,226,227,228,414,415,229,230,231,232,233,234,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,236,335,438,237,439,243,244,245,440,246,248,250,251,252,336,441,253,442,259,443,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,444,286,287,445,446,447,448,449,450,451,452,453,454,455,456,288,289,290,291,457,292,293,294,295,296,297,458,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,459,317,318,460],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[461,462,100,121,463,464],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[113,115,228,243,245],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[465],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[321,0,2,3,5,339,342,343,344,346,28,326,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,76,78,79,80,81,82,83,84,85,88,89,91,98,99,102,103,106,117,122,124,125,130,131,133,376,378,387,388,390,146,147,148,169,170,171,172,173,185,186,187,190,191,192,193,194,195,197,200,201,202,204,205,207,208,211,212,213,214,216,217,218,219,220,221,222,330,331,332,333,226,228,230,232,233,416,417,418,466,419,420,467,421,468,422,423,424,431,334,235,236,335,438,237,238,244,248,251,336,337,254,261,262,263,265,267,268,269,272,273,276,278,279,285,444,287,450,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[469,470,471,472,473,474,460],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[232,469,470,471,475,476,474,441,318,460],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[204,206,214,290,291,293,295,296,458,307,312],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[477,478,479,480],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[201,329,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[348,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[364,365,394,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1688","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1582","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[481,314],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[469,470,471,472,473,474,460],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + java.lang.String) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.EasyMock.DISABLE_CLASS_MOCKING":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[382,389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[184,221,293,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[322,323,55,84,85,88,122,367,371,372,381,386,149,150,151,152,153,157,169,170,171,172,173,185,186,215,276,287,288,289,292,293,294,295,300,302,303,305,306,312,313,314],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":291,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":98,"org.easymock.tests2.UsageTest.argumentsOrdered":271,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":377,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":266,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":341,"org.easymock.tests2.DelegateToTest.testReturnException":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":108,"org.easymock.tests.MockingTest.testPartialClassMocking":130,"org.easymock.tests.MockClassControlTest.testToString":70,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":8,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":331,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":444,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":469,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":84,"org.easymock.tests2.UsageTest.wrongArguments":264,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":437,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":61,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":95,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":135,"org.easymock.tests2.UsageConstraintsTest.testNull":293,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":193,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":422,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":75,"org.easymock.tests2.CaptureTest.testPrimitive":207,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":88,"org.easymock.tests.UsageTest.moreThanOneArgument":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":27,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":151,"org.easymock.tests.UsageTest.argumentsOrdered":105,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":473,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":173,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":431,"org.easymock.tests.ReplayStateInvalidUsageTest.times":165,"org.easymock.tests2.AnswerTest.answer":228,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":284,"org.easymock.tests2.CaptureTest.testAnd":204,"org.easymock.tests2.UsageTest.strictResetToDefault":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":419,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":53,"org.easymock.tests2.DelegateToTest.testDelegate":246,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":23,"org.easymock.tests.LimitationsTest.mockFinalMethod":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":67,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":400,"org.easymock.tests2.CaptureTest.testCapture1_2446744":208,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":282,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":159,"org.easymock.tests.UsageThrowableTest.throwError":76,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":94,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":413,"org.easymock.samples.PartialClassMockTest.testGetArea":321,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":160,"org.easymock.tests.MockingTest.testInterfaceMocking":132,"org.easymock.tests2.CompareToTest.testLessOrEqual":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":170,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":9,"org.easymock.tests2.UsageTest.niceToStrict":265,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":251,"org.easymock.tests2.MockBuilderTest.testCreateMock":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":463,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":17,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":420,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":395,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":59,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":477,"org.easymock.tests.UsageOverloadedMethodTest.overloading":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":409,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":116,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":302,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":42,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":301,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":213,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":396,"org.easymock.tests.MockClassControlTest.testEquals":74,"org.easymock.tests2.EasyMockSupportClassTest.testAll":330,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":29,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":65,"org.easymock.tests2.CaptureTest.testCaptureAll":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":283,"org.easymock.tests.MockNameTest.defaultName":350,"org.easymock.tests2.UsageConstraintsTest.testMatches":303,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":152,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":184,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":66,"org.easymock.samples.BasicClassMockTest.testPrintContent":325,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":82,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":452,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":476,"org.easymock.tests2.UsageConstraintsTest.greaterThan":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":52,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":202,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":362,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":203,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":196,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":57,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":261,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":418,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":107,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":439,"org.easymock.tests2.CaptureTest.testCaptureFirst":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":466,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":273,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":38,"org.easymock.tests2.CaptureTest.testCapture2_2446744":216,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":221,"org.easymock.tests2.UsageTest.moreThanOneArgument":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":254,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":183,"org.easymock.tests.GenericTest.testBridgedEquals":349,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":478,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":144,"org.easymock.tests.UsageExpectAndReturnTest.longType":34,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":416,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":26,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":310,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":351,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":149,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":364,"org.easymock.tests.UsageCallCountTest.tooManyCalls":145,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":436,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":81,"org.easymock.tests.MockingTest.testNiceClassMocking":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":235,"org.easymock.tests.MockingTest.testClassMocking":129,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":138,"org.easymock.tests2.UsageConstraintsTest.testContains":300,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":226,"org.easymock.tests2.UsageConstraintsTest.testFind":292,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":148,"org.easymock.tests.MockTypeTest.fromEasyMockClass":93,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":119,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":317,"org.easymock.tests.UsageExpectAndReturnTest.object":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":468,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":470,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":178,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":156,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":479,"org.easymock.tests.UsageTest.exactCallCountByLastCall":106,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":345,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":460,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":47,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":115,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.MockClassControlTest.testHashCode":73,"org.easymock.tests2.EasyMockSupportTest.testVerify":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":407,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":394,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":113,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":281,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":315,"org.easymock.tests.UsageVarargTest.varargCharAccepted":177,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":390,"org.easymock.tests2.UsageTest.openCallCountByLastCall":267,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":424,"org.easymock.tests.DefaultClassInstantiatorTest.object":58,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":393,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":408,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":429,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":72,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":48,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":363,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":333,"org.easymock.tests2.UsageTest.resumeIfFailure":272,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":92,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":110,"org.easymock.tests2.StubTest.stubWithReturnValue":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":474,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":40,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":311,"org.easymock.tests2.SerializationTest.testAllMockedMethod":234,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":383,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":464,"org.easymock.samples.SupportTest.voteForRemovals":339,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":348,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":20,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":320,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":389,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":414,"org.easymock.tests.UsageExpectAndThrowTest.object":18,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":347,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":308,"org.easymock.tests2.DelegateToTest.testWrongClass":245,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":185,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":186,"org.easymock.tests.UsageStrictMockTest.range":124,"org.easymock.samples.ConstructorCalledMockTest.testTax":322,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":443,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":421,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":19,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":402,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":167,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":60,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":461,"org.easymock.tests2.CaptureTest.testCaptureNone":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":344,"org.easymock.tests.UsageUnorderedTest.message":30,"org.easymock.tests.UsageVerifyTest.twoReturns":91,"org.easymock.tests.UsageVarargTest.varargByteAccepted":182,"org.easymock.tests2.ThreadingTest.testThreadSafe":218,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":142,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":392,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":324,"org.easymock.tests2.CaptureTest.testCapture_2617107":206,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":87,"org.easymock.tests2.UsageConstraintsTest.any":298,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":164,"org.easymock.tests2.StubTest.stub":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":109,"org.easymock.tests.UsageExpectAndThrowTest.longType":11,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":360,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":163,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":277,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":450,"org.easymock.tests2.SerializationTest.testClass":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":50,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":326,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":428,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":280,"org.easymock.tests2.NameTest.nameForMocksControl":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":430,"org.easymock.tests2.MockedExceptionTest.testMockedException":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":403,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":103,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":459,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":12,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":190,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":337,"org.easymock.tests.MockingTest.testNicePartialClassMocking":131,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":195,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":426,"org.easymock.tests2.CaptureTest.testCaptureLast":211,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":238,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":296,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":309,"org.easymock.tests.MockingTest.testTwoMocks":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":16,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":270,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":313,"org.easymock.samples.ExampleTest.removeNonExistingDocument":6,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":433,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":161,"org.easymock.tests.UsageStrictMockTest.differentMethods":125,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":358,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":220,"org.easymock.tests2.MockBuilderTest.testCreateMockString":255,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":68,"org.easymock.tests.UsageExpectAndThrowTest.floatType":10,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":304,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":229,"org.easymock.tests.UsageVerifyTest.twoThrows":90,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":332,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":201,"org.easymock.tests.LimitationsTest.privateConstructor":398,"org.easymock.tests2.UsageConstraintsTest.testNotNull":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":83,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":224,"org.easymock.tests2.UsageTest.defaultResetToNice":269,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":427,"org.easymock.tests.UsageVarargTest.differentLength":179,"org.easymock.tests2.CallbackTest.callback":223,"org.easymock.tests2.UsageConstraintsTest.equals":457,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":401,"org.easymock.tests.UsageTest.openCallCountByLastCall":102,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":86,"org.easymock.tests.UsageCallCountTest.tooFewCalls":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":62,"org.easymock.tests.UsageThrowableTest.throwCheckedException":80,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":462,"org.easymock.tests.MockingTest.testStrictClassMocking":128,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":56,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":432,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":236,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":166,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":438,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":231,"org.easymock.tests.ObjectMethodsTest.testHashCode":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":472,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":222,"org.easymock.tests2.NameTest.nameForNiceMock":241,"org.easymock.tests2.DependencyTest.testInterfaceMocking":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":471,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.DelegateToTest.testStubDelegate":244,"org.easymock.tests2.AnswerTest.stubAnswer":230,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":122,"org.easymock.tests.UsageVarargTest.varargLongAccepted":181,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":376,"org.easymock.tests.UsageExpectAndReturnTest.floatType":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":49,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":318,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":323,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":454,"org.easymock.tests.UsageThrowableTest.noUpperLimit":77,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":306,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":289,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":442,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":209,"org.easymock.tests2.SerializationTest.test":233,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":32,"org.easymock.tests2.UsageConstraintsTest.testSame":294,"org.easymock.samples.SupportTest.addDocument":338,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":404,"org.easymock.tests.GenericTest.testPackageScope":28,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":453,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":134,"org.easymock.tests2.NameTest.nameForMock":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":43,"org.easymock.tests2.UsageStrictMockTest.differentMethods":279,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":35,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":22,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":54,"org.easymock.tests2.MockedExceptionTest.testRealException":227,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":380,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":85,"org.easymock.tests2.NameTest.nameForStrictMock":240,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":250,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":316,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":259,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":307,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":359,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":248,"org.easymock.tests2.UsageStrictMockTest.range":278,"org.easymock.tests2.UsageConstraintsTest.lessThan":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":406,"org.easymock.tests2.CaptureTest.testCaptureRightOne":214,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":482,"org.easymock.tests2.UsageConstraintsTest.testOr":295,"org.easymock.tests.UsageRangeTest.combination":51,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":191,"org.easymock.tests.UsageTest.wrongArguments":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":405,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":368,"org.easymock.tests.UsageVarargTest.varargShortAccepted":180,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":143,"org.easymock.tests2.UsageConstraintsTest.cmpTo":299,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":415,"org.easymock.tests2.CompareToTest.testLessThan":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":370,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":268,"org.easymock.tests2.CaptureTest.testCaptureFromStub":215,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":158,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":249,"org.easymock.tests.UsageTest.unexpectedCallWithArray":100,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":141,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":45,"org.easymock.tests2.CaptureTest.testCapture":465,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":123,"org.easymock.tests2.UsageConstraintsTest.constraints":290,"org.easymock.samples.ExampleTest.addAndChangeDocument":7,"org.easymock.tests.UsageStrictMockTest.testVerify":127,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":340,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":64,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":171,"org.easymock.tests.LimitationsTest.abstractClass":397,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":172,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":467,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":175}}]
