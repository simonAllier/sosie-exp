[{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[0,1,4,5,6,7,8,9,10,11,2,12,3,13],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[26,27,28,29,30,14,15,31,16,32,17,18,33,19,34,35,36,25,37,38,39,40,41,20,42,43,44,45,21,46,47,48,22,49,23,50,51,52,53,54,55,56,24,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[81,82],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[1,5,6,7,8,9,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[84,85,86,87,88,72],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[22,23,50,51,52,53,54,56,81,24,57,59],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:130","sourceCode":"return (((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName()))) && ((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","type":"CtReturnImpl"},"failures":[89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[90,91,92,93,86,94,95,96,67,97,72,98,99,100],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[101,102],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[103,90,91,92,48,93,104,105,84,106,107,108,109,110,111,85,112,113,114,86,94,95,96,67,87,115,88,116,117,97,118,119,72,73,98,120,121,122,123,124,125,99,100],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,0,1,143,144,145,103,90,146,147,148,149,150,91,92,151,152,26,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,27,184,28,11,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,29,30,14,15,206,31,16,32,17,18,33,19,34,35,36,25,37,38,39,40,41,20,42,43,44,45,21,46,47,207,208,48,209,93,104,210,211,212,213,214,215,216,217,218,219,220,221,22,49,23,50,51,52,53,54,55,56,24,57,58,59,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,2,257,258,12,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,60,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,61,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,114,86,94,327,328,95,96,329,62,63,64,65,66,67,330,331,332,333,334,335,336,337,338,339,68,69,340,341,342,89,343,118,119,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,70,71,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,72,73,457,98,120,458,459,460,121,461,462,122,123,124,125,99,100,463,464,465,466,467,468,469,470,471,472,473,474,475,74,476,75,76,77,78,79,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,80,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[136,142,227,228,229,235,238,290,291,292,298,301],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[127,200,201,202,203,204,205,461],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[145,187],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[139,140,141,0,1,143,161,171,177,180,11,248,249,250,251,252,253,254,255,256,2,257,258,12,259,260,261,262,280,282,285,286,289,340,89,435,440],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[126,128,129,131,135,139,0,144,145,103,146,148,149,151,152,154,158,161,171,177,11,185,187,188,189,190,191,192,193,195,196,197,198,202,29,30,14,15,31,16,32,17,18,33,34,35,36,25,37,38,39,40,41,20,42,43,45,21,46,47,48,93,104,216,220,22,49,50,51,54,55,56,24,58,59,232,239,240,241,242,244,245,246,254,256,257,265,266,274,275,276,277,278,279,60,286,295,302,303,304,61,305,309,316,323,324,325,326,114,327,328,329,62,63,66,333,334,336,68,69,341,89,354,356,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,401,403,404,405,406,407,408,70,73,98,120,125,100,75,76,77,78,79,477,479,480,484,485,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[90,91,92,93,86,94,95,96,67,519,97,72,98,124,99,100],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[126,127,128,129,130,131,133,134,135,136,137,138,139,142,0,144,145,103,90,146,147,148,149,91,92,152,154,158,161,171,177,182,27,28,11,185,186,187,188,189,190,191,192,193,195,196,197,198,199,201,202,203,205,29,30,14,15,31,16,32,17,18,33,34,35,36,25,37,38,39,40,41,20,42,43,44,45,21,46,47,208,48,209,93,104,210,216,219,220,221,22,49,23,50,51,52,53,54,55,56,24,58,59,226,232,239,240,241,242,244,245,246,254,256,257,265,266,274,275,276,277,278,279,60,286,295,302,303,304,61,305,306,309,323,324,325,326,114,94,327,328,95,96,329,62,63,64,65,66,67,333,334,336,68,69,341,342,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,401,402,403,404,405,406,407,408,70,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,448,449,450,451,453,454,456,72,73,457,98,120,458,460,461,462,125,99,100,74,75,76,77,78,79,477,493,494,495,497,498,500,501,502,503,80],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[11,185,186,520],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[89],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[29,14,40,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.ConstructorArgs:50","failures":[140,141,0,1,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,521,522,523,11,241,246,247,249,252,2,12,524,261],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[68,371,373,387,388,409],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[126,127,128,129,130,131,133,134,135,136,137,138,139,142,0,144,145,103,90,146,147,91,92,151,152,153,154,158,161,171,177,182,27,28,11,185,186,187,188,189,190,191,192,193,195,196,197,198,199,201,202,205,29,30,14,15,31,16,32,17,18,33,34,35,36,25,37,38,39,40,41,20,42,43,45,21,46,47,207,208,48,209,93,104,210,212,213,214,215,216,219,220,221,22,49,23,50,52,53,54,55,56,24,59,226,232,239,240,241,242,244,245,246,250,254,256,257,260,265,266,274,275,276,277,278,279,60,285,286,287,295,302,303,305,306,309,324,325,326,114,94,95,96,329,62,63,64,65,66,67,333,334,336,68,69,341,342,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,402,403,70,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,446,448,449,450,451,453,454,455,456,72,73,457,98,120,458,123,125,99,100,74,75,76,77,78,79,477,478,479,480,493,494,495,497,498,499,500,501,502,503,80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"min"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[468,525,526],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[527,528,529],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,0,1,143,144,145,103,90,146,147,148,149,150,91,92,151,152,26,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,27,184,28,11,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,29,30,14,15,206,31,16,32,17,18,33,19,34,35,36,25,37,38,39,40,41,20,42,43,44,45,21,46,47,207,208,48,209,93,104,210,211,212,213,214,215,216,217,218,219,220,221,22,49,23,50,51,52,53,54,55,56,24,57,58,59,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,2,257,258,12,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,60,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,61,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,114,86,94,327,328,95,96,329,62,63,64,65,66,67,330,331,332,333,334,335,336,337,338,339,68,69,340,341,342,89,343,118,119,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,70,71,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,72,73,457,98,120,458,459,460,121,461,462,122,123,124,125,99,100,463,464,465,466,467,468,469,470,471,472,473,474,475,74,476,75,76,77,78,79,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,80,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[17,34,48,49,54,55,59,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[103,90,91,92,84,110,85,113,114,86,94,95,96,87,88,117,72],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":15,"org.easymock.tests2.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":326,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":355,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":147,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":136,"org.easymock.tests2.DelegateToTest.testReturnException":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":473,"org.easymock.tests.MockingTest.testPartialClassMocking":333,"org.easymock.tests.MockClassControlTest.testToString":512,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":211,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":316,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":415,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":161,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":62,"org.easymock.tests2.UsageTest.wrongArguments":90,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":313,"org.easymock.samples.ExampleTest.answerVsDelegate":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":440,"org.easymock.tests2.UsageConstraintsTest.testNull":16,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":338,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":277,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":517,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":196,"org.easymock.tests2.CaptureTest.testPrimitive":50,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":434,"org.easymock.tests.UsageTest.moreThanOneArgument":114,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":411,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":488,"org.easymock.tests.UsageTest.argumentsOrdered":96,"org.easymock.tests.UsageVarargTest.varargIntAccepted":495,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":248,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":269,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":79,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":108,"org.easymock.tests.ReplayStateInvalidUsageTest.times":397,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":295,"org.easymock.tests2.DependencyTest.testClassMocking":263,"org.easymock.tests2.AnswerTest.answer":216,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":362,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":225,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":437,"org.easymock.tests2.CaptureTest.testAnd":22,"org.easymock.tests2.UsageTest.strictResetToDefault":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":410,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":191,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":492,"org.easymock.tests2.DelegateToTest.testDelegate":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":430,"org.easymock.tests.LimitationsTest.mockFinalMethod":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":322,"org.easymock.tests2.DependencyTest.testClassMockingSupport":264,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":118,"org.easymock.tests2.CaptureTest.testCapture1_2446744":51,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":428,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":223,"org.easymock.tests.UsageThrowableTest.throwError":401,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":391,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":439,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":518,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":413,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":179,"org.easymock.samples.PartialClassMockTest.testGetArea":139,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":392,"org.easymock.tests.MockingTest.testInterfaceMocking":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":76,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":485,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":509,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":166,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":529,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":254,"org.easymock.tests2.MockBuilderTest.testCreateMock":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":424,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":84,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":192,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":436,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":445,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":446,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":311,"org.easymock.tests.UsageOverloadedMethodTest.overloading":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":170,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":462,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":37,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":380,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":525,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":25,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":56,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":496,"org.easymock.tests.MockClassControlTest.testEquals":516,"org.easymock.tests2.EasyMockSupportClassTest.testAll":158,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":432,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":110,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":320,"org.easymock.tests.MockNameTest.defaultName":414,"org.easymock.tests2.UsageConstraintsTest.testMatches":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":412,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":389,"org.easymock.samples.ExampleTest.voteForRemovals":131,"org.easymock.tests.UsageVarargTest.allKinds":80,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":125,"org.easymock.samples.BasicClassMockTest.testPrintContent":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":321,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":407,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":476,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":470,"org.easymock.tests2.UsageConstraintsTest.greaterThan":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":159,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":478,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":287,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":471,"org.easymock.samples.ExampleTest.voteForRemoval":128,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":288,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":303,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":280,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":306,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":352,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":189,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":472,"org.easymock.tests2.CaptureTest.testCaptureFirst":59,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":190,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":152,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":376,"org.easymock.tests2.UsageTest.moreThanOneArgument":103,"org.easymock.tests2.CaptureTest.testCapture2_2446744":58,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":61,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":363,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":503,"org.easymock.tests.GenericTest.testBridgedEquals":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":453,"org.easymock.tests.UsageExpectAndReturnTest.longType":372,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":318,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":433,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":102,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":487,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":44,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":431,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":482,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":409,"org.easymock.tests.UsageCallCountTest.tooManyCalls":454,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":115,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":377,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":420,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":406,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":240,"org.easymock.tests.MockingTest.testNiceClassMocking":339,"org.easymock.tests.MockingTest.testClassMocking":331,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":447,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":101,"org.easymock.tests2.UsageConstraintsTest.testContains":36,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":182,"org.easymock.tests2.UsageConstraintsTest.testFind":31,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":325,"org.easymock.tests.MockTypeTest.fromEasyMockClass":438,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":455,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":28,"org.easymock.tests.UsageExpectAndReturnTest.object":379,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":195,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":498,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":507,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":523,"org.easymock.tests.UsageTest.exactCallCountByLastCall":329,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":489,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":315,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":385,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":461,"org.easymock.tests.MockClassControlTest.testHashCode":515,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":228,"org.easymock.tests2.EasyMockSupportTest.testVerify":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":168,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":107,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":490,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":460,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":444,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":519,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":222,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":26,"org.easymock.tests.UsageVarargTest.varargCharAccepted":497,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":463,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":368,"org.easymock.tests2.UsageTest.openCallCountByLastCall":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":527,"org.easymock.tests.DefaultClassInstantiatorTest.object":464,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":198,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":443,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":505,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":97,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":169,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":293,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":227,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":514,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":421,"org.easymock.tests.CapturesMatcherTest.test":82,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":386,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":481,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":177,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":109,"org.easymock.tests2.UsageTest.resumeIfFailure":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":435,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":475,"org.easymock.tests2.StubTest.stubWithReturnValue":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":378,"org.easymock.tests2.SerializationTest.testAllMockedMethod":186,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":361,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":13,"org.easymock.samples.SupportTest.voteForRemovals":135,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":85,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":427,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":520,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":367,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":217,"org.easymock.tests.UsageExpectAndThrowTest.object":425,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":317,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":42,"org.easymock.tests2.DelegateToTest.testWrongClass":203,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":68,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":69,"org.easymock.samples.ConstructorCalledMockTest.testTax":140,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":272,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":426,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":256,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":155,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":486,"org.easymock.tests2.CaptureTest.testCaptureNone":55,"org.easymock.tests.UsageUnorderedTest.message":67,"org.easymock.tests.UsageVerifyTest.twoReturns":100,"org.easymock.tests.UsageVarargTest.varargByteAccepted":502,"org.easymock.tests2.ThreadingTest.testThreadSafe":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":172,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":451,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":508,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":137,"org.easymock.tests2.CaptureTest.testCapture_2617107":23,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":113,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":365,"org.easymock.tests2.UsageConstraintsTest.any":34,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":396,"org.easymock.tests2.StubTest.stub":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":474,"org.easymock.tests.UsageExpectAndThrowTest.longType":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":366,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":468,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":395,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":209,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":309,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":388,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":292,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":210,"org.easymock.tests2.NameTest.nameForMocksControl":215,"org.easymock.tests2.MockedExceptionTest.testMockedException":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":160,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":328,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":419,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":184,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":336,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":274,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":257,"org.easymock.tests.MockingTest.testNicePartialClassMocking":334,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":4,"org.easymock.tests2.CaptureTest.testCaptureLast":54,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":119,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":246,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":43,"org.easymock.tests.MockingTest.testTwoMocks":332,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":423,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":46,"org.easymock.samples.ExampleTest.removeNonExistingDocument":132,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":393,"org.easymock.tests.UsageStrictMockTest.differentMethods":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":297,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":229,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":466,"org.easymock.tests2.ConstraintsToStringTest.andToString":111,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":304,"org.easymock.tests2.MockBuilderTest.testCreateMockString":262,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":510,"org.easymock.tests.UsageExpectAndThrowTest.floatType":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":162,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":157,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":143,"org.easymock.tests.UsageVerifyTest.twoThrows":99,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":171,"org.easymock.samples.ExampleTest.voteAgainstRemoval":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":356,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":286,"org.easymock.tests.LimitationsTest.privateConstructor":308,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":522,"org.easymock.tests2.UsageConstraintsTest.testNotNull":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":408,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":180,"org.easymock.tests2.UsageTest.defaultResetToNice":150,"org.easymock.samples.ExampleTest.voteAgainstRemovals":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":357,"org.easymock.tests.UsageVarargTest.differentLength":499,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":291,"org.easymock.tests2.CallbackTest.callback":226,"org.easymock.tests2.UsageConstraintsTest.equals":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":282,"org.easymock.tests.UsageTest.openCallCountByLastCall":327,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":64,"org.easymock.tests.UsageCallCountTest.tooFewCalls":449,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":314,"org.easymock.tests.UsageThrowableTest.throwCheckedException":405,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":88,"org.easymock.tests.MockingTest.testStrictClassMocking":330,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":71,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":245,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":296,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":244,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":221,"org.easymock.tests.ObjectMethodsTest.testHashCode":506,"org.easymock.tests2.CompareToTest.testGreateOrEqual":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":8,"org.easymock.tests2.NameTest.nameForNiceMock":214,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":305,"org.easymock.tests2.DependencyTest.testInterfaceMocking":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.ExampleTest.addDocument":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":178,"org.easymock.tests2.DelegateToTest.testStubDelegate":202,"org.easymock.tests2.AnswerTest.stubAnswer":220,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":73,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":258,"org.easymock.tests.UsageVarargTest.varargLongAccepted":501,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":387,"org.easymock.tests.UsageExpectAndReturnTest.floatType":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":141,"org.easymock.tests2.ConstraintsToStringTest.orToString":105,"org.easymock.tests.UsageThrowableTest.noUpperLimit":402,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":30,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":267,"org.easymock.tests2.SerializationTest.test":185,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":52,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":526,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":465,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":370,"org.easymock.samples.SupportTest.addDocument":134,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":243,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":163,"org.easymock.tests.GenericTest.testPackageScope":341,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":337,"org.easymock.tests2.NameTest.nameForMock":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":381,"org.easymock.tests2.UsageStrictMockTest.differentMethods":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":429,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":504,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":480,"org.easymock.tests2.MockedExceptionTest.testRealException":183,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":3,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":358,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":63,"org.easymock.tests2.NameTest.nameForStrictMock":213,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":528,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":27,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":278,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":271,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":467,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":250,"org.easymock.tests2.UsageStrictMockTest.range":93,"org.easymock.tests2.UsageConstraintsTest.lessThan":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":231,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":167,"org.easymock.tests2.CaptureTest.testCaptureRightOne":24,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":275,"org.easymock.tests.UsageTest.wrongArguments":94,"org.easymock.tests2.MockBuilderTest.testWithConstructor":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":164,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":511,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":382,"org.easymock.tests.UsageVarargTest.varargShortAccepted":500,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":469,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":452,"org.easymock.tests2.UsageConstraintsTest.cmpTo":35,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":348,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests2.CaptureTest.testCaptureFromStub":57,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":390,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":251,"org.easymock.tests.UsageTest.unexpectedCallWithArray":86,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":450,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":524,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":383,"org.easymock.tests2.CaptureTest.testCapture":81,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":457,"org.easymock.tests2.UsageConstraintsTest.constraints":14,"org.easymock.samples.ExampleTest.addAndChangeDocument":133,"org.easymock.tests2.ConstraintsToStringTest.notToString":106,"org.easymock.tests.UsageStrictMockTest.testVerify":459,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":142,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":456,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":319,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":77,"org.easymock.tests.LimitationsTest.abstractClass":307,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":375,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":78,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":193}}]
