[{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,1,79,80,81,82,2,83,84,85,86,87,88,89,90,91,92,3,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[11,180,14,181,182,183,18,19,21,25,26,29,184,45,185,49,186,61,67,69,72,84,187,188,102,103,139,189,190,191,192,143,193,194,195,196,197,198,168,199,200,201,202,170,203,204,205,175,176],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[5,6,208,209],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[210,211,189,212,213,204],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[182,214,191],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[215,216,217,218,219,4,220,221,222,223,224,225,5,6,208,226,227,228,229,7,230,231,232,8,233,234,235,9,10,236,237,238,11,12,13,180,14,181,15,16,17,182,183,18,19,239,240,241,242,243,244,245,20,21,22,23,24,25,26,27,28,29,30,31,246,184,32,33,34,35,247,36,37,38,248,39,249,250,251,252,253,40,254,255,41,256,257,258,259,260,261,262,263,264,42,265,266,267,268,269,43,270,271,272,273,274,275,276,277,44,278,279,45,280,281,282,46,283,47,284,48,285,286,185,49,287,186,288,50,51,289,52,53,290,291,54,55,56,57,292,58,59,60,61,62,63,64,65,293,294,66,295,296,207,67,68,69,297,298,70,71,72,73,214,74,75,76,77,78,1,299,79,80,81,82,2,83,84,85,86,87,88,89,300,90,91,92,3,301,302,93,303,304,305,306,307,308,94,309,310,311,312,313,314,315,316,95,317,318,319,96,97,98,99,100,187,320,101,188,102,103,321,322,104,323,105,324,106,107,325,108,326,327,328,329,330,109,331,332,333,110,111,112,334,113,114,115,335,336,337,338,339,116,117,340,341,118,342,343,344,345,346,347,348,349,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,350,139,140,189,190,141,142,191,192,143,351,352,353,354,355,356,357,358,359,193,194,195,144,145,146,147,148,196,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,149,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,150,408,151,152,153,154,155,156,157,158,409,410,411,412,413,414,415,416,417,159,418,160,419,420,421,422,423,424,425,426,161,162,427,163,428,164,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,197,448,449,450,451,452,453,165,454,166,455,456,457,458,459,460,461,462,463,167,198,168,464,465,466,467,468,469,470,471,472,473,169,474,475,476,477,200,478,479,480,481,482,170,171,172,173,203,483,204,174,205,175,176,484,485,486,487,488,177,178,489,179,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[91],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[453],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[498,499],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:229","failures":[41,45,49,67,298],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[5,208,239,243,32,33,34,35,37,38,39,249,251,252,253,40,254,255,41,256,257,258,259,260,261,262,263,264,42,265,266,267,268,269,43,270,271,278,45,280,282,46,283,47,48,286,185,49,186,60,61,63,64,65,293,66,295,296,207,67,68,69,297,298,301,302,93,329,329,330,330,109,331,332,342,347,350,360,361,362,363,364,365,366,367,368,382,149,384,453,165,454,166,455,456,457,458,459,460,463,488,177,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[15,16,71,72,74,76,77,81,83,86,92,103,115,141,142,410,167,170,176],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:54","failures":[5,34,38,248,39,249,251,252,253,40,254,255,41,256,257,258,259,260,261,262,263,264,42,265,266,267,268,269,43,270,271,279,281,284,286,206,287,500,501,329,330],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[13,180,182,183,273,274,275,276,101,102,103,140,190,191,192,196,167,198,168,169,204,174,175,176],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[4,5,6,226,227,228,229,7,230,231,232,8,233,9,10,236,238,11,12,13,180,14,181,15,16,17,182,183,18,19,20,21,22,23,24,25,26,27,28,29,30,31,184,32,33,34,35,36,37,38,39,40,41,42,43,277,44,278,45,46,283,47,48,185,49,186,50,51,289,52,53,290,291,54,55,56,57,292,58,59,60,61,62,63,64,65,293,66,207,67,68,69,70,71,72,73,74,75,76,77,78,1,299,79,80,81,82,2,83,84,85,86,87,88,89,300,90,91,92,3,301,302,93,303,94,315,316,95,317,318,319,96,97,98,99,100,187,101,188,102,103,321,104,105,324,106,107,108,327,329,329,330,330,109,333,110,111,112,334,113,114,115,335,336,337,338,339,116,117,340,341,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,350,139,140,189,190,141,142,191,192,143,351,352,353,356,144,145,146,147,148,196,149,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,150,408,151,152,153,154,155,156,157,158,423,427,164,436,437,438,439,440,441,452,165,166,167,198,168,464,465,466,467,468,469,470,471,472,473,169,474,475,476,477,478,479,480,481,482,170,171,172,173,203,204,174,205,175,176,484,488,177,178,179,493,494,495,496,497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.Range:36","failures":[215,216,217,218,219,4,220,221,222,223,224,225,5,6,208,226,227,228,229,7,230,231,232,8,233,234,235,9,10,236,237,238,11,12,13,180,14,181,15,16,17,182,183,18,19,239,240,241,242,243,244,245,20,21,22,23,24,25,26,27,28,29,30,31,246,184,32,33,34,35,247,36,37,38,248,39,249,250,251,252,253,40,254,255,41,256,257,258,259,260,261,262,263,264,42,265,266,267,268,269,43,270,271,272,273,274,275,276,277,44,278,279,45,280,281,282,46,283,47,284,48,285,286,185,49,287,186,288,50,51,289,52,53,290,291,54,55,56,57,292,58,59,60,61,62,63,64,65,293,294,66,295,296,207,67,68,69,297,298,70,71,72,73,214,74,75,76,77,78,1,299,79,80,81,82,2,83,84,85,86,87,88,89,300,90,91,92,3,301,302,93,303,304,305,306,307,308,94,309,310,311,312,313,314,315,316,95,317,318,319,96,97,98,99,100,187,320,101,188,102,103,321,322,104,323,105,324,106,107,325,108,326,327,328,329,330,109,331,332,333,110,111,112,334,113,114,115,335,336,337,338,339,116,117,340,341,118,342,343,344,345,346,347,348,349,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,350,139,140,189,190,141,142,191,192,143,351,352,353,354,355,356,357,358,359,193,194,195,144,145,146,147,148,196,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,149,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,150,408,151,152,153,154,155,156,157,158,409,410,411,412,413,414,415,416,417,159,418,160,419,420,421,422,423,424,425,426,161,162,427,163,428,164,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,197,448,449,450,451,452,453,165,454,166,455,456,457,458,459,460,461,462,463,167,198,168,464,465,466,467,468,469,470,471,472,473,169,474,475,476,477,200,478,479,480,481,482,170,171,172,173,203,483,204,174,205,175,176,484,485,486,487,488,177,178,489,179,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[219,221,223,224,308,310,312,313],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[288,2,89,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"threadSafe"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[5,6,208,209],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[502],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[11,180,14,181,182,183,18,19,21,25,26,29,184,45,185,49,186,61,67,69,72,84,98,187,188,102,103,139,189,190,191,192,143,193,194,195,196,197,198,168,170,203,204,205,175,176],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[13,101,103,321,140,389,393,394,396,399,407,167,198,168,169,174,176,484],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests2.UsageTest.argumentsOrdered":183,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":418,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":181,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":323,"org.easymock.tests2.DelegateToTest.testReturnException":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":437,"org.easymock.tests.MockingTest.testPartialClassMocking":177,"org.easymock.tests.MockClassControlTest.testToString":458,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":272,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":385,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":10,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests2.UsageTest.wrongArguments":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":116,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":337,"org.easymock.samples.ExampleTest.answerVsDelegate":324,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":347,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":491,"org.easymock.tests2.UsageConstraintsTest.testNull":75,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":63,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":463,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":29,"org.easymock.tests2.CaptureTest.testPrimitive":52,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":404,"org.easymock.tests.UsageTest.moreThanOneArgument":140,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":466,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":493,"org.easymock.tests.UsageTest.argumentsOrdered":192,"org.easymock.tests.UsageVarargTest.varargIntAccepted":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":144,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":278,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":313,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":148,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":4,"org.easymock.tests.ReplayStateInvalidUsageTest.times":378,"org.easymock.tests2.DependencyTest.testClassMocking":234,"org.easymock.tests2.AnswerTest.answer":7,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":229,"org.easymock.tests2.CaptureTest.testAnd":50,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":344,"org.easymock.tests2.UsageTest.strictResetToDefault":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":465,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":24,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":497,"org.easymock.tests2.DelegateToTest.testDelegate":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":400,"org.easymock.tests.LimitationsTest.mockFinalMethod":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":440,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":482,"org.easymock.tests2.DependencyTest.testClassMockingSupport":235,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":405,"org.easymock.tests2.CaptureTest.testCapture1_2446744":53,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":294,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":227,"org.easymock.tests.UsageThrowableTest.throwError":150,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":372,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":346,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":200,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":468,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":271,"org.easymock.samples.PartialClassMockTest.testGetArea":109,"org.easymock.tests.MockingTest.testInterfaceMocking":489,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":145,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":110,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":435,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":386,"org.easymock.tests2.UsageTest.niceToStrict":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":46,"org.easymock.tests2.MockBuilderTest.testCreateMock":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":222,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":394,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":210,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":25,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":477,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":335,"org.easymock.tests.UsageOverloadedMethodTest.overloading":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":269,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":472,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":130,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":113,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":82,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":56,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":445,"org.easymock.tests.MockClassControlTest.testEquals":462,"org.easymock.tests2.EasyMockSupportClassTest.testAll":40,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":454,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":402,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":480,"org.easymock.tests2.CaptureTest.testCaptureAll":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":228,"org.easymock.tests.MockNameTest.defaultName":369,"org.easymock.tests2.UsageConstraintsTest.testMatches":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":467,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":370,"org.easymock.samples.ExampleTest.voteForRemovals":108,"org.easymock.tests.UsageVarargTest.allKinds":452,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":481,"org.easymock.samples.BasicClassMockTest.testPrintContent":332,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":155,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":441,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":310,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests2.UsageConstraintsTest.greaterThan":85,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":171,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":69,"org.easymock.samples.ExampleTest.voteForRemoval":106,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":368,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":97,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":293,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":11,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":350,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":22,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":436,"org.easymock.tests2.CaptureTest.testCaptureFirst":59,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":23,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":19,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":126,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":99,"org.easymock.tests2.UsageTest.moreThanOneArgument":13,"org.easymock.tests2.CaptureTest.testCapture2_2446744":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":49,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":451,"org.easymock.tests.GenericTest.testBridgedEquals":455,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":194,"org.easymock.tests.UsageExpectAndReturnTest.longType":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":478,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":403,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":300,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":464,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":352,"org.easymock.tests.UsageCallCountTest.tooManyCalls":195,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":268,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":390,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":154,"org.easymock.tests.MockingTest.testNiceClassMocking":492,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":33,"org.easymock.tests.MockingTest.testClassMocking":487,"org.easymock.tests2.UsageConstraintsTest.testContains":81,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":355,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":93,"org.easymock.tests2.UsageConstraintsTest.testFind":74,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":115,"org.easymock.tests.MockTypeTest.fromEasyMockClass":345,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":203,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":238,"org.easymock.tests.UsageExpectAndReturnTest.object":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":28,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":447,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":433,"org.easymock.tests.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":494,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":428,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":249,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":442,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":135,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":471,"org.easymock.tests.MockClassControlTest.testHashCode":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":305,"org.easymock.tests2.EasyMockSupportTest.testVerify":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":262,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":495,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":476,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":469,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":226,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":288,"org.easymock.tests.UsageVarargTest.varargCharAccepted":446,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":360,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":163,"org.easymock.tests2.UsageTest.openCallCountByLastCall":15,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":31,"org.easymock.tests.DefaultClassInstantiatorTest.object":361,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":475,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":431,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":263,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":218,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":304,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":460,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":391,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":136,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":351,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":43,"org.easymock.tests2.UsageTest.resumeIfFailure":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":342,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":439,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":284,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":128,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":90,"org.easymock.tests2.SerializationTest.testAllMockedMethod":208,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":423,"org.easymock.samples.SupportTest.voteForRemovals":104,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":211,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":453,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":397,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":209,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":427,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":230,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":429,"org.easymock.tests.UsageExpectAndThrowTest.object":395,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":88,"org.easymock.tests2.DelegateToTest.testWrongClass":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":158,"org.easymock.tests.UsageStrictMockTest.range":175,"org.easymock.samples.ConstructorCalledMockTest.testTax":329,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":244,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":27,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":32,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":502,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":396,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":251,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":336,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":111,"org.easymock.tests2.CaptureTest.testCaptureNone":55,"org.easymock.tests.UsageUnorderedTest.message":196,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":199,"org.easymock.tests.UsageVerifyTest.twoReturns":168,"org.easymock.tests.UsageVarargTest.varargByteAccepted":450,"org.easymock.tests2.ThreadingTest.testThreadSafe":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":265,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":359,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":434,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":331,"org.easymock.tests2.CaptureTest.testCapture_2617107":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":341,"org.easymock.tests2.UsageConstraintsTest.any":79,"org.easymock.tests2.StubTest.stub":277,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":377,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":438,"org.easymock.tests.UsageExpectAndThrowTest.longType":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":162,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":365,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":376,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests.LimitationsTest.mockNativeMethod":149,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":138,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":217,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":321,"org.easymock.tests2.NameTest.nameForMocksControl":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":219,"org.easymock.tests2.MockedExceptionTest.testMockedException":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":255,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":389,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":179,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":237,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":48,"org.easymock.tests.MockingTest.testNicePartialClassMocking":178,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":65,"org.easymock.tests2.CaptureTest.testCaptureLast":54,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":215,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":406,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":38,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":89,"org.easymock.tests.MockingTest.testTwoMocks":488,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":393,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":92,"org.easymock.samples.ExampleTest.removeNonExistingDocument":326,"org.easymock.tests.UsageStrictMockTest.differentMethods":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":221,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":306,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":499,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":363,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":98,"org.easymock.tests2.MockBuilderTest.testCreateMockString":186,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":456,"org.easymock.tests.UsageExpectAndThrowTest.floatType":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":256,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":253,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":232,"org.easymock.tests.UsageVerifyTest.twoThrows":198,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":250,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":42,"org.easymock.samples.ExampleTest.voteAgainstRemoval":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":333,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":68,"org.easymock.tests.LimitationsTest.privateConstructor":383,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":501,"org.easymock.tests2.UsageConstraintsTest.testNotNull":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":156,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":301,"org.easymock.tests2.UsageTest.defaultResetToNice":17,"org.easymock.samples.ExampleTest.voteAgainstRemovals":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":134,"org.easymock.tests.UsageVarargTest.differentLength":197,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":216,"org.easymock.tests2.CallbackTest.callback":184,"org.easymock.tests2.UsageConstraintsTest.equals":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":295,"org.easymock.tests.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":340,"org.easymock.tests.UsageCallCountTest.tooFewCalls":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":338,"org.easymock.tests.UsageThrowableTest.throwCheckedException":153,"org.easymock.tests.MockingTest.testStrictClassMocking":486,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":213,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":37,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":334,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":220,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":379,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":36,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":233,"org.easymock.tests.ObjectMethodsTest.testHashCode":432,"org.easymock.tests2.CompareToTest.testGreateOrEqual":0,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":100,"org.easymock.tests2.NameTest.nameForNiceMock":275,"org.easymock.tests2.DependencyTest.testInterfaceMocking":9,"org.easymock.samples.ExampleTest.addDocument":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":266,"org.easymock.tests2.DelegateToTest.testStubDelegate":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":270,"org.easymock.tests2.AnswerTest.stubAnswer":8,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":174,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":285,"org.easymock.tests.UsageVarargTest.varargLongAccepted":449,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":159,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":137,"org.easymock.tests.UsageExpectAndReturnTest.floatType":121,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":39,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":330,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":473,"org.easymock.tests.UsageThrowableTest.noUpperLimit":408,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":312,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":239,"org.easymock.tests2.SerializationTest.test":6,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":290,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":120,"org.easymock.tests2.UsageConstraintsTest.testSame":76,"org.easymock.samples.SupportTest.addDocument":322,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":247,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":257,"org.easymock.tests.GenericTest.testPackageScope":165,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":311,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":490,"org.easymock.tests2.NameTest.nameForMock":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":131,"org.easymock.tests2.UsageStrictMockTest.differentMethods":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":287,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":399,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":430,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":173,"org.easymock.tests2.MockedExceptionTest.testRealException":303,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":420,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":117,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":381,"org.easymock.tests2.NameTest.nameForStrictMock":274,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":282,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":236,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":243,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":87,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":364,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":45,"org.easymock.tests2.UsageStrictMockTest.range":102,"org.easymock.tests2.UsageConstraintsTest.lessThan":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":21,"org.easymock.tests2.CaptureTest.testCaptureRightOne":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":261,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":498,"org.easymock.tests2.UsageConstraintsTest.testOr":77,"org.easymock.tests.UsageRangeTest.combination":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":61,"org.easymock.tests.UsageTest.wrongArguments":190,"org.easymock.tests2.MockBuilderTest.testWithConstructor":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":258,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":457,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":132,"org.easymock.tests.UsageVarargTest.varargShortAccepted":448,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":366,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":193,"org.easymock.tests2.UsageConstraintsTest.cmpTo":80,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":412,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":16,"org.easymock.tests2.CaptureTest.testCaptureFromStub":292,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":371,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":280,"org.easymock.tests.UsageTest.unexpectedCallWithArray":189,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":204,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":358,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":206,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":133,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":205,"org.easymock.samples.ExampleTest.addAndChangeDocument":327,"org.easymock.tests.UsageStrictMockTest.testVerify":485,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":328,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":483,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":479,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":146,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":125,"org.easymock.tests.LimitationsTest.abstractClass":382,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":147,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":26}}]
