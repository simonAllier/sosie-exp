[{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,14,15,16,238,239,240,241,242,243,244,245,246,247,248,1,249,2,3,4,5,6,7,250,8,10,251,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[87,88,252,201,202],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[253,52,53,254,255],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[256,257],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[258,204,206,221,227],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[259],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[213],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[27,55,59,123,165,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[260,261,262,263,264,265,266,231,267,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[268],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[23,269,37,38,39,40,52,53,254,270,271,271,272,272,144,145,146,273,274,147,275,148,149,276,277,278,155,156,157,158,177,178,180,181,182,279,183,252,280,184,281,231,236,14,16,238,239,240,241,243,244],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value","i":"i"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[207,208],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[282,283,23,284,285,269,37,38,39,286,287,288,40,289,253,52,53,254,255,290,291,292,293,294,295,296,297,270,298,299,300,301,302,303,271,272,144,145,146,273,304,274,305,306,307,147,275,148,260,149,261,276,277,308,278,309,310,155,311,156,312,313,314,315,316,317,318,157,319,320,321,322,323,158,177,178,180,181,182,279,183,324,325,252,280,184,281,326,327,328,329,231,267,330,331,332,236,14,16,238,239,240,241,243,244],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[333,281,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[207],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:551","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.getControlForLastCall()","type":"CtReturnImpl"},"failures":[334,335,17,23,26,54,336,337,338,339,340,87,88,341,92,93,342,343,127,128,139,159,160,161,185,199,201,202,234],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[294,344],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[209,210,345,214,223,224,228,229],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[346,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[51,84,217],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[271,272,304,306,260,261,348,308,349,350,351,324,231,267,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[166,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[235,352],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[253],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[333,281,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":207,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.UsageTest.argumentsOrdered":174,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":195,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":170,"org.easymock.tests2.StubTest.stubWithReturnValue":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":103,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":143,"org.easymock.tests2.SerializationTest.testAllMockedMethod":16,"org.easymock.tests2.DelegateToTest.testReturnException":245,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":334,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":351,"org.easymock.tests.MockingTest.testPartialClassMocking":37,"org.easymock.samples.SupportTest.voteForRemovals":142,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":253,"org.easymock.tests.MockClassControlTest.testToString":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":75,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":335,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":63,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":156,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":257,"org.easymock.tests.UsageExpectAndThrowTest.object":73,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":224,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":262,"org.easymock.tests2.DelegateToTest.testWrongClass":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":90,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":91,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":125,"org.easymock.tests2.UsageTest.wrongArguments":168,"org.easymock.samples.ConstructorCalledMockTest.testTax":271,"org.easymock.tests.UsageStrictMockTest.range":87,"org.easymock.samples.ExampleTest.answerVsDelegate":134,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":238,"org.easymock.tests2.UsageConstraintsTest.testNull":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":180,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":303,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":194,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":148,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":309,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":82,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests.UsageTest.moreThanOneArgument":56,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":179,"org.easymock.tests2.CaptureTest.testCaptureNone":250,"org.easymock.tests.UsageUnorderedTest.message":54,"org.easymock.tests.UsageVerifyTest.twoReturns":124,"org.easymock.tests.UsageVarargTest.varargByteAccepted":49,"org.easymock.tests2.ThreadingTest.testThreadSafe":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":341,"org.easymock.tests.UsageTest.argumentsOrdered":61,"org.easymock.tests.UsageVarargTest.varargIntAccepted":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":319,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":20,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":145,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":117,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":273,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":128,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":275,"org.easymock.tests2.UsageConstraintsTest.any":214,"org.easymock.tests2.StubTest.stub":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":121,"org.easymock.tests.UsageExpectAndThrowTest.longType":66,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":294,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":200,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":237,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":40,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":254,"org.easymock.tests2.AnswerTest.answer":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":113,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":345,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":252,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":203,"org.easymock.tests2.MockedExceptionTest.testMockedException":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":115,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":190,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":343,"org.easymock.tests2.DelegateToTest.testDelegate":248,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":259,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":67,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":39,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":149,"org.easymock.tests.MockingTest.testNicePartialClassMocking":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":78,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":182,"org.easymock.tests.LimitationsTest.mockFinalMethod":289,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":244,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":212,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":225,"org.easymock.tests.MockingTest.testTwoMocks":269,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":71,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":173,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":229,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":347,"org.easymock.tests.UsageThrowableTest.throwError":25,"org.easymock.tests.UsageStrictMockTest.differentMethods":88,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":292,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":152,"org.easymock.tests2.MockBuilderTest.testCreateMockString":278,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":312,"org.easymock.tests.UsageExpectAndThrowTest.floatType":65,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":220,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":330,"org.easymock.tests.UsageVerifyTest.twoThrows":123,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":157,"org.easymock.samples.PartialClassMockTest.testGetArea":144,"org.easymock.tests2.CompareToTest.testLessOrEqual":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":118,"org.easymock.samples.ExampleTest.voteAgainstRemoval":136,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":315,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":64,"org.easymock.tests2.UsageTest.niceToStrict":169,"org.easymock.tests.LimitationsTest.privateConstructor":288,"org.easymock.tests2.ThreadingTest.testChangeDefault":346,"org.easymock.tests2.UsageConstraintsTest.testNotNull":228,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":32,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":147,"org.easymock.tests2.MockBuilderTest.testCreateMock":276,"org.easymock.samples.ExampleTest.voteAgainstRemovals":133,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":321,"org.easymock.tests2.CallbackTest.callback":185,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":324,"org.easymock.tests.UsageTest.openCallCountByLastCall":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":72,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":191,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":127,"org.easymock.tests.UsageCallCountTest.tooFewCalls":18,"org.easymock.tests.UsageOverloadedMethodTest.overloading":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":323,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":218,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":35,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":105,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":130,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":217,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageThrowableTest.throwCheckedException":29,"org.easymock.tests.MockClassControlTest.testEquals":302,"org.easymock.tests2.EasyMockSupportClassTest.testAll":155,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":53,"org.easymock.tests.MockingTest.testStrictClassMocking":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":80,"org.easymock.tests2.CaptureTest.testCaptureAll":249,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":243,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":240,"org.easymock.tests2.UsageConstraintsTest.testMatches":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":242,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":352,"org.easymock.samples.ExampleTest.voteForRemovals":138,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":154,"org.easymock.tests.UsageVarargTest.allKinds":51,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":122,"org.easymock.tests2.DependencyTest.testInterfaceMocking":163,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":264,"org.easymock.samples.BasicClassMockTest.testPrintContent":146,"org.easymock.samples.ExampleTest.addDocument":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":320,"org.easymock.tests2.DelegateToTest.testStubDelegate":246,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":31,"org.easymock.tests2.AnswerTest.stubAnswer":235,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":266,"org.easymock.tests2.UsageConstraintsTest.greaterThan":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":281,"org.easymock.tests.UsageVarargTest.varargLongAccepted":48,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":89,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":296,"org.easymock.samples.ExampleTest.voteForRemoval":135,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":326,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":151,"org.easymock.tests.UsageExpectAndReturnTest.floatType":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":112,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":231,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":272,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":222,"org.easymock.tests.UsageThrowableTest.noUpperLimit":26,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":205,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":23,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":328,"org.easymock.tests2.SerializationTest.test":15,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":261,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":344,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":188,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":27,"org.easymock.tests2.UsageConstraintsTest.testSame":210,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":310,"org.easymock.samples.SupportTest.addDocument":141,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":189,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":176,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":313,"org.easymock.tests.GenericTest.testPackageScope":52,"org.easymock.tests2.CaptureTest.testCapture2_2446744":251,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests2.UsageTest.moreThanOneArgument":167,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":342,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":277,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":50,"org.easymock.tests.GenericTest.testBridgedEquals":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":21,"org.easymock.tests.UsageExpectAndReturnTest.longType":97,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":106,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":226,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":308,"org.easymock.tests2.UsageStrictMockTest.differentMethods":202,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":79,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":98,"org.easymock.tests.UsageCallCountTest.tooManyCalls":22,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":77,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":116,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":350,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":126,"org.easymock.tests.MockingTest.testNiceClassMocking":286,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":239,"org.easymock.tests.MockingTest.testClassMocking":285,"org.easymock.tests2.NameTest.nameForStrictMock":333,"org.easymock.tests2.UsageConstraintsTest.testContains":216,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":236,"org.easymock.tests2.UsageConstraintsTest.testFind":208,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":132,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":307,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":181,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":160,"org.easymock.tests.UsageExpectAndReturnTest.object":104,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":329,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":293,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":223,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":183,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":274,"org.easymock.tests2.UsageStrictMockTest.range":201,"org.easymock.tests2.UsageConstraintsTest.lessThan":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":263,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":46,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":268,"org.easymock.tests.UsageTest.exactCallCountByLastCall":62,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":265,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":316,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":340,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":92,"org.easymock.tests2.UsageConstraintsTest.testOr":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":267,"org.easymock.tests.UsageRangeTest.combination":114,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":42,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":178,"org.easymock.tests.UsageTest.wrongArguments":57,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":34,"org.easymock.tests2.MockBuilderTest.testWithConstructor":304,"org.easymock.tests.MockClassControlTest.testHashCode":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":314,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":270,"org.easymock.tests2.EasyMockSupportTest.testVerify":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":317,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":338,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":33,"org.easymock.tests.UsageVarargTest.varargShortAccepted":47,"org.easymock.tests2.UsageConstraintsTest.cmpTo":215,"org.easymock.tests.UsageVarargTest.varargCharAccepted":45,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests2.UsageTest.openCallCountByLastCall":171,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":172,"org.easymock.tests.DefaultClassInstantiatorTest.object":290,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":337,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":70,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":19,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":108,"org.easymock.tests2.CaptureTest.testCapture":9,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":280,"org.easymock.tests2.UsageConstraintsTest.constraints":206,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":69,"org.easymock.samples.ExampleTest.addAndChangeDocument":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":111,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":299,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":158,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests2.UsageTest.resumeIfFailure":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":119,"org.easymock.tests.LimitationsTest.abstractClass":287,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":100,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":192,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":43}}]
