[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[16,17,18,19],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,16,33,34,35,36,37,38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[39,40,41,42,43],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[44,45,46,47,48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[21,53,23,24,54,55,25,26,27,56,28,57,29,30,58,32,16,18,59,60,61,62,63,33,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,35,110,111,112,36,113,114,115,116,117,118,119,120,121,37,38,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[25,141,57,29,32,16,65,69,72,78,79,85,93,108,109,35,110,36],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[142,143,144,42],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[142,143,144,42],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[146,147,148],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[149,150,151,152,153,154,155,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,51,171,172,173,174,175,142,176,177,178,179,180,143,20,181,182,183,184,185,186,187,188,189,190,144,21,23,25,26,27,28,29,30,32,16,17,59,60,191,61,62,63,33,64,67,68,69,70,192,193,194,195,196,197,198,199,200,201,44,202,45,46,47,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,75,76,77,221,78,222,149,223,1,224,225,83,85,93,99,146,150,226,227,2,228,229,230,231,232,3,4,233,151,152,234,235,236,237,238,147,239,240,241,100,101,102,103,242,104,105,108,108,109,109,35,243,244,48,245,246,247,248,249,250,153,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,111,36,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,124,306,307,308,309,310,311,312,313,6,314,315,316,317,318,319,7,154,320,8,321,322,126,323,324,9,10,325,326,11,12,155,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,13,14,363,364,365,366,367,136,137,138,139,368,369,50,370,371,372,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[128,129,130,132,133],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[157,161,162,165,170,181,23,29,30,32,60,68,70,222,223,1,224,150,2,228,229,3,4,233,151,241,373,374,375,267,376,5,377,378,379,6,319,7,320,8,321,323,9,10,11,12,155,13,14],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[168,169,171,172,173,174,179,143,20,182,183,189,190,144,214,220,149,108,108,109,109,256,257,258,259,260,262,271,273,274,277,299,300,380,381,382,383,384,154,363,364,365,366,367],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[385,386,387,388,159,162,164,21,24,27,28,30,32,60,67,70,72,149,1,224,146,389,227,2,3,4,147,390,101,102,104,105,391,392,393,116,117,118,37,394,395,38,148,396,6,7,154,8,321,324,9,10,11,12,360,361,362,13,14,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[399],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[75,76,77,221,272,275,400,327,328,329,330,331,332,333,334,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[110,113],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[16,17,18,19],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[21,53,23,24,54,55,25,26,27,56,28,141,57,29,30,58,32,16,33,65,68,69,72,75,78,79,80,85,93,99,108,109,35,110,36,37,38],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[170,175],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[385,386,387,388,156,157,158,159,160,161,162,163,164,165,166,167,401,168,169,170,51,171,172,173,174,175,142,177,178,179,180,143,20,181,182,183,184,185,186,188,189,190,144,21,25,26,27,28,30,32,16,17,18,59,60,191,61,62,63,64,67,69,192,193,194,195,196,197,198,199,200,44,202,45,47,203,204,205,206,207,208,209,210,211,212,213,214,215,216,402,217,218,219,220,75,76,77,221,78,222,403,149,223,1,224,225,83,85,93,99,146,150,226,227,2,228,229,230,231,232,3,4,233,151,152,236,237,238,147,239,240,241,100,101,102,103,242,104,105,106,107,108,108,109,109,404,35,405,406,243,244,48,245,246,407,247,248,249,250,153,251,252,253,254,255,256,257,258,259,260,264,265,408,409,410,411,412,413,414,415,416,266,111,112,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,115,417,418,298,419,420,421,299,300,422,52,423,424,425,426,124,6,314,315,316,317,318,319,427,7,154,320,8,321,322,428,126,323,324,9,10,325,326,11,12,155,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,13,14,363,364,365,366,367,137,138,139,372],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[168,169,170,51,171,172,173,174,175,142,176,177,178,179,180,143,20,181,182,183,184,185,186,187,188,189,190,144,64,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,149,239,240,256,257,258,259,260,266,271,272,273,274,275,276,277,299,300,6,7,154,334],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":51,"org.easymock.tests2.UsageTest.argumentsOrdered":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":323,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":390,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":229,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":404,"org.easymock.tests2.DelegateToTest.testReturnException":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":331,"org.easymock.tests.MockingTest.testPartialClassMocking":137,"org.easymock.tests.MockClassControlTest.testToString":116,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":72,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":278,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":218,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":142,"org.easymock.tests2.UsageTest.wrongArguments":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":338,"org.easymock.samples.ExampleTest.answerVsDelegate":48,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":38,"org.easymock.tests2.UsageConstraintsTest.testNull":172,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":61,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":165,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":121,"org.easymock.tests2.CaptureTest.testPrimitive":206,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":297,"org.easymock.tests.UsageTest.moreThanOneArgument":324,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":365,"org.easymock.tests.UsageTest.argumentsOrdered":12,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":301,"org.easymock.tests.UsageVarargTest.varargIntAccepted":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":256,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":21,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":260,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests2.AnswerTest.answer":152,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":176,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":195,"org.easymock.tests2.CaptureTest.testAnd":203,"org.easymock.tests2.UsageTest.strictResetToDefault":226,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":160,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":269,"org.easymock.tests2.DelegateToTest.testDelegate":47,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":293,"org.easymock.tests.LimitationsTest.mockFinalMethod":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":360,"org.easymock.tests2.CaptureTest.testCapture1_2446744":207,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":193,"org.easymock.tests.UsageThrowableTest.throwError":249,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":395,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":367,"org.easymock.samples.PartialClassMockTest.testGetArea":35,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":52,"org.easymock.tests2.CompareToTest.testLessOrEqual":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":257,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":307,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":89,"org.easymock.tests2.UsageTest.niceToStrict":228,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":25,"org.easymock.tests2.MockBuilderTest.testCreateMock":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":287,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":161,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":313,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":417,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":336,"org.easymock.tests.UsageOverloadedMethodTest.overloading":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":98,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":143,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":370,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":351,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":180,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":212,"org.easymock.tests.MockClassControlTest.testEquals":120,"org.easymock.tests2.EasyMockSupportClassTest.testAll":83,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":112,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":194,"org.easymock.tests2.CaptureTest.testCaptureAll":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":316,"org.easymock.tests.MockNameTest.defaultName":397,"org.easymock.tests2.UsageConstraintsTest.testMatches":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":366,"org.easymock.samples.ExampleTest.voteForRemovals":247,"org.easymock.tests.UsageVarargTest.allKinds":266,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":362,"org.easymock.samples.BasicClassMockTest.testPrintContent":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":317,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":254,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":222,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":335,"org.easymock.tests2.UsageConstraintsTest.greaterThan":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":268,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":70,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":133,"org.easymock.samples.ExampleTest.voteForRemoval":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":71,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":33,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":126,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":158,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":330,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":201,"org.easymock.tests2.CaptureTest.testCaptureFirst":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":159,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":347,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":199,"org.easymock.tests2.CaptureTest.testCapture2_2446744":215,"org.easymock.tests2.UsageTest.moreThanOneArgument":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":30,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":416,"org.easymock.tests.GenericTest.testBridgedEquals":113,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":378,"org.easymock.tests.UsageExpectAndReturnTest.longType":343,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":314,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":296,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":187,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":294,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":363,"org.easymock.tests.UsageCallCountTest.tooManyCalls":379,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":283,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":253,"org.easymock.tests.MockingTest.testNiceClassMocking":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":101,"org.easymock.tests.MockingTest.testClassMocking":135,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":418,"org.easymock.tests2.UsageConstraintsTest.testContains":179,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":22,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":77,"org.easymock.tests2.UsageConstraintsTest.testFind":171,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":265,"org.easymock.tests.MockTypeTest.fromEasyMockClass":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":240,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndReturnTest.object":350,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":164,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":412,"org.easymock.tests.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":79,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":408,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":356,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":50,"org.easymock.tests.MockClassControlTest.testHashCode":119,"org.easymock.tests2.EasyMockSupportTest.testVerify":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":91,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":312,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":192,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":376,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":402,"org.easymock.tests.UsageVarargTest.varargCharAccepted":411,"org.easymock.tests2.CaptureTest.testCaptureMultiple":145,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":403,"org.easymock.tests2.UsageTest.openCallCountByLastCall":230,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":167,"org.easymock.tests.DefaultClassInstantiatorTest.object":127,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":311,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":391,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":285,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":251,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":284,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":357,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":327,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":99,"org.easymock.tests2.UsageTest.resumeIfFailure":233,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":333,"org.easymock.tests2.StubTest.stubWithReturnValue":220,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":56,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":349,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":309,"org.easymock.samples.SupportTest.voteForRemovals":243,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":290,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":19,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":310,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":234,"org.easymock.tests.UsageExpectAndThrowTest.object":288,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":185,"org.easymock.tests2.DelegateToTest.testWrongClass":45,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":299,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":300,"org.easymock.samples.ConstructorCalledMockTest.testTax":108,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":289,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":27,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":81,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":337,"org.easymock.tests2.CaptureTest.testCaptureNone":211,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":308,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":374,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":415,"org.easymock.tests2.ThreadingTest.testThreadSafe":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":94,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":421,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":392,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":106,"org.easymock.tests2.CaptureTest.testCapture_2617107":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":276,"org.easymock.tests2.UsageConstraintsTest.any":177,"org.easymock.tests2.StubTest.stub":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":329,"org.easymock.tests.UsageExpectAndThrowTest.longType":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":131,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":424,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":223,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests.LimitationsTest.mockNativeMethod":124,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":359,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests2.NameTest.nameForMocksControl":388,"org.easymock.tests2.MockedExceptionTest.testMockedException":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":84,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":326,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":282,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":59,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":28,"org.easymock.tests.MockingTest.testNicePartialClassMocking":138,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":63,"org.easymock.tests2.CompareToTest.testCompareEqual":41,"org.easymock.tests2.CaptureTest.testCaptureLast":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":361,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":105,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":186,"org.easymock.tests.MockingTest.testTwoMocks":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":286,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":190,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":423,"org.easymock.tests.UsageStrictMockTest.differentMethods":321,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":129,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":198,"org.easymock.tests2.MockBuilderTest.testCreateMockString":32,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":86,"org.easymock.tests.UsageExpectAndThrowTest.floatType":280,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":181,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":236,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":80,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":93,"org.easymock.samples.ExampleTest.voteAgainstRemoval":246,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":306,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":69,"org.easymock.tests.LimitationsTest.privateConstructor":123,"org.easymock.tests2.UsageConstraintsTest.testNotNull":189,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":255,"org.easymock.tests2.UsageTest.defaultResetToNice":232,"org.easymock.samples.ExampleTest.voteAgainstRemovals":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":355,"org.easymock.tests.UsageVarargTest.differentLength":373,"org.easymock.tests2.CallbackTest.callback":241,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":65,"org.easymock.tests.UsageTest.openCallCountByLastCall":325,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":275,"org.easymock.tests.UsageCallCountTest.tooFewCalls":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":103,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":339,"org.easymock.tests.UsageThrowableTest.throwCheckedException":252,"org.easymock.tests.MockingTest.testStrictClassMocking":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":389,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":102,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":425,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":242,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":238,"org.easymock.tests2.CompareToTest.testGreateOrEqual":42,"org.easymock.tests2.NameTest.nameForNiceMock":387,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":200,"org.easymock.tests2.DependencyTest.testInterfaceMocking":217,"org.easymock.samples.ExampleTest.addDocument":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":95,"org.easymock.tests2.DelegateToTest.testStubDelegate":202,"org.easymock.tests2.AnswerTest.stubAnswer":237,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":154,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":141,"org.easymock.tests.UsageVarargTest.varargLongAccepted":414,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":322,"org.easymock.tests.UsageExpectAndReturnTest.floatType":342,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":358,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":78,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":109,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":183,"org.easymock.tests.UsageThrowableTest.noUpperLimit":250,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":169,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":73,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":208,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":128,"org.easymock.tests2.UsageConstraintsTest.testSame":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":341,"org.easymock.samples.SupportTest.addDocument":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":87,"org.easymock.tests.GenericTest.testPackageScope":111,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.NameTest.nameForMock":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":352,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":58,"org.easymock.tests2.UsageStrictMockTest.differentMethods":224,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":344,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":292,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":270,"org.easymock.tests2.MockedExceptionTest.testRealException":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":149,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":274,"org.easymock.tests2.NameTest.nameForStrictMock":386,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":55,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":239,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":74,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":184,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":130,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":23,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":144,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":90,"org.easymock.tests2.CaptureTest.testCaptureRightOne":213,"org.easymock.tests2.UsageConstraintsTest.testOr":174,"org.easymock.tests.UsageRangeTest.combination":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":60,"org.easymock.tests.UsageTest.wrongArguments":10,"org.easymock.tests2.MockBuilderTest.testWithConstructor":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":88,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":353,"org.easymock.tests.UsageVarargTest.varargShortAccepted":413,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":132,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":377,"org.easymock.tests2.UsageConstraintsTest.cmpTo":178,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":235,"org.easymock.tests2.CompareToTest.testLessThan":39,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":231,"org.easymock.tests2.CaptureTest.testCaptureFromStub":214,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":422,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":24,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":420,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":354,"org.easymock.tests2.UsageConstraintsTest.constraints":170,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":320,"org.easymock.samples.ExampleTest.addAndChangeDocument":248,"org.easymock.tests.UsageStrictMockTest.testVerify":428,"org.easymock.tests2.ConstraintsToStringTest.containsToString":399,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":405,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":427,"org.easymock.tests2.CompareToTest.testGreateThan":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":315,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":209,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":258,"org.easymock.tests.LimitationsTest.abstractClass":122,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":259,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":162}}]
