[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:249","sourceCode":"return ","type":"CtReturnImpl"},"failures":[8,9,10],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[11,12,13,14,15,16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[20,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,21,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,8,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,9,10,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[26,197,198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[199,200,201,202,203,204,205],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[40,46,57,206],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[207],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[0,208,209,1,22,2,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,3,4,5,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,210,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,211,212,92,213,20,214,21,215,216,217,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,218,110,111,112,113,114,115,116,117,118,119,120,121,122,123,204,204,205,205,124,125,6,126,127,128,219,129,130,131,132,133,220,221,222,223,224,225,8,134,135,226,196,141,142,143,227,16,144,145,146,147,228,229,230,231,232,233,148,7,234,235,149,150,236,151,152,153,154,237,238,155,156,239,157,240,241,242,243,244,9,10,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,178,179,180,181,182,266,267,19,268,269,270,183,184,185,271,186,187,188,189,190,191,192,272,193,194,195,273],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[23,24,25,95,274,275,276,277,141,142,143,156,239,157,245,179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,46,47,278,48,57,58,61,62,69,70,206,71,76,210],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[279,280,281,282,283,284,285,286,287,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[20,21,289],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[290,291,292,293,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:230","sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[296,297,298],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value","properties":"properties","key":"value"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[216],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[93,98,239,178,181,186],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":41,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":178,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":289,"org.easymock.tests2.StubTest.stubWithReturnValue":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":286,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":167,"org.easymock.tests2.DelegateToTest.testReturnException":214,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":221,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":198,"org.easymock.tests.MockingTest.testPartialClassMocking":193,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":291,"org.easymock.samples.SupportTest.voteForRemovals":124,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":246,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":196,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":35,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":208,"org.easymock.tests.UsageExpectAndThrowTest.object":256,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":274,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":58,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":279,"org.easymock.tests2.DelegateToTest.testWrongClass":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":183,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":184,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":153,"org.easymock.samples.ConstructorCalledMockTest.testTax":204,"org.easymock.tests.UsageStrictMockTest.range":142,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":103,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":257,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":114,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":89,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":66,"org.easymock.tests2.CaptureTest.testPrimitive":71,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":265,"org.easymock.tests.UsageTest.moreThanOneArgument":179,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":113,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":242,"org.easymock.tests2.CaptureTest.testCaptureNone":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":152,"org.easymock.tests.UsageUnorderedTest.message":245,"org.easymock.tests.UsageVerifyTest.twoReturns":157,"org.easymock.tests2.ThreadingTest.testThreadSafe":29,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":266,"org.easymock.tests2.CaptureTest.testCapture_2617107":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":284,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":138,"org.easymock.tests2.UsageConstraintsTest.any":48,"org.easymock.tests2.StubTest.stub":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":133,"org.easymock.tests.UsageExpectAndThrowTest.longType":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":139,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":296,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":79,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":28,"org.easymock.tests.LimitationsTest.mockNativeMethod":148,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":177,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":278,"org.easymock.tests2.CaptureTest.testAnd":69,"org.easymock.tests2.UsageTest.strictResetToDefault":94,"org.easymock.tests2.MockedExceptionTest.testMockedException":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":146,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":181,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":269,"org.easymock.tests2.DelegateToTest.testDelegate":217,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":299,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":250,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":195,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":67,"org.easymock.tests.MockingTest.testNicePartialClassMocking":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":261,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":116,"org.easymock.tests2.CaptureTest.testCaptureLast":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":270,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":109,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":207,"org.easymock.tests2.CaptureTest.testCapture1_2446744":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":158,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":254,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":62,"org.easymock.tests.UsageThrowableTest.throwError":185,"org.easymock.tests.UsageStrictMockTest.differentMethods":143,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":31,"org.easymock.tests.UsageExpectAndThrowTest.floatType":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":244,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":54,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":1,"org.easymock.tests.UsageVerifyTest.twoThrows":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":36,"org.easymock.samples.PartialClassMockTest.testGetArea":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":130,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":137,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":247,"org.easymock.tests2.UsageTest.niceToStrict":96,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":11,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.UsageTest.defaultResetToNice":99,"org.easymock.samples.ExampleTest.voteAgainstRemovals":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":173,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":203,"org.easymock.tests.UsageTest.openCallCountByLastCall":180,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":255,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":85,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":38,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":237,"org.easymock.tests.UsageOverloadedMethodTest.overloading":134,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":235,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":52,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":106,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":169,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":297,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":51,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":75,"org.easymock.tests.UsageThrowableTest.throwCheckedException":188,"org.easymock.tests2.EasyMockSupportClassTest.testAll":34,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":294,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":263,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":201,"org.easymock.tests2.CaptureTest.testCaptureAll":70,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":105,"org.easymock.tests2.UsageConstraintsTest.testMatches":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":107,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":243,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":17,"org.easymock.samples.ExampleTest.voteForRemovals":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":283,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":33,"org.easymock.tests2.DependencyTest.testInterfaceMocking":121,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":281,"org.easymock.tests2.DelegateToTest.testStubDelegate":21,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":190,"org.easymock.tests2.AnswerTest.stubAnswer":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":225,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":216,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":285,"org.easymock.tests2.UsageConstraintsTest.greaterThan":55,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":145,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":120,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":136,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":30,"org.easymock.tests.UsageExpectAndReturnTest.floatType":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":176,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":102,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":205,"org.easymock.tests.UsageThrowableTest.noUpperLimit":271,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":56,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":227,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":39,"org.easymock.tests2.SerializationTest.test":27,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":197,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":82,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":186,"org.easymock.tests2.UsageConstraintsTest.testSame":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":220,"org.easymock.tests2.CaptureTest.testCaptureFirst":78,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":83,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":165,"org.easymock.tests.GenericTest.testPackageScope":9,"org.easymock.tests2.UsageTest.moreThanOneArgument":95,"org.easymock.tests2.CaptureTest.testCapture2_2446744":77,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":32,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":268,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":12,"org.easymock.tests.UsageExpectAndReturnTest.longType":161,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":170,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":262,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":202,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":240,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":232,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":260,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":147,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":273,"org.easymock.tests2.MockedExceptionTest.testRealException":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":14,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":251,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":104,"org.easymock.tests2.UsageConstraintsTest.testContains":50,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":92,"org.easymock.tests2.UsageConstraintsTest.testFind":42,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":135,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":3,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":115,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":4,"org.easymock.tests.UsageExpectAndReturnTest.object":168,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":275,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":117,"org.easymock.tests.ErrorMessageTest.testGetters":276,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":64,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":280,"org.easymock.tests.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":13,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":282,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":81,"org.easymock.tests2.CaptureTest.testCaptureRightOne":76,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":267,"org.easymock.tests2.UsageConstraintsTest.testOr":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":288,"org.easymock.tests.UsageRangeTest.combination":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":112,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":174,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":234,"org.easymock.tests2.MockBuilderTest.testWithConstructor":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":171,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":19,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":229,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":7,"org.easymock.tests2.UsageConstraintsTest.cmpTo":49,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":140,"org.easymock.tests2.UsageTest.openCallCountByLastCall":97,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":98,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":91,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":228,"org.easymock.tests2.CaptureTest.testCaptureFromStub":210,"org.easymock.tests.UsageTest.unexpectedCallWithArray":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":253,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":187,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":200,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":172,"org.easymock.tests2.UsageConstraintsTest.constraints":40,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":252,"org.easymock.samples.ExampleTest.addAndChangeDocument":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":37,"org.easymock.tests2.UsageTest.resumeIfFailure":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":132,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":86}}]
