[{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.LastControl:92","failures":[0],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[1,2,3,4],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[1,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:37","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.String).matcher(((java.lang.String)(java.lang.Object))).find())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:157","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getMockedType(java.lang.Object)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[59],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,74,75,75,76,77,78,79,80,81,82,1,2,3,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,59,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,0,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,12,233,234,235,13,236,237,238,239,240,241,242,15,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,16,17,18,19,20,21,22,23,24,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,25,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,46,377,378,47,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,48,49,50,51,462,463,464,465,466,467,468,469,470,471,52,53,54,55,56,472,57,473,474,58,475,476,477,478,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[60,61,62,63,65,67,70,72,74,74,75,75,77,78,79,80,81,82,1,2,85,86,92,103,104,105,107,114,116,117,119,59,120,122,124,125,126,129,130,131,132,134,135,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,176,179,189,195,199,202,204,205,208,215,222,223,224,225,231,232,12,233,234,235,13,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,267,16,20,21,22,270,272,273,275,277,278,279,280,281,282,283,284,289,290,291,292,293,294,295,296,297,298,299,301,303,304,305,306,307,308,309,310,25,311,312,313,314,315,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,350,351,352,353,354,42,44,358,360,361,376,381,382,385,386,389,392,399,406,407,408,425,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,50,462,463,464,470,471,55,56,57,475,476,477,478,479],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[61,78,80,81,82,272,411],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,1,2,3,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,480,481,482,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,59,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,0,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,483,198,7,199,200,8,201,202,203,204,9,205,484,206,207,208,11,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,12,233,485,234,235,13,14,236,237,238,239,240,241,242,15,486,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,16,17,18,19,20,21,22,23,24,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,25,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,26,27,28,29,30,31,32,33,487,34,35,36,37,38,39,488,40,41,42,43,44,45,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,46,489,490,377,378,47,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,491,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,48,49,50,51,462,463,464,465,466,467,468,469,470,471,52,53,54,55,56,472,57,473,474,58,475,476,477,478,479],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[492,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[74,74,75,75,104,114,142,145,146,150,151,152,153,158,160,161,163,164,170,171,172,280,281,284,306,307,308,309,310,358,364,376,409,413,414,423,428,457,458,459,460,461,470,475,476],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[116,121,127,128,276,495,496,357,360,383,384,387,388,399,463,464],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[104,119,125,222,223,224,225,273,282,283,289,291,292,293,294,295,296,311,312,313,314,315,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,381,386,408,463,471],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,67,68,69,70,71,72,73,76,78,79,80,82,1,2,3,85,86,92,103,104,105,107,113,114,115,116,117,118,119,59,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,176,179,189,195,202,204,205,215,224,231,232,12,233,234,235,13,236,239,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,16,21,270,272,273,275,280,281,282,283,284,289,290,291,292,293,294,295,296,25,315,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,345,346,347,348,349,42,43,356,357,358,359,360,361,362,381,382,384,385,386,387,388,389,392,393,394,395,397,398,399,406,407,408,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,50,462,463,464,470,55,56,57,475,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[492,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[1,2,3,4],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[246,23,367],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[116,497,498,360,399,463,464],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[499],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[60,61,62,63,64,65,67,68,69,70,71,72,73,74,74,75,75,76,77,78,79,80,81,82,1,2,3,85,86,92,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,59,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,176,179,189,195,198,199,202,203,204,205,207,208,209,215,222,223,224,225,227,228,229,230,231,232,12,233,234,235,13,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,16,19,20,21,22,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,25,311,312,313,314,315,316,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,42,43,44,355,356,357,358,359,360,361,362,363,376,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399,406,407,408,425,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,50,462,463,464,465,466,467,468,469,470,471,54,55,56,57,475,476,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[302],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[34,35,36,37,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[492,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[105,107,108,114,115,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,0,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,483,198,247,249,16,19,280,281,282,283,284,315,316,349,357,358,399,401,457,458,459,460,461,470,471,475,476],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[500],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[61,70,79,82,104,105,107,114,116,117,59,120,122,124,125,129,132,134,135,138,139,140,141,144,145,146,147,148,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,169,170,171,172,202,240,241,243,244,245,249,250,251,254,255,258,260,266,21,280,281,284,289,292,293,294,295,296,315,318,319,322,324,325,326,327,329,330,331,332,334,335,336,337,358,360,361,381,382,385,386,407,408,433,434,435,436,437,438,441,443,444,445,446,448,449,450,451,453,454,455,456,457,458,459,460,461,462,463,470,475,476],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":148,"org.easymock.tests2.UsageTest.argumentsOrdered":128,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":381,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":419,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":123,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":76,"org.easymock.tests2.DelegateToTest.testReturnException":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":312,"org.easymock.tests.MockingTest.testPartialClassMocking":55,"org.easymock.tests.MockClassControlTest.testToString":28,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":226,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":183,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":318,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":86,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":155,"org.easymock.tests2.UsageTest.wrongArguments":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":280,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":287,"org.easymock.samples.ExampleTest.answerVsDelegate":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":47,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":474,"org.easymock.tests2.UsageConstraintsTest.testNull":151,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":265,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":33,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":258,"org.easymock.tests2.CaptureTest.testPrimitive":134,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":337,"org.easymock.tests.UsageTest.moreThanOneArgument":382,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":308,"org.easymock.tests.UsageTest.argumentsOrdered":388,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":350,"org.easymock.tests.UsageVarargTest.varargIntAccepted":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":457,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":198,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":220,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":461,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":92,"org.easymock.tests.ReplayStateInvalidUsageTest.times":372,"org.easymock.tests2.DependencyTest.testClassMocking":83,"org.easymock.tests2.AnswerTest.answer":236,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":426,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":111,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":490,"org.easymock.tests2.CaptureTest.testAnd":131,"org.easymock.tests2.UsageTest.strictResetToDefault":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":8,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":253,"org.easymock.tests2.DelegateToTest.testDelegate":82,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":333,"org.easymock.tests.LimitationsTest.mockFinalMethod":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":469,"org.easymock.tests2.DependencyTest.testClassMockingSupport":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":300,"org.easymock.tests2.CaptureTest.testCapture1_2446744":135,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":109,"org.easymock.tests.UsageThrowableTest.throwError":289,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":366,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":378,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":491,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":310,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":197,"org.easymock.samples.PartialClassMockTest.testGetArea":70,"org.easymock.tests.MockingTest.testInterfaceMocking":472,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":458,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":304,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":184,"org.easymock.tests2.UsageTest.niceToStrict":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":319,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":202,"org.easymock.tests2.MockBuilderTest.testCreateMock":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":95,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":327,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":489,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":390,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":285,"org.easymock.tests.UsageOverloadedMethodTest.overloading":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":194,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":160,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":448,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":406,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":499,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":159,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":140,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":341,"org.easymock.tests2.EasyMockSupportClassTest.testAll":176,"org.easymock.tests.MockClassControlTest.testEquals":32,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":43,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":467,"org.easymock.tests2.CaptureTest.testCaptureAll":132,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":110,"org.easymock.tests.MockNameTest.defaultName":317,"org.easymock.tests2.UsageConstraintsTest.testMatches":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":309,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":364,"org.easymock.samples.ExampleTest.voteForRemovals":65,"org.easymock.tests.UsageVarargTest.allKinds":349,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":462,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":468,"org.easymock.samples.BasicClassMockTest.testPrintContent":69,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":295,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":112,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":316,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":488,"org.easymock.tests2.UsageConstraintsTest.greaterThan":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":22,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":40,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":23,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":245,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":379,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":268,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":119,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":25,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":251,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":311,"org.easymock.tests2.CaptureTest.testCaptureFirst":144,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":252,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":130,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":444,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests2.UsageTest.moreThanOneArgument":120,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":427,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":208,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":348,"org.easymock.tests.GenericTest.testBridgedEquals":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":397,"org.easymock.tests.UsageExpectAndReturnTest.longType":440,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":465,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":336,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":168,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":334,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":306,"org.easymock.tests.UsageCallCountTest.tooManyCalls":398,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":445,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":323,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":294,"org.easymock.tests.MockingTest.testNiceClassMocking":58,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":232,"org.easymock.tests.MockingTest.testClassMocking":53,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":391,"org.easymock.tests2.UsageConstraintsTest.testContains":158,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":224,"org.easymock.tests2.UsageConstraintsTest.testFind":150,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":408,"org.easymock.tests.MockTypeTest.fromEasyMockClass":377,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":107,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":355,"org.easymock.tests.UsageExpectAndReturnTest.object":447,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":257,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":343,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":403,"org.easymock.tests.UsageTest.exactCallCountByLastCall":389,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":453,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":272,"org.easymock.tests.MockClassControlTest.testHashCode":31,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":211,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":186,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":298,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":495,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":108,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":483,"org.easymock.tests.UsageVarargTest.varargCharAccepted":342,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":487,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":432,"org.easymock.tests2.UsageTest.openCallCountByLastCall":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":493,"org.easymock.tests.DefaultClassInstantiatorTest.object":34,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":297,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":401,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":187,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":325,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":90,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":210,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":30,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":324,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":454,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":277,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":195,"org.easymock.tests2.UsageTest.resumeIfFailure":129,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":314,"org.easymock.tests2.StubTest.stubWithReturnValue":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":446,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":169,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":425,"org.easymock.samples.SupportTest.voteForRemovals":72,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":330,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":431,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":237,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":479,"org.easymock.tests.UsageExpectAndThrowTest.object":328,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":166,"org.easymock.tests2.DelegateToTest.testWrongClass":80,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":475,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":476,"org.easymock.samples.ConstructorCalledMockTest.testTax":74,"org.easymock.tests.UsageStrictMockTest.range":360,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":101,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":329,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":204,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":173,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":286,"org.easymock.tests2.CaptureTest.testCaptureNone":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":305,"org.easymock.tests.UsageUnorderedTest.message":399,"org.easymock.tests.UsageVerifyTest.twoReturns":464,"org.easymock.tests.UsageVarargTest.varargByteAccepted":347,"org.easymock.tests2.ThreadingTest.testThreadSafe":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":190,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":395,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":404,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":68,"org.easymock.tests2.CaptureTest.testCapture_2617107":133,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":283,"org.easymock.tests2.UsageConstraintsTest.any":156,"org.easymock.tests2.StubTest.stub":103,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":371,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":313,"org.easymock.tests.UsageExpectAndThrowTest.longType":321,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":38,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":370,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":115,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests.LimitationsTest.mockNativeMethod":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":456,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":89,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":118,"org.easymock.tests2.NameTest.nameForMocksControl":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":91,"org.easymock.tests2.MockedExceptionTest.testMockedException":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":178,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":386,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":106,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":322,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":262,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":205,"org.easymock.tests.MockingTest.testNicePartialClassMocking":56,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":267,"org.easymock.tests2.CaptureTest.testCaptureLast":138,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":87,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":301,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":154,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":13,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":167,"org.easymock.tests.MockingTest.testTwoMocks":54,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":326,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":127,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":171,"org.easymock.samples.ExampleTest.removeNonExistingDocument":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":94,"org.easymock.tests.UsageStrictMockTest.differentMethods":361,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":212,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":36,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":246,"org.easymock.tests2.MockBuilderTest.testCreateMockString":209,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":180,"org.easymock.tests.UsageExpectAndThrowTest.floatType":320,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":175,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":486,"org.easymock.tests.UsageVerifyTest.twoThrows":463,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":189,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":303,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":21,"org.easymock.tests.LimitationsTest.privateConstructor":49,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":6,"org.easymock.tests2.UsageConstraintsTest.testNotNull":170,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":296,"org.easymock.tests2.UsageTest.defaultResetToNice":126,"org.easymock.samples.ExampleTest.voteAgainstRemovals":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":421,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":88,"org.easymock.tests.UsageVarargTest.differentLength":344,"org.easymock.tests2.CallbackTest.callback":243,"org.easymock.tests2.UsageConstraintsTest.equals":149,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":17,"org.easymock.tests.UsageTest.openCallCountByLastCall":385,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":282,"org.easymock.tests.UsageCallCountTest.tooFewCalls":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":288,"org.easymock.tests.UsageThrowableTest.throwCheckedException":293,"org.easymock.tests.MockingTest.testStrictClassMocking":52,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":471,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":235,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":93,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":234,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":241,"org.easymock.tests.ObjectMethodsTest.testHashCode":402,"org.easymock.tests2.NameTest.nameForNiceMock":229,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":248,"org.easymock.tests2.DependencyTest.testInterfaceMocking":85,"org.easymock.samples.ExampleTest.addDocument":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":191,"org.easymock.tests2.DelegateToTest.testStubDelegate":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":196,"org.easymock.tests2.AnswerTest.stubAnswer":240,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":358,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":484,"org.easymock.tests.UsageVarargTest.varargLongAccepted":346,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":455,"org.easymock.tests.UsageExpectAndReturnTest.floatType":439,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":242,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":75,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":219,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests.UsageThrowableTest.noUpperLimit":290,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":146,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":99,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":136,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":438,"org.easymock.tests2.UsageConstraintsTest.testSame":152,"org.easymock.samples.SupportTest.addDocument":71,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":485,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":181,"org.easymock.tests.GenericTest.testPackageScope":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":218,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":473,"org.easymock.tests2.NameTest.nameForMock":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":449,"org.easymock.tests2.UsageStrictMockTest.differentMethods":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":441,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":332,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":400,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":436,"org.easymock.tests2.MockedExceptionTest.testRealException":225,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":422,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":281,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":375,"org.easymock.tests2.NameTest.nameForStrictMock":228,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":494,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":266,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":100,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":497,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":165,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":37,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":199,"org.easymock.tests2.UsageStrictMockTest.range":116,"org.easymock.tests2.UsageConstraintsTest.lessThan":172,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":141,"org.easymock.tests2.UsageConstraintsTest.testOr":153,"org.easymock.tests.UsageRangeTest.combination":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":263,"org.easymock.tests.UsageTest.wrongArguments":384,"org.easymock.tests2.MockBuilderTest.testWithConstructor":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":182,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":27,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":410,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":39,"org.easymock.tests.UsageVarargTest.varargShortAccepted":345,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":396,"org.easymock.tests2.UsageConstraintsTest.cmpTo":157,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":412,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":125,"org.easymock.tests2.CaptureTest.testCaptureFromStub":142,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":365,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":200,"org.easymock.tests.UsageTest.unexpectedCallWithArray":383,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":357,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":394,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":451,"org.easymock.tests2.UsageConstraintsTest.constraints":147,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":359,"org.easymock.samples.ExampleTest.addAndChangeDocument":67,"org.easymock.tests2.ConstraintsToStringTest.notToString":500,"org.easymock.tests.UsageStrictMockTest.testVerify":363,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":73,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":356,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":466,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":459,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":443,"org.easymock.tests.LimitationsTest.abstractClass":48,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":460,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":275,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":255,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":339}}]
