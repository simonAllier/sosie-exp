[{"position":"org.easymock.internal.matchers.Equals:37","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[180,181],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[182,183],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[184,185,186,187,188,189,190],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[191,192,193,194,195,196],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[197],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[0,1,2,3,4,5,6,191,198,7,8,199,200,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,201,35,36,37,38,39,202,203,204,205,206,207,208,209,210,211,40,212,213,214,215,216,217,218,219,41,42,43,220,221,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,222,223,224,225,226,227,84,85,86,87,88,89,90,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,91,194,92,93,94,95,96,250,97,98,251,252,253,254,255,256,257,258,99,100,101,102,103,104,259,105,106,107,108,109,110,111,260,112,261,261,262,262,113,114,115,116,117,118,119,263,120,121,122,123,264,265,266,124,125,267,268,126,269,127,128,270,271,272,129,130,273,131,274,275,132,276,277,278,279,280,133,281,282,283,284,134,285,135,286,136,137,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,138,302,180,139,140,141,303,304,305,306,307,308,309,310,311,312,313,142,143,144,314,145,146,147,148,149,150,151,152,153,315,316,154,155,156,157,158,159,160,317,161,162,163,164,318,319,320,321,322,323,324,325,326,165,327,166,167,168,169,170,171,172,173,328,329,330,331,332,333,334,335,174,175,336,337,338,339,340,176,177,341,178,342,343,179],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[152,153,315],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[174,336,337,338,339,340,176,341,344,178,342,179],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,191,198,7,8,199,200,9,345,345,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,201,35,36,37,38,39,202,205,206,207,208,209,210,211,40,212,213,214,215,216,218,219,41,42,43,221,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,222,223,224,225,226,227,84,85,86,87,88,89,90,228,242,243,244,245,249,91,194,92,93,94,95,96,97,98,99,100,101,102,103,104,259,105,106,107,108,109,110,111,112,261,262,113,114,115,116,117,118,119,263,120,121,122,123,264,265,266,124,125,267,268,126,269,127,128,270,271,272,129,130,273,131,274,275,132,276,277,278,279,280,133,281,282,283,284,134,285,135,286,136,137,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,138,302,180,139,140,141,303,304,305,306,307,308,309,310,311,312,313,142,143,144,314,145,146,147,148,149,150,151,152,153,315,316,154,155,156,157,158,159,160,317,161,162,163,164,318,323,324,325,326,165,327,166,167,168,169,170,171,172,173,329,330,331,332,333,334,335,174,175,336,337,338,339,340,176,177,341,178,342,343,179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[269,277,308,324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[191,198,7,8,199,200,9,192,193,346,194,92,195,196,117],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[41,107,139,140,303,312,313,146],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[347,348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,191,198,7,8,199,200,9,349,350,351,352,353,354,355,356,357,358,359,360,361,362,346,363,364,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,365,33,34,201,35,36,37,38,39,202,203,204,205,206,207,208,209,210,211,366,40,212,367,368,369,213,214,370,215,371,372,373,216,217,218,219,41,374,42,43,375,220,221,44,45,46,376,377,378,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,222,223,224,225,226,197,227,84,379,380,85,86,87,88,89,90,381,382,228,383,229,230,231,232,233,234,235,236,237,238,239,240,384,241,182,385,386,387,183,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,242,243,244,245,414,246,247,248,415,416,249,91,194,92,93,94,95,96,250,97,98,417,418,419,420,421,422,423,424,425,426,251,252,253,254,255,256,257,258,99,100,101,102,103,104,259,105,106,107,108,109,110,111,260,112,261,262,113,114,115,116,117,118,119,263,120,121,122,123,264,265,266,124,125,267,427,268,428,429,430,126,269,127,184,128,431,432,270,271,433,272,347,348,129,130,273,131,274,275,132,276,277,434,278,435,436,279,280,133,281,437,438,282,283,284,134,439,285,135,286,136,137,287,440,288,289,290,291,292,293,294,295,296,297,298,299,300,301,138,302,180,139,441,442,140,141,303,304,305,306,307,308,309,310,311,312,443,313,142,143,144,314,145,146,444,445,446,447,448,147,449,450,451,452,453,454,455,148,149,150,456,151,152,153,315,316,190,457,154,155,156,157,158,159,160,317,161,162,163,164,318,458,319,320,321,322,459,460,461,462,463,464,465,466,467,468,323,469,470,324,471,472,473,474,475,476,477,478,479,325,480,481,482,483,484,326,485,486,487,488,489,490,491,165,492,493,494,495,496,497,327,166,167,168,169,170,171,172,173,328,329,330,331,332,498,333,334,335,499,174,175,336,337,338,339,340,176,177,341,178,342,343,179],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[500,501,502],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[284,134,135,136,137,440,297,138,174,336,178],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[39,40,212,47,48,49,50,51,52,89,194,92,97,98,99,100,101,102,103,278,282,283,284,134,285,135,286,136,137,287,440,288,289,290,291,292,293,294,295,296,297,298,299,300,301,138,302,180,312,313,314,167,328,174,175,336,337,338,339,340,176,177,341,178,342,343,179],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[232],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[182,183],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[284,134,136,137,440,297,174,336,178],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[137,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[284,134,135,136,137,440,297,138,174,336,178],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[503,504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[131,279,281,479,485,486,331,499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[197],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[284,137,174,336,178],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[51,172],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[197],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[191,192,193,194,195,196],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":134,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.UsageTest.argumentsOrdered":266,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":400,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":121,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":105,"org.easymock.tests2.DelegateToTest.testReturnException":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":86,"org.easymock.tests.MockingTest.testPartialClassMocking":213,"org.easymock.tests.MockClassControlTest.testToString":253,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":458,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":474,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":10,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":324,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":48,"org.easymock.tests2.UsageTest.wrongArguments":263,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":497,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":244,"org.easymock.samples.ExampleTest.answerVsDelegate":107,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":357,"org.easymock.tests2.UsageConstraintsTest.testNull":135,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":372,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":275,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":162,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":258,"org.easymock.tests2.CaptureTest.testPrimitive":337,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":29,"org.easymock.tests.UsageTest.moreThanOneArgument":6,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":2,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":421,"org.easymock.tests.UsageTest.argumentsOrdered":200,"org.easymock.tests.UsageVarargTest.varargIntAccepted":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":189,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":267,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":461,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":453,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":103,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":165,"org.easymock.tests.ReplayStateInvalidUsageTest.times":237,"org.easymock.tests2.DependencyTest.testClassMocking":347,"org.easymock.tests2.AnswerTest.answer":139,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":407,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":307,"org.easymock.tests2.CaptureTest.testAnd":174,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":354,"org.easymock.tests2.UsageTest.strictResetToDefault":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":158,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":218,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":425,"org.easymock.tests2.DelegateToTest.testDelegate":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":25,"org.easymock.tests.LimitationsTest.mockFinalMethod":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":226,"org.easymock.tests2.DependencyTest.testClassMockingSupport":348,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":376,"org.easymock.tests2.CaptureTest.testCapture1_2446744":338,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":23,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":305,"org.easymock.tests.UsageThrowableTest.throwError":76,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":231,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":356,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":454,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":426,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":486,"org.easymock.samples.PartialClassMockTest.testGetArea":259,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":232,"org.easymock.tests.MockingTest.testInterfaceMocking":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":475,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":416,"org.easymock.tests2.UsageTest.niceToStrict":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":11,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":126,"org.easymock.tests2.MockBuilderTest.testCreateMock":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":19,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":195,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":242,"org.easymock.tests.UsageOverloadedMethodTest.overloading":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":479,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":43,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":292,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":67,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":291,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":341,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":365,"org.easymock.tests.MockClassControlTest.testEquals":257,"org.easymock.tests2.EasyMockSupportClassTest.testAll":323,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":84,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":27,"org.easymock.tests2.CaptureTest.testCaptureAll":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":306,"org.easymock.tests.MockNameTest.defaultName":366,"org.easymock.tests2.UsageConstraintsTest.testMatches":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":3,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":229,"org.easymock.samples.ExampleTest.voteForRemovals":111,"org.easymock.tests.UsageVarargTest.allKinds":39,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":53,"org.easymock.samples.BasicClassMockTest.testPrintContent":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":225,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":82,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":327,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":456,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":90,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":388,"org.easymock.tests2.UsageConstraintsTest.greaterThan":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":217,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":281,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":389,"org.easymock.samples.ExampleTest.voteForRemoval":108,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":437,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":143,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":277,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":202,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":156,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":85,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":455,"org.easymock.tests2.CaptureTest.testCaptureFirst":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":157,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":221,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":314,"org.easymock.tests2.CaptureTest.testCapture2_2446744":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":408,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":271,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":38,"org.easymock.tests.GenericTest.testBridgedEquals":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":210,"org.easymock.tests.UsageExpectAndReturnTest.longType":59,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":222,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":28,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":420,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":361,"org.easymock.tests.UsageCallCountTest.tooManyCalls":211,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":496,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":81,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":330,"org.easymock.tests.MockingTest.testNiceClassMocking":373,"org.easymock.tests.MockingTest.testClassMocking":368,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":503,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":204,"org.easymock.tests2.UsageConstraintsTest.testContains":290,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":310,"org.easymock.tests2.UsageConstraintsTest.testFind":285,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":46,"org.easymock.tests.MockTypeTest.fromEasyMockClass":355,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":313,"org.easymock.tests.UsageExpectAndReturnTest.object":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":495,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":186,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":34,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":248,"org.easymock.tests.UsageTest.exactCallCountByLastCall":9,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":422,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":190,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":30,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":42,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":445,"org.easymock.tests.MockClassControlTest.testHashCode":256,"org.easymock.tests2.EasyMockSupportTest.testVerify":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":477,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":423,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":41,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":304,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":328,"org.easymock.tests.UsageVarargTest.varargCharAccepted":33,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":384,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":501,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":164,"org.easymock.tests.DefaultClassInstantiatorTest.object":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":346,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":478,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":490,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":444,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":16,"org.easymock.tests.CapturesMatcherTest.test":345,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":360,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":326,"org.easymock.tests2.UsageTest.resumeIfFailure":124,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":88,"org.easymock.tests2.StubTest.stubWithReturnValue":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":301,"org.easymock.tests2.SerializationTest.testAllMockedMethod":315,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":406,"org.easymock.samples.SupportTest.voteForRemovals":116,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":196,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":447,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":22,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":412,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":441,"org.easymock.tests.UsageExpectAndThrowTest.object":20,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":351,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":298,"org.easymock.tests2.DelegateToTest.testWrongClass":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":97,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":98,"org.easymock.tests.UsageStrictMockTest.range":94,"org.easymock.samples.ConstructorCalledMockTest.testTax":261,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":464,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":466,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":199,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":419,"org.easymock.tests2.CaptureTest.testCaptureNone":177,"org.easymock.tests.UsageUnorderedTest.message":47,"org.easymock.tests.UsageVerifyTest.twoReturns":55,"org.easymock.tests.UsageVarargTest.varargByteAccepted":37,"org.easymock.tests2.ThreadingTest.testThreadSafe":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":480,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":208,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":415,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":113,"org.easymock.tests2.CaptureTest.testCapture_2617107":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":51,"org.easymock.tests2.UsageConstraintsTest.any":288,"org.easymock.tests2.StubTest.stub":172,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndThrowTest.longType":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":87,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":387,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":235,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":168,"org.easymock.tests2.SerializationTest.testClass":152,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests.LimitationsTest.mockNativeMethod":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":75,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":489,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests2.NameTest.nameForMocksControl":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":491,"org.easymock.tests2.MockedExceptionTest.testMockedException":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":470,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":8,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":443,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":14,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":215,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":273,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":128,"org.easymock.tests.MockingTest.testNicePartialClassMocking":214,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":487,"org.easymock.tests2.CaptureTest.testCaptureLast":176,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":377,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":137,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":335,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":299,"org.easymock.tests.MockingTest.testTwoMocks":369,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":499,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":18,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":265,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":302,"org.easymock.samples.ExampleTest.removeNonExistingDocument":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":493,"org.easymock.tests.UsageStrictMockTest.differentMethods":95,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":233,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":446,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":385,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":144,"org.easymock.tests2.MockBuilderTest.testCreateMockString":272,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":471,"org.easymock.tests.UsageExpectAndThrowTest.floatType":12,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":457,"org.easymock.tests.UsageVerifyTest.twoThrows":54,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":325,"org.easymock.samples.ExampleTest.voteAgainstRemoval":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":133,"org.easymock.tests.LimitationsTest.privateConstructor":382,"org.easymock.tests2.UsageConstraintsTest.testNotNull":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":83,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":308,"org.easymock.tests2.UsageTest.defaultResetToNice":264,"org.easymock.samples.ExampleTest.voteAgainstRemovals":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":488,"org.easymock.tests.UsageVarargTest.differentLength":201,"org.easymock.tests2.CallbackTest.callback":146,"org.easymock.tests2.UsageConstraintsTest.equals":439,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":435,"org.easymock.tests.UsageTest.openCallCountByLastCall":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":50,"org.easymock.tests.UsageCallCountTest.tooFewCalls":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":245,"org.easymock.tests.UsageThrowableTest.throwCheckedException":80,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":193,"org.easymock.tests.MockingTest.testStrictClassMocking":367,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":492,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":331,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":333,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":303,"org.easymock.tests.ObjectMethodsTest.testHashCode":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":188,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":145,"org.easymock.tests2.NameTest.nameForNiceMock":321,"org.easymock.tests2.DependencyTest.testInterfaceMocking":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":187,"org.easymock.samples.ExampleTest.addDocument":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":485,"org.easymock.tests2.DelegateToTest.testStubDelegate":149,"org.easymock.tests2.AnswerTest.stubAnswer":141,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":92,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":431,"org.easymock.tests.UsageVarargTest.varargLongAccepted":36,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndReturnTest.floatType":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":316,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":452,"org.easymock.tests.UsageThrowableTest.noUpperLimit":77,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":296,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":283,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":459,"org.easymock.tests2.SerializationTest.test":153,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":339,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":57,"org.easymock.tests2.UsageConstraintsTest.testSame":286,"org.easymock.samples.SupportTest.addDocument":115,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":498,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":472,"org.easymock.tests.GenericTest.testPackageScope":227,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":451,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":371,"org.easymock.tests2.NameTest.nameForMock":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":433,"org.easymock.tests2.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":436,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":24,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":414,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":219,"org.easymock.tests2.MockedExceptionTest.testRealException":311,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":359,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":403,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":49,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":240,"org.easymock.tests2.NameTest.nameForStrictMock":320,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":430,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":502,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":312,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":132,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":463,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":386,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":297,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":268,"org.easymock.tests2.UsageStrictMockTest.range":169,"org.easymock.tests2.UsageConstraintsTest.lessThan":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":476,"org.easymock.tests2.CaptureTest.testCaptureRightOne":178,"org.easymock.tests2.UsageConstraintsTest.testOr":136,"org.easymock.tests.UsageRangeTest.combination":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":131,"org.easymock.tests.UsageTest.wrongArguments":198,"org.easymock.tests2.MockBuilderTest.testWithConstructor":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":473,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":69,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":183,"org.easymock.tests.UsageVarargTest.varargShortAccepted":35,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":209,"org.easymock.tests2.UsageConstraintsTest.cmpTo":289,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":442,"org.easymock.tests2.CompareToTest.testLessThan":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":393,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureFromStub":342,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":230,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":428,"org.easymock.tests.UsageTest.unexpectedCallWithArray":191,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":194,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":70,"org.easymock.tests2.CaptureTest.testCapture":344,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":93,"org.easymock.tests2.UsageConstraintsTest.constraints":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":112,"org.easymock.tests.UsageStrictMockTest.testVerify":250,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":104,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":223,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":62,"org.easymock.tests.LimitationsTest.abstractClass":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":102,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":160,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":31}}]
