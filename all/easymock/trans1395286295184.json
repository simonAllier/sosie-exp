[{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.LastControl:70","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,5,69,70],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[71,72,73,74,75,6,76,77,78,79,80,81,82,83,84,85,86,87,88,7,89,90,91,92,93,10,12,14,16,18,20,22,94,95,96,97,98,25,27,29,31,33,36,38,40,42,44,46,48,50,99,100,101,102,103,104,105,52,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,54,55,141,142,143,144,145,57,59,146,147,148,149,150,151,152,153,62,154,155,156,157,158,159,160,68,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[175,176,177,178,179,180,181,182,183,184,185,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[24,26,42,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[88,187,188,189,190,91,93,191,192,193,194,195,196,197,198,199,200,116,201,202,117,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,118,218,219,120,220],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[221,222,223],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:189","failures":[224,71,225,72,75,226,227,228,76,229,80,81,83,84,230,231,95,96,97,232,98,233,26,234,106,108,235,236,237,238,111,112,53,239,54,240,241,242,243,154,244,155,245,163,164,246,247,166,167,168,248,169,249,170,250],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[188,251,89,252],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[253,136,254,255],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[256],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[257],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[126,259,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[261,262,254,263,264,265,266,267,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[269,270,271,272,94,231,232,98,54,273,274,275,165,247,166,167,168],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[227,241,276,163,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1445","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1397","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[277,226,227,228,278,79,85,86,279,87,89,10,11,14,15,16,17,22,231,96,232,98,47,109,280,281,282,283,284,285,286,287,288,289,290,291,53,292,293,54,240,241,242,294,143,295,144,145,296,58,150,156,297,157,298,158,159,299,160,300,68,166,167,168,171,301,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[224,71,225,72,303,304,305,306,307,73,308,309,74,310,75,277,6,226,227,228,278,311,175,176,312,177,76,313,178,179,314,315,180,77,78,229,79,80,81,82,83,84,85,86,279,87,316,317,318,319,320,321,7,322,8,251,89,323,324,90,325,326,92,191,327,328,329,330,9,10,11,12,13,14,15,16,17,18,19,20,21,22,230,331,94,231,95,96,332,333,97,232,98,334,233,335,336,337,338,339,340,23,24,25,26,27,341,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,342,99,343,100,344,101,102,103,345,104,105,234,346,52,347,106,348,107,349,350,351,108,352,353,354,109,235,236,237,110,238,111,355,181,182,356,183,112,357,184,185,358,359,186,113,114,115,360,198,199,116,202,117,203,204,207,210,212,213,214,215,216,217,118,280,281,282,283,361,284,285,286,287,119,288,289,290,291,121,362,363,122,364,365,366,367,123,368,369,370,221,371,372,373,53,124,125,126,127,128,129,130,131,132,133,134,135,374,375,376,0,377,378,379,380,381,382,383,256,253,292,136,258,384,137,385,138,386,139,387,140,239,293,54,55,240,241,242,294,141,261,262,254,388,142,389,143,295,144,390,145,296,391,392,393,394,395,396,397,398,399,263,400,264,401,402,403,259,404,405,406,407,265,266,260,267,56,57,58,59,60,146,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,147,434,435,436,437,438,439,440,441,442,149,150,443,151,444,445,152,153,446,447,1,448,2,449,450,451,452,453,454,455,456,457,458,459,460,461,3,4,61,62,462,268,463,243,154,244,155,245,63,64,65,66,67,156,297,157,464,298,158,465,159,299,160,300,68,466,161,467,162,468,163,164,469,255,470,471,246,165,247,166,472,473,167,168,248,169,249,170,250,171,301,474,475,476,477,478,479,480,5,69,481,172,482,483,173,484,174,302,485,486,487,488,70,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.RecordState:305","failures":[404,171,301],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[188,251,89,252],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[305,306,307,73,308,309,74,310,6,227,228,76,77,78,229,79,80,81,82,83,84,85,86,279,316,317,318,319,320,88,321,7,8,188,251,323,324,90,325,91,326,92,490,93,9,10,12,13,16,17,18,19,20,21,22,230,331,94,95,332,333,97,334,233,335,336,337,338,339,340,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,101,102,103,345,104,105,52,348,107,349,352,109,236,237,238,112,113,114,115,360,116,117,212,118,283,361,284,285,287,288,120,120,220,220,290,121,53,374,375,376,0,377,378,379,380,381,382,383,253,136,55,241,242,261,262,254,389,404,260,56,57,58,59,60,146,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,147,491,148,492,149,150,443,151,444,445,152,153,446,447,1,448,2,449,450,451,452,453,454,455,456,457,458,459,460,461,3,4,61,62,268,63,64,65,66,67,466,161,467,162,468,163,164,469,255,470,471,246,165,472,473,248,301,5,69,481,482,483,484,302,485,486,487,488,70,489],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[6,227,228,94,231,232,98,99,343,100,344,53,54,55,241,242,468,163,164,165,166,167,168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[154,66],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[493,494,188,495,496,497,498,499,500,195,198,199,200,116,201,202,117,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,118,218,219],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[346],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[501],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[318],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[224,71,225,72,303,304,305,306,307,73,308,309,74,310,75,277,6,226,227,228,278,311,175,176,312,177,76,313,178,179,314,315,180,77,78,229,79,80,81,82,83,84,85,86,279,87,316,317,318,319,320,88,187,502,321,7,322,8,188,251,89,323,324,90,325,91,326,92,490,93,327,328,329,330,9,10,11,12,13,14,15,16,17,18,19,20,21,22,230,331,94,231,95,96,332,333,97,232,98,334,233,335,336,337,338,339,340,23,24,25,26,27,341,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,342,99,343,100,344,101,102,103,345,104,105,234,346,52,503,347,106,348,107,349,350,351,108,192,352,353,193,354,109,235,236,194,237,195,110,238,197,111,355,181,182,356,183,112,357,184,185,358,359,186,113,114,115,360,198,199,200,116,201,202,117,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,118,218,219,280,281,282,283,361,284,285,286,287,119,288,120,120,220,220,289,290,291,121,362,363,122,364,365,366,367,123,368,369,370,221,371,372,373,53,124,125,126,127,128,129,130,131,132,133,134,135,374,375,376,0,377,378,379,380,381,382,383,256,253,292,136,258,384,137,385,138,386,139,387,140,239,293,54,55,240,241,242,294,141,261,262,254,388,142,389,143,295,144,390,145,296,391,392,393,394,395,396,397,398,399,263,400,264,401,402,403,259,404,405,406,407,265,266,260,267,56,57,58,59,60,146,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,147,434,435,436,437,438,491,148,439,492,440,441,442,149,150,443,151,444,445,152,153,446,447,1,448,2,449,450,451,452,453,454,455,456,457,458,459,460,461,3,4,61,62,462,268,463,243,154,244,155,245,63,64,65,66,67,156,297,157,464,298,158,465,159,299,160,300,68,466,161,467,162,468,163,164,469,255,470,471,246,165,247,166,472,473,167,168,248,169,249,170,250,171,301,474,475,476,477,478,479,480,5,69,481,172,482,483,173,484,174,302,485,486,487,488,70,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[96,41,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[188,251,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[503,196,120,120,220,220],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[187,189,190,91,93,191,192,193,194,196,197],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[256,258],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[504,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":27,"org.easymock.tests2.UsageTest.argumentsOrdered":98,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":246,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":400,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":96,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":291,"org.easymock.tests2.DelegateToTest.testReturnException":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":486,"org.easymock.tests.MockingTest.testPartialClassMocking":491,"org.easymock.tests.MockClassControlTest.testToString":385,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":342,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":412,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":117,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":306,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":56,"org.easymock.tests2.UsageTest.wrongArguments":231,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":180,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":170,"org.easymock.samples.ExampleTest.answerVsDelegate":361,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":478,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":441,"org.easymock.tests2.UsageConstraintsTest.testNull":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":345,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":140,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":85,"org.easymock.tests2.CaptureTest.testPrimitive":12,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":431,"org.easymock.tests.UsageTest.moreThanOneArgument":165,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":378,"org.easymock.tests.UsageTest.argumentsOrdered":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":146,"org.easymock.tests.UsageVarargTest.varargIntAccepted":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":359,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":67,"org.easymock.tests.ReplayStateInvalidUsageTest.times":132,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":76,"org.easymock.tests2.DependencyTest.testClassMocking":303,"org.easymock.tests2.AnswerTest.answer":307,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":405,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":72,"org.easymock.tests2.CaptureTest.testAnd":9,"org.easymock.tests2.UsageTest.strictResetToDefault":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":80,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":411,"org.easymock.tests2.DelegateToTest.testDelegate":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":427,"org.easymock.tests.LimitationsTest.mockFinalMethod":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":245,"org.easymock.tests2.DependencyTest.testClassMockingSupport":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":171,"org.easymock.tests2.CaptureTest.testCapture1_2446744":13,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":71,"org.easymock.tests.UsageThrowableTest.throwError":149,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":126,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":477,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":380,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":219,"org.easymock.samples.PartialClassMockTest.testGetArea":121,"org.easymock.tests.MockingTest.testInterfaceMocking":439,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":64,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":413,"org.easymock.tests2.UsageTest.niceToStrict":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":207,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":366,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":109,"org.easymock.tests2.MockBuilderTest.testCreateMock":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":421,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":269,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":81,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":376,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":388,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":169,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":497,"org.easymock.tests.UsageOverloadedMethodTest.overloading":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":217,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":483,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":455,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":255,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":38,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":222,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":18,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":464,"org.easymock.tests.MockClassControlTest.testEquals":387,"org.easymock.tests2.EasyMockSupportClassTest.testAll":116,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":292,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":429,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":270,"org.easymock.tests2.CaptureTest.testCaptureAll":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":244,"org.easymock.tests.MockNameTest.defaultName":435,"org.easymock.tests2.UsageConstraintsTest.testMatches":40,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":379,"org.easymock.samples.ExampleTest.voteForRemovals":287,"org.easymock.tests.UsageVarargTest.allKinds":68,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":468,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":155,"org.easymock.samples.BasicClassMockTest.testPrintContent":282,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":152,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":184,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":339,"org.easymock.tests2.UsageConstraintsTest.greaterThan":42,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":201,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":161,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":349,"org.easymock.samples.ExampleTest.voteForRemoval":284,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":317,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":350,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":234,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":230,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":302,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":229,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":485,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":79,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":233,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":451,"org.easymock.tests2.CaptureTest.testCapture2_2446744":21,"org.easymock.tests2.UsageTest.moreThanOneArgument":94,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":406,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":238,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":300,"org.easymock.tests.GenericTest.testBridgedEquals":258,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":498,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":495,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":145,"org.easymock.tests.UsageExpectAndReturnTest.longType":448,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":430,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":469,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":382,"org.easymock.tests.UsageCallCountTest.tooManyCalls":296,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":452,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":417,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":445,"org.easymock.tests.MockingTest.testNiceClassMocking":442,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":325,"org.easymock.tests.MockingTest.testClassMocking":437,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":142,"org.easymock.tests2.UsageConstraintsTest.testContains":37,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests2.UsageConstraintsTest.testFind":28,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":471,"org.easymock.tests.MockTypeTest.fromEasyMockClass":476,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":8,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":239,"org.easymock.tests.UsageExpectAndReturnTest.object":454,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":84,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":158,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":499,"org.easymock.tests.UsageTest.exactCallCountByLastCall":248,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":408,"org.easymock.tests2.ConstraintsToStringTest.findToString":257,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":275,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":460,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":156,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":482,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":181,"org.easymock.tests.MockClassControlTest.testHashCode":139,"org.easymock.tests2.EasyMockSupportTest.testVerify":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":209,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":409,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":481,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":224,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":23,"org.easymock.tests.UsageVarargTest.varargCharAccepted":298,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":367,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":267,"org.easymock.tests2.UsageTest.openCallCountByLastCall":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":493,"org.easymock.tests.DefaultClassInstantiatorTest.object":123,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":374,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":355,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":418,"org.easymock.tests.CapturesMatcherTest.test":505,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":461,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":381,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":118,"org.easymock.tests2.UsageTest.resumeIfFailure":334,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":488,"org.easymock.tests2.StubTest.stubWithReturnValue":324,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":194,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":453,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":48,"org.easymock.tests2.SerializationTest.testAllMockedMethod":89,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":404,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":271,"org.easymock.samples.SupportTest.voteForRemovals":290,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":424,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":252,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":260,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":73,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":463,"org.easymock.tests.UsageExpectAndThrowTest.object":422,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":45,"org.easymock.tests2.DelegateToTest.testWrongClass":338,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":5,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":69,"org.easymock.samples.ConstructorCalledMockTest.testTax":120,"org.easymock.tests.UsageStrictMockTest.range":241,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":329,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":90,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":496,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":423,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":236,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":167,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":249,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":273,"org.easymock.tests2.CaptureTest.testCaptureNone":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":254,"org.easymock.tests.UsageUnorderedTest.message":53,"org.easymock.tests.UsageVerifyTest.twoReturns":164,"org.easymock.tests.UsageVarargTest.varargByteAccepted":160,"org.easymock.tests2.ThreadingTest.testThreadSafe":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":213,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":144,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":281,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":365,"org.easymock.tests2.CaptureTest.testCapture_2617107":11,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":265,"org.easymock.tests2.UsageConstraintsTest.any":35,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":131,"org.easymock.tests2.StubTest.stub":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":487,"org.easymock.tests.UsageExpectAndThrowTest.longType":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":266,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":221,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":130,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":226,"org.easymock.tests2.SerializationTest.testClass":188,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":112,"org.easymock.tests.LimitationsTest.mockNativeMethod":147,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":4,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":176,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":278,"org.easymock.tests2.NameTest.nameForMocksControl":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":177,"org.easymock.tests2.MockedExceptionTest.testMockedException":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":202,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":473,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":492,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":416,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":322,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":237,"org.easymock.tests.MockingTest.testNicePartialClassMocking":148,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests2.CaptureTest.testCaptureLast":16,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":311,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":301,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":32,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":93,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":46,"org.easymock.tests.MockingTest.testTwoMocks":438,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":446,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":420,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":50,"org.easymock.samples.ExampleTest.removeNonExistingDocument":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":178,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":128,"org.easymock.tests.UsageStrictMockTest.differentMethods":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":182,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":369,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":318,"org.easymock.tests2.MockBuilderTest.testCreateMockString":111,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":384,"org.easymock.tests.UsageExpectAndThrowTest.floatType":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":203,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":200,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":502,"org.easymock.tests.UsageVerifyTest.twoThrows":163,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":212,"org.easymock.samples.ExampleTest.voteAgainstRemoval":285,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":264,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":107,"org.easymock.tests.LimitationsTest.privateConstructor":433,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":190,"org.easymock.tests2.UsageConstraintsTest.testNotNull":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":153,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":113,"org.easymock.tests2.UsageTest.defaultResetToNice":97,"org.easymock.samples.ExampleTest.voteAgainstRemovals":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":401,"org.easymock.tests.UsageVarargTest.differentLength":465,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":175,"org.easymock.tests2.CallbackTest.callback":321,"org.easymock.tests2.UsageConstraintsTest.equals":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":503,"org.easymock.tests.UsageTest.openCallCountByLastCall":472,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":501,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":58,"org.easymock.tests.UsageCallCountTest.tooFewCalls":143,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":250,"org.easymock.tests.UsageThrowableTest.throwCheckedException":444,"org.easymock.tests.MockingTest.testStrictClassMocking":436,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":274,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":490,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":62,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":313,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":133,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":92,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":310,"org.easymock.tests.ObjectMethodsTest.testHashCode":122,"org.easymock.tests2.NameTest.nameForNiceMock":100,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":320,"org.easymock.tests2.DependencyTest.testInterfaceMocking":305,"org.easymock.samples.ExampleTest.addDocument":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":218,"org.easymock.tests2.DelegateToTest.testStubDelegate":337,"org.easymock.tests2.AnswerTest.stubAnswer":74,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":55,"org.easymock.tests.UsageVarargTest.varargLongAccepted":299,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":3,"org.easymock.tests.UsageExpectAndReturnTest.floatType":1,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":88,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":220,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests.UsageThrowableTest.noUpperLimit":150,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":43,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":25,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":327,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":14,"org.easymock.tests2.SerializationTest.test":251,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":223,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":447,"org.easymock.tests2.UsageConstraintsTest.testSame":30,"org.easymock.samples.SupportTest.addDocument":289,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":204,"org.easymock.tests.GenericTest.testPackageScope":253,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":185,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":440,"org.easymock.tests2.NameTest.nameForMock":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":456,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":197,"org.easymock.tests2.UsageStrictMockTest.differentMethods":228,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":347,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":2,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":426,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":362,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":162,"org.easymock.tests2.MockedExceptionTest.testRealException":360,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":402,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":57,"org.easymock.tests2.NameTest.nameForStrictMock":343,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":354,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":494,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":104,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":328,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":44,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":370,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":352,"org.easymock.tests2.UsageStrictMockTest.range":227,"org.easymock.tests2.UsageConstraintsTest.lessThan":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":78,"org.easymock.tests2.CaptureTest.testCaptureRightOne":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":208,"org.easymock.tests2.UsageConstraintsTest.testOr":31,"org.easymock.tests.UsageRangeTest.combination":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":102,"org.easymock.tests.UsageTest.wrongArguments":166,"org.easymock.tests2.MockBuilderTest.testWithConstructor":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":205,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":392,"org.easymock.tests.UsageVarargTest.varargShortAccepted":159,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":371,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":390,"org.easymock.tests2.UsageConstraintsTest.cmpTo":36,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":394,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":333,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":125,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":353,"org.easymock.tests.UsageTest.unexpectedCallWithArray":247,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":54,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":295,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":196,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":458,"org.easymock.tests2.CaptureTest.testCapture":504,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":240,"org.easymock.samples.ExampleTest.addAndChangeDocument":288,"org.easymock.tests.UsageStrictMockTest.testVerify":141,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":280,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":154,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":65,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":450,"org.easymock.tests.LimitationsTest.abstractClass":432,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":82,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":276,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":297}}]
