[{"position":"org.easymock.internal.MockBuilder:229","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[58,65,62,63,66,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,28,29,97,98,99,100,101,102,103,104,33,34,35,37,42,0,44,105,106,1,107,108,109,110,111,112,113,114,115,2,116,117,118,119,120,121,4,122,123,124,54,55,125,126,127,128,129,130,131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[67,68,69,70,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,5,6,7,177,8,9,178,10,11,12,13,14,15,179,180,16,17,18,19,181,20,21,182,183,184,185,186,187,71,72,188,73,189,190,191,74,75,76,77,192,193,194,195,196,197,198,199,200,201,202,203,204,22,78,205,23,206,207,208,209,210,79,80,81,82,83,84,211,212,85,86,213,87,88,89,214,90,91,92,93,94,215,24,216,217,218,219,220,221,222,223,224,225,226,227,228,25,229,230,231,232,233,234,235,236,237,238,95,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,26,294,96,27,28,29,30,295,97,98,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,99,100,101,102,103,31,104,32,33,313,34,35,36,37,314,38,315,316,39,40,41,42,317,318,319,320,321,43,322,323,324,325,326,327,328,329,0,330,331,44,332,105,106,333,334,1,335,336,337,107,108,109,110,111,112,113,114,338,339,115,340,341,342,2,116,117,343,3,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,45,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,118,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,119,408,409,410,411,412,46,120,413,414,415,416,47,417,418,419,420,421,48,49,50,51,422,423,424,425,426,427,428,429,430,431,432,433,121,434,435,4,436,437,438,439,440,441,442,443,444,122,445,446,447,448,449,123,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,52,124,53,54,55,56,57,465,125,126,127,128,129,130,131,466,58,59,65,467,60,61,62,63,66,468,469,470,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[471],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[67,68,69,70,132,133,134,135,136,137,138,139,140,141,142,143,144,145,472,473,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,5,6,7,177,8,9,178,10,11,12,13,14,15,179,180,16,17,18,19,181,20,21,182,183,184,185,186,187,71,72,188,73,189,190,191,74,75,76,77,192,193,194,195,196,197,198,199,200,201,202,203,204,22,78,205,23,206,207,208,209,210,79,80,81,82,83,84,211,212,85,86,213,87,88,89,214,90,91,92,93,94,215,24,216,217,218,219,220,221,222,223,224,225,226,227,228,25,229,230,231,232,233,234,235,236,237,238,95,239,240,241,242,243,244,245,246,247,248,249,250,251,474,252,253,254,255,256,257,475,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,26,294,96,27,28,29,30,295,97,98,296,297,298,299,300,301,302,303,304,476,305,306,307,308,309,310,311,312,99,100,101,102,103,31,104,32,33,313,34,35,36,37,314,38,315,316,39,40,41,42,317,318,319,320,321,43,322,323,324,325,326,327,328,329,477,0,330,478,331,44,332,105,479,106,480,333,334,1,481,335,336,337,107,108,109,110,111,112,113,114,338,339,115,340,341,342,2,116,117,343,3,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,45,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,118,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,119,408,409,410,411,412,46,120,413,482,414,415,416,47,417,418,419,420,421,48,49,50,51,422,423,424,425,426,427,483,484,485,428,429,430,431,432,433,121,434,435,4,436,437,438,439,440,441,442,443,444,122,445,446,447,448,449,123,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,52,124,53,54,55,56,57,465,486,125,126,127,128,487,129,130,131,488,466,58,59,65,467,60,61,62,63,66,468,469,470,64],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[67,68,69,70,132,133,134,135,136,137,138,139,140,141,489,489,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,5,6,7,8,9,178,10,11,12,13,14,15,16,17,18,19,181,20,21,183,184,71,72,73,74,76,77,192,194,195,198,199,200,201,22,78,205,23,206,207,208,209,210,79,80,81,82,83,84,211,212,85,86,213,87,88,89,214,90,91,92,93,94,215,24,216,217,218,219,220,221,222,223,224,225,226,228,25,231,232,233,234,235,236,95,283,284,285,286,293,26,294,96,27,28,29,30,97,98,99,100,101,102,103,31,104,32,33,313,34,35,36,37,38,315,316,39,40,41,42,317,318,319,320,321,43,322,323,324,325,326,327,328,329,0,44,332,105,106,334,1,335,107,108,109,110,111,112,113,114,338,115,342,2,116,117,344,345,346,347,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,45,368,369,370,371,372,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,118,392,393,399,407,119,408,410,411,412,46,120,414,415,416,47,417,418,419,420,421,48,49,50,51,121,4,122,123,457,464,52,124,53,54,55,56,57,465,125,126,127,128,129,130,131,466,58,59,65,467,60,61,62,63,66,468,469,470,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.Range:83","failures":[133,134,136,137,138,139,140,141,14,201,22,205,207,208,209,210,216,235,294,96,27,28,29,317,319,320,322,323,325,326,328,350,356,362,369,372,376,393,119,423,424,425,426,124,53,54,55,465,58,59,467,60,61,62,63,64],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[489,466,58,59,65,467,60,61,62,63,66,468,469,470,64],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[406,409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[479,490,491,492,493,494,413],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[135,136,139,140,495,496,22,209,210,294,28,29,497,476,320,325,326,54,55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[433],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[67,68,69,70,132,133,134,137,138,141,143,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,15,16,183,184,71,72,73,74,75,76,77,192,194,195,197,199,200,201,203,22,78,205,23,206,207,208,209,210,79,80,81,82,83,84,211,212,85,86,213,87,88,89,214,90,91,92,93,94,215,24,216,217,218,219,220,221,228,229,231,232,233,234,235,236,95,275,281,96,28,29,97,98,296,297,298,299,300,301,302,303,304,99,100,101,102,103,104,33,313,34,35,37,38,315,315,316,316,42,317,318,319,321,322,323,324,327,328,0,44,105,106,1,107,108,109,110,111,112,113,114,115,2,116,117,344,345,346,347,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,382,383,384,385,386,388,389,390,391,118,392,393,399,406,407,119,408,409,410,411,412,120,414,415,416,47,417,418,419,420,421,48,49,50,121,4,122,123,457,124,54,55,57,465,125,126,127,128,129,130,131,466,58,65,467,62,63,66,468,469,470,64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[154,155,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz"}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[343,391],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[117],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[242,274,281],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:60","failures":[477,478,479,499,481,500,501,413,127,131,488],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[227,228,25,229,230],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[67,68,69,70,132,133,134,137,138,141,143,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,15,16,183,184,71,72,73,74,75,76,77,192,194,195,197,199,200,201,203,22,78,205,23,206,207,208,209,210,79,80,81,82,83,84,211,212,85,86,213,87,88,89,214,90,91,92,93,94,215,24,216,217,218,219,220,221,228,229,231,232,233,234,235,236,95,275,281,96,28,29,97,98,296,297,298,299,300,301,302,303,304,99,100,101,102,103,104,33,313,34,35,37,38,315,315,316,316,42,317,318,319,321,322,323,324,327,328,0,44,105,106,1,107,108,109,110,111,112,113,114,115,2,116,117,344,345,346,347,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,382,383,384,385,386,388,389,390,391,118,392,393,399,406,407,119,408,409,410,411,412,120,414,415,416,47,417,418,419,420,421,48,49,50,121,4,122,123,457,124,54,55,57,465,125,126,127,128,129,130,131,466,58,65,467,62,63,66,468,469,470,64],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[253,257],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[336,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[135,136,139,140,496,198,22,209,210,294,28,320,325,326,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[479,106,333,334,335,109,490,491,492,498,502,386,411,412,120,413,414],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[227,228,25,229,230],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":347,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests2.UsageTest.argumentsOrdered":326,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":269,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":43,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testReturnException":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":232,"org.easymock.tests.MockingTest.testPartialClassMocking":71,"org.easymock.tests.MockClassControlTest.testToString":307,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":422,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":143,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":439,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":157,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":4,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":78,"org.easymock.tests2.UsageTest.wrongArguments":320,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":463,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":285,"org.easymock.samples.ExampleTest.answerVsDelegate":313,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":148,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":190,"org.easymock.tests2.UsageConstraintsTest.testNull":350,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":112,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":48,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":312,"org.easymock.tests2.CaptureTest.testPrimitive":65,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":176,"org.easymock.tests.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":69,"org.easymock.tests.UsageTest.argumentsOrdered":140,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":300,"org.easymock.tests.UsageVarargTest.varargIntAccepted":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":494,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":329,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":404,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":103,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":457,"org.easymock.tests.ReplayStateInvalidUsageTest.times":248,"org.easymock.tests2.DependencyTest.testClassMocking":336,"org.easymock.tests2.AnswerTest.answer":372,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":381,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":473,"org.easymock.tests2.CaptureTest.testAnd":466,"org.easymock.tests2.UsageTest.strictResetToDefault":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":76,"org.easymock.tests2.DelegateToTest.testDelegate":410,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":172,"org.easymock.tests.LimitationsTest.mockFinalMethod":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":226,"org.easymock.tests2.DependencyTest.testClassMockingSupport":337,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":202,"org.easymock.tests2.CaptureTest.testCapture1_2446744":467,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":379,"org.easymock.tests.UsageThrowableTest.throwError":215,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":242,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":147,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":476,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":132,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":451,"org.easymock.samples.PartialClassMockTest.testGetArea":104,"org.easymock.tests.MockingTest.testInterfaceMocking":188,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":440,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":158,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":292,"org.easymock.tests2.UsageTest.niceToStrict":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.MockBuilderTest.testCreateMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":447,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":460,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":166,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":418,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":472,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":283,"org.easymock.tests.UsageOverloadedMethodTest.overloading":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":444,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":195,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":87,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":199,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":471,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":359,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":66,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":177,"org.easymock.tests2.EasyMockSupportClassTest.testAll":121,"org.easymock.tests.MockClassControlTest.testEquals":311,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":174,"org.easymock.tests2.CaptureTest.testCaptureAll":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":380,"org.easymock.tests.MockNameTest.defaultName":182,"org.easymock.tests2.UsageConstraintsTest.testMatches":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":70,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":240,"org.easymock.samples.ExampleTest.voteForRemovals":37,"org.easymock.tests.UsageVarargTest.allKinds":14,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":208,"org.easymock.samples.BasicClassMockTest.testPrintContent":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":225,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":220,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":464,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":475,"org.easymock.tests2.UsageConstraintsTest.greaterThan":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":75,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":117,"org.easymock.samples.ExampleTest.voteForRemoval":34,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":258,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":390,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":343,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":149,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":338,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":15,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":317,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":416,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":231,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":406,"org.easymock.tests2.CaptureTest.testCaptureFirst":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":47,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":328,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":212,"org.easymock.tests2.CaptureTest.testCapture2_2446744":470,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":118,"org.easymock.tests2.UsageTest.moreThanOneArgument":319,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":277,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":13,"org.easymock.tests.GenericTest.testBridgedEquals":230,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":20,"org.easymock.tests.UsageExpectAndReturnTest.longType":82,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":414,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":175,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":45,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":67,"org.easymock.tests.UsageCallCountTest.tooManyCalls":21,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":448,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":219,"org.easymock.tests.MockingTest.testNiceClassMocking":191,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":126,"org.easymock.tests.MockingTest.testClassMocking":186,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":180,"org.easymock.tests2.UsageConstraintsTest.testContains":358,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":384,"org.easymock.tests2.UsageConstraintsTest.testFind":349,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":201,"org.easymock.tests.MockTypeTest.fromEasyMockClass":146,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":388,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests.UsageExpectAndReturnTest.object":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":421,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":491,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":9,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":290,"org.easymock.tests.UsageTest.exactCallCountByLastCall":141,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":264,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":142,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":413,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":91,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":194,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":395,"org.easymock.tests.MockClassControlTest.testHashCode":310,"org.easymock.tests2.EasyMockSupportTest.testVerify":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":442,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":155,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":192,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":495,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":378,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":486,"org.easymock.tests.UsageVarargTest.varargCharAccepted":8,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":474,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":282,"org.easymock.tests2.UsageTest.openCallCountByLastCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":50,"org.easymock.tests.DefaultClassInstantiatorTest.object":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":154,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":288,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":443,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":164,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":217,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":394,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":2,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":163,"org.easymock.tests.CapturesMatcherTest.test":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":92,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":123,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":308,"org.easymock.tests2.UsageTest.resumeIfFailure":327,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":145,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":234,"org.easymock.tests2.StubTest.stubWithReturnValue":465,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":479,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":86,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":368,"org.easymock.tests2.SerializationTest.testAllMockedMethod":46,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":275,"org.easymock.samples.SupportTest.voteForRemovals":42,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":397,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":169,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":281,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":373,"org.easymock.tests.UsageExpectAndThrowTest.object":167,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":144,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":366,"org.easymock.tests2.DelegateToTest.testWrongClass":408,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":97,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":98,"org.easymock.tests.UsageStrictMockTest.range":28,"org.easymock.samples.ConstructorCalledMockTest.testTax":315,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":429,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":420,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":125,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":168,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":431,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":250,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":284,"org.easymock.tests2.CaptureTest.testCaptureNone":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":298,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":497,"org.easymock.tests.UsageVerifyTest.twoReturns":210,"org.easymock.tests.UsageVarargTest.varargByteAccepted":12,"org.easymock.tests2.ThreadingTest.testThreadSafe":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":445,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":19,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":39,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":279,"org.easymock.tests2.UsageConstraintsTest.any":356,"org.easymock.tests2.StubTest.stub":57,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":280,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":256,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":246,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":53,"org.easymock.tests2.SerializationTest.testClass":411,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":399,"org.easymock.tests.LimitationsTest.mockNativeMethod":95,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":94,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":229,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":454,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":56,"org.easymock.tests2.NameTest.nameForMocksControl":426,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":456,"org.easymock.tests2.MockedExceptionTest.testMockedException":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":435,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":387,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":161,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":73,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":106,"org.easymock.tests.MockingTest.testNicePartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":114,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":452,"org.easymock.tests2.CaptureTest.testCaptureLast":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":203,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":131,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":353,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":367,"org.easymock.tests.MockingTest.testTwoMocks":187,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":488,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":165,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":325,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":370,"org.easymock.samples.ExampleTest.removeNonExistingDocument":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":459,"org.easymock.tests.UsageStrictMockTest.differentMethods":29,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":244,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":396,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":254,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":391,"org.easymock.tests2.MockBuilderTest.testCreateMockString":335,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":436,"org.easymock.tests.UsageExpectAndThrowTest.floatType":159,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":375,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":482,"org.easymock.tests.UsageVerifyTest.twoThrows":209,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":122,"org.easymock.samples.ExampleTest.voteAgainstRemoval":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":296,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":116,"org.easymock.tests.LimitationsTest.privateConstructor":238,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":501,"org.easymock.tests2.UsageConstraintsTest.testNotNull":369,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":221,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":382,"org.easymock.tests2.UsageTest.defaultResetToNice":324,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":271,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":453,"org.easymock.tests.UsageVarargTest.differentLength":178,"org.easymock.tests2.CallbackTest.callback":393,"org.easymock.tests2.UsageConstraintsTest.equals":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":340,"org.easymock.tests.UsageTest.openCallCountByLastCall":137,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":23,"org.easymock.tests.UsageCallCountTest.tooFewCalls":17,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":286,"org.easymock.tests.UsageThrowableTest.throwCheckedException":218,"org.easymock.tests.MockingTest.testStrictClassMocking":185,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":184,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":458,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":127,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":129,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":377,"org.easymock.tests.ObjectMethodsTest.testHashCode":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":493,"org.easymock.tests2.NameTest.nameForNiceMock":425,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":392,"org.easymock.tests2.DependencyTest.testInterfaceMocking":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":492,"org.easymock.samples.ExampleTest.addDocument":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.DelegateToTest.testStubDelegate":119,"org.easymock.tests2.AnswerTest.stubAnswer":376,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":96,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":480,"org.easymock.tests.UsageVarargTest.varargLongAccepted":11,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":268,"org.easymock.tests.UsageExpectAndReturnTest.floatType":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":120,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":403,"org.easymock.tests.UsageThrowableTest.noUpperLimit":24,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":196,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":345,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":427,"org.easymock.tests2.SerializationTest.test":412,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":60,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":80,"org.easymock.tests2.UsageConstraintsTest.testSame":351,"org.easymock.samples.SupportTest.addDocument":41,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":487,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":437,"org.easymock.tests.GenericTest.testPackageScope":228,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":263,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":402,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":189,"org.easymock.tests2.NameTest.nameForMock":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":88,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":481,"org.easymock.tests2.UsageStrictMockTest.differentMethods":55,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":341,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":171,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":77,"org.easymock.tests2.MockedExceptionTest.testRealException":385,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":150,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":272,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":205,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":251,"org.easymock.tests2.NameTest.nameForStrictMock":424,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":331,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":386,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":113,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":428,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":255,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":365,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":0,"org.easymock.tests2.UsageStrictMockTest.range":54,"org.easymock.tests2.UsageConstraintsTest.lessThan":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":398,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":498,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":267,"org.easymock.tests2.CaptureTest.testCaptureRightOne":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":441,"org.easymock.tests2.UsageConstraintsTest.testOr":352,"org.easymock.tests.UsageRangeTest.combination":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":110,"org.easymock.tests.UsageTest.wrongArguments":136,"org.easymock.tests2.MockBuilderTest.testWithConstructor":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":438,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":260,"org.easymock.tests.UsageVarargTest.varargShortAccepted":10,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":257,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":181,"org.easymock.tests2.UsageConstraintsTest.cmpTo":357,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":262,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":323,"org.easymock.tests2.CaptureTest.testCaptureFromStub":469,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":241,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":330,"org.easymock.tests.UsageTest.unexpectedCallWithArray":135,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":18,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":499,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":214,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":27,"org.easymock.tests2.UsageConstraintsTest.constraints":346,"org.easymock.samples.ExampleTest.addAndChangeDocument":38,"org.easymock.tests.UsageStrictMockTest.testVerify":295,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":31,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":223,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":211,"org.easymock.tests.LimitationsTest.abstractClass":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":102,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":419,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":6}}]
