[{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[4,5,0,6,7,8,9,9,10,10],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,0,1,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[41,189,190,191,192,193,43,194,195,45,196,46],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[197,198,199],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[200,201,202,203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[15,204],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[19,206,207,208,85,209,95,210,168,169,211,212,213,214,215],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[216,217],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[218,219,198,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[17,20,21,49,220,221,222,223,93,96,97,224,225,226,167,168,169,174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[41,189,45,227,60,61,62,63,228,229,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[230],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[231,0,232,233,234,235,236,68,237,69,70,238,239,240,241,242,243,244,245],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[4,5,0,6,7,8,9,9,10,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[218,219,198,199],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[246,247,248,249,49,206,207,208,209,250,251,252,174,211,212,213,214],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[41,189,45,227,60,61,62,63,228,229,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[246,209],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[254,18,19,20,24,28,29,31,38,47,206,50,51,207,208,54,55,227,255,65,256,257,235,238,239,241,85,258,209,94,95,96,259,260,261,262,263,264,265,266,210,168,169,173,211,212,213,214,177],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[267],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[4,5,268,0,232,6,256,67,269,233,270,235,236,271,272,68,237,69,273,70,7,8,238,239,274,241,275,276,277,278,9,10,242,216,243,244,245],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[19,206,207,208,85,209,95,210,168,169,211,212,213,214],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[279,246,280,281,282,283,17,19,20,49,85,93,95,96,251,284,210,167,168,169,174,285,286,287,288,289,215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[246,248,209,250,251,211],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":60,"org.easymock.tests2.UsageTest.argumentsOrdered":208,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":186,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":51,"org.easymock.tests2.StubTest.stubWithReturnValue":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":273,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":140,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":184,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":248,"org.easymock.samples.SupportTest.voteForRemovals":83,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":115,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":103,"org.easymock.tests.UsageExpectAndThrowTest.object":113,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":203,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":12,"org.easymock.tests2.DelegateToTest.testWrongClass":58,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":179,"org.easymock.tests2.UsageTest.wrongArguments":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":98,"org.easymock.tests.UsageStrictMockTest.range":95,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.samples.ExampleTest.answerVsDelegate":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":245,"org.easymock.tests2.UsageConstraintsTest.testNull":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":114,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":69,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":31,"org.easymock.tests2.CaptureTest.testPrimitive":190,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":102,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":213,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":122,"org.easymock.tests.UsageTest.moreThanOneArgument":174,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":88,"org.easymock.tests2.CaptureTest.testCaptureNone":44,"org.easymock.tests.UsageUnorderedTest.message":85,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":262,"org.easymock.tests.UsageVerifyTest.twoReturns":169,"org.easymock.tests.UsageVarargTest.varargByteAccepted":164,"org.easymock.tests2.ThreadingTest.testThreadSafe":34,"org.easymock.tests.UsageTest.argumentsOrdered":214,"org.easymock.tests.UsageVarargTest.varargIntAccepted":159,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":73,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":152,"org.easymock.tests2.CaptureTest.testCapture_2617107":189,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":249,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":237,"org.easymock.tests2.StubTest.stub":39,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":156,"org.easymock.tests.UsageExpectAndThrowTest.longType":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":185,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":18,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":22,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":243,"org.easymock.tests2.AnswerTest.answer":13,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":150,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":228,"org.easymock.tests2.CaptureTest.testAnd":41,"org.easymock.tests2.UsageTest.strictResetToDefault":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":271,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":21,"org.easymock.tests2.NameTest.nameForMocksControl":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":27,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests2.DelegateToTest.testDelegate":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":107,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":118,"org.easymock.tests2.CaptureTest.testCaptureLast":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":187,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":286,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":285,"org.easymock.tests2.CaptureTest.testCapture1_2446744":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":111,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":207,"org.easymock.tests.UsageThrowableTest.throwError":123,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests2.ConstraintsToStringTest.andToString":282,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":36,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":263,"org.easymock.tests2.MockBuilderTest.testCreateMockString":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":90,"org.easymock.tests.UsageExpectAndThrowTest.floatType":105,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":255,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":268,"org.easymock.tests.UsageVerifyTest.twoThrows":168,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":277,"org.easymock.samples.PartialClassMockTest.testGetArea":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":153,"org.easymock.samples.ExampleTest.voteAgainstRemoval":78,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":67,"org.easymock.tests2.UsageTest.niceToStrict":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":104,"org.easymock.tests2.UsageConstraintsTest.testNotNull":64,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":275,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":130,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":68,"org.easymock.tests2.MockBuilderTest.testCreateMock":238,"org.easymock.samples.ExampleTest.voteAgainstRemovals":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":146,"org.easymock.tests.UsageVarargTest.differentLength":264,"org.easymock.tests2.CallbackTest.callback":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":6,"org.easymock.tests.UsageTest.openCallCountByLastCall":175,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":112,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":28,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":201,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":219,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":100,"org.easymock.tests.UsageCallCountTest.tooFewCalls":226,"org.easymock.tests.UsageOverloadedMethodTest.overloading":171,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":142,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":170,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":205,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":194,"org.easymock.tests.UsageThrowableTest.throwCheckedException":127,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":91,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":251,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":120,"org.easymock.tests2.CaptureTest.testCaptureAll":42,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":89,"org.easymock.tests2.CompareToTest.testGreateOrEqual":253,"org.easymock.samples.ExampleTest.voteForRemovals":80,"org.easymock.tests2.NameTest.nameForNiceMock":222,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":37,"org.easymock.tests.UsageVarargTest.allKinds":166,"org.easymock.tests2.DependencyTest.testInterfaceMocking":11,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":167,"org.easymock.samples.BasicClassMockTest.testPrintContent":74,"org.easymock.samples.ExampleTest.addDocument":79,"org.easymock.tests2.DelegateToTest.testStubDelegate":57,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":129,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":254,"org.easymock.tests2.AnswerTest.stubAnswer":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":188,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":93,"org.easymock.tests2.UsageConstraintsTest.greaterThan":202,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":7,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":257,"org.easymock.tests.UsageVarargTest.varargLongAccepted":163,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.samples.ExampleTest.voteForRemoval":77,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":35,"org.easymock.tests.UsageExpectAndReturnTest.floatType":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":232,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.tests2.ConstraintsToStringTest.orToString":279,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageThrowableTest.noUpperLimit":124,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":192,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":25,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":132,"org.easymock.samples.SupportTest.addDocument":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":183,"org.easymock.tests2.CaptureTest.testCaptureFirst":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":26,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":55,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":138,"org.easymock.tests2.UsageTest.moreThanOneArgument":49,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":239,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":165,"org.easymock.tests.GenericTest.testBridgedEquals":217,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":260,"org.easymock.tests2.NameTest.nameForMock":220,"org.easymock.tests.UsageExpectAndReturnTest.longType":134,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":23,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":274,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":135,"org.easymock.tests.UsageCallCountTest.tooManyCalls":261,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":117,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":139,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":267,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":128,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":234,"org.easymock.tests2.NameTest.nameForStrictMock":221,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":172,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":272,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":66,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests.UsageExpectAndReturnTest.object":141,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":229,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":235,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":30,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":161,"org.easymock.tests.UsageTest.exactCallCountByLastCall":177,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":24,"org.easymock.tests2.CaptureTest.testCaptureRightOne":45,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":252,"org.easymock.tests2.UsageConstraintsTest.testOr":62,"org.easymock.tests.UsageRangeTest.combination":265,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":147,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":157,"org.easymock.tests.UsageTest.wrongArguments":212,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":181,"org.easymock.tests2.MockBuilderTest.testWithConstructor":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":218,"org.easymock.tests.UsageVarargTest.varargShortAccepted":162,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":180,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":266,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":259,"org.easymock.tests.UsageVarargTest.varargCharAccepted":160,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":16,"org.easymock.tests2.UsageTest.openCallCountByLastCall":52,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":33,"org.easymock.tests2.CaptureTest.testCaptureFromStub":196,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":236,"org.easymock.tests.UsageTest.unexpectedCallWithArray":211,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":210,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":110,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":209,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":126,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":145,"org.easymock.tests2.CaptureTest.testCapture":195,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":256,"org.easymock.tests2.UsageConstraintsTest.constraints":227,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.samples.ExampleTest.addAndChangeDocument":81,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":109,"org.easymock.tests2.ConstraintsToStringTest.notToString":280,"org.easymock.tests2.ConstraintsToStringTest.containsToString":230,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":197,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":72,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":278,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":92,"org.easymock.tests2.CompareToTest.testGreateThan":200,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":193,"org.easymock.tests2.UsageTest.resumeIfFailure":54,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":154,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":137,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":29,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":158}}]
