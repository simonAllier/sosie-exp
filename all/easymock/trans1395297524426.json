[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"expected"}},{"position":"org.easymock.EasyMock:2124","failures":[58,59,60,61,62,63],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[4,8,9,11,15,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[22,57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[64,65,66,67,68,69,17,70,71,31,37,43,47,49,72,73,74,75],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[79,80],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[81,82,83,84,85,86],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[109,110,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[64,81,88,112,84,113,114,115,116,50,117,98,118,119,120],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.LastControl.NO_MATCHERS_FOUND"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[81,82,83,84,85,86],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[64,81,88,112,84,113,114,115,50,117,98,118,119,120],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[103],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[121,122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[124,125,58,59,126,60,127,62,63,108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[128,129,130,131,132],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[134,135,136,137,77,138,139,140,141],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[128,129,130,131,132],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[142,4,143,144,145,146,147,148,149,150,151,152,153,154,155,8,9,156,64,157,158,159,160,161,162,163,164,165,166,167,168,169,87,170,81,171,172,88,89,173,174,10,175,11,12,13,14,15,16,176,65,177,178,179,180,181,66,182,183,184,185,186,67,187,188,189,68,190,69,17,191,84,113,192,18,114,115,193,194,195,196,197,198,199,200,201,202,203,204,125,205,22,206,116,207,208,209,210,211,212,213,214,215,216,79,217,218,219,91,92,220,23,24,25,26,27,28,221,222,223,224,225,226,227,228,229,230,231,232,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,96,233,234,235,236,50,117,237,238,239,240,241,242,243,244,245,246,247,58,248,249,250,251,252,253,128,128,129,129,130,254,255,256,257,258,259,260,261,262,97,263,264,265,98,99,266,267,51,268,269,270,271,272,273,274,52,275,276,118,101,277,278,53,279,119,120,280,281,54,55,56,57,282,283,284,285,286,287,76,288,289,290,291,292,293,294,295,296,297,102,298,299,131,132,300,301,302,303,304,305,306,307,0,103,308,309,310,59,60,61,127,62,63,311,312,313,314,134,315,135,316,72,73,317,318,319,320,136,321,74,75,322,104,323,324,325,105,106,326,327,107,328,329,330,331,332,333,334,335,336,337,338,137,77,339,340,341,138,139,342,343,2,344,3,345,346,347,348,349,141,350,351,352,353,354,355,356,121,122,123,108],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":77,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":17,"org.easymock.tests2.UsageTest.argumentsOrdered":120,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":26,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":277,"org.easymock.tests2.StubTest.stubWithReturnValue":51,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":353,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":183,"org.easymock.tests2.SerializationTest.testAllMockedMethod":123,"org.easymock.tests2.DelegateToTest.testReturnException":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":24,"org.easymock.tests.MockingTest.testPartialClassMocking":91,"org.easymock.samples.SupportTest.voteForRemovals":259,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":86,"org.easymock.tests.MockClassControlTest.testToString":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":30,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":131,"org.easymock.tests.UsageExpectAndThrowTest.object":40,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":350,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":262,"org.easymock.tests2.DelegateToTest.testWrongClass":313,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":221,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":222,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":342,"org.easymock.tests2.UsageTest.wrongArguments":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":154,"org.easymock.tests.UsageStrictMockTest.range":88,"org.easymock.samples.ConstructorCalledMockTest.testTax":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":239,"org.easymock.samples.ExampleTest.answerVsDelegate":58,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":268,"org.easymock.tests2.UsageConstraintsTest.testNull":340,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":94,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":304,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":41,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":295,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":230,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":107,"org.easymock.tests2.CaptureTest.testPrimitive":316,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":49,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":114,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":167,"org.easymock.tests.UsageTest.moreThanOneArgument":191,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":244,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":82,"org.easymock.tests2.CaptureTest.testCaptureNone":319,"org.easymock.tests.UsageUnorderedTest.message":64,"org.easymock.tests.UsageVerifyTest.twoReturns":117,"org.easymock.tests.UsageVarargTest.varargByteAccepted":215,"org.easymock.tests2.ThreadingTest.testThreadSafe":282,"org.easymock.tests.UsageTest.argumentsOrdered":115,"org.easymock.tests.UsageVarargTest.varargIntAccepted":209,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":148,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":195,"org.easymock.tests2.CaptureTest.testCapture_2617107":135,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":9,"org.easymock.tests2.UsageConstraintsTest.any":343,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":294,"org.easymock.tests2.StubTest.stub":267,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":199,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":25,"org.easymock.tests.UsageExpectAndThrowTest.longType":33,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":109,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":163,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":265,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":260,"org.easymock.tests2.SerializationTest.testClass":121,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":332,"org.easymock.tests.ReplayStateInvalidUsageTest.times":165,"org.easymock.tests.LimitationsTest.mockNativeMethod":169,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":69,"org.easymock.tests2.AnswerTest.answer":59,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":336,"org.easymock.tests2.CaptureTest.testAnd":134,"org.easymock.tests2.UsageTest.strictResetToDefault":275,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":103,"org.easymock.tests2.NameTest.nameForMocksControl":290,"org.easymock.tests2.MockedExceptionTest.testMockedException":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":325,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":18,"org.easymock.tests2.DelegateToTest.testDelegate":314,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":34,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":301,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":296,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":45,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":306,"org.easymock.tests2.CaptureTest.testCaptureLast":318,"org.easymock.tests2.CompareToTest.testCompareEqual":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":274,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":139,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":351,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":204,"org.easymock.tests2.CaptureTest.testCapture1_2446744":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":43,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":38,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":355,"org.easymock.tests.UsageThrowableTest.throwError":10,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":159,"org.easymock.samples.ExampleTest.removeNonExistingDocument":252,"org.easymock.tests.UsageStrictMockTest.differentMethods":89,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":161,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":284,"org.easymock.tests2.MockBuilderTest.testCreateMockString":298,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":246,"org.easymock.tests.UsageExpectAndThrowTest.floatType":32,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":347,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":60,"org.easymock.tests.UsageVerifyTest.twoThrows":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":132,"org.easymock.samples.PartialClassMockTest.testGetArea":130,"org.easymock.tests.MockingTest.testInterfaceMocking":93,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":196,"org.easymock.samples.ExampleTest.voteAgainstRemoval":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":31,"org.easymock.tests2.UsageTest.niceToStrict":101,"org.easymock.tests2.UsageConstraintsTest.testNotNull":354,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":16,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":293,"org.easymock.tests2.MockBuilderTest.testCreateMock":297,"org.easymock.tests2.UsageTest.defaultResetToNice":279,"org.easymock.samples.ExampleTest.voteAgainstRemovals":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":188,"org.easymock.tests.UsageVarargTest.differentLength":212,"org.easymock.tests2.CallbackTest.callback":108,"org.easymock.tests2.UsageConstraintsTest.equals":80,"org.easymock.tests.UsageTest.openCallCountByLastCall":192,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":85,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":39,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":8,"org.easymock.tests.UsageCallCountTest.tooFewCalls":146,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":345,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":22,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":271,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":185,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":3,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":110,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":240,"org.easymock.tests.UsageThrowableTest.throwCheckedException":13,"org.easymock.tests2.EasyMockSupportClassTest.testAll":299,"org.easymock.tests.MockClassControlTest.testEquals":229,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":153,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":83,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":47,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":335,"org.easymock.tests2.CaptureTest.testCaptureAll":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":202,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":273,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":270,"org.easymock.tests2.UsageConstraintsTest.testMatches":346,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":166,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":272,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":245,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":157,"org.easymock.tests.ObjectMethodsTest.testHashCode":218,"org.easymock.samples.ExampleTest.voteForRemovals":251,"org.easymock.tests2.NameTest.nameForNiceMock":289,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":286,"org.easymock.tests.UsageVarargTest.allKinds":79,"org.easymock.tests2.DependencyTest.testInterfaceMocking":261,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":236,"org.easymock.samples.BasicClassMockTest.testPrintContent":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":203,"org.easymock.samples.ExampleTest.addDocument":250,"org.easymock.tests2.DelegateToTest.testStubDelegate":312,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":15,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":97,"org.easymock.tests2.AnswerTest.stubAnswer":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":28,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":171,"org.easymock.tests2.UsageConstraintsTest.greaterThan":348,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":233,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":310,"org.easymock.tests.UsageVarargTest.varargLongAccepted":214,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":173,"org.easymock.samples.ExampleTest.voteForRemoval":248,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":283,"org.easymock.tests.UsageExpectAndReturnTest.floatType":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":307,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":287,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":129,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":349,"org.easymock.tests.UsageThrowableTest.noUpperLimit":175,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":338,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":194,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":73,"org.easymock.tests2.SerializationTest.test":122,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":111,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":323,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":11,"org.easymock.tests2.UsageConstraintsTest.testSame":341,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":65,"org.easymock.samples.SupportTest.addDocument":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":23,"org.easymock.tests2.CaptureTest.testCaptureFirst":75,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":324,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":281,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":162,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":66,"org.easymock.tests.GenericTest.testPackageScope":152,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":285,"org.easymock.tests2.UsageTest.moreThanOneArgument":276,"org.easymock.tests2.CaptureTest.testCapture2_2446744":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":70,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":102,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":216,"org.easymock.tests2.NameTest.nameForMock":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":150,"org.easymock.tests.UsageExpectAndReturnTest.longType":178,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":186,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":46,"org.easymock.tests2.UsageStrictMockTest.differentMethods":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":20,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":179,"org.easymock.tests.UsageCallCountTest.tooManyCalls":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":44,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":145,"org.easymock.tests2.MockedExceptionTest.testRealException":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":182,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":155,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":168,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":269,"org.easymock.tests.MockingTest.testNiceClassMocking":95,"org.easymock.tests.MockingTest.testClassMocking":90,"org.easymock.tests2.UsageConstraintsTest.testContains":344,"org.easymock.tests2.NameTest.nameForStrictMock":288,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":144,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":56,"org.easymock.tests2.UsageConstraintsTest.testFind":339,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":29,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":305,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":87,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":63,"org.easymock.tests.UsageExpectAndReturnTest.object":184,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":292,"org.easymock.tests2.UsageStrictMockTest.range":98,"org.easymock.tests2.UsageConstraintsTest.lessThan":356,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":327,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":211,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":219,"org.easymock.tests.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":142,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":104,"org.easymock.tests2.CaptureTest.testCaptureRightOne":136,"org.easymock.tests2.UsageConstraintsTest.testOr":138,"org.easymock.tests.UsageRangeTest.combination":96,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":302,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":189,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":205,"org.easymock.tests.UsageTest.wrongArguments":113,"org.easymock.tests.MockClassControlTest.testHashCode":228,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":224,"org.easymock.tests2.EasyMockSupportTest.testVerify":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":67,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":71,"org.easymock.tests.UsageVarargTest.varargShortAccepted":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":6,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":333,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":149,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":331,"org.easymock.tests2.UsageConstraintsTest.cmpTo":2,"org.easymock.tests.UsageVarargTest.varargCharAccepted":210,"org.easymock.tests2.CaptureTest.testCaptureMultiple":78,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":126,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests2.UsageTest.openCallCountByLastCall":278,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":329,"org.easymock.tests.DefaultClassInstantiatorTest.object":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":5,"org.easymock.tests2.CaptureTest.testCaptureFromStub":321,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":158,"org.easymock.tests.UsageTest.unexpectedCallWithArray":84,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":217,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":37,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":147,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":308,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":227,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.samples.ExampleTest.addAndChangeDocument":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":36,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":68,"org.easymock.tests.UsageStrictMockTest.testVerify":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":19,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":300,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":226,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":201,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":317,"org.easymock.tests2.UsageTest.resumeIfFailure":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":197,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":181,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":198,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":106}}]
