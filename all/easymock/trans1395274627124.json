[{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:83","failures":[2],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[4,5,6,7,8],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[9,10,11,12,13,14],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[10,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:92","failures":[31,32],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[33],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,5,62,63,64,65,66,67,68,69,32,70,71,72,73,33,7,74,3,75,76,77,8,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,18,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,27,127,128,129,130,29,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[150],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[151,152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[39,153,60,61,154,108,155,156,125,126,157,158,128,159,160,148],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[161,162,163,164,165,166,167,168,34,169,170,171,172,173,174,175,176,177,35,36,37,38,39,40,41,178,179,180,181,182,183,9,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,10,15,16,17,202,203,204,205,206,42,43,44,45,46,47,48,49,50,51,207,52,53,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,54,225,226,55,227,11,228,229,230,231,232,233,56,234,235,12,236,237,238,239,240,241,242,243,244,245,246,247,248,57,249,153,58,59,250,251,252,60,61,253,254,5,62,6,63,255,64,65,66,67,68,69,31,32,256,70,71,72,73,33,7,74,3,75,76,77,8,78,79,80,13,257,258,259,81,14,260,261,262,263,82,264,265,266,267,151,152,268,269,83,84,85,86,270,87,88,271,272,89,90,91,273,92,274,275,276,277,278,93,279,280,94,95,18,281,282,283,284,285,286,287,96,288,289,290,97,98,99,100,291,101,292,102,293,293,294,294,295,103,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,19,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,104,105,154,106,107,108,109,110,371,372,373,374,375,376,377,378,379,380,381,382,111,383,384,112,113,385,386,387,388,389,20,21,22,390,391,392,114,393,115,394,395,116,396,117,397,398,399,400,401,118,119,402,120,121,122,123,124,403,404,155,156,405,406,125,126,407,408,409,410,411,412,413,414,415,416,417,418,419,23,24,25,26,27,28,420,0,421,422,423,424,425,426,127,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,128,159,129,130,29,131,132,461,462,463,464,465,466,160,133,134,135,136,137,138,139,140,467,141,142,468,143,144,145,146,147,148,149,30,469,470,471,472,473,474,475,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[165,167,168,169,170,172,92,98,360,461],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[385,389],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[351],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[181,9,193,199,16,224,54,226,55,227,11,229,232,233,56,234,12,13,257,258,81,14,260,261,263,82,264,265,274,276,281,282,283,284,286,287,96,289,290,293,293,294,294,300,301,302,304,377,386,387,388,389,400,420,0,421,422,423,424,425,426,441,444,447],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[477],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[478,266,479,480,481,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[39,153,60,61,154,108,155,156,125,126,157,158,128,159,160,148],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[483,228,484],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[161,485,486,162,178,179,180,181,182,183,9,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,10,15,16,208,209,224,54,226,55,227,11,229,230,231,232,233,56,234,235,12,13,257,258,259,81,14,260,261,262,263,82,264,265,266,274,276,281,282,283,284,286,287,96,289,290,293,293,294,294,298,299,300,301,302,304,307,385,386,387,388,389,398,399,400,401,420,0,421,422,423,424,425,426,430,431,432,433,434,435,436,441,444,447],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[165,166,167,168,34,169,170,172,174,175,176,177,35,36,37,38,39,40,41,181,9,193,199,10,15,16,17,206,42,43,44,45,46,47,48,49,50,51,207,52,53,210,211,217,224,54,225,226,55,227,229,233,56,234,241,248,57,249,153,58,59,250,251,252,60,61,253,254,5,62,6,63,64,65,66,67,68,69,31,32,256,70,71,72,73,33,7,74,3,75,76,77,8,78,79,80,257,81,260,261,82,265,267,151,152,268,269,83,84,85,86,270,87,88,271,272,89,90,91,273,92,274,275,276,277,278,93,279,280,94,95,18,281,282,283,284,285,286,287,96,288,289,290,97,98,99,100,291,101,102,293,293,294,294,295,103,296,301,302,304,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,363,369,104,105,154,106,107,108,109,110,371,378,379,380,381,382,112,113,386,387,388,20,21,22,390,392,114,393,115,395,116,396,117,397,400,118,119,402,120,121,122,123,124,403,404,156,405,406,125,126,407,413,414,418,23,24,25,26,27,28,127,427,428,429,437,438,439,440,447,460,128,159,129,130,29,131,132,461,463,464,466,133,134,135,136,137,138,139,140,141,142,468,143,144,145,146,147,148,149,30,469,470,471],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":63,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":403,"org.easymock.tests2.UsageTest.argumentsOrdered":61,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":357,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":59,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":296,"org.easymock.tests2.DelegateToTest.testReturnException":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":24,"org.easymock.tests.MockingTest.testPartialClassMocking":301,"org.easymock.tests.MockClassControlTest.testToString":421,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":173,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":187,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":328,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":211,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":479,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":69,"org.easymock.tests2.UsageTest.wrongArguments":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":129,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":410,"org.easymock.samples.ExampleTest.answerVsDelegate":98,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":444,"org.easymock.tests2.UsageConstraintsTest.testNull":65,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":306,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":226,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":89,"org.easymock.tests2.CaptureTest.testPrimitive":44,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":132,"org.easymock.tests.UsageTest.moreThanOneArgument":404,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":347,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":380,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":412,"org.easymock.tests.UsageTest.argumentsOrdered":126,"org.easymock.tests.UsageVarargTest.varargIntAccepted":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":133,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":13,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":137,"org.easymock.tests.ReplayStateInvalidUsageTest.times":456,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":241,"org.easymock.tests2.DependencyTest.testClassMocking":208,"org.easymock.tests2.AnswerTest.answer":165,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":205,"org.easymock.tests2.CaptureTest.testAnd":206,"org.easymock.tests2.UsageTest.strictResetToDefault":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":270,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":416,"org.easymock.tests2.DelegateToTest.testDelegate":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":343,"org.easymock.tests.LimitationsTest.mockFinalMethod":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":476,"org.easymock.tests2.DependencyTest.testClassMockingSupport":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":111,"org.easymock.tests2.CaptureTest.testCapture1_2446744":45,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":203,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":450,"org.easymock.tests.UsageThrowableTest.throwError":118,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":443,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":201,"org.easymock.samples.PartialClassMockTest.testGetArea":96,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":451,"org.easymock.tests.MockingTest.testInterfaceMocking":303,"org.easymock.tests2.CompareToTest.testLessOrEqual":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":134,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":188,"org.easymock.tests2.UsageTest.niceToStrict":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":329,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":377,"org.easymock.tests2.ThreadingTest.testChangeDefault":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":81,"org.easymock.tests2.MockBuilderTest.testCreateMock":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":196,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":337,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":87,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":439,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":390,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":408,"org.easymock.tests.UsageOverloadedMethodTest.overloading":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":198,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":464,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":72,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":319,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":71,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":50,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":467,"org.easymock.tests.MockClassControlTest.testEquals":425,"org.easymock.tests2.EasyMockSupportClassTest.testAll":181,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":387,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":345,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureAll":42,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":204,"org.easymock.tests.MockNameTest.defaultName":297,"org.easymock.tests2.UsageConstraintsTest.testMatches":73,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":448,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":381,"org.easymock.samples.ExampleTest.voteForRemovals":101,"org.easymock.tests.UsageVarargTest.allKinds":147,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":460,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":475,"org.easymock.samples.BasicClassMockTest.testPrintContent":290,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":123,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":219,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":482,"org.easymock.tests2.UsageConstraintsTest.greaterThan":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":427,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":234,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":436,"org.easymock.samples.ExampleTest.voteForRemoval":99,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":235,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":11,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":447,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":248,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":85,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":23,"org.easymock.tests2.CaptureTest.testCaptureFirst":53,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":86,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":254,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":315,"org.easymock.tests2.CaptureTest.testCapture2_2446744":52,"org.easymock.tests2.UsageTest.moreThanOneArgument":249,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":268,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":365,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":146,"org.easymock.tests.GenericTest.testBridgedEquals":389,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":395,"org.easymock.tests.UsageExpectAndReturnTest.longType":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":472,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":346,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":440,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":378,"org.easymock.tests.UsageCallCountTest.tooManyCalls":116,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":316,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":122,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":282,"org.easymock.tests.MockingTest.testNiceClassMocking":307,"org.easymock.tests.MockingTest.testClassMocking":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":391,"org.easymock.tests2.UsageConstraintsTest.testContains":70,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":16,"org.easymock.tests2.UsageConstraintsTest.testFind":64,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":397,"org.easymock.tests.MockTypeTest.fromEasyMockClass":442,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":172,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests.UsageExpectAndReturnTest.object":318,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":480,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":142,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":375,"org.easymock.tests.UsageTest.exactCallCountByLastCall":407,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":353,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":413,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":266,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":324,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":463,"org.easymock.tests.MockClassControlTest.testHashCode":424,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":213,"org.easymock.tests2.EasyMockSupportTest.testVerify":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":190,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":414,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":461,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":438,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":202,"org.easymock.tests.UsageVarargTest.varargCharAccepted":141,"org.easymock.tests2.CaptureTest.testCaptureMultiple":2,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":370,"org.easymock.tests2.UsageTest.openCallCountByLastCall":250,"org.easymock.tests.DefaultClassInstantiatorTest.object":430,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":91,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":437,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":373,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":191,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":335,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":239,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":212,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":423,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":20,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":199,"org.easymock.tests2.UsageTest.resumeIfFailure":253,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":26,"org.easymock.tests2.StubTest.stubWithReturnValue":18,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":478,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":317,"org.easymock.tests2.SerializationTest.testAllMockedMethod":276,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":363,"org.easymock.samples.SupportTest.voteForRemovals":103,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":340,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":369,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":166,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":419,"org.easymock.tests.UsageExpectAndThrowTest.object":338,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":75,"org.easymock.tests2.DelegateToTest.testWrongClass":279,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":112,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":113,"org.easymock.tests.UsageStrictMockTest.range":108,"org.easymock.samples.ConstructorCalledMockTest.testTax":293,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":163,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":271,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":339,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":260,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":178,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":409,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":471,"org.easymock.tests2.CaptureTest.testCaptureNone":49,"org.easymock.tests.UsageUnorderedTest.message":148,"org.easymock.tests.UsageVerifyTest.twoReturns":159,"org.easymock.tests.UsageVarargTest.varargByteAccepted":145,"org.easymock.tests2.ThreadingTest.testThreadSafe":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":194,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":115,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":289,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":376,"org.easymock.tests2.CaptureTest.testCapture_2617107":43,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":367,"org.easymock.tests2.UsageConstraintsTest.any":32,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":455,"org.easymock.tests2.StubTest.stub":95,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":25,"org.easymock.tests.UsageExpectAndThrowTest.longType":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":368,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":434,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":454,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests2.SerializationTest.testClass":274,"org.easymock.tests.LimitationsTest.mockNativeMethod":400,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":388,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":238,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":41,"org.easymock.tests2.NameTest.nameForMocksControl":177,"org.easymock.tests2.MockedExceptionTest.testMockedException":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":183,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":406,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":171,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":332,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":261,"org.easymock.tests.MockingTest.testNicePartialClassMocking":302,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":227,"org.easymock.tests2.CompareToTest.testCompareEqual":1,"org.easymock.tests2.CaptureTest.testCaptureLast":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":236,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":383,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":287,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":76,"org.easymock.tests.MockingTest.testTwoMocks":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":308,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":336,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":79,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":483,"org.easymock.samples.ExampleTest.removeNonExistingDocument":292,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":452,"org.easymock.tests.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":243,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":214,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":432,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":152,"org.easymock.tests2.MockBuilderTest.testCreateMockString":264,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":184,"org.easymock.tests.UsageExpectAndThrowTest.floatType":330,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":180,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":168,"org.easymock.tests.UsageVerifyTest.twoThrows":128,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":193,"org.easymock.samples.ExampleTest.voteAgainstRemoval":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":358,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":56,"org.easymock.tests.LimitationsTest.privateConstructor":399,"org.easymock.tests2.UsageConstraintsTest.testNotNull":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":124,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":10,"org.easymock.tests2.UsageTest.defaultResetToNice":252,"org.easymock.samples.ExampleTest.voteAgainstRemovals":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":359,"org.easymock.tests.UsageVarargTest.differentLength":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":237,"org.easymock.tests2.CallbackTest.callback":92,"org.easymock.tests2.UsageConstraintsTest.equals":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":230,"org.easymock.tests.UsageTest.openCallCountByLastCall":405,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":29,"org.easymock.tests.UsageCallCountTest.tooFewCalls":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":411,"org.easymock.tests.UsageThrowableTest.throwCheckedException":121,"org.easymock.tests.MockingTest.testStrictClassMocking":298,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":242,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":283,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":457,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":285,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":169,"org.easymock.tests.ObjectMethodsTest.testHashCode":374,"org.easymock.tests2.NameTest.nameForNiceMock":176,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":269,"org.easymock.tests2.DependencyTest.testInterfaceMocking":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":481,"org.easymock.samples.ExampleTest.addDocument":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":195,"org.easymock.tests2.DelegateToTest.testStubDelegate":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":200,"org.easymock.tests2.AnswerTest.stubAnswer":34,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":106,"org.easymock.tests.UsageVarargTest.varargLongAccepted":144,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":356,"org.easymock.tests.UsageExpectAndReturnTest.floatType":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":265,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":294,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests.UsageThrowableTest.noUpperLimit":119,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":221,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":62,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":161,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":46,"org.easymock.tests2.SerializationTest.test":275,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":477,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":431,"org.easymock.tests2.UsageConstraintsTest.testSame":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":309,"org.easymock.samples.SupportTest.addDocument":295,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":185,"org.easymock.tests.GenericTest.testPackageScope":386,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":220,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":305,"org.easymock.tests2.NameTest.nameForMock":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":320,"org.easymock.tests2.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":342,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":372,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":429,"org.easymock.tests2.MockedExceptionTest.testRealException":17,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":360,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":459,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":130,"org.easymock.tests2.NameTest.nameForStrictMock":175,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":259,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":162,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":433,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":257,"org.easymock.tests2.UsageStrictMockTest.range":39,"org.easymock.tests2.UsageConstraintsTest.lessThan":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":216,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":189,"org.easymock.tests2.CaptureTest.testCaptureRightOne":51,"org.easymock.tests2.UsageConstraintsTest.testOr":67,"org.easymock.tests.UsageRangeTest.combination":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":54,"org.easymock.tests.UsageTest.wrongArguments":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":186,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":0,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":349,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":435,"org.easymock.tests.UsageVarargTest.varargShortAccepted":143,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":394,"org.easymock.tests2.UsageConstraintsTest.cmpTo":256,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":351,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":251,"org.easymock.tests2.CaptureTest.testCaptureFromStub":207,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":449,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":258,"org.easymock.tests.UsageTest.unexpectedCallWithArray":155,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":393,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":322,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":107,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.samples.ExampleTest.addAndChangeDocument":102,"org.easymock.tests.UsageStrictMockTest.testVerify":371,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":288,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":473,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":135,"org.easymock.tests.LimitationsTest.abstractClass":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":314,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":136,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":88}}]
