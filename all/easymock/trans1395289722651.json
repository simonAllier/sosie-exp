[{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1,2,3,4,5,6,7,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[11,12,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[15,16,17,18],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[23],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[39,40],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[41],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[42,43,44,45,46,47,48,49,50,51,52,53,53,54,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,1,2,3,4,78,79,80,24,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,26,27,128,129,29,130,131,30,31,132,133,134,135,136,137,138,139,140,141,142,143,144,33,145,146,34,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,5,20,6,162,163,164,165,14,166,167,168,7,8,169,9,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,19,208,209,210,211,212,213,214,10,215,216,217,218,219,220,221,11,222,12,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,17,252,253,254,255,256,257,18,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,21,273,22,274,275,276,277,278,279,280,281,282,283,284,35,285,286,287,288,289,36,37,290,291,292,293,294,295,38,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,41,313,314,315,0,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[332],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[43,44,45,46,47,48,49,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,110,333,334,335,336,337,338,339,340,341,342,115,116,122,123,126,127,26,27,129,133,134,135,136,137,138,142,144,145,147,148,149,150,151,152,170,343,171,172,173,174,178,179,180,181,182,183,184,185,186,187,188,189,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,344,214,215,216,217,218,220,221,11,222,12,223,226,227,228,231,236,237,238,239,240,241,244,245,246,247,248,249,263,264,267,268,269,270,271,272,273,22,276,345,278,346,283,284,285,286,289,290,293,294,296,297,347,348,349,350,298,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,0,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[42,53,53,54,54,55,56,78,79,80,110,342,351,352,353,150,151,152,206,207,19,209,210,211,354,212,344,213,214,10,232,233,234,235,239,247,249,355,356,262,263,264,265,267,268,345,357,277,358,278,346,279,280,359,281,360,361,331],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[43,44,45,46,47,48,49,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,24,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,110,333,334,335,336,337,338,339,340,341,342,114,115,116,117,118,119,120,121,122,123,124,125,126,127,26,27,128,129,28,29,130,131,30,31,132,133,134,135,136,137,138,142,143,144,33,145,146,34,147,148,149,150,151,152,170,343,171,172,173,174,178,179,180,181,182,183,184,362,185,186,187,188,189,193,194,195,196,197,199,200,201,202,203,204,205,206,363,207,19,208,209,210,211,212,344,214,215,216,217,218,219,220,221,11,222,12,223,224,225,226,227,228,229,230,231,236,237,238,239,240,241,244,245,246,247,248,249,263,264,267,268,269,270,271,272,273,22,274,276,345,278,346,281,361,282,283,284,35,285,286,287,288,289,36,37,290,291,292,293,294,295,38,296,297,347,348,349,350,298,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,0,316,317,318,319,320,321,322,323,325,326,327,328,364,329,330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[112,113,191,192],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[365,24,366,367,368,127,26,27,351,369,370,352,371,372,129,28,29,30,31,33,145,34,147,373,374,375,376,363,19,344,10,377,252,255,257,261,378,263,264,267,268,269,270,271,272,345,358,279,280,281,361,284,35,36,37,294,38,296,302,379],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[380,381,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.LastControl:92","failures":[215,217,223,305,306,310,311,41,321],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","sourceCode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[309],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[24,383,384,25,127,26,27,129,385,386,142,32,145,34,147,376,363,387,388,389,390,391,392,284,294,38,296],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[321],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[107,145,153,157,158,164,168,393,294,320],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[364],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[394,395,396],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":306,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests2.UsageTest.argumentsOrdered":37,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":20,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":286,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":57,"org.easymock.tests2.DelegateToTest.testReturnException":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":134,"org.easymock.tests.MockingTest.testPartialClassMocking":150,"org.easymock.tests.MockClassControlTest.testToString":366,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":58,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":233,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":299,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":122,"org.easymock.tests2.UsageTest.wrongArguments":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":335,"org.easymock.samples.ExampleTest.answerVsDelegate":44,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":352,"org.easymock.tests2.UsageConstraintsTest.testNull":308,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":209,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":18,"org.easymock.tests2.CaptureTest.testPrimitive":218,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":126,"org.easymock.tests.UsageTest.moreThanOneArgument":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":77,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":182,"org.easymock.tests.UsageTest.argumentsOrdered":31,"org.easymock.tests.UsageVarargTest.varargIntAccepted":195,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":185,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":345,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":189,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":261,"org.easymock.tests2.AnswerTest.answer":241,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":350,"org.easymock.tests2.CaptureTest.testAnd":215,"org.easymock.tests2.UsageTest.strictResetToDefault":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":253,"org.easymock.tests2.DelegateToTest.testDelegate":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":341,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":376,"org.easymock.tests2.CaptureTest.testCapture1_2446744":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":71,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":348,"org.easymock.tests.UsageThrowableTest.throwError":114,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":184,"org.easymock.samples.PartialClassMockTest.testGetArea":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":186,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":2,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":59,"org.easymock.tests2.UsageTest.niceToStrict":285,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":375,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":153,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":278,"org.easymock.tests2.MockBuilderTest.testCreateMock":359,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":388,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":67,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":254,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":192,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":170,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":333,"org.easymock.tests.UsageOverloadedMethodTest.overloading":178,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":141,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":316,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":92,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests2.EasyMockSupportClassTest.testAll":232,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":79,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":75,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":355,"org.easymock.tests2.CaptureTest.testCaptureAll":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":349,"org.easymock.tests.MockNameTest.defaultName":365,"org.easymock.tests2.UsageConstraintsTest.testMatches":317,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":183,"org.easymock.samples.ExampleTest.voteForRemovals":48,"org.easymock.tests.UsageVarargTest.allKinds":203,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":127,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":340,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":120,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":138,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":275,"org.easymock.tests2.UsageConstraintsTest.greaterThan":319,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":102,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":10,"org.easymock.samples.ExampleTest.voteForRemoval":45,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":354,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":110,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":17,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":133,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":21,"org.easymock.tests2.CaptureTest.testCaptureFirst":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":252,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":291,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":88,"org.easymock.tests2.CaptureTest.testCapture2_2446744":225,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":230,"org.easymock.tests2.UsageTest.moreThanOneArgument":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":167,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":281,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":202,"org.easymock.tests.GenericTest.testBridgedEquals":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":175,"org.easymock.tests.UsageExpectAndReturnTest.longType":84,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":337,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":76,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":360,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":107,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":180,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":112,"org.easymock.tests.UsageCallCountTest.tooManyCalls":176,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":171,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":119,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":263,"org.easymock.tests2.UsageConstraintsTest.testContains":315,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":343,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":357,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":239,"org.easymock.tests2.UsageConstraintsTest.testFind":307,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":179,"org.easymock.tests.MockTypeTest.fromEasyMockClass":369,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":143,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":330,"org.easymock.tests.UsageExpectAndReturnTest.object":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":257,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":197,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":16,"org.easymock.tests.UsageTest.exactCallCountByLastCall":132,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":158,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":108,"org.easymock.tests2.ConstraintsToStringTest.findToString":23,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":97,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":193,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":140,"org.easymock.tests.MockClassControlTest.testHashCode":381,"org.easymock.tests2.EasyMockSupportTest.testVerify":260,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":109,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":191,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":139,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":347,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":364,"org.easymock.tests.UsageVarargTest.varargCharAccepted":196,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":9,"org.easymock.tests2.UsageTest.openCallCountByLastCall":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":395,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":190,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":373,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":117,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":213,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":368,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":64,"org.easymock.tests.CapturesMatcherTest.test":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":111,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":235,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":367,"org.easymock.tests2.UsageTest.resumeIfFailure":290,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":136,"org.easymock.tests2.StubTest.stubWithReturnValue":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":325,"org.easymock.tests2.SerializationTest.testAllMockedMethod":249,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":14,"org.easymock.samples.SupportTest.voteForRemovals":51,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":70,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":169,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":242,"org.easymock.tests.UsageExpectAndThrowTest.object":68,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":322,"org.easymock.tests2.DelegateToTest.testWrongClass":274,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":205,"org.easymock.tests.UsageStrictMockTest.range":34,"org.easymock.samples.ConstructorCalledMockTest.testTax":53,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":69,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":279,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":334,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":3,"org.easymock.tests2.CaptureTest.testCaptureNone":222,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests.UsageVarargTest.varargByteAccepted":201,"org.easymock.tests2.ThreadingTest.testThreadSafe":227,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":174,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":374,"org.easymock.tests2.CaptureTest.testCapture_2617107":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":7,"org.easymock.tests2.UsageConstraintsTest.any":313,"org.easymock.tests2.StubTest.stub":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":8,"org.easymock.tests.UsageExpectAndThrowTest.longType":61,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.tests2.SerializationTest.testClass":247,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":302,"org.easymock.tests.LimitationsTest.mockNativeMethod":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":80,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests2.NameTest.nameForMocksControl":272,"org.easymock.tests2.MockedExceptionTest.testMockedException":238,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":62,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":280,"org.easymock.tests.MockingTest.testNicePartialClassMocking":151,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":211,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":363,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":268,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":311,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":323,"org.easymock.tests.MockingTest.testTwoMocks":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":66,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":327,"org.easymock.tests.UsageStrictMockTest.differentMethods":147,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":362,"org.easymock.tests2.ConstraintsToStringTest.andToString":391,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":229,"org.easymock.tests2.MockBuilderTest.testCreateMockString":361,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":380,"org.easymock.tests.UsageExpectAndThrowTest.floatType":60,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":318,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":244,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":234,"org.easymock.samples.ExampleTest.voteAgainstRemoval":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":1,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":214,"org.easymock.tests2.UsageConstraintsTest.testNotNull":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":121,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":237,"org.easymock.tests2.UsageTest.defaultResetToNice":289,"org.easymock.samples.ExampleTest.voteAgainstRemovals":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests.UsageVarargTest.differentLength":198,"org.easymock.tests2.CallbackTest.callback":236,"org.easymock.tests.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":124,"org.easymock.tests.UsageCallCountTest.tooFewCalls":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":336,"org.easymock.tests.UsageThrowableTest.throwCheckedException":118,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":383,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":267,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":266,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests.ObjectMethodsTest.testHashCode":382,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":231,"org.easymock.tests2.NameTest.nameForNiceMock":271,"org.easymock.tests2.DependencyTest.testInterfaceMocking":298,"org.easymock.samples.ExampleTest.addDocument":47,"org.easymock.tests2.DelegateToTest.testStubDelegate":22,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":145,"org.easymock.tests.UsageVarargTest.varargLongAccepted":200,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":5,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":99,"org.easymock.tests.UsageExpectAndReturnTest.floatType":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":331,"org.easymock.tests2.ConstraintsToStringTest.orToString":387,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":54,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":386,"org.easymock.tests.UsageThrowableTest.noUpperLimit":115,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":320,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":304,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":220,"org.easymock.tests2.SerializationTest.test":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.tests2.UsageConstraintsTest.testSame":309,"org.easymock.samples.SupportTest.addDocument":50,"org.easymock.tests.GenericTest.testPackageScope":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":157,"org.easymock.tests2.NameTest.nameForMock":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":93,"org.easymock.tests2.UsageStrictMockTest.differentMethods":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":72,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":15,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":104,"org.easymock.tests2.MockedExceptionTest.testRealException":240,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":164,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":163,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":123,"org.easymock.tests2.NameTest.nameForStrictMock":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":396,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":210,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":321,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":277,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.UsageConstraintsTest.lessThan":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":161,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":251,"org.easymock.tests2.CaptureTest.testCaptureRightOne":223,"org.easymock.tests2.UsageConstraintsTest.testOr":310,"org.easymock.tests.UsageRangeTest.combination":101,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":29,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":94,"org.easymock.tests.UsageVarargTest.varargShortAccepted":199,"org.easymock.tests2.UsageConstraintsTest.cmpTo":314,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":156,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":288,"org.easymock.tests2.CaptureTest.testCaptureFromStub":224,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":358,"org.easymock.tests.UsageTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":173,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":95,"org.easymock.tests2.CaptureTest.testCapture":13,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":146,"org.easymock.tests2.UsageConstraintsTest.constraints":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":49,"org.easymock.tests2.ConstraintsToStringTest.notToString":389,"org.easymock.tests.UsageStrictMockTest.testVerify":149,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":52,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":338,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":187,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":188,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":142,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":255}}]
