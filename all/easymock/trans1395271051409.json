[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,73,74,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[113],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[108],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[129,130,131],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[133],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[134],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[62,107],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[135,0,136,137,1,2,138,139,140,141,142,143],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[103,144,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[3,146,147,148,149,55],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[103,144,145],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[100,104],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[3,4,5,6,150,151,7,8,152,9,10,153,11,12,13,14,154,15,16,17,18,19,20,21,22,23,155,156,157,135,0,158,159,136,137,1,160,161,2,162,163,164,165,166,167,168,169,170,138,171,172,173,174,139,140,175,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,176,177,133,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,114,195,196,197,198,199,115,116,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,49,216,50,141,217,142,218,219,220,221,222,223,224,143,225,226,227,51,52,53,228,229,230,231,232,117,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,55,262,57,58,263,59,60,61,62,264,63,132,64,65,66,265,68,266,267,69,268,269,270,70,271,272,71,72,273,274,275,276,277,278,279,280,281,282,283,284,285,286,73,74,287,288,289,290,291,292,293,294,295,296,297,75,76,77,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,78,79,80,81,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,118,119,390,391,120,121,392,82,83,84,85,86,393,87,394,395,88,396,122,123,397,398,399,400,401,402,403,404,89,90,124,405,406,407,408,409,410,411,125,412,413,126,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,113,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,91,92,93,94,95,96,97,98,476,99,100,101,102,103,104,477,105,106,478,479,480,481,107,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,108,109,110,111,112,498,499,500,501,502],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[129,130,131],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[3,4,5,6,150,151,7,8,152,9,10,153,11,12,13,14,154,15,16,17,18,19,20,21,22,23,155,156,157,135,0,158,159,136,137,1,160,161,2,162,163,164,165,166,167,168,169,170,138,171,172,173,174,139,140,175,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,176,177,133,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,114,195,196,197,198,199,115,116,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,49,216,50,141,217,142,218,219,220,221,222,223,224,143,225,226,227,51,52,53,228,229,230,231,232,117,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,55,262,57,58,263,59,60,61,62,264,63,132,64,65,66,265,68,266,267,69,268,269,270,70,271,272,71,72,273,274,275,276,277,278,279,280,281,282,283,284,285,286,73,74,287,288,289,290,291,292,293,294,295,296,297,75,76,77,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,78,79,80,81,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,118,119,390,391,120,121,392,82,83,84,85,86,393,87,394,395,88,396,122,123,397,398,399,400,401,402,403,404,89,90,124,405,406,407,408,409,410,411,125,412,413,126,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,113,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,91,92,93,94,95,96,97,98,476,99,100,101,102,103,104,477,105,106,478,479,480,481,107,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,108,109,110,111,112,498,499,500,501,502],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[3,4,5,6,150,151,7,8,152,9,10,153,11,12,13,14,154,15,16,17,18,19,20,21,22,23,155,156,157,135,0,158,159,136,137,1,160,161,2,162,163,164,165,166,167,168,169,170,138,171,172,173,174,139,140,175,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,176,504,177,133,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,114,195,196,197,198,199,115,116,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,49,216,50,141,217,142,218,219,220,221,222,223,224,143,225,226,227,51,52,53,228,229,230,231,232,117,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,146,147,505,148,506,149,55,57,58,59,60,61,62,63,132,64,65,66,68,266,267,69,268,269,70,271,272,71,72,274,275,276,277,278,279,280,281,282,283,284,285,286,73,74,287,288,289,290,291,292,293,294,295,296,297,75,76,77,298,299,300,301,302,303,304,305,306,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,78,79,80,81,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,118,119,390,391,120,121,392,82,83,84,85,86,393,87,394,395,88,396,122,123,397,398,399,400,401,402,403,404,89,90,124,405,406,407,408,409,410,411,125,412,413,126,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,113,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,478,479,480,481,107,482,483,485,486,487,488,489,490,491,492,493,494,495,496,497,108,109,110,111,112,498,499,500,501,502],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[49,529,530,531,532,533,264,64,72],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[49,216,50,534],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[168],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[49,216,50,534],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[51,52,53,228,267,306,492,493,494,495,496,497,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[108,109,110,111,112],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[114,115,116,117,233,118,119,120,121,122,123,124,125,126,414,535,484,536,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[129,130,131],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[144,145],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[376,377,378],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,27,30,40,46,49,50,53,537,55,57,58,60,61,62,63,65,66,68,71,73,73,74,74,75,76,77,80,84,85,86,87,90,109,110,111],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":128,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":388,"org.easymock.tests2.UsageTest.argumentsOrdered":116,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":447,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":196,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":298,"org.easymock.tests2.DelegateToTest.testReturnException":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":493,"org.easymock.tests.MockingTest.testPartialClassMocking":85,"org.easymock.tests.MockClassControlTest.testToString":93,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":245,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":417,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":30,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":244,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":528,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":529,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":498,"org.easymock.tests2.UsageTest.wrongArguments":114,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":462,"org.easymock.samples.ExampleTest.answerVsDelegate":291,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":107,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":395,"org.easymock.tests2.UsageConstraintsTest.testNull":136,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":11,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":98,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":283,"org.easymock.tests2.CaptureTest.testPrimitive":218,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":502,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":436,"org.easymock.tests.UsageTest.moreThanOneArgument":389,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":381,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":405,"org.easymock.tests.UsageTest.argumentsOrdered":121,"org.easymock.tests.UsageVarargTest.varargIntAccepted":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":299,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":533,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":260,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":269,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":303,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":512,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":185,"org.easymock.tests.ReplayStateInvalidUsageTest.times":345,"org.easymock.tests2.DependencyTest.testClassMocking":241,"org.easymock.tests2.AnswerTest.answer":235,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":453,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":205,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":479,"org.easymock.tests2.CaptureTest.testAnd":141,"org.easymock.tests2.UsageTest.strictResetToDefault":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":18,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":324,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":409,"org.easymock.tests2.DelegateToTest.testDelegate":211,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":511,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":432,"org.easymock.tests.LimitationsTest.mockFinalMethod":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":491,"org.easymock.tests2.DependencyTest.testClassMockingSupport":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":384,"org.easymock.tests2.CaptureTest.testCapture1_2446744":219,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":203,"org.easymock.tests.UsageThrowableTest.throwError":329,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":339,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":481,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":48,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":515,"org.easymock.samples.PartialClassMockTest.testGetArea":77,"org.easymock.tests.MockingTest.testInterfaceMocking":393,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":300,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":35,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":89,"org.easymock.tests2.UsageTest.niceToStrict":195,"org.easymock.tests2.ThreadingTest.testChangeDefault":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":129,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.MockBuilderTest.testCreateMock":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":43,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":426,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":279,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":478,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":467,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":460,"org.easymock.tests.UsageOverloadedMethodTest.overloading":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":166,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":372,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":464,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":360,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":165,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":144,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":224,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":310,"org.easymock.tests.MockClassControlTest.testEquals":97,"org.easymock.tests2.EasyMockSupportClassTest.testAll":27,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":110,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":434,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":537,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":489,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":204,"org.easymock.tests2.CaptureTest.testCaptureAll":217,"org.easymock.tests.MockNameTest.defaultName":304,"org.easymock.tests2.UsageConstraintsTest.testMatches":167,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":382,"org.easymock.samples.ExampleTest.voteForRemovals":295,"org.easymock.tests.UsageVarargTest.allKinds":318,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":490,"org.easymock.samples.BasicClassMockTest.testPrintContent":76,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":335,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":497,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":257,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":477,"org.easymock.tests2.UsageConstraintsTest.greaterThan":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":21,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":516,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":105,"org.easymock.samples.ExampleTest.voteForRemoval":292,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":177,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":22,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":482,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":14,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":508,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":90,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":276,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":492,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":206,"org.easymock.tests2.CaptureTest.testCaptureFirst":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":277,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":201,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":356,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":178,"org.easymock.tests2.UsageTest.moreThanOneArgument":194,"org.easymock.tests2.CaptureTest.testCapture2_2446744":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":454,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":66,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":317,"org.easymock.tests.GenericTest.testBridgedEquals":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":474,"org.easymock.tests.UsageExpectAndReturnTest.longType":352,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":487,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":435,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":67,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":387,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":173,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":433,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":379,"org.easymock.tests.UsageCallCountTest.tooManyCalls":475,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":357,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":422,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":334,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":4,"org.easymock.tests.MockingTest.testNiceClassMocking":88,"org.easymock.tests.MockingTest.testClassMocking":83,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":468,"org.easymock.tests2.UsageConstraintsTest.testContains":164,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":56,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":159,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":466,"org.easymock.tests.MockTypeTest.fromEasyMockClass":480,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":410,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":214,"org.easymock.tests.UsageExpectAndReturnTest.object":359,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":282,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":530,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":312,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":403,"org.easymock.tests.UsageTest.exactCallCountByLastCall":392,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":406,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":397,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":72,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":307,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":371,"org.easymock.tests.MockClassControlTest.testHashCode":96,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":251,"org.easymock.tests2.EasyMockSupportTest.testVerify":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":37,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":407,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":369,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":377,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":536,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":202,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":155,"org.easymock.tests.UsageVarargTest.varargCharAccepted":311,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":476,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":459,"org.easymock.tests2.UsageTest.openCallCountByLastCall":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":130,"org.easymock.tests.DefaultClassInstantiatorTest.object":99,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":285,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":376,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":401,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":332,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":183,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":250,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":514,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":19,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":423,"org.easymock.tests.ReplayStateInvalidCallsTest.times":520,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":366,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":326,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":46,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":94,"org.easymock.tests2.UsageTest.resumeIfFailure":200,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":495,"org.easymock.tests2.StubTest.stubWithReturnValue":267,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":264,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":358,"org.easymock.tests2.SerializationTest.testAllMockedMethod":50,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":113,"org.easymock.samples.SupportTest.voteForRemovals":288,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":429,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":534,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":458,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":236,"org.easymock.tests.UsageExpectAndThrowTest.object":427,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":399,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":171,"org.easymock.tests2.DelegateToTest.testWrongClass":209,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":518,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":485,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":486,"org.easymock.tests.UsageStrictMockTest.range":126,"org.easymock.samples.ConstructorCalledMockTest.testTax":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":271,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":428,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":62,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":461,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":510,"org.easymock.tests2.CaptureTest.testCaptureNone":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":321,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":147,"org.easymock.tests.UsageUnorderedTest.message":124,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":535,"org.easymock.tests.UsageVerifyTest.twoReturns":123,"org.easymock.tests.UsageVarargTest.varargByteAccepted":316,"org.easymock.tests2.ThreadingTest.testThreadSafe":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":41,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":472,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":404,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":75,"org.easymock.tests2.CaptureTest.testCapture_2617107":142,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":456,"org.easymock.tests2.UsageConstraintsTest.any":162,"org.easymock.tests2.StubTest.stub":266,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":457,"org.easymock.tests.UsageExpectAndThrowTest.longType":420,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":103,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":343,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":232,"org.easymock.tests2.SerializationTest.testClass":49,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":255,"org.easymock.tests.LimitationsTest.mockNativeMethod":80,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":182,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":526,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":505,"org.easymock.tests2.NameTest.nameForMocksControl":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":184,"org.easymock.tests2.MockedExceptionTest.testMockedException":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":29,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":391,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":421,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":87,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":213,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":9,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":63,"org.easymock.tests.MockingTest.testNicePartialClassMocking":86,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":13,"org.easymock.tests2.CompareToTest.testNotComparable":134,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":180,"org.easymock.tests2.CaptureTest.testCaptureLast":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":525,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":160,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":8,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":172,"org.easymock.tests.MockingTest.testTwoMocks":84,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":522,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":152,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":425,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":115,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":140,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":149,"org.easymock.samples.ExampleTest.removeNonExistingDocument":296,"org.easymock.tests.UsageStrictMockTest.differentMethods":414,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":187,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":252,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":506,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":101,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":133,"org.easymock.tests2.MockBuilderTest.testCreateMockString":68,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":91,"org.easymock.tests.UsageExpectAndThrowTest.floatType":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":31,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":26,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":238,"org.easymock.tests.UsageVerifyTest.twoThrows":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":273,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":40,"org.easymock.samples.ExampleTest.voteAgainstRemoval":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":319,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":20,"org.easymock.tests.LimitationsTest.privateConstructor":79,"org.easymock.tests2.UsageConstraintsTest.testNotNull":139,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":336,"org.easymock.tests2.UsageTest.defaultResetToNice":199,"org.easymock.samples.ExampleTest.voteAgainstRemovals":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":364,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":181,"org.easymock.tests.UsageVarargTest.differentLength":313,"org.easymock.tests2.CallbackTest.callback":215,"org.easymock.tests2.UsageConstraintsTest.equals":158,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":16,"org.easymock.tests.UsageTest.openCallCountByLastCall":390,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":500,"org.easymock.tests.UsageCallCountTest.tooFewCalls":470,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":463,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":148,"org.easymock.tests.UsageThrowableTest.throwCheckedException":333,"org.easymock.tests.MockingTest.testStrictClassMocking":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":7,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":186,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":5,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":151,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":240,"org.easymock.tests2.CompareToTest.testGreateOrEqual":503,"org.easymock.tests.ObjectMethodsTest.testHashCode":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":532,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":524,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":179,"org.easymock.tests2.NameTest.nameForNiceMock":248,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":519,"org.easymock.tests2.DependencyTest.testInterfaceMocking":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":531,"org.easymock.samples.ExampleTest.addDocument":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":47,"org.easymock.tests2.DelegateToTest.testStubDelegate":208,"org.easymock.tests2.AnswerTest.stubAnswer":239,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":412,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":132,"org.easymock.tests.UsageVarargTest.varargLongAccepted":315,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.floatType":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":71,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":74,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":259,"org.easymock.tests.UsageThrowableTest.noUpperLimit":330,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":157,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":69,"org.easymock.tests2.SerializationTest.test":216,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":220,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":145,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":100,"org.easymock.tests2.UsageConstraintsTest.testSame":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":350,"org.easymock.samples.SupportTest.addDocument":287,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":150,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":509,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":32,"org.easymock.tests.GenericTest.testPackageScope":109,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":258,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":394,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":507,"org.easymock.tests2.NameTest.nameForMock":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":361,"org.easymock.tests2.UsageStrictMockTest.differentMethods":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":265,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":431,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":400,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":325,"org.easymock.tests2.MockedExceptionTest.testRealException":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":450,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":499,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":348,"org.easymock.tests2.NameTest.nameForStrictMock":247,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":131,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":12,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":70,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":138,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":102,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":57,"org.easymock.tests2.UsageStrictMockTest.range":117,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":513,"org.easymock.tests2.UsageConstraintsTest.lessThan":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":275,"org.easymock.tests2.CaptureTest.testCaptureRightOne":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":36,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":146,"org.easymock.tests2.UsageConstraintsTest.testOr":1,"org.easymock.tests.UsageRangeTest.combination":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":10,"org.easymock.tests.UsageTest.wrongArguments":119,"org.easymock.tests2.MockBuilderTest.testWithConstructor":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":33,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":362,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":104,"org.easymock.tests.UsageVarargTest.varargShortAccepted":314,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":473,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":527,"org.easymock.tests2.UsageConstraintsTest.cmpTo":163,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":237,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":198,"org.easymock.tests2.CaptureTest.testCaptureFromStub":225,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":338,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":58,"org.easymock.tests.UsageTest.unexpectedCallWithArray":118,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":523,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":125,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":471,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":363,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":413,"org.easymock.tests2.UsageConstraintsTest.constraints":135,"org.easymock.samples.ExampleTest.addAndChangeDocument":297,"org.easymock.tests.UsageStrictMockTest.testVerify":416,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":289,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":411,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":488,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":221,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":301,"org.easymock.tests.LimitationsTest.abstractClass":78,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":355,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":302,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":280,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":308}}]
