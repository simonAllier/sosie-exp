[{"transplant":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,0,98,1,2,3,4,5,99,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,100,101,102,103,104,105,106,30,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,31,32,33,34,35,36,37,38,39,40,41,42,43,44,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,45,195,196,197,198,199,200,201,202,203,204,205,206,46,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,47,263,48,49,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,50,51,52,53,54,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,55,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,56,57,58,59,60,66,430,431,61,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,62,63,452,453,454,455,456,457,458,459,64,65,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[488,489,490,491,398,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[173,45,197,198,397,431,447,63,454,455,457,458,459],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[4,19,119,130,131,133,146,150,151,154,158,171,174,175,176,180,181,182,183,193,195,196,197,200,210,212,351,492,493,396,398,399,402,403,404,427,428,429,61,438,450,62,452,453,454,458,459,494,463],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[67,69,70,72,79,81,87,102,103,104,119,123,125,127,131,136,184,185,186,187,189,190,191,45,196,197,199,200,201,202,203,204,46,210,211,212,237,240,250,256,287,288,290,50,51,52,53,54,301,303,304,305,306,307,308,311,312,314,315,316,318,319,320,321,322,323,324,325,326,373,56,436,438,439,440,441,449,63,453,454,64,65],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[479],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[104,105,495,496,497,498,126,129,140],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[502],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[68,0,1,111,112,113,114,115,116,158,442],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[488,489,490,491,398,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[105,495,496,497,503,504,126],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[4,5,9,10,12,22,31,33,41],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[143,335,486],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[488,489,490,491,398,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[4,10,31,33,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[104,105,495,496,497,505,498,126,129,140],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[305,307,321,322,323,64],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[4,5,7,9,10,12,22,27,31,33,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[75,76,159,160,161,167,170,215,216,217,223,226],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[140,141,142,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.Capture:82","failures":[31,33,34,35,36,37,38,40,507,41,42,44],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[328,331,332,472],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":396,"org.easymock.tests2.UsageTest.argumentsOrdered":181,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":474,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":176,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":75,"org.easymock.tests2.DelegateToTest.testReturnException":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":260,"org.easymock.tests.MockingTest.testPartialClassMocking":287,"org.easymock.tests.MockClassControlTest.testToString":366,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":89,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":244,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":264,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":11,"org.easymock.tests2.UsageTest.wrongArguments":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":56,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":394,"org.easymock.samples.ExampleTest.answerVsDelegate":68,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":389,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":292,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":202,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":154,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":371,"org.easymock.tests2.CaptureTest.testPrimitive":34,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":60,"org.easymock.tests.UsageTest.moreThanOneArgument":397,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":283,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":325,"org.easymock.tests.UsageTest.argumentsOrdered":403,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":328,"org.easymock.tests.UsageVarargTest.varargIntAccepted":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":504,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":169,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":229,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":54,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":220,"org.easymock.tests.ReplayStateInvalidUsageTest.times":341,"org.easymock.tests2.DependencyTest.testClassMocking":100,"org.easymock.tests2.AnswerTest.answer":111,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":481,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":110,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":386,"org.easymock.tests2.CaptureTest.testAnd":31,"org.easymock.tests2.UsageTest.strictResetToDefault":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":324,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":149,"org.easymock.tests2.DelegateToTest.testDelegate":139,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":279,"org.easymock.tests.LimitationsTest.mockFinalMethod":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":379,"org.easymock.tests2.DependencyTest.testClassMockingSupport":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":66,"org.easymock.tests2.CaptureTest.testCapture1_2446744":35,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":108,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":335,"org.easymock.tests.UsageThrowableTest.throwError":356,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":388,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":463,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":258,"org.easymock.samples.PartialClassMockTest.testGetArea":79,"org.easymock.tests.MockingTest.testInterfaceMocking":289,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":373,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":410,"org.easymock.tests2.UsageTest.niceToStrict":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":265,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":123,"org.easymock.tests2.MockBuilderTest.testCreateMock":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":223,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":488,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":273,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":150,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":385,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":434,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":421,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":392,"org.easymock.tests.UsageOverloadedMethodTest.overloading":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":255,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":445,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":17,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":314,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":16,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":40,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":348,"org.easymock.tests2.EasyMockSupportClassTest.testAll":237,"org.easymock.tests.MockClassControlTest.testEquals":370,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":109,"org.easymock.tests2.CaptureTest.testCaptureAll":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":377,"org.easymock.tests.MockNameTest.defaultName":380,"org.easymock.tests2.UsageConstraintsTest.testMatches":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":326,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":333,"org.easymock.samples.ExampleTest.voteForRemovals":72,"org.easymock.tests.UsageVarargTest.allKinds":55,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":457,"org.easymock.samples.BasicClassMockTest.testPrintContent":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":378,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":362,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":166,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":498,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":418,"org.easymock.tests2.UsageConstraintsTest.greaterThan":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":238,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":212,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":419,"org.easymock.samples.ExampleTest.voteForRemoval":69,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":85,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":213,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":205,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":420,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":147,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":259,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":134,"org.easymock.tests2.CaptureTest.testCaptureFirst":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":148,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":183,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":310,"org.easymock.tests2.UsageTest.moreThanOneArgument":173,"org.easymock.tests2.CaptureTest.testCapture2_2446744":43,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":482,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":131,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":355,"org.easymock.tests.GenericTest.testBridgedEquals":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":428,"org.easymock.tests.UsageExpectAndReturnTest.longType":306,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":375,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":282,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":449,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":382,"org.easymock.tests.UsageCallCountTest.tooManyCalls":429,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":361,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":185,"org.easymock.tests.MockingTest.testNiceClassMocking":293,"org.easymock.tests.MockingTest.testClassMocking":285,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":422,"org.easymock.tests2.UsageConstraintsTest.testContains":15,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":96,"org.easymock.tests2.UsageConstraintsTest.testFind":6,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":462,"org.easymock.tests.MockTypeTest.fromEasyMockClass":387,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":450,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":1,"org.easymock.tests.UsageExpectAndReturnTest.object":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":496,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":350,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":408,"org.easymock.tests.UsageTest.exactCallCountByLastCall":404,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":435,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":319,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":160,"org.easymock.tests.MockClassControlTest.testHashCode":369,"org.easymock.tests2.EasyMockSupportTest.testVerify":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":247,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":442,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":433,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":492,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":107,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":30,"org.easymock.tests.UsageVarargTest.varargCharAccepted":349,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":411,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":487,"org.easymock.tests2.UsageTest.openCallCountByLastCall":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":499,"org.easymock.tests.DefaultClassInstantiatorTest.object":412,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":156,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":432,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":406,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":271,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":218,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":210,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":368,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":270,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":256,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":367,"org.easymock.tests2.UsageTest.resumeIfFailure":182,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":262,"org.easymock.tests2.StubTest.stubWithReturnValue":144,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":312,"org.easymock.tests2.SerializationTest.testAllMockedMethod":142,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":480,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":489,"org.easymock.samples.SupportTest.voteForRemovals":81,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":294,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":276,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":506,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":486,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":112,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":437,"org.easymock.tests.UsageExpectAndThrowTest.object":274,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":23,"org.easymock.tests2.DelegateToTest.testWrongClass":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":64,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":65,"org.easymock.tests.UsageStrictMockTest.range":453,"org.easymock.samples.ConstructorCalledMockTest.testTax":82,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":232,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":275,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":125,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":393,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests2.CaptureTest.testCaptureNone":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":374,"org.easymock.tests.UsageUnorderedTest.message":61,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":494,"org.easymock.tests.UsageVerifyTest.twoReturns":459,"org.easymock.tests.UsageVarargTest.varargByteAccepted":354,"org.easymock.tests2.ThreadingTest.testThreadSafe":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":251,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":426,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":409,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":77,"org.easymock.tests2.CaptureTest.testCapture_2617107":33,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":59,"org.easymock.tests2.UsageConstraintsTest.any":13,"org.easymock.tests2.StubTest.stub":143,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":261,"org.easymock.tests.UsageExpectAndThrowTest.longType":267,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":416,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":339,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":195,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":164,"org.easymock.tests2.SerializationTest.testClass":140,"org.easymock.tests.LimitationsTest.mockNativeMethod":301,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":297,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":217,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests2.NameTest.nameForMocksControl":93,"org.easymock.tests2.MockedExceptionTest.testMockedException":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":239,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":401,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":268,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":127,"org.easymock.tests.MockingTest.testNicePartialClassMocking":288,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":204,"org.easymock.tests2.CaptureTest.testCaptureLast":38,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":215,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":430,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":191,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":24,"org.easymock.tests.MockingTest.testTwoMocks":286,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":272,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":28,"org.easymock.samples.ExampleTest.removeNonExistingDocument":73,"org.easymock.tests.UsageStrictMockTest.differentMethods":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":222,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":161,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":414,"org.easymock.tests2.ConstraintsToStringTest.andToString":502,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":86,"org.easymock.tests2.MockBuilderTest.testCreateMockString":133,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":241,"org.easymock.tests.UsageExpectAndThrowTest.floatType":266,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":236,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":114,"org.easymock.tests.UsageVerifyTest.twoThrows":458,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":106,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":250,"org.easymock.samples.ExampleTest.voteAgainstRemoval":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":211,"org.easymock.tests.LimitationsTest.privateConstructor":300,"org.easymock.tests2.UsageConstraintsTest.testNotNull":27,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":363,"org.easymock.tests2.UsageTest.defaultResetToNice":179,"org.easymock.samples.ExampleTest.voteAgainstRemovals":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":318,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":216,"org.easymock.tests.UsageVarargTest.differentLength":351,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests2.UsageConstraintsTest.equals":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":207,"org.easymock.tests.UsageTest.openCallCountByLastCall":400,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":58,"org.easymock.tests.UsageCallCountTest.tooFewCalls":424,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":395,"org.easymock.tests.UsageThrowableTest.throwCheckedException":360,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":284,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":221,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":189,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":116,"org.easymock.tests.ObjectMethodsTest.testHashCode":407,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":503,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":88,"org.easymock.tests2.NameTest.nameForNiceMock":92,"org.easymock.tests2.DependencyTest.testInterfaceMocking":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":497,"org.easymock.samples.ExampleTest.addDocument":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":252,"org.easymock.tests2.DelegateToTest.testStubDelegate":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":257,"org.easymock.tests2.AnswerTest.stubAnswer":115,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":63,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":128,"org.easymock.tests.UsageVarargTest.varargLongAccepted":353,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.floatType":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":104,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":83,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":446,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":168,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":21,"org.easymock.tests.UsageThrowableTest.noUpperLimit":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":227,"org.easymock.tests2.SerializationTest.test":141,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":36,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":413,"org.easymock.tests2.UsageConstraintsTest.testSame":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":304,"org.easymock.samples.SupportTest.addDocument":80,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":188,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":242,"org.easymock.tests.GenericTest.testPackageScope":295,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":167,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":291,"org.easymock.tests2.NameTest.nameForMock":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":132,"org.easymock.tests2.UsageStrictMockTest.differentMethods":197,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":278,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":405,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":441,"org.easymock.tests2.MockedExceptionTest.testRealException":97,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":477,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":57,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":344,"org.easymock.tests2.NameTest.nameForStrictMock":91,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":500,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":203,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":231,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":415,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":119,"org.easymock.tests2.UsageStrictMockTest.range":196,"org.easymock.tests2.UsageConstraintsTest.lessThan":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":163,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":472,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":146,"org.easymock.tests2.CaptureTest.testCaptureRightOne":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":246,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":438,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":200,"org.easymock.tests.UsageTest.wrongArguments":399,"org.easymock.tests2.MockBuilderTest.testWithConstructor":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":243,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":365,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":316,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":417,"org.easymock.tests.UsageVarargTest.varargShortAccepted":352,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":427,"org.easymock.tests2.UsageConstraintsTest.cmpTo":14,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.CaptureTest.testCaptureFromStub":42,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":334,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":120,"org.easymock.tests.UsageTest.unexpectedCallWithArray":398,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":62,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":425,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":317,"org.easymock.tests2.CaptureTest.testCapture":507,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":452,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.samples.ExampleTest.addAndChangeDocument":74,"org.easymock.tests.UsageStrictMockTest.testVerify":456,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":76,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":451,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":376,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":52,"org.easymock.tests.LimitationsTest.abstractClass":299,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":309,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":151,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":346}}]
