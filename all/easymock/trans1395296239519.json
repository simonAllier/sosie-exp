[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:65","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[66,67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[68],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[69,70],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[38,71,72,73,74,75,76,77,78],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[79],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[80,81,82,83,84,85,86,87,36,88,89,90,91,92,93],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[94,95,96,97],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[98,99,100,101,102],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[38,71,103,104,105,72,73,106,74,107,75,108,109,110,76,100,77,111,78,101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[0,112,2,113,114,3,4,5,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,8,140,141,142,143,144,145,146,147,148,149,150,10,11,151,152,80,81,82,12,153,154,155,156,157,158,159,160,161,162,13,163,164,165,166,167,168,14,15,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,16,201,17,202,18,19,20,203,204,205,206,207,208,209,210,211,212,213,214,49,84,50,215,216,217,218,219,220,221,222,223,224,225,23,226,227,24,25,26,228,229,230,27,28,29,30,31,231,232,233,33,234,235,236,35,237,238,239,240,241,36,88,37,242,243,38,71,103,104,105,72,73,106,74,107,244,245,246,247,248,39,249,250,75,108,251,252,253,109,110,254,255,256,257,258,259,260,261,262,69,70,263,264,40,53,265,266,267,268,95,96,97,269,270,41,271,272,273,42,43,274,275,44,276,277,278,279,280,281,282,283,284,285,286,60,45,287,288,46,47,48,289,290,291,292,90,91,293,294,92,93,76,100,77,111,295,296,297,298,299,300,78,102,301],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[257,258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[252,109,260,261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[302,303,304,305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[112,2,3,4,306,307,159,308,309,13,168,14,15,202,19,20,310,311,312,313,314,315,316,227,24,27,28,288,47,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[94,95,96,97],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[85,86,317,318,319,320,321,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[323,324,325,51,52,53,54,55,326,56,57,327,328,329,330,58,59,60,61,62,331,63,64,332],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[230],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[232],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[333],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[334,335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[112,159,337,168,14,15,202,20,203,227,288,48,289],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[39,252,100,77,295,296,297,298,299,301],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"obj"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[156,338,216,255,339,256,258,260,261,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[340,341,342,343,344,345,346,95,269,347],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,152,158,162,165,166,191,195,196,348,349,350,351,199,352,23,229,89,353,259,354,291],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[355],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:85","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[356,357,358,359,360,0,112,1,2,113,114,3,4,5,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,8,140,141,142,143,144,145,147,148,149,150,9,10,11,151,152,80,81,82,12,154,155,156,157,158,361,160,161,162,13,163,164,165,166,167,168,14,15,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,362,363,364,365,366,197,198,348,349,350,351,199,352,200,367,368,369,370,16,201,17,202,18,19,20,203,205,206,210,211,212,213,214,49,84,50,215,216,217,218,219,220,221,85,86,222,223,224,225,23,226,227,24,25,26,228,229,230,27,28,29,30,371,31,231,372,232,233,32,33,34,234,235,236,35,237,238,239,240,87,241,65,36,88,37,242,243,38,71,103,104,105,72,73,106,107,244,245,246,247,248,39,249,250,75,108,251,252,253,109,110,254,255,256,257,258,373,374,375,376,89,353,259,354,260,261],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[85,86,377,378,340,341,318,319,379,380,95,269,347,381,382,383,283,384,385,284,386,387,388,389,390,391,392,393,394,285,395,396,397,398,399,286,400,401,91,93,333],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1,2,113,114,3,4,5,402,403,404,17,202,405,314,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":71,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":54,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":26,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":50,"org.easymock.tests2.DelegateToTest.testReturnException":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":349,"org.easymock.tests.MockingTest.testPartialClassMocking":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":115,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":284,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":342,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":163,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":369,"org.easymock.samples.ExampleTest.answerVsDelegate":216,"org.easymock.tests2.UsageConstraintsTest.testNull":104,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":44,"org.easymock.tests2.CaptureTest.testPrimitive":111,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":134,"org.easymock.tests.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":358,"org.easymock.tests.UsageTest.argumentsOrdered":4,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":68,"org.easymock.tests.UsageVarargTest.varargIntAccepted":137,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":210,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":57,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":355,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":214,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":312,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":60,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":321,"org.easymock.tests2.AnswerTest.answer":255,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":376,"org.easymock.tests2.CaptureTest.testAnd":76,"org.easymock.tests2.UsageTest.strictResetToDefault":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":273,"org.easymock.tests2.DelegateToTest.testDelegate":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":308,"org.easymock.tests2.CaptureTest.testCapture1_2446744":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":374,"org.easymock.tests.UsageThrowableTest.throwError":189,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":334,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":22,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":360,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":320,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":401,"org.easymock.samples.PartialClassMockTest.testGetArea":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":116,"org.easymock.tests2.UsageTest.niceToStrict":25,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":231,"org.easymock.tests2.MockBuilderTest.testCreateMock":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":397,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":331,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":405,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":124,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":146,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":302,"org.easymock.tests.UsageOverloadedMethodTest.overloading":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":158,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":180,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":160,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":246,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":300,"org.easymock.tests2.EasyMockSupportClassTest.testAll":283,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":198,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":132,"org.easymock.tests2.CaptureTest.testCaptureAll":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":375,"org.easymock.tests2.UsageConstraintsTest.testMatches":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":359,"org.easymock.samples.ExampleTest.voteForRemovals":220,"org.easymock.tests.UsageVarargTest.allKinds":144,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":168,"org.easymock.samples.BasicClassMockTest.testPrintContent":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":365,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":195,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":352,"org.easymock.tests2.UsageConstraintsTest.greaterThan":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":153,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":37,"org.easymock.samples.ExampleTest.voteForRemoval":217,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":87,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":145,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":23,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":271,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":348,"org.easymock.tests2.CaptureTest.testCaptureFirst":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":272,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":30,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":176,"org.easymock.tests2.CaptureTest.testCapture2_2446744":102,"org.easymock.tests2.UsageTest.moreThanOneArgument":227,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":263,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":33,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":143,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":10,"org.easymock.tests.UsageExpectAndReturnTest.longType":172,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":362,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":133,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":252,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":356,"org.easymock.tests.UsageCallCountTest.tooManyCalls":11,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":194,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":90,"org.easymock.tests2.UsageConstraintsTest.testContains":245,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":259,"org.easymock.tests2.UsageConstraintsTest.testFind":103,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":162,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":16,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":261,"org.easymock.tests.UsageExpectAndReturnTest.object":179,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":275,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":343,"org.easymock.tests.UsageTest.exactCallCountByLastCall":5,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":304,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":151,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":208,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":347,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":185,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":135,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":157,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":324,"org.easymock.tests2.EasyMockSupportTest.testVerify":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":392,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":209,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":156,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":6,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":373,"org.easymock.tests.UsageVarargTest.varargCharAccepted":138,"org.easymock.tests2.CaptureTest.testCaptureMultiple":99,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":287,"org.easymock.tests2.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":404,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":58,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":36,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":121,"org.easymock.tests.CapturesMatcherTest.test":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":286,"org.easymock.tests2.UsageTest.resumeIfFailure":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":351,"org.easymock.tests2.StubTest.stubWithReturnValue":291,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":178,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":253,"org.easymock.tests2.SerializationTest.testAllMockedMethod":97,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":79,"org.easymock.samples.SupportTest.voteForRemovals":225,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":314,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":127,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":94,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":336,"org.easymock.tests.UsageExpectAndThrowTest.object":125,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":108,"org.easymock.tests2.DelegateToTest.testWrongClass":267,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":205,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":206,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.samples.ConstructorCalledMockTest.testTax":85,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":126,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":232,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":368,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":402,"org.easymock.tests2.CaptureTest.testCaptureNone":299,"org.easymock.tests.UsageUnorderedTest.message":13,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":21,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":142,"org.easymock.tests2.ThreadingTest.testThreadSafe":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":395,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":150,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":222,"org.easymock.tests2.CaptureTest.testCapture_2617107":77,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":166,"org.easymock.tests2.UsageConstraintsTest.any":107,"org.easymock.tests2.StubTest.stub":290,"org.easymock.tests.UsageExpectAndThrowTest.longType":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":53,"org.easymock.tests2.SerializationTest.testClass":95,"org.easymock.tests.LimitationsTest.mockNativeMethod":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":188,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":330,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":289,"org.easymock.tests2.NameTest.nameForMocksControl":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":59,"org.easymock.tests2.MockedExceptionTest.testMockedException":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":119,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":82,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":236,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":233,"org.easymock.tests.MockingTest.testNicePartialClassMocking":81,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":240,"org.easymock.tests2.CaptureTest.testCaptureLast":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":309,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":73,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":93,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":251,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":123,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":110,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":62,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":325,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":70,"org.easymock.tests2.ConstraintsToStringTest.andToString":313,"org.easymock.tests2.MockBuilderTest.testCreateMockString":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":117,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":256,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":285,"org.easymock.samples.ExampleTest.voteAgainstRemoval":218,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":207,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":380,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":196,"org.easymock.tests2.UsageTest.defaultResetToNice":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":184,"org.easymock.tests.UsageVarargTest.differentLength":8,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":329,"org.easymock.tests2.CallbackTest.callback":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":322,"org.easymock.tests.UsageTest.openCallCountByLastCall":113,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":165,"org.easymock.tests.UsageCallCountTest.tooFewCalls":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":370,"org.easymock.tests.UsageThrowableTest.throwCheckedException":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":403,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":152,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":61,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":294,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":258,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":264,"org.easymock.tests2.NameTest.nameForNiceMock":281,"org.easymock.tests2.DependencyTest.testInterfaceMocking":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":344,"org.easymock.samples.ExampleTest.addDocument":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.DelegateToTest.testStubDelegate":266,"org.easymock.tests2.AnswerTest.stubAnswer":257,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":202,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":317,"org.easymock.tests.UsageVarargTest.varargLongAccepted":141,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":187,"org.easymock.tests.UsageExpectAndReturnTest.floatType":171,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":269,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":86,"org.easymock.tests2.ConstraintsToStringTest.orToString":310,"org.easymock.tests.UsageThrowableTest.noUpperLimit":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":56,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":250,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":307,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":243,"org.easymock.tests2.SerializationTest.test":96,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":296,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":170,"org.easymock.tests2.UsageConstraintsTest.testSame":105,"org.easymock.samples.SupportTest.addDocument":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":326,"org.easymock.tests2.NameTest.nameForMock":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":181,"org.easymock.tests2.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":173,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":155,"org.easymock.tests2.MockedExceptionTest.testRealException":354,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":338,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":164,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":67,"org.easymock.tests2.NameTest.nameForStrictMock":280,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":305,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":239,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":75,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":52,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":391,"org.easymock.tests2.CaptureTest.testCaptureRightOne":78,"org.easymock.tests2.UsageConstraintsTest.testOr":72,"org.easymock.tests.UsageRangeTest.combination":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":35,"org.easymock.tests.UsageTest.wrongArguments":2,"org.easymock.tests2.MockBuilderTest.testWithConstructor":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":182,"org.easymock.tests.UsageVarargTest.varargShortAccepted":140,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":9,"org.easymock.tests2.UsageConstraintsTest.cmpTo":244,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":339,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.CaptureTest.testCaptureFromStub":101,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":66,"org.easymock.tests.UsageTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":149,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":318,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":183,"org.easymock.tests2.UsageConstraintsTest.constraints":38,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":18,"org.easymock.samples.ExampleTest.addAndChangeDocument":221,"org.easymock.tests2.ConstraintsToStringTest.notToString":311,"org.easymock.tests.UsageStrictMockTest.testVerify":204,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":49,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":363,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":212,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":175,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":213,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":43}}]
