[{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[0,1,2,59,60,3,61,62,4,5,6,63,64,65,7,8,9,10,66,67,68,69,70,71,72,73,11,12,13,14,15,16,74,75,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,76,77,30,31,32,33,78,34,79,80,81,35,82,83,36,84,85,86,87,88,89,90,91,92,37,93,94,95,96,97,38,98,99,39,40,41,42,43,44,45,46,47,100,48,49,101,50,51,52,53,102,54,55,103,56,104,105,57,106,107,108,109,110,58],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"m":"result","methodName":"name"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[71,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[112,45,113,46],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[114],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[115,116,117],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,1,3,4,5,6,7,8,9,10,12,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,100,48,49,50,51,52,53,54,55,103,56,57,118,108,119,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[57,120,121,122,123,124,125,126],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[160,161,162,163,164,165,166,167,157,168,169,170,171,172,173,174],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[45,175,102,176,177,57,106,120,121,122,123,124,125,126],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[178,179,180,163,164,181,182,165,166,183,184,169,185,186,187,188],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[189,190,191,192,193,194,195],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[196,128,197,129,130,131,132,133,166,167,157,24,32,198,199,200,201,202,203,204,205,206,207,173,208,209,210,211],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[212,213,214,215,216,217,196,127,128,197,218,129,130,131,132,133,219,220,221,222,223,224,225,226,134,227,228,229,230,180,231,232,233,234,235,236,237,238,239,240,241,163,164,181,182,165,166,183,184,242,243,244,245,246,247,248,249,250,3,251,252,4,5,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,8,9,10,167,273,274,275,156,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,12,17,293,157,168,294,295,169,185,296,170,297,298,299,18,300,189,301,302,303,304,305,19,19,20,20,306,307,308,309,21,22,23,24,310,25,26,27,29,30,32,35,36,37,38,39,40,41,42,311,43,44,190,192,115,312,116,198,313,314,315,316,199,200,201,317,318,202,319,320,321,322,323,203,204,205,206,324,325,326,45,113,46,47,50,51,52,53,55,56,327,328,329,171,330,207,331,332,333,172,173,334,335,193,194,195,336,337,338,339,340,188,341,342,343,208,344,345,346,347,348,349,209,210,350,351,352,353,354,355,57,109,110,58,356,357,358,359,360,361,362,363,158,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,211,380,381,382,383,384,385,386,387,174,388,389],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[62],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[116,198,314,316,199,390,203,324,370,372,211],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[45,175,102,57,106,121,122,123,391,126],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[178,179,163,169,186,187],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[392,393],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[328],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[68,72],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[394,395],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[396,397,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[116,199,370,372,211],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[127,128,218,129,130,131,132,133,134,135,240,182,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,327,332,158],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[400],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[36],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[401],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[402,403,228,160,178,404,179,405,406,407,162,240,241,163,164,165,166,183,408,167,409,292,293,157,168,294,169,185,296,170,297,298,24,31,33,116,321,327,329,171,330,207,172,173,335,410,186,411,412,413,414,415,416,187,417,418,342,345,346,349,357,384,386,387,174,388,389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[62],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":198,"org.easymock.tests2.UsageTest.argumentsOrdered":173,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":240,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":209,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":207,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":306,"org.easymock.tests2.DelegateToTest.testReturnException":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":224,"org.easymock.tests.MockingTest.testPartialClassMocking":8,"org.easymock.tests.MockClassControlTest.testToString":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":136,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":36,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":121,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":200,"org.easymock.tests2.UsageTest.wrongArguments":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":221,"org.easymock.samples.ExampleTest.answerVsDelegate":189,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":1,"org.easymock.tests2.UsageConstraintsTest.testNull":314,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":25,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":75,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":349,"org.easymock.tests2.CaptureTest.testPrimitive":373,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":155,"org.easymock.tests.UsageTest.moreThanOneArgument":241,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":289,"org.easymock.tests.UsageTest.argumentsOrdered":166,"org.easymock.tests.UsageVarargTest.varargIntAccepted":243,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":125,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":47,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":234,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":413,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":355,"org.easymock.tests2.AnswerTest.answer":193,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":340,"org.easymock.tests2.CaptureTest.testAnd":370,"org.easymock.tests2.UsageTest.strictResetToDefault":328,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":344,"org.easymock.tests2.DelegateToTest.testDelegate":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":151,"org.easymock.tests.LimitationsTest.mockFinalMethod":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":239,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":409,"org.easymock.tests2.CaptureTest.testCapture1_2446744":374,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":338,"org.easymock.tests.UsageThrowableTest.throwError":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":99,"org.easymock.samples.PartialClassMockTest.testGetArea":18,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":278,"org.easymock.tests2.CompareToTest.testLessOrEqual":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":137,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":88,"org.easymock.tests2.UsageTest.niceToStrict":330,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":50,"org.easymock.tests2.MockBuilderTest.testCreateMock":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":95,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":186,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":145,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":219,"org.easymock.tests.UsageOverloadedMethodTest.overloading":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":92,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":135,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":264,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":202,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":379,"org.easymock.tests2.EasyMockSupportClassTest.testAll":35,"org.easymock.tests.MockClassControlTest.testEquals":74,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":5,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":415,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":153,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":339,"org.easymock.tests2.CaptureTest.testCaptureAll":371,"org.easymock.tests2.UsageConstraintsTest.testMatches":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":290,"org.easymock.samples.ExampleTest.voteForRemovals":304,"org.easymock.tests.UsageVarargTest.allKinds":250,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":293,"org.easymock.samples.BasicClassMockTest.testPrintContent":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":238,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":132,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":126,"org.easymock.tests2.UsageConstraintsTest.greaterThan":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":82,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":284,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":33,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":73,"org.easymock.samples.ExampleTest.voteForRemoval":301,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":78,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":359,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":28,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":17,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":327,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":343,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":223,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":399,"org.easymock.tests2.CaptureTest.testCaptureFirst":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":208,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":335,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":260,"org.easymock.tests2.UsageTest.moreThanOneArgument":329,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":361,"org.easymock.tests2.CaptureTest.testCapture2_2446744":381,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":55,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":249,"org.easymock.tests.GenericTest.testBridgedEquals":63,"org.easymock.tests.UsageExpectAndReturnTest.longType":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":235,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":341,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":154,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":287,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":404,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":96,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":40,"org.easymock.tests.MockingTest.testNiceClassMocking":66,"org.easymock.tests.MockingTest.testClassMocking":65,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":213,"org.easymock.tests2.UsageConstraintsTest.testContains":318,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":58,"org.easymock.tests2.UsageConstraintsTest.testFind":313,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":127,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":192,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":294,"org.easymock.tests.UsageExpectAndReturnTest.object":263,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":122,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":245,"org.easymock.tests.UsageTest.exactCallCountByLastCall":183,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":407,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":106,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":269,"org.easymock.tests.MockClassControlTest.testHashCode":16,"org.easymock.tests2.EasyMockSupportTest.testVerify":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":90,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":412,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":337,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":383,"org.easymock.tests.UsageVarargTest.varargCharAccepted":244,"org.easymock.tests2.CaptureTest.testCaptureMultiple":401,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":385,"org.easymock.tests2.UsageTest.openCallCountByLastCall":331,"org.easymock.tests.DefaultClassInstantiatorTest.object":67,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":210,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":396,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":129,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":31,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":142,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":270,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":38,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":14,"org.easymock.tests2.UsageTest.resumeIfFailure":334,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":226,"org.easymock.tests2.StubTest.stubWithReturnValue":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":206,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":262,"org.easymock.tests2.SerializationTest.testAllMockedMethod":46,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":177,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":187,"org.easymock.samples.SupportTest.voteForRemovals":309,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":148,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":112,"org.easymock.tests.UsageExpectAndThrowTest.object":146,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":204,"org.easymock.tests2.DelegateToTest.testWrongClass":368,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":229,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":230,"org.easymock.tests.UsageStrictMockTest.range":170,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":52,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":220,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":178,"org.easymock.tests2.CaptureTest.testCaptureNone":378,"org.easymock.tests.UsageUnorderedTest.message":167,"org.easymock.tests.UsageVerifyTest.twoReturns":168,"org.easymock.tests.UsageVarargTest.varargByteAccepted":248,"org.easymock.tests2.ThreadingTest.testThreadSafe":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":93,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":217,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":21,"org.easymock.tests2.CaptureTest.testCapture_2617107":372,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":156,"org.easymock.tests2.UsageConstraintsTest.any":201,"org.easymock.tests2.StubTest.stub":363,"org.easymock.tests.UsageExpectAndThrowTest.longType":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":225,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":71,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":280,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":387,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests.LimitationsTest.mockNativeMethod":3,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":272,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":119,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":389,"org.easymock.tests2.NameTest.nameForMocksControl":354,"org.easymock.tests2.MockedExceptionTest.testMockedException":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":83,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":182,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":140,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":10,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":53,"org.easymock.tests.MockingTest.testNicePartialClassMocking":9,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":27,"org.easymock.tests2.CompareToTest.testNotComparable":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":120,"org.easymock.tests2.CaptureTest.testCaptureLast":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":292,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":44,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":199,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":205,"org.easymock.tests.MockingTest.testTwoMocks":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":144,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":172,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":325,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":279,"org.easymock.tests.UsageStrictMockTest.differentMethods":297,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":395,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":69,"org.easymock.tests2.ConstraintsToStringTest.andToString":416,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":360,"org.easymock.tests2.MockBuilderTest.testCreateMockString":56,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":11,"org.easymock.tests.UsageExpectAndThrowTest.floatType":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":84,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":81,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":194,"org.easymock.tests.UsageVerifyTest.twoThrows":157,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":37,"org.easymock.samples.ExampleTest.voteAgainstRemoval":302,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":32,"org.easymock.tests.LimitationsTest.privateConstructor":60,"org.easymock.tests2.UsageConstraintsTest.testNotNull":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":133,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":109,"org.easymock.tests2.UsageTest.defaultResetToNice":333,"org.easymock.samples.ExampleTest.voteAgainstRemovals":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":268,"org.easymock.tests.UsageVarargTest.differentLength":408,"org.easymock.tests2.CallbackTest.callback":357,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":405,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":76,"org.easymock.tests.UsageTest.openCallCountByLastCall":181,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":275,"org.easymock.tests.UsageCallCountTest.tooFewCalls":215,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":42,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":222,"org.easymock.tests.UsageThrowableTest.throwCheckedException":130,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":179,"org.easymock.tests.MockingTest.testStrictClassMocking":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":252,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":41,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":311,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":124,"org.easymock.tests2.NameTest.nameForNiceMock":353,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":362,"org.easymock.tests2.DependencyTest.testInterfaceMocking":364,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":123,"org.easymock.samples.ExampleTest.addDocument":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.DelegateToTest.testStubDelegate":367,"org.easymock.tests2.AnswerTest.stubAnswer":195,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":185,"org.easymock.tests.UsageVarargTest.varargLongAccepted":247,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":298,"org.easymock.tests.UsageExpectAndReturnTest.floatType":255,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":271,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":57,"org.easymock.tests2.ConstraintsToStringTest.orToString":410,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":403,"org.easymock.tests.UsageThrowableTest.noUpperLimit":197,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":323,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":312,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":104,"org.easymock.tests2.SerializationTest.test":113,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":375,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":111,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":254,"org.easymock.tests2.UsageConstraintsTest.testSame":315,"org.easymock.samples.SupportTest.addDocument":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":85,"org.easymock.tests.GenericTest.testPackageScope":4,"org.easymock.tests2.NameTest.nameForMock":351,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":265,"org.easymock.tests2.UsageStrictMockTest.differentMethods":388,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":77,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":257,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":286,"org.easymock.tests2.MockedExceptionTest.testRealException":356,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":406,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":392,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":274,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":282,"org.easymock.tests2.NameTest.nameForStrictMock":352,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":101,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":190,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":105,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":70,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":203,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":48,"org.easymock.tests2.UsageStrictMockTest.range":174,"org.easymock.tests2.UsageConstraintsTest.lessThan":326,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":89,"org.easymock.tests2.CaptureTest.testCaptureRightOne":211,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":394,"org.easymock.tests2.UsageConstraintsTest.testOr":316,"org.easymock.tests.UsageRangeTest.combination":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":24,"org.easymock.tests.UsageTest.wrongArguments":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":86,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":12,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":266,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":72,"org.easymock.tests.UsageVarargTest.varargShortAccepted":246,"org.easymock.tests2.UsageConstraintsTest.cmpTo":317,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":393,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":332,"org.easymock.tests2.CaptureTest.testCaptureFromStub":380,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":277,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":49,"org.easymock.tests.UsageTest.unexpectedCallWithArray":163,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":169,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":267,"org.easymock.tests2.CaptureTest.testCapture":159,"org.easymock.tests2.UsageConstraintsTest.constraints":116,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.samples.ExampleTest.addAndChangeDocument":305,"org.easymock.tests2.ConstraintsToStringTest.notToString":411,"org.easymock.tests.UsageStrictMockTest.testVerify":299,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":307,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":236,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":376,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":232,"org.easymock.tests.LimitationsTest.abstractClass":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":259,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":233,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":346}}]
