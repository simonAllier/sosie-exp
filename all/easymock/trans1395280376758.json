[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,34,42,43,44,45,46,47,48,49],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,5,8,18,24,183,184,27,185,186,187,28,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,30,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,39,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[209,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[284,285,80,83,84,143,152,153,155,158,225,230,231,281],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[203],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[286,287,288,289,50,51,52,53,54,55,290,291,292,293,294,295,56,57,58,59,60,61,62,63,64,65,66,296,297,298,299,67,300,68,69,70,301,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,302,91,92,93,94,95,303,96,97,304,98,99,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,330,331,332,333,334,335,336,337,338,150,151,152,153,339,340,341,154,155,156,157,158,159,160,342,161,162,163,164,165,166,167,168,0,0,1,1,169,170,171,172,173,174,175,176,177,178,179,180,181,343,182,344,5,8,18,24,183,184,27,185,186,187,28,188,189,190,191,192,193,194,195,196,197,198,199,345,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,30,217,218,346,219,220,221,347,222,223,224,225,226,227,228,229,348,230,231,349,232,233,350,351,234,235,236,237,238,239,240,241,242,243,244,352,245,246,247,248,249,353,354,355,356,250,39,357,358,251,359,252,253,254,255,256,257,360,258,259,260,361,261,262,263,362,264,265,266,267,268,269,270,271,272,273,274,275,363,276,277,364,278,279,280,281,282,283],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[181,201,365],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[366,367],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[368,366,369,370,367,371],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:117","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[286,287,288,50,290,291,292,293,294,295,56,57,58,59,60,61,62,63,64,65,66,373,374,375,296,297,298,299,67,300,68,69,70,301,71,72,73,74,75,76,77,376,377,378,379,380,78,79,285,80,81,82,83,84,85,95,303,96,97,304,98,99,305,322,328,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,368,149,330,331,332,333,334,335,336,337,338,381,382,151,152,153,339,340,341,155,156,157,158,159,160,161,162,163,164,165,167,168,0,0,1,1,172,175,176,177,178,179,180,181,383,343,182,344,5,8,18,24,183,184,27,185,186,187,28,188,189,190,191,192,193,194,195,196,197,198,199,345,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,30,217,218,346,219,220,221,347,384,222,223,224,225,226,227,228,229,348,230,231,349,232,233,350,351,234,235,236,385,386,387,237,238,239,240,241,242,243,244,352,245,246,247,248,250,39,357,358,251,359,252,253,254,255,256,257,360,258,259,260,361,261,262,263,362,264,265,266,267,268,269,270,271,272,273,274,275,363,276,277,364,279,280,281,282,283],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[388,30,217,218],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[286,287,288,289,50,51,52,53,389,54,55,290,291,292,390,391,392,393,293,294,295,56,57,58,394,395,396,397,398,399,59,60,61,62,63,64,65,66,373,374,375,400,296,297,298,299,67,300,68,401,69,70,402,301,403,71,72,73,74,75,76,77,376,377,378,379,380,78,79,285,80,81,82,83,84,85,86,87,88,89,90,302,91,92,93,94,95,303,97,304,98,322,328,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,144,145,146,147,148,368,149,330,331,332,333,334,335,336,337,338,381,382,151,152,153,404,339,340,405,406,341,154,155,156,157,158,159,160,342,162,163,164,165,166,167,168,169,170,171,172,177,186,188,189,190,191,192,193,194,195,196,197,198,199,345,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,30,217,222,223,224,225,226,227,228,229,348,230,231,349,232,233,350,351,234,235,236,385,386,387,407,237,408,238,239,240,241,242,243,244,352,245,246,247,248,249,353,354,355,356,250,409,357,358,251,359,252,253,254,255,256,257,360,258,259,260,361,261,262,263,362,264,265,266,267,268,269,270,271,272,273,274,275,363,276,277,364,278,279,280,281,282,283],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[401,402,301,403,410,411,284,79,143,381,382,151,152,153,156,158,159,224,412,413,414,415,416,417,279,281,282],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[196],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[79,80,83,84,143,151,152,153,155,156,158,159,224,225,230,231,353,354,355,356,279,281,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[418,419,96,98,99,305,420,140,141,142,421,150,161,0,0,1,1,173,174,175,176,178,179,180,422,181,383,343,182,344,5,8,18,24,183,184,27,185,187,28,30,218,423,424,346,425,219,426,220,221,427,347,428,384,39,429,251],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[328],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[430,410,285,155,413,431],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:342","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int));\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[47,48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[30,33,34,39,40,432,433,434,435],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[176,383,344,27,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[406],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[0,1,436,30,31,32,33,437,34,36,39,40,438],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[439],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":193,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":78,"org.easymock.tests2.UsageTest.argumentsOrdered":231,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":316,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":227,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":169,"org.easymock.tests2.DelegateToTest.testReturnException":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":297,"org.easymock.tests.MockingTest.testPartialClassMocking":140,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":100,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":260,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":432,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":144,"org.easymock.tests2.UsageTest.wrongArguments":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":375,"org.easymock.samples.ExampleTest.answerVsDelegate":163,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":419,"org.easymock.tests2.UsageConstraintsTest.testNull":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":178,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":246,"org.easymock.tests2.CaptureTest.testPrimitive":268,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":119,"org.easymock.tests.UsageTest.moreThanOneArgument":79,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":335,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":404,"org.easymock.tests.UsageTest.argumentsOrdered":84,"org.easymock.tests.UsageVarargTest.varargIntAccepted":88,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":73,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":423,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":77,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":250,"org.easymock.tests2.AnswerTest.answer":233,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":407,"org.easymock.tests2.CaptureTest.testAnd":265,"org.easymock.tests2.UsageTest.strictResetToDefault":223,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":383,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":334,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":331,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":406,"org.easymock.tests2.DelegateToTest.testDelegate":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":381,"org.easymock.tests2.CaptureTest.testCapture1_2446744":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":113,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":386,"org.easymock.tests.UsageThrowableTest.throwError":59,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":337,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":26,"org.easymock.samples.PartialClassMockTest.testGetArea":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":13,"org.easymock.tests2.UsageTest.niceToStrict":226,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":219,"org.easymock.tests2.MockBuilderTest.testCreateMock":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":21,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":413,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":109,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":373,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":44,"org.easymock.tests.UsageOverloadedMethodTest.overloading":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":23,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":70,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":131,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":56,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":203,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":274,"org.easymock.tests2.EasyMockSupportClassTest.testAll":5,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":387,"org.easymock.tests2.CaptureTest.testCaptureAll":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":378,"org.easymock.tests.MockNameTest.defaultName":399,"org.easymock.tests2.UsageConstraintsTest.testMatches":205,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":336,"org.easymock.samples.ExampleTest.voteForRemovals":167,"org.easymock.tests.UsageVarargTest.allKinds":95,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":151,"org.easymock.samples.BasicClassMockTest.testPrintContent":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":379,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":65,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":300,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":435,"org.easymock.tests2.UsageConstraintsTest.greaterThan":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":6,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":330,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":344,"org.easymock.samples.ExampleTest.voteForRemoval":164,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":371,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":422,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":150,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":222,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":240,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":296,"org.easymock.tests2.CaptureTest.testCaptureFirst":277,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":241,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":232,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":403,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":224,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":256,"org.easymock.tests2.CaptureTest.testCapture2_2446744":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":324,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":347,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":94,"org.easymock.tests.GenericTest.testBridgedEquals":372,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":45,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":54,"org.easymock.tests.UsageExpectAndReturnTest.longType":123,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":376,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":428,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":118,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":212,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":116,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":333,"org.easymock.tests.UsageCallCountTest.tooManyCalls":55,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":64,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":184,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":424,"org.easymock.tests2.UsageConstraintsTest.testContains":202,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":251,"org.easymock.tests2.UsageConstraintsTest.testFind":194,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":58,"org.easymock.tests.MockTypeTest.fromEasyMockClass":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":189,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":341,"org.easymock.tests.UsageExpectAndReturnTest.object":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":433,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":90,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":397,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":46,"org.easymock.tests.UsageTest.exactCallCountByLastCall":85,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":40,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":136,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":86,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":69,"org.easymock.tests2.EasyMockSupportTest.testVerify":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":15,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":340,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":68,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":385,"org.easymock.tests.UsageVarargTest.varargCharAccepted":89,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":329,"org.easymock.tests2.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":48,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":248,"org.easymock.tests.DefaultClassInstantiatorTest.object":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":286,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":395,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":284,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":62,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":290,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":24,"org.easymock.tests2.UsageTest.resumeIfFailure":349,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":299,"org.easymock.tests2.StubTest.stubWithReturnValue":258,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":213,"org.easymock.tests2.SerializationTest.testAllMockedMethod":218,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":322,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":431,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":112,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":388,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":328,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":350,"org.easymock.tests.UsageExpectAndThrowTest.object":110,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":210,"org.easymock.tests2.DelegateToTest.testWrongClass":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":71,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":72,"org.easymock.tests.UsageStrictMockTest.range":158,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":2,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":374,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":430,"org.easymock.tests2.CaptureTest.testCaptureNone":273,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":295,"org.easymock.tests.UsageUnorderedTest.message":143,"org.easymock.tests.UsageVerifyTest.twoReturns":153,"org.easymock.tests.UsageVarargTest.varargByteAccepted":93,"org.easymock.tests2.ThreadingTest.testThreadSafe":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":19,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":53,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":398,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":173,"org.easymock.tests2.CaptureTest.testCapture_2617107":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":326,"org.easymock.tests2.UsageConstraintsTest.any":200,"org.easymock.tests2.StubTest.stub":360,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":292,"org.easymock.tests.UsageExpectAndThrowTest.longType":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":237,"org.easymock.tests.LimitationsTest.mockNativeMethod":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":139,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":305,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests2.NameTest.nameForMocksControl":356,"org.easymock.tests2.MockedExceptionTest.testMockedException":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":7,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":104,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":175,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":221,"org.easymock.tests.MockingTest.testNicePartialClassMocking":141,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":180,"org.easymock.tests2.CaptureTest.testCaptureLast":272,"org.easymock.tests2.CompareToTest.testCompareEqual":365,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":382,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":28,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":198,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":211,"org.easymock.tests.MockingTest.testTwoMocks":420,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":108,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":230,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":215,"org.easymock.tests.UsageStrictMockTest.differentMethods":159,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":369,"org.easymock.tests2.ConstraintsToStringTest.andToString":416,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":255,"org.easymock.tests2.MockBuilderTest.testCreateMockString":384,"org.easymock.tests.UsageExpectAndThrowTest.floatType":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":9,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":4,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":438,"org.easymock.tests.UsageVerifyTest.twoThrows":152,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":18,"org.easymock.samples.ExampleTest.voteAgainstRemoval":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":317,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":182,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":38,"org.easymock.tests2.UsageConstraintsTest.testNotNull":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":66,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":357,"org.easymock.tests2.UsageTest.defaultResetToNice":348,"org.easymock.samples.ExampleTest.voteAgainstRemovals":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":318,"org.easymock.tests.UsageVarargTest.differentLength":302,"org.easymock.tests2.CallbackTest.callback":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":436,"org.easymock.tests.UsageTest.openCallCountByLastCall":81,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":439,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":146,"org.easymock.tests.UsageCallCountTest.tooFewCalls":51,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":400,"org.easymock.tests.UsageThrowableTest.throwCheckedException":63,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":410,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":409,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":27,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":236,"org.easymock.tests.ObjectMethodsTest.testHashCode":396,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":257,"org.easymock.tests2.NameTest.nameForNiceMock":355,"org.easymock.tests2.DependencyTest.testInterfaceMocking":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":434,"org.easymock.samples.ExampleTest.addDocument":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":25,"org.easymock.tests2.DelegateToTest.testStubDelegate":262,"org.easymock.tests2.AnswerTest.stubAnswer":235,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":156,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":437,"org.easymock.tests.UsageVarargTest.varargLongAccepted":92,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":138,"org.easymock.tests.UsageExpectAndReturnTest.floatType":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":39,"org.easymock.tests2.ConstraintsToStringTest.orToString":412,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests.UsageThrowableTest.noUpperLimit":60,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":208,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":191,"org.easymock.tests2.SerializationTest.test":217,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":270,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":366,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":121,"org.easymock.tests2.UsageConstraintsTest.testSame":196,"org.easymock.samples.SupportTest.addDocument":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":10,"org.easymock.tests.GenericTest.testPackageScope":98,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests2.NameTest.nameForMock":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":132,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":36,"org.easymock.tests2.UsageStrictMockTest.differentMethods":282,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":124,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":114,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":394,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":332,"org.easymock.tests2.MockedExceptionTest.testRealException":359,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":411,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":145,"org.easymock.tests2.NameTest.nameForStrictMock":354,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":179,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":209,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":370,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":346,"org.easymock.tests2.UsageStrictMockTest.range":281,"org.easymock.tests2.UsageConstraintsTest.lessThan":216,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":14,"org.easymock.tests2.CaptureTest.testCaptureRightOne":275,"org.easymock.tests2.UsageConstraintsTest.testOr":197,"org.easymock.tests.UsageRangeTest.combination":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":176,"org.easymock.tests.UsageTest.wrongArguments":80,"org.easymock.tests2.MockBuilderTest.testWithConstructor":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":11,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":421,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":307,"org.easymock.tests.UsageVarargTest.varargShortAccepted":91,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":389,"org.easymock.tests2.UsageConstraintsTest.cmpTo":201,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":309,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.CaptureTest.testCaptureFromStub":363,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":425,"org.easymock.tests.UsageTest.unexpectedCallWithArray":285,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":52,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":134,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.UsageConstraintsTest.constraints":192,"org.easymock.samples.ExampleTest.addAndChangeDocument":168,"org.easymock.tests2.ConstraintsToStringTest.notToString":414,"org.easymock.tests.UsageStrictMockTest.testVerify":342,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":170,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":377,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":271,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":75,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":76,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":244}}]
