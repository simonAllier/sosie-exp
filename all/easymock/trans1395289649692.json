[{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[20,2,21,22,23,24,25,26,27,28,29,30,5,31,32,33,34,35,36,37,38,39,40,11,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[66,67,68,69,70,71,72,2,73,21,22,23,74,75,76,77,25,26,78,79,80,81,82,83,84,85,86,87,88,27,89,90,91,92,93,94,95,96,97,98,31,32,33,34,99,100,101,102,103,104,105,106,107,108,109,110,111,9,112,18,113,36,37,38,114,115,116,117,118,119,120,121,122,10,123,124,125,126,127,11,128,129,130,131,132,133,134,135,136,137,138,139,41,140,141,142,143,144,145,146,147,45,46,47,148,149,150,151,152,153,154,155,156,157,158,159,160,161,49,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,50,177,178,179,51,52,180,53,181,182,183,184,185,186,54,187,55,56,57,58,59,61,188,189,190,191,192,193,194,195,196,197,198,14,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[66,199,200,201,67,68,202,69,203,204,205,206,70,207,208,209,210,71,211,212,213,214,73,22,23,78,79,215,216,217,87,218,27,219,220,221,89,90,222,91,93,94,95,96,97,98,223,30,224,225,226,34,99,100,101,227,228,229,230,231,113,232,38,233,234,235,236,237,238,239,115,121,122,123,124,126,128,129,131,240,134,135,136,137,241,138,139,41,140,141,142,143,144,42,145,43,242,147,46,47,149,150,151,152,153,154,243,244,48,155,245,156,246,247,157,158,159,160,248,161,249,250,49,251,252,162,163,164,166,167,253,254,255,171,172,256,257,258,173,174,175,176,50,177,178,179,51,52,259,180,53,181,182,184,185,54,187,260,56,261,262,263,60,61,188,189,190,191,192,193,194,62,195,196,197,64,198,264],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[243,251,163],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[2,22,29,5,31,32,33,36,37,38,46,55,58,59],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[128,130,137,48,155,156,247,157,265,162,167],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[81,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,222,281,30,226,282,37,242,54,262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[283,284,285],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[286,287],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[288],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:183","sourceCode":"net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[289,290,291],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[202,205,206,207,210,22,23,268,271,272,273,276,292,46,47],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[162,163],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[66,200,201,67,68,202,69,203,204,205,206,70,207,208,209,210,71,211,212,213,214,72,2,73,21,22,23,74,293,75,76,77,25,26,294,78,79,80,81,215,266,267,82,83,268,84,269,270,271,272,85,273,274,275,276,86,277,278,279,280,87,88,27,220,221,89,90,222,91,92,93,94,95,96,97,98,223,295,296,297,298,299,281,300,30,224,31,225,226,32,33,34,99,100,101,102,103,104,105,106,107,108,109,110,111,301,9,112,18,113,36,302,303,304,305,306,232,37,38,114,233,234,235,236,237,238,239,122,10,123,124,125,126,127,11,128,129,130,131,240,132,133,134,135,136,137,307,241,138,139,41,140,141,142,143,144,145,308,242,146,147,45,46,47,148,149,243,244,48,155,245,156,246,247,157,158,159,160,248,161,249,250,49,251,252,162,163,164,165,166,167,253,254,168,255,169,170,171,256,257,258,173,174,184,185,186,54,187,260,55,56,57,261,262,58,59,60,61,12,13,189,190,193,194,195,309,310,198,19,14,16,264,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.LastControl:61","failures":[2,73,78,79,80,81,215,223,295,281,111,36,233,234,235,236,237,238,239,128,129,130,131,240,132,133,134,135,136,137,307,241,138,144,147,311,243,244,48,155,245,156,246,247,157,158,265,159,160,248,161,249,250,49,251,252,162,163,164,165,166,167,253,254,173,12,13],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[312,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[314,315,316],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[317,128,129,130,131,240,132,133,134,135,136,137,307,241,138],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[281,30,282,37,242,54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[318,319,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[20,2,21,22,23,30,5,31,32,33,34,36,37,38,44,45,46,47,48,54,55,57,58,59,61,64,65],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,22,29,5,31,32,33,321,36,37,38,46,55,58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matched"}},{"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[138],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[322,323,324,325,326],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":155,"org.easymock.tests2.UsageTest.argumentsOrdered":59,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":299,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":57,"org.easymock.tests2.StubTest.stubWithReturnValue":242,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":206,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":166,"org.easymock.tests2.SerializationTest.testAllMockedMethod":186,"org.easymock.tests2.DelegateToTest.testReturnException":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":297,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":326,"org.easymock.tests.MockingTest.testPartialClassMocking":99,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":7,"org.easymock.samples.SupportTest.voteForRemovals":121,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":288,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":266,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":152,"org.easymock.tests.UsageExpectAndThrowTest.object":85,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":163,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":172,"org.easymock.tests2.DelegateToTest.testWrongClass":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":233,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":234,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":158,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":78,"org.easymock.tests2.UsageTest.wrongArguments":55,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":259,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":188,"org.easymock.tests2.UsageConstraintsTest.testNull":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":273,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":53,"org.easymock.tests2.CaptureTest.testPrimitive":131,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":280,"org.easymock.tests.UsageTest.moreThanOneArgument":224,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":304,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":217,"org.easymock.tests2.CaptureTest.testCaptureNone":135,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":39,"org.easymock.tests.UsageVerifyTest.twoReturns":38,"org.easymock.tests.UsageVarargTest.varargByteAccepted":109,"org.easymock.tests2.ThreadingTest.testThreadSafe":256,"org.easymock.tests.UsageTest.argumentsOrdered":33,"org.easymock.tests.UsageVarargTest.varargIntAccepted":104,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":77,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":235,"org.easymock.tests2.CaptureTest.testCapture_2617107":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":229,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":81,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":1,"org.easymock.tests2.UsageConstraintsTest.any":159,"org.easymock.tests2.StubTest.stub":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":230,"org.easymock.tests.UsageExpectAndThrowTest.longType":83,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":289,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests2.SerializationTest.testClass":184,"org.easymock.tests.LimitationsTest.mockNativeMethod":66,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":214,"org.easymock.tests2.AnswerTest.answer":14,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":265,"org.easymock.tests2.CaptureTest.testAnd":128,"org.easymock.tests2.UsageTest.strictResetToDefault":187,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests2.MockedExceptionTest.testMockedException":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":303,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":179,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":226,"org.easymock.tests2.DelegateToTest.testDelegate":170,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":268,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":101,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":197,"org.easymock.tests.MockingTest.testNicePartialClassMocking":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":86,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":322,"org.easymock.tests2.CaptureTest.testCaptureLast":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":281,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":294,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":194,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":157,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":164,"org.easymock.tests2.CaptureTest.testCapture1_2446744":240,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":271,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":253,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":285,"org.easymock.tests.UsageThrowableTest.throwError":91,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":301,"org.easymock.tests.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":258,"org.easymock.tests2.MockBuilderTest.testCreateMockString":65,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":40,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":306,"org.easymock.tests.UsageExpectAndThrowTest.floatType":82,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":49,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":16,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":153,"org.easymock.samples.PartialClassMockTest.testGetArea":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":236,"org.easymock.samples.ExampleTest.voteAgainstRemoval":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":216,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":267,"org.easymock.tests2.UsageTest.niceToStrict":56,"org.easymock.tests2.ThreadingTest.testChangeDefault":284,"org.easymock.tests2.UsageConstraintsTest.testNotNull":167,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":98,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":316,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":195,"org.easymock.tests2.UsageTest.defaultResetToNice":263,"org.easymock.tests2.MockBuilderTest.testCreateMock":63,"org.easymock.samples.ExampleTest.voteAgainstRemovals":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":71,"org.easymock.tests.UsageVarargTest.differentLength":35,"org.easymock.tests2.CallbackTest.callback":11,"org.easymock.tests.UsageTest.openCallCountByLastCall":225,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":272,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":6,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":51,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":80,"org.easymock.tests.UsageCallCountTest.tooFewCalls":75,"org.easymock.tests.UsageOverloadedMethodTest.overloading":90,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":249,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":89,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":191,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":290,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":136,"org.easymock.tests.UsageThrowableTest.throwCheckedException":95,"org.easymock.tests2.EasyMockSupportClassTest.testAll":151,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":88,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":278,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests2.CaptureTest.testCaptureAll":129,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":295,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":193,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":190,"org.easymock.tests2.UsageConstraintsTest.testMatches":250,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":192,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":305,"org.easymock.samples.ExampleTest.voteForRemovals":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":323,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":174,"org.easymock.tests.UsageVarargTest.allKinds":111,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":232,"org.easymock.tests2.DependencyTest.testInterfaceMocking":171,"org.easymock.samples.BasicClassMockTest.testPrintContent":117,"org.easymock.samples.ExampleTest.addDocument":125,"org.easymock.tests2.DelegateToTest.testStubDelegate":255,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":97,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests2.AnswerTest.stubAnswer":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":300,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":73,"org.easymock.tests2.UsageConstraintsTest.greaterThan":251,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":43,"org.easymock.tests.UsageVarargTest.varargLongAccepted":108,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":227,"org.easymock.samples.ExampleTest.voteForRemoval":123,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":213,"org.easymock.tests.UsageExpectAndReturnTest.floatType":67,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":0,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":149,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":252,"org.easymock.tests.UsageThrowableTest.noUpperLimit":92,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":244,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":54,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":114,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":132,"org.easymock.tests2.SerializationTest.test":185,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":291,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":177,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":93,"org.easymock.tests2.UsageConstraintsTest.testSame":246,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":201,"org.easymock.samples.SupportTest.addDocument":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":296,"org.easymock.tests2.CaptureTest.testCaptureFirst":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":178,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":61,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":204,"org.easymock.tests.GenericTest.testPackageScope":87,"org.easymock.tests2.UsageTest.moreThanOneArgument":260,"org.easymock.tests2.CaptureTest.testCapture2_2446744":241,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":173,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":64,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":110,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":25,"org.easymock.tests.UsageExpectAndReturnTest.longType":68,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":176,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":208,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":277,"org.easymock.tests2.UsageStrictMockTest.differentMethods":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":202,"org.easymock.tests.UsageCallCountTest.tooManyCalls":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":221,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":293,"org.easymock.tests2.MockedExceptionTest.testRealException":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":205,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":8,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":96,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":189,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":312,"org.easymock.tests2.UsageConstraintsTest.testContains":248,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":198,"org.easymock.tests2.UsageConstraintsTest.testFind":245,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":315,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":12,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":142,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":20,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":13,"org.easymock.tests.UsageExpectAndReturnTest.object":70,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":144,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":62,"org.easymock.tests2.UsageStrictMockTest.range":46,"org.easymock.tests2.UsageConstraintsTest.lessThan":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":180,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":106,"org.easymock.tests.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":292,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":50,"org.easymock.tests2.CaptureTest.testCaptureRightOne":137,"org.easymock.tests2.UsageConstraintsTest.testOr":247,"org.easymock.tests.UsageRangeTest.combination":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":41,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":102,"org.easymock.tests.UsageTest.wrongArguments":31,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":69,"org.easymock.tests2.EasyMockSupportTest.testVerify":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":209,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":9,"org.easymock.tests.UsageVarargTest.varargShortAccepted":107,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":24,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":28,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":311,"org.easymock.tests2.UsageConstraintsTest.cmpTo":160,"org.easymock.tests.UsageVarargTest.varargCharAccepted":105,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":282,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":231,"org.easymock.tests2.UsageTest.openCallCountByLastCall":261,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":314,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":182,"org.easymock.tests2.CaptureTest.testCaptureFromStub":307,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":29,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":94,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":210,"org.easymock.tests2.UsageConstraintsTest.constraints":48,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":21,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":269,"org.easymock.samples.ExampleTest.addAndChangeDocument":127,"org.easymock.tests.CapturesMatcherTest.test":317,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":212,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":118,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":154,"org.easymock.tests2.UsageTest.resumeIfFailure":60,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":237,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":238,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":52,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":318}}]
