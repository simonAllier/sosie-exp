[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[6,7,8,9,9,10,10,11,12,13,14,15,16,17,18,19,20,21,22,23,3,5,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[3,61,62,36,63,64,65,66,67,68],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[69,70,71,72],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[25,28,48,49],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[71,72],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[78],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[6,7,8,79,9,9,10,10,80,81,82,83,84,85,86,87,88,89,90,91,11,12,13,14,92,93,94,95,96,97,98,99,100,101,102,103,104,105,15,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,17,18,19,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,0,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,23,247,248,249,250,74,251,252,253,254,255,256,257,258,259,260,1,69,261,78,262,263,264,265,70,266,267,268,269,71,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,3,4,5,293,294,295,296,297,298,26,28,30,31,33,299,300,301,302,303,304,305,306,307,308,309,310,311,36,312,313,75,314,315,316,317,318,40,41,319,42,43,44,46,48,49,50,51,52,53,54,320,55,56,321,73,322,323,324,325,326,327,328,329,330,331,332,333,57,58,59,60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[74,252,255,257,268,277,287],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[9,9,10,10,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,82,83,85,86,88,11,13,14,111,112,113,114,115,116,118,119,122,123,128,130,131,132,133,134,135,17,18,19,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,175,177,178,179,180,183,207,208,221,223,224,227,228,229,334,335,336,337,338,232,233,234,235,236,237,238,240,241,242,243,248,249,250,74,251,252,253,254,255,256,258,259,260,1,69,261,78,262,263,264,265,70,267,268,269,71,270,271,272,273,274,275,276,277,278,280,281,284,285,286,287,289,290,291,292,3,4,295,28,30,31,299,300,301,303,305,306,310,311,36,312,315,40,41,319,42,43,44,46,49,51,52,53,54,320,55,56,73,329,331,332,57,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[7,8,11,12,339,340,341,14,342,15,343,344,345,346,347,348,349,350,351,16,352,174,20,353,354,355,356,357,358,359,360,246,23,5,40,41,42,43,44,46,361,47,50,362,363,51,54,364,57,365,366,367,368,369,370,371,372],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[6,7,8,79,9,10,80,81,82,83,84,85,86,87,88,373,89,374,90,91,375,376,377,378,379,380,381,382,11,12,13,339,340,341,14,342,92,93,94,95,96,97,98,383,99,100,101,102,384,103,104,105,385,386,387,388,389,390,391,392,393,394,395,396,15,106,107,108,109,110,111,112,113,397,114,398,399,115,116,400,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,343,344,345,346,347,348,349,350,351,16,17,18,401,19,402,403,352,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,404,167,168,169,170,171,172,173,0,174,20,353,354,355,356,357,358,175,176,177,178,179,180,181,182,183,184,185,405,21,406,407,408,409,22,410,411,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,412,215,216,217,413,414,415,416,218,219,220,221,222,223,224,225,226,227,228,229,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,334,432,335,433,434,435,436,230,437,438,439,336,337,231,338,232,233,234,235,236,237,238,239,240,241,242,243,244,359,360,440,441,245,246,23,247,248,249,250,74,76,251,252,253,254,255,256,257,258,259,260,1,69,261,78,262,263,264,265,70,266,267,268,269,71,442,443,444,445,446,447,270,448,449,450,451,452,453,271,272,273,274,275,454,455,456,457,458,276,459,460,461,462,463,464,277,278,279,280,281,282,283,284,285,286,287,288,289,290,465,466,291,292,3,4,5,293,294,295,296,297,298,467,468,469,470,24,26,27,471,28,29,30,31,472,62,32,33,35,299,300,301,302,303,304,305,306,307,308,309,310,311,36,63,312,313,75,314,315,316,317,473,318,40,41,319,42,43,44,45,474,46,475,361,47,48,49,50,362,363,51,52,53,54,476,320,55,56,477,321,73,322,478,323,324,325,326,327,328,329,330,331,332,333,364,479,480,57,481,365,58,366,367,482,483,368,484,485,369,486,59,370,371,487,488,372,60,489,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[491,492,493,494,105,116,161,162,163,221,223,224,301,329,331,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[495,496,497,116,400,117,120,121,220,498,499,500,501,301,302,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[502,503,504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[425],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:520","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:114","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>(java.util.Set<org.easymock.internal.MethodSerializationWrapper>.size())","type":"CtAssignmentImpl"},"failures":[3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[6,82,83,85,86,88,14,106,107,108,109,17,18,19,136,137,138,139,140,141,144,145,147,148,149,151,152,153,154,155,156,157,158,159,160,175,176,177,178,179,207,208,221,223,224,274,291,292,295,26,28,30,31,33,36,40,41,319,42,43,44,46,48,49,50,51,52,53,54,320,55,56,329,331,332,57,58,59,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[96,125,126,127,128,131,132,133,134,135,162,182,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,212,73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:299","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":74,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests2.UsageTest.argumentsOrdered":309,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":432,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":304,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":79,"org.easymock.tests2.DelegateToTest.testReturnException":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":93,"org.easymock.tests.MockingTest.testPartialClassMocking":17,"org.easymock.tests.MockClassControlTest.testToString":353,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":478,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":483,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":186,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":58,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":491,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":64,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":179,"org.easymock.tests2.UsageTest.wrongArguments":302,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":415,"org.easymock.samples.ExampleTest.answerVsDelegate":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":22,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":403,"org.easymock.tests2.UsageConstraintsTest.testNull":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":42,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":241,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":358,"org.easymock.tests2.CaptureTest.testPrimitive":280,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":183,"org.easymock.tests.UsageTest.moreThanOneArgument":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":205,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":108,"org.easymock.tests.UsageTest.argumentsOrdered":121,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":374,"org.easymock.tests.UsageVarargTest.varargIntAccepted":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":156,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":452,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":160,"org.easymock.tests.ReplayStateInvalidUsageTest.times":393,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests2.DependencyTest.testClassMocking":465,"org.easymock.tests2.AnswerTest.answer":312,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":437,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":470,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":407,"org.easymock.tests2.CaptureTest.testAnd":277,"org.easymock.tests2.UsageTest.strictResetToDefault":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":107,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":236,"org.easymock.tests2.DelegateToTest.testDelegate":298,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":201,"org.easymock.tests.LimitationsTest.mockFinalMethod":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":381,"org.easymock.tests2.DependencyTest.testClassMockingSupport":466,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":184,"org.easymock.tests2.CaptureTest.testCapture1_2446744":281,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":468,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":387,"org.easymock.tests.UsageThrowableTest.throwError":128,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":409,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":453,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":490,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.MockingTest.testInterfaceMocking":401,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":157,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":228,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":422,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":187,"org.easymock.tests2.UsageTest.niceToStrict":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":28,"org.easymock.tests2.MockBuilderTest.testCreateMock":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":487,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":195,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":406,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":413,"org.easymock.tests.UsageOverloadedMethodTest.overloading":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":372,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":69,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":147,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":111,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":286,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":404,"org.easymock.tests2.EasyMockSupportClassTest.testAll":57,"org.easymock.tests.MockClassControlTest.testEquals":357,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":12,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":203,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":469,"org.easymock.tests2.CaptureTest.testCaptureAll":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":379,"org.easymock.tests.MockNameTest.defaultName":399,"org.easymock.tests2.UsageConstraintsTest.testMatches":261,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":109,"org.easymock.samples.ExampleTest.voteForRemovals":88,"org.easymock.tests.UsageVarargTest.allKinds":0,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":161,"org.easymock.samples.BasicClassMockTest.testPrintContent":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":380,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":134,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":97,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":297,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":503,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":68,"org.easymock.tests2.UsageConstraintsTest.greaterThan":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":481,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":176,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":50,"org.easymock.samples.ExampleTest.voteForRemoval":85,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":349,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":272,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":362,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":45,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":15,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":299,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":234,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":92,"org.easymock.tests2.CaptureTest.testCaptureFirst":290,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":235,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":311,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":412,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":143,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":274,"org.easymock.tests2.CaptureTest.testCapture2_2446744":289,"org.easymock.tests2.UsageTest.moreThanOneArgument":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":33,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":173,"org.easymock.tests.GenericTest.testBridgedEquals":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":103,"org.easymock.tests.UsageExpectAndReturnTest.longType":139,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":377,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":34,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":204,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":206,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":266,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":216,"org.easymock.tests.UsageCallCountTest.tooManyCalls":104,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":488,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":133,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":52,"org.easymock.tests.MockingTest.testNiceClassMocking":352,"org.easymock.tests.MockingTest.testClassMocking":351,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":25,"org.easymock.tests2.UsageConstraintsTest.testContains":260,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":383,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":23,"org.easymock.tests2.UsageConstraintsTest.testFind":251,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":113,"org.easymock.tests.MockTypeTest.fromEasyMockClass":408,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":218,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":318,"org.easymock.tests.UsageExpectAndReturnTest.object":146,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":240,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":65,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":420,"org.easymock.tests.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":90,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":497,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":63,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":152,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":211,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":444,"org.easymock.tests.MockClassControlTest.testHashCode":356,"org.easymock.tests2.EasyMockSupportTest.testVerify":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":485,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":91,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":467,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":442,"org.easymock.tests.UsageVarargTest.varargCharAccepted":167,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":502,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":338,"org.easymock.tests2.UsageTest.openCallCountByLastCall":305,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":243,"org.easymock.tests.DefaultClassInstantiatorTest.object":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":125,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":418,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":369,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":443,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":48,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":60,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":354,"org.easymock.tests2.UsageTest.resumeIfFailure":310,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":95,"org.easymock.tests2.StubTest.stubWithReturnValue":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":145,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":267,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":230,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":500,"org.easymock.samples.SupportTest.voteForRemovals":82,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":382,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":198,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":231,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":313,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":398,"org.easymock.tests.UsageExpectAndThrowTest.object":196,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":265,"org.easymock.tests2.DelegateToTest.testWrongClass":296,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":208,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests.UsageStrictMockTest.range":223,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":440,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":30,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":395,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":414,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":495,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":229,"org.easymock.tests2.CaptureTest.testCaptureNone":285,"org.easymock.tests.UsageUnorderedTest.message":105,"org.easymock.tests.UsageVerifyTest.twoReturns":163,"org.easymock.tests.UsageVarargTest.varargByteAccepted":172,"org.easymock.tests2.ThreadingTest.testThreadSafe":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":370,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":102,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":7,"org.easymock.tests2.CaptureTest.testCapture_2617107":279,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":501,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":405,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageConstraintsTest.any":258,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":392,"org.easymock.tests2.StubTest.stub":321,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":217,"org.easymock.tests.UsageExpectAndThrowTest.longType":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":337,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":347,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":391,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":330,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests.LimitationsTest.mockNativeMethod":14,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":155,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":13,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":456,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":39,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":333,"org.easymock.tests2.NameTest.nameForMocksControl":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":458,"org.easymock.tests2.MockedExceptionTest.testMockedException":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":365,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":473,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":190,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":19,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":31,"org.easymock.tests.MockingTest.testNicePartialClassMocking":18,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":454,"org.easymock.tests2.CaptureTest.testCaptureLast":284,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":185,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":56,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":255,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":70,"org.easymock.tests.MockingTest.testTwoMocks":16,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":194,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":308,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":269,"org.easymock.samples.ExampleTest.removeNonExistingDocument":373,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":460,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":389,"org.easymock.tests.UsageStrictMockTest.differentMethods":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":445,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":345,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":273,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":174,"org.easymock.tests.UsageExpectAndThrowTest.floatType":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":366,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":480,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":314,"org.easymock.tests.UsageVerifyTest.twoThrows":162,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":59,"org.easymock.samples.ExampleTest.voteAgainstRemoval":86,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":335,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":49,"org.easymock.tests.LimitationsTest.privateConstructor":341,"org.easymock.tests2.UsageConstraintsTest.testNotNull":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":135,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":245,"org.easymock.tests2.UsageTest.defaultResetToNice":307,"org.easymock.samples.ExampleTest.voteAgainstRemovals":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":455,"org.easymock.tests.UsageVarargTest.differentLength":169,"org.easymock.tests2.CallbackTest.callback":322,"org.easymock.tests2.UsageConstraintsTest.equals":76,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":475,"org.easymock.tests.UsageTest.openCallCountByLastCall":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":181,"org.easymock.tests.UsageCallCountTest.tooFewCalls":100,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":416,"org.easymock.tests.UsageThrowableTest.throwCheckedException":132,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":350,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":459,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":394,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":320,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":316,"org.easymock.tests.ObjectMethodsTest.testHashCode":419,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":275,"org.easymock.tests2.NameTest.nameForNiceMock":325,"org.easymock.tests2.DependencyTest.testInterfaceMocking":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":66,"org.easymock.samples.ExampleTest.addDocument":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":489,"org.easymock.tests2.DelegateToTest.testStubDelegate":295,"org.easymock.tests2.AnswerTest.stubAnswer":315,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":221,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":472,"org.easymock.tests.UsageVarargTest.varargLongAccepted":171,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":334,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":154,"org.easymock.tests.UsageExpectAndReturnTest.floatType":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":36,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":451,"org.easymock.tests.UsageThrowableTest.noUpperLimit":129,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":213,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":263,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":359,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":282,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":137,"org.easymock.tests2.UsageConstraintsTest.testSame":253,"org.easymock.samples.SupportTest.addDocument":81,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":504,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":476,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":367,"org.easymock.tests.GenericTest.testPackageScope":11,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":450,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":402,"org.easymock.tests2.NameTest.nameForMock":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":148,"org.easymock.tests2.UsageStrictMockTest.differentMethods":332,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":361,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":140,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":200,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":178,"org.easymock.tests2.MockedExceptionTest.testRealException":247,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":411,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":434,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":329,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":180,"org.easymock.tests2.NameTest.nameForStrictMock":324,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":471,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":317,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":360,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":492,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":264,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":346,"org.easymock.tests.ErrorMessageTest.testGetters":493,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":26,"org.easymock.tests2.UsageStrictMockTest.range":331,"org.easymock.tests2.UsageConstraintsTest.lessThan":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":431,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":67,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":484,"org.easymock.tests2.CaptureTest.testCaptureRightOne":287,"org.easymock.tests2.UsageConstraintsTest.testOr":254,"org.easymock.tests.UsageRangeTest.combination":175,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":41,"org.easymock.tests.UsageTest.wrongArguments":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":482,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":20,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":149,"org.easymock.tests.UsageVarargTest.varargShortAccepted":170,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":348,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":384,"org.easymock.tests2.UsageConstraintsTest.cmpTo":259,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":75,"org.easymock.tests2.CompareToTest.testLessThan":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":426,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":306,"org.easymock.tests2.CaptureTest.testCaptureFromStub":288,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":386,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":27,"org.easymock.tests.UsageTest.unexpectedCallWithArray":400,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":220,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":150,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.tests2.UsageConstraintsTest.constraints":250,"org.easymock.samples.ExampleTest.addAndChangeDocument":89,"org.easymock.tests.UsageStrictMockTest.testVerify":226,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":80,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":378,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":158,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":142,"org.easymock.tests.LimitationsTest.abstractClass":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":159,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":214,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":494,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":238}}]
