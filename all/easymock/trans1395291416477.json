[{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[31,17,18,32,33,34,35,36,37,0,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,1,83,84,85,86,87,88,89,19,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,21,114,115,22,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,23,24,172,173,25,26,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,12,13,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,27,299,300,14,301,302,303,304,4,305,306,307,308,309,310,5,311,312,313,314,315,316,317,318,319,320,321,6,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,16,361,362,363,364,365,366,367,368,369,370,371,372,373,374,28,375,376,377,378,379,29,30,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,7,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,468,469,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[480],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[184,188],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[189,360],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[481,482,483],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[344,484,439,449,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[14,301,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:161","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[422],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[67,19,104,150,156,162,166,168,171,244,250,256,260,262,281,282,303,317,320,328,374,394,399,400,405,408,409,410],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[485],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[88,105,235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[61,383,386,387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[80,83],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[79,80,81,82,83,84],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[12,13,487,14,488,489,15,490,16,491,447,468,469],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[492,14,301,302],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[4,5,393,7,402],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[184,187,12,13,14,357,490,16,361,363,419,429,447,451,454,468,469,470],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[32,33,34,35,36,0,40,79,80,81,82,1,83,84,129,184,185,186,187,188,189,192,213,214,215,216,226,227,228,229,230,231,232,233,12,13,14,302,342,343,344,345,347,348,353,354,355,356,357,358,359,360,16,361,362,363,364,365,366,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,441,442,443,444,446,447,448,449,450,451,452,453,454,455,456,459,493,494,460,465,466,468,468,469,469,470],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[4,305,308,310,5,312,6,326,393,7,402],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":305,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests2.UsageTest.argumentsOrdered":30,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":65,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":376,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":467,"org.easymock.tests2.DelegateToTest.testReturnException":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":218,"org.easymock.tests.MockingTest.testPartialClassMocking":35,"org.easymock.tests.MockClassControlTest.testToString":228,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":388,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":419,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":150,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":138,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":197,"org.easymock.samples.ExampleTest.answerVsDelegate":472,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":192,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":39,"org.easymock.tests2.UsageConstraintsTest.testNull":308,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":441,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":233,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":338,"org.easymock.tests2.CaptureTest.testPrimitive":395,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":142,"org.easymock.tests.UsageTest.moreThanOneArgument":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":169,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":41,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.UsageVarargTest.varargIntAccepted":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":119,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":353,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":274,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":123,"org.easymock.tests.ReplayStateInvalidUsageTest.times":207,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests2.DependencyTest.testClassMocking":455,"org.easymock.tests2.AnswerTest.answer":382,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":72,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":352,"org.easymock.tests2.CaptureTest.testAnd":393,"org.easymock.tests2.UsageTest.strictResetToDefault":373,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":125,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":333,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":45,"org.easymock.tests2.DelegateToTest.testDelegate":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":165,"org.easymock.tests.LimitationsTest.mockFinalMethod":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":54,"org.easymock.tests2.DependencyTest.testClassMockingSupport":456,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":147,"org.easymock.tests2.CaptureTest.testCapture1_2446744":396,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":445,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":350,"org.easymock.tests.UsageThrowableTest.throwError":130,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":201,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":191,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":437,"org.easymock.samples.PartialClassMockTest.testGetArea":470,"org.easymock.tests.MockingTest.testInterfaceMocking":37,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":151,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":111,"org.easymock.tests2.UsageTest.niceToStrict":375,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":55,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":357,"org.easymock.tests2.MockBuilderTest.testCreateMock":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":159,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":334,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":225,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":195,"org.easymock.tests.UsageOverloadedMethodTest.overloading":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":428,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":240,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":317,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":255,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":2,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":316,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":401,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":93,"org.easymock.tests2.EasyMockSupportClassTest.testAll":416,"org.easymock.tests.MockClassControlTest.testEquals":232,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":186,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":167,"org.easymock.tests2.CaptureTest.testCaptureAll":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":351,"org.easymock.tests.MockNameTest.defaultName":143,"org.easymock.tests2.UsageConstraintsTest.testMatches":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":127,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":199,"org.easymock.samples.ExampleTest.voteForRemovals":476,"org.easymock.tests.UsageVarargTest.allKinds":101,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":31,"org.easymock.samples.BasicClassMockTest.testPrintContent":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":53,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":136,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":271,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":11,"org.easymock.tests2.UsageConstraintsTest.greaterThan":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":47,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":452,"org.easymock.samples.ExampleTest.voteForRemoval":473,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":84,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":453,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":409,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":444,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":129,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":372,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":331,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":217,"org.easymock.tests2.CaptureTest.testCaptureFirst":405,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":332,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":381,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":251,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":411,"org.easymock.tests2.CaptureTest.testCapture2_2446744":404,"org.easymock.tests2.UsageTest.moreThanOneArgument":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":73,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":362,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":100,"org.easymock.tests.GenericTest.testBridgedEquals":188,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":182,"org.easymock.tests.UsageExpectAndReturnTest.longType":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":50,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":329,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":168,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":105,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":166,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":124,"org.easymock.tests.UsageCallCountTest.tooManyCalls":183,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":135,"org.easymock.tests.MockingTest.testNiceClassMocking":40,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":343,"org.easymock.tests.MockingTest.testClassMocking":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":176,"org.easymock.tests2.UsageConstraintsTest.testContains":315,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":366,"org.easymock.tests2.UsageConstraintsTest.testFind":307,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":104,"org.easymock.tests.MockTypeTest.fromEasyMockClass":190,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":112,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":371,"org.easymock.tests.UsageExpectAndReturnTest.object":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":446,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":292,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":337,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":9,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":95,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":109,"org.easymock.tests.UsageTest.exactCallCountByLastCall":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":60,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":42,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":260,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":239,"org.easymock.tests.MockClassControlTest.testHashCode":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":265,"org.easymock.tests2.EasyMockSupportTest.testVerify":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":426,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":43,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":224,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":349,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":368,"org.easymock.tests.UsageVarargTest.varargCharAccepted":94,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":78,"org.easymock.tests2.UsageTest.openCallCountByLastCall":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":481,"org.easymock.tests.DefaultClassInstantiatorTest.object":79,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":340,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":223,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":107,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":427,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":450,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":230,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":435,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":229,"org.easymock.tests2.UsageTest.resumeIfFailure":380,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":493,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":220,"org.easymock.tests2.StubTest.stubWithReturnValue":407,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":325,"org.easymock.tests2.SerializationTest.testAllMockedMethod":302,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":71,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":486,"org.easymock.samples.SupportTest.voteForRemovals":464,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":162,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":77,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":383,"org.easymock.tests.UsageExpectAndThrowTest.object":160,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":236,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":322,"org.easymock.tests2.DelegateToTest.testWrongClass":279,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":211,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":212,"org.easymock.samples.ConstructorCalledMockTest.testTax":468,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":461,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":161,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":413,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":209,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":196,"org.easymock.tests2.CaptureTest.testCaptureNone":400,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":89,"org.easymock.tests.UsageUnorderedTest.message":19,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests.UsageVarargTest.varargByteAccepted":99,"org.easymock.tests2.ThreadingTest.testThreadSafe":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":430,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":180,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":465,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":110,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":75,"org.easymock.tests2.UsageConstraintsTest.any":313,"org.easymock.tests2.StubTest.stub":406,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":146,"org.easymock.tests.UsageExpectAndThrowTest.longType":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":219,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":1,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":205,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":298,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":269,"org.easymock.tests.LimitationsTest.mockNativeMethod":215,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":285,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests2.NameTest.nameForMocksControl":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":287,"org.easymock.tests2.MockedExceptionTest.testMockedException":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":418,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":173,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":154,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":0,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":370,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":438,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":360,"org.easymock.tests.MockingTest.testNicePartialClassMocking":36,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":443,"org.easymock.tests2.CaptureTest.testCaptureLast":399,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":283,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":148,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":348,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":323,"org.easymock.tests.MockingTest.testTwoMocks":34,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":158,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":327,"org.easymock.samples.ExampleTest.removeNonExistingDocument":477,"org.easymock.tests.UsageStrictMockTest.differentMethods":116,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":290,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":266,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":81,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":410,"org.easymock.tests2.MockBuilderTest.testCreateMockString":363,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":420,"org.easymock.tests.UsageExpectAndThrowTest.floatType":152,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":415,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":487,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":429,"org.easymock.samples.ExampleTest.voteAgainstRemoval":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":87,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":451,"org.easymock.tests.LimitationsTest.privateConstructor":214,"org.easymock.tests2.UsageConstraintsTest.testNotNull":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":137,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":364,"org.easymock.tests2.UsageTest.defaultResetToNice":379,"org.easymock.samples.ExampleTest.voteAgainstRemovals":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":259,"org.easymock.tests.UsageVarargTest.differentLength":96,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":284,"org.easymock.tests2.CallbackTest.callback":282,"org.easymock.tests2.UsageConstraintsTest.equals":306,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":447,"org.easymock.tests.UsageTest.openCallCountByLastCall":172,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":480,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":140,"org.easymock.tests.UsageCallCountTest.tooFewCalls":178,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":198,"org.easymock.tests.UsageThrowableTest.throwCheckedException":134,"org.easymock.tests.MockingTest.testStrictClassMocking":32,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":86,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":347,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":289,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":344,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":208,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":346,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":387,"org.easymock.tests.ObjectMethodsTest.testHashCode":108,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":412,"org.easymock.tests2.NameTest.nameForNiceMock":391,"org.easymock.tests2.DependencyTest.testInterfaceMocking":457,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":10,"org.easymock.samples.ExampleTest.addDocument":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":436,"org.easymock.tests2.DelegateToTest.testStubDelegate":278,"org.easymock.tests2.AnswerTest.stubAnswer":386,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":114,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":490,"org.easymock.tests.UsageVarargTest.varargLongAccepted":98,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":64,"org.easymock.tests.UsageExpectAndReturnTest.floatType":246,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":469,"org.easymock.tests.UsageThrowableTest.noUpperLimit":131,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":273,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":321,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":304,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":459,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":397,"org.easymock.tests2.SerializationTest.test":301,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":245,"org.easymock.tests2.UsageConstraintsTest.testSame":309,"org.easymock.samples.SupportTest.addDocument":463,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":421,"org.easymock.tests.GenericTest.testPackageScope":185,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":59,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":272,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":38,"org.easymock.tests2.NameTest.nameForMock":389,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":256,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":448,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":164,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":49,"org.easymock.tests2.MockedExceptionTest.testRealException":367,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":68,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":139,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":210,"org.easymock.tests2.NameTest.nameForStrictMock":390,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":482,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":369,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":460,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":82,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":354,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":63,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":425,"org.easymock.tests2.CaptureTest.testCaptureRightOne":402,"org.easymock.tests2.UsageConstraintsTest.testOr":310,"org.easymock.tests.UsageRangeTest.combination":46,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":439,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests2.MockBuilderTest.testWithConstructor":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":422,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":257,"org.easymock.tests.UsageVarargTest.varargShortAccepted":97,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":83,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":181,"org.easymock.tests2.UsageConstraintsTest.cmpTo":314,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":58,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":378,"org.easymock.tests2.CaptureTest.testCaptureFromStub":403,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":200,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":355,"org.easymock.tests.UsageTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":258,"org.easymock.tests2.CaptureTest.testCapture":485,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":115,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.samples.ExampleTest.addAndChangeDocument":478,"org.easymock.tests.UsageStrictMockTest.testVerify":118,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":479,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":51,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":121,"org.easymock.tests.LimitationsTest.abstractClass":213,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":122,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":335}}]
