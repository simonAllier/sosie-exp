[{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[6],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[25,26,2,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[65,66,67,25,25,26,26,2,4,68,32,35,45,51,69,70,71,72,73,74,75,76,77,78,79,80,81,60,82,83,61,63,84,85,86,87,88,89,90,91,92,93,94,95,8,96,9,97,98,99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[102,103,104,105,106,107],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[108],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.LastControl:92","failures":[109,110,111,112,113,114,115,116,6,117,118],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[119,120,109,121,122,123,16,124,18,19,125,126,20,21,127,128],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[109,110,111,112,113,114,115,116,6,117,118],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[129,130,131,132],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[133,134,135,136,137],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[102,133,103,104,138,105,139,140,65,66,67,141,106,142,25,26,143,144,134,145,135,146,136,2,3,4,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,11,183,184,185,186,187,12,188,189,190,191,192,13,14,193,194,109,195,110,196,197,198,199,200,201,202,111,203,204,205,206,207,112,113,208,209,114,210,115,116,211,6,212,213,214,215,130,216,217,218,219,117,220,131,221,222,118,223,132,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,224,69,54,70,71,55,225,72,73,74,56,75,226,57,76,77,59,78,227,228,229,230,231,232,233,234,235,236,237,238,239,240,79,241,242,243,244,245,246,80,81,60,82,247,248,83,61,62,249,250,251,252,0,1,63,64,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,84,85,273,86,87,88,89,274,90,275,276,91,92,93,94,277,278,279,280,137,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,7,313,314,315,316,317,95,123,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,8,96,9,379,380,381,16,124,382,17,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,18,19,125,126,20,21,127,128,409,410,411,412,413,414,415,416,22,417,418,419,420,421,422,10,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,107,476,477,478,479,97,480,481,23,24,482,483,484,485,486,487,488,489,490,98,99,100,491,101,492,493,494,495,496,497,498,499],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[11,12,13,14,284,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[101],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[2,500,501,502,108,503,56,57,63,64],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[257],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[244,94,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[102,133,103,104,138,105,140,141,106,142,143,144,134,145,135,146,136,3,149,150,156,157,170,171,172,174,175,176,177,178,179,180,181,182,11,183,184,185,186,187,12,188,189,190,191,192,13,14,193,194,109,195,110,196,197,198,199,200,201,202,111,203,204,205,206,207,112,113,209,114,210,115,116,211,6,212,213,214,215,130,216,217,218,219,117,220,131,221,222,118,223,132,32,232,233,239,240,79,241,243,244,245,246,248,249,250,251,252,0,1,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,84,273,279,280,137,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,7,313,314,315,316,317,123,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,380,381,16,124,382,17,383,384,385,398,402,403,405,406,407,408,18,19,125,126,20,21,127,128,410,411,412,413,414,415,416,22,417,418,419,420,421,10,423,424,441,447,449,450,451,452,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,107,476,477,481,23,24,482,483,484,485,486,487,488,98,495,496,498],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[358,443],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[504,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[25,26,2,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[102,133,103,104,105,140,67,106,25,25,26,26,144,134,145,135,146,136,2,3,149,150,156,157,170,171,172,174,175,176,177,179,181,182,11,183,184,185,186,187,12,188,189,190,191,192,13,14,193,194,109,195,110,196,197,198,199,200,201,202,111,203,204,205,206,207,112,113,209,114,210,115,116,211,6,212,213,214,215,130,216,217,218,219,117,220,131,221,222,118,223,132,32,35,45,51,69,70,71,72,74,75,77,78,232,233,239,240,79,241,80,81,60,82,248,83,61,249,250,251,252,0,1,63,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,84,85,273,86,87,88,90,91,92,93,94,278,279,137,281,283,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,7,313,314,315,316,317,95,123,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,355,356,357,358,359,360,363,364,365,8,9,380,16,124,382,17,383,384,398,399,402,403,404,405,406,407,408,18,19,125,126,20,21,127,410,22,418,421,422,10,423,424,441,447,449,450,451,452,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,107,476,477,97,481,23,24,482,483,484,485,486,487,488,99,100,101,495,496,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":407,"org.easymock.tests2.UsageTest.argumentsOrdered":14,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":435,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":189,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":143,"org.easymock.tests2.DelegateToTest.testReturnException":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":318,"org.easymock.tests.MockingTest.testPartialClassMocking":99,"org.easymock.tests.MockClassControlTest.testToString":363,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":242,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":324,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":500,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":211,"org.easymock.tests2.UsageTest.wrongArguments":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":288,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":162,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":295,"org.easymock.samples.ExampleTest.answerVsDelegate":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":404,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":493,"org.easymock.tests2.UsageConstraintsTest.testNull":114,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":269,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":368,"org.easymock.tests2.CaptureTest.testPrimitive":196,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":292,"org.easymock.tests.UsageTest.moreThanOneArgument":408,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":343,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":315,"org.easymock.tests.UsageTest.argumentsOrdered":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":356,"org.easymock.tests.UsageVarargTest.varargIntAccepted":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":474,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":69,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":477,"org.easymock.tests.ReplayStateInvalidUsageTest.times":394,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests2.DependencyTest.testClassMocking":147,"org.easymock.tests2.AnswerTest.answer":249,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":442,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":178,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":401,"org.easymock.tests2.CaptureTest.testAnd":109,"org.easymock.tests2.UsageTest.strictResetToDefault":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":264,"org.easymock.tests2.DelegateToTest.testDelegate":136,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":339,"org.easymock.tests.LimitationsTest.mockFinalMethod":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":486,"org.easymock.tests2.DependencyTest.testClassMockingSupport":148,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":308,"org.easymock.tests2.CaptureTest.testCapture1_2446744":197,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":176,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":388,"org.easymock.tests.UsageThrowableTest.throwError":297,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":403,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":453,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":317,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":53,"org.easymock.samples.PartialClassMockTest.testGetArea":67,"org.easymock.tests.MockingTest.testInterfaceMocking":491,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":312,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":422,"org.easymock.tests2.UsageTest.niceToStrict":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.MockBuilderTest.testCreateMock":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":159,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":119,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":333,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":265,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":400,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":307,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":293,"org.easymock.tests.UsageOverloadedMethodTest.overloading":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":50,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":130,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":465,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":10,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":215,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":202,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":347,"org.easymock.tests2.EasyMockSupportClassTest.testAll":32,"org.easymock.tests.MockClassControlTest.testEquals":367,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":341,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":484,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":177,"org.easymock.tests2.CaptureTest.testCaptureAll":195,"org.easymock.tests.MockNameTest.defaultName":323,"org.easymock.tests2.UsageConstraintsTest.testMatches":216,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":316,"org.easymock.samples.ExampleTest.voteForRemovals":105,"org.easymock.tests.UsageVarargTest.allKinds":355,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":485,"org.easymock.samples.BasicClassMockTest.testPrintContent":66,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":303,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":179,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":503,"org.easymock.tests2.UsageConstraintsTest.greaterThan":218,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":33,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":450,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":94,"org.easymock.samples.ExampleTest.voteForRemoval":103,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":377,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":256,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":277,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":89,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":95,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":262,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":123,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":144,"org.easymock.tests2.CaptureTest.testCaptureFirst":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":263,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":461,"org.easymock.tests2.UsageTest.moreThanOneArgument":187,"org.easymock.tests2.CaptureTest.testCapture2_2446744":204,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":443,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":77,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":354,"org.easymock.tests.GenericTest.testBridgedEquals":379,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":415,"org.easymock.tests.UsageExpectAndReturnTest.longType":457,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":482,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":342,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":398,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":221,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":313,"org.easymock.tests.UsageCallCountTest.tooManyCalls":416,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":462,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":302,"org.easymock.tests.MockingTest.testNiceClassMocking":494,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":81,"org.easymock.tests.MockingTest.testClassMocking":490,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":409,"org.easymock.tests2.UsageConstraintsTest.testContains":214,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":79,"org.easymock.tests2.UsageConstraintsTest.testFind":209,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":424,"org.easymock.tests.MockTypeTest.fromEasyMockClass":402,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":174,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":380,"org.easymock.tests.UsageExpectAndReturnTest.object":464,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":501,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":349,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":420,"org.easymock.tests.UsageTest.exactCallCountByLastCall":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":497,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":357,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":64,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":470,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":137,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":228,"org.easymock.tests.MockClassControlTest.testHashCode":366,"org.easymock.tests2.EasyMockSupportTest.testVerify":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":42,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":358,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":175,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":224,"org.easymock.tests.UsageVarargTest.varargCharAccepted":348,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":369,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":448,"org.easymock.tests2.UsageTest.openCallCountByLastCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":271,"org.easymock.tests.DefaultClassInstantiatorTest.object":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":305,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":418,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":154,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":92,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":330,"org.easymock.tests.CapturesMatcherTest.test":505,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":471,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":51,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":364,"org.easymock.tests2.UsageTest.resumeIfFailure":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":320,"org.easymock.tests2.StubTest.stubWithReturnValue":171,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":463,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":222,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":441,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":120,"org.easymock.samples.SupportTest.voteForRemovals":106,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":336,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":447,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":250,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":499,"org.easymock.tests.UsageExpectAndThrowTest.object":334,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":220,"org.easymock.tests2.DelegateToTest.testWrongClass":135,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":495,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":496,"org.easymock.samples.ConstructorCalledMockTest.testTax":25,"org.easymock.tests.UsageStrictMockTest.range":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":168,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":335,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":74,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":29,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":294,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":121,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":7,"org.easymock.tests2.CaptureTest.testCaptureNone":201,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":353,"org.easymock.tests2.ThreadingTest.testThreadSafe":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":46,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":413,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":65,"org.easymock.tests2.CaptureTest.testCapture_2617107":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":291,"org.easymock.tests2.UsageConstraintsTest.any":212,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":393,"org.easymock.tests2.StubTest.stub":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":319,"org.easymock.tests.UsageExpectAndThrowTest.longType":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":374,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":392,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":97,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":473,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":9,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":153,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.tests2.NameTest.nameForMocksControl":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":155,"org.easymock.tests2.MockedExceptionTest.testMockedException":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":34,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":126,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":173,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":328,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":75,"org.easymock.tests.MockingTest.testNicePartialClassMocking":100,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":88,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":151,"org.easymock.tests2.CaptureTest.testCaptureLast":200,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":309,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":61,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":131,"org.easymock.tests.MockingTest.testTwoMocks":98,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":454,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":332,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":223,"org.easymock.samples.ExampleTest.removeNonExistingDocument":139,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":158,"org.easymock.tests.UsageStrictMockTest.differentMethods":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":229,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":372,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":257,"org.easymock.tests2.MockBuilderTest.testCreateMockString":78,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":36,"org.easymock.tests.UsageExpectAndThrowTest.floatType":326,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":31,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":252,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":253,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":45,"org.easymock.samples.ExampleTest.voteAgainstRemoval":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":436,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":311,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":93,"org.easymock.tests.LimitationsTest.privateConstructor":479,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":28,"org.easymock.tests2.UsageConstraintsTest.testNotNull":118,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":304,"org.easymock.tests2.UsageTest.defaultResetToNice":192,"org.easymock.samples.ExampleTest.voteAgainstRemovals":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":152,"org.easymock.tests.UsageVarargTest.differentLength":350,"org.easymock.tests2.CallbackTest.callback":254,"org.easymock.tests2.UsageConstraintsTest.equals":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":275,"org.easymock.tests.UsageTest.openCallCountByLastCall":125,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":290,"org.easymock.tests.UsageCallCountTest.tooFewCalls":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":296,"org.easymock.tests.UsageThrowableTest.throwCheckedException":301,"org.easymock.tests.MockingTest.testStrictClassMocking":489,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":488,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":157,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":60,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":395,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":248,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":1,"org.easymock.tests.ObjectMethodsTest.testHashCode":419,"org.easymock.tests2.NameTest.nameForNiceMock":245,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":259,"org.easymock.tests2.DependencyTest.testInterfaceMocking":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":502,"org.easymock.samples.ExampleTest.addDocument":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":47,"org.easymock.tests2.DelegateToTest.testStubDelegate":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.AnswerTest.stubAnswer":0,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":124,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":226,"org.easymock.tests.UsageVarargTest.varargLongAccepted":352,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":472,"org.easymock.tests.UsageExpectAndReturnTest.floatType":456,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":63,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":26,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests.UsageThrowableTest.noUpperLimit":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":207,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":163,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":198,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":371,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":455,"org.easymock.tests2.UsageConstraintsTest.testSame":210,"org.easymock.samples.SupportTest.addDocument":141,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":247,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":37,"org.easymock.tests.GenericTest.testPackageScope":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":492,"org.easymock.tests2.NameTest.nameForMock":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":466,"org.easymock.tests2.UsageStrictMockTest.differentMethods":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":59,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":458,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":338,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":452,"org.easymock.tests2.MockedExceptionTest.testRealException":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":438,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":397,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":289,"org.easymock.tests2.NameTest.nameForStrictMock":244,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":225,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":167,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":117,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":70,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.UsageConstraintsTest.lessThan":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":108,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":261,"org.easymock.tests2.CaptureTest.testCaptureRightOne":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":41,"org.easymock.tests2.UsageConstraintsTest.testOr":115,"org.easymock.tests.UsageRangeTest.combination":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":85,"org.easymock.tests.UsageTest.wrongArguments":19,"org.easymock.tests2.MockBuilderTest.testWithConstructor":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":38,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":362,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":459,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":426,"org.easymock.tests.UsageVarargTest.varargShortAccepted":351,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":375,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":414,"org.easymock.tests2.UsageConstraintsTest.cmpTo":213,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":251,"org.easymock.tests2.CompareToTest.testLessThan":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":428,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests2.CaptureTest.testCaptureFromStub":203,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":387,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":71,"org.easymock.tests.UsageTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":412,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":58,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":468,"org.easymock.tests2.CaptureTest.testCapture":504,"org.easymock.tests2.UsageConstraintsTest.constraints":112,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":382,"org.easymock.samples.ExampleTest.addAndChangeDocument":140,"org.easymock.tests.UsageStrictMockTest.testVerify":385,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":142,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":381,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":483,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":107,"org.easymock.tests.LimitationsTest.abstractClass":478,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":460,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":476,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":266,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":345}}]
