[{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7,8,9,9,10,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","name":"name","proxyFactory":"org.easymock.internal.MocksControl.interfaceProxyFactory"}},{"position":"org.easymock.internal.LastControl:92","failures":[117,118],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:98","sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[134,54,135,55],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[136,137,138,139,140,69,88,91,141,142,143,144],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[145],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[146,147,148,149],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[150],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[6,7,8,151,9,10,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,12,13,18,167,168,169,170,171,172,173,174,175,176,177,178,179,119,22,180,181,182,183,184,185,186,187,188,189,121,122,190,191,123,124,192,193,194,195,196,197,198,199,200,201,202,33,34,35,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,223,224,225,226,227,125,126,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,2,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,127,278,279,128,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,49,50,51,295,296,297,298,299,300,301,302,303,133,146,118,304,305,306,147,307,308,309,310,311,312,313,314,315,316,317,148,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,54,135,55,340,341,342,343,344,345,346,347,56,57,60,61,62,63,65,66,67,348,349,350,129,351,352,353,354,355,130,131,356,357,68,358,359,360,361,362,363,70,71,364,72,73,74,75,77,80,81,82,83,86,87,88,89,365,90,91,5,366,367,368,369,370,371,132,372,373,95,98,108,114],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[374],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[375,376,377,189,121,122,123,124,127,378,379,380,381,350,129,130,131],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[360,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[383],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[6,7,8,151,9,9,10,10,152,153,154,155,156,157,158,159,160,384,161,162,163,164,165,166,12,13,18,167,168,169,170,171,172,385,386,173,174,175,176,177,178,179,119,387,20,1,388,389,390,150,391,392,393,394,21,22,180,181,182,183,184,185,186,187,188,189,121,122,190,191,123,124,192,193,194,195,196,197,198,199,200,201,202,23,33,34,35,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,223,224,225,226,227,125,126,228,229,230,231,232,233,234,235,236,237,238,37,38,39,40,41,42,43,44,239,395,240,241,242,243,244,2,245,396,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,397,269,270,398,271,272,273,274,275,276,277,127,278,279,128,280,281,399,400,401,402,282,283,284,285,286,287,288,289,290,291,292,293,294,49,50,51,295,296,297,298,299,300,301,302,303,133,146,118,304,305,306,147,307,308,309,310,311,312,313,314,315,316,317,148,318,319,320,383,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,54,135,55,340,341,342,343,344,345,346,347,56,57,60,61,62,63,65,66,67,348,349,350,129,351,352,353,354,355,130,131,356,357,68,358,359,360,361,362,363,70,71,364,72,73,74,75,77,80,81,82,83,86,87,88,89,365,90,91,5,366,367,403,404,405,406,368,369,370,371,132,372,373,95,98,108,114],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:256","sourceCode":"final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[6,7,8,151,9,9,10,10,152,153,154,155,156,157,158,159,160,161,407,408,409,410,411,12,13,14,18,167,168,169,170,171,172,385,173,174,175,176,178,179,119,22,180,181,182,183,184,185,186,187,412,188,189,122,190,191,123,124,192,193,194,413,414,415,195,196,197,198,199,200,201,202,32,33,34,35,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,223,224,225,226,227,125,126,228,229,230,231,232,233,234,235,236,237,238,239,395,240,241,242,243,244,2,245,416,396,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,417,266,267,268,397,269,270,418,398,419,420,421,276,277,127,278,279,128,280,281,399,422,423,424,425,4,282,283,284,285,286,287,288,289,290,291,292,293,294,49,50,51,295,296,297,298,299,300,301,302,303,133,146,117,118,304,305,306,147,307,308,309,310,311,312,313,314,315,316,317,148,318,319,320,383,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,54,135,55,426,340,341,342,427,343,57,60,62,63,66,348,349,350,129,351,352,353,354,355,130,131,356,357,68,358,428,429,359,360,361,362,363,70,71,364,72,73,74,77,81,82,83,86,87,88,89,365,90,91,5,366,367,403,404,405,406,368,369,370,371,132,372,373,95,98,108,114],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[134,54,135,55],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[24,28,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[313],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":299,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":188,"org.easymock.tests2.UsageTest.argumentsOrdered":131,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":292,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":352,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":151,"org.easymock.tests2.DelegateToTest.testReturnException":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":168,"org.easymock.tests.MockingTest.testPartialClassMocking":33,"org.easymock.tests.MockClassControlTest.testToString":39,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":102,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":246,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":339,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":146,"org.easymock.tests2.UsageTest.wrongArguments":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":274,"org.easymock.samples.ExampleTest.answerVsDelegate":156,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":46,"org.easymock.tests2.UsageConstraintsTest.testNull":301,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":72,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":44,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":291,"org.easymock.tests2.CaptureTest.testPrimitive":327,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":245,"org.easymock.tests.UsageTest.moreThanOneArgument":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":265,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":182,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":407,"org.easymock.tests.UsageTest.argumentsOrdered":124,"org.easymock.tests.UsageVarargTest.varargIntAccepted":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":0,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":56,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":226,"org.easymock.tests.ReplayStateInvalidUsageTest.times":392,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":323,"org.easymock.tests2.DependencyTest.testClassMocking":52,"org.easymock.tests2.AnswerTest.answer":358,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":347,"org.easymock.tests2.CaptureTest.testAnd":324,"org.easymock.tests2.UsageTest.strictResetToDefault":349,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":286,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":411,"org.easymock.tests2.DelegateToTest.testDelegate":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":261,"org.easymock.tests.LimitationsTest.mockFinalMethod":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":166,"org.easymock.tests2.DependencyTest.testClassMockingSupport":53,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":416,"org.easymock.tests2.CaptureTest.testCapture1_2446744":328,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":259,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":345,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":1,"org.easymock.tests.UsageThrowableTest.throwError":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":184,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":116,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":247,"org.easymock.tests2.UsageTest.niceToStrict":351,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.MockBuilderTest.testCreateMock":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":111,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":255,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":378,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":415,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":385,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":272,"org.easymock.tests.UsageOverloadedMethodTest.overloading":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":107,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":147,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":270,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":214,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":306,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":333,"org.easymock.tests.MockClassControlTest.testEquals":43,"org.easymock.tests2.EasyMockSupportClassTest.testAll":95,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":263,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":379,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":164,"org.easymock.tests2.CaptureTest.testCaptureAll":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":346,"org.easymock.tests2.UsageConstraintsTest.testMatches":307,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":183,"org.easymock.samples.ExampleTest.voteForRemovals":160,"org.easymock.tests.UsageVarargTest.allKinds":238,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":165,"org.easymock.samples.BasicClassMockTest.testPrintContent":8,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":201,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":368,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":172,"org.easymock.tests2.UsageConstraintsTest.greaterThan":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":395,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":83,"org.easymock.samples.ExampleTest.voteForRemoval":157,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":29,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":84,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":320,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":75,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":22,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":348,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":284,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":167,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":426,"org.easymock.tests2.CaptureTest.testCaptureFirst":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":285,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":357,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":210,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":321,"org.easymock.tests2.CaptureTest.testCapture2_2446744":336,"org.easymock.tests2.UsageTest.moreThanOneArgument":350,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":66,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":237,"org.easymock.tests.GenericTest.testBridgedEquals":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":178,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":144,"org.easymock.tests.UsageExpectAndReturnTest.longType":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":162,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":282,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":264,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":417,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":180,"org.easymock.tests.UsageCallCountTest.tooManyCalls":179,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":112,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":200,"org.easymock.tests.MockingTest.testNiceClassMocking":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":87,"org.easymock.tests.MockingTest.testClassMocking":31,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":386,"org.easymock.tests2.UsageConstraintsTest.testContains":305,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":51,"org.easymock.tests2.UsageConstraintsTest.testFind":300,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":187,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":363,"org.easymock.tests.UsageExpectAndReturnTest.object":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":290,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":232,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":402,"org.easymock.tests.UsageTest.exactCallCountByLastCall":192,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":193,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":408,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":219,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":228,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":269,"org.easymock.tests.MockClassControlTest.testHashCode":42,"org.easymock.tests2.EasyMockSupportTest.testVerify":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":105,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":409,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":414,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":344,"org.easymock.tests.UsageVarargTest.varargCharAccepted":231,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":369,"org.easymock.tests2.UsageTest.openCallCountByLastCall":353,"org.easymock.tests.DefaultClassInstantiatorTest.object":23,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":413,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":400,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":198,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":41,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":81,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":252,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":114,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":40,"org.easymock.tests2.UsageTest.resumeIfFailure":356,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":170,"org.easymock.tests2.StubTest.stubWithReturnValue":366,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":315,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":425,"org.easymock.samples.SupportTest.voteForRemovals":154,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":380,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":258,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":134,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":4,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":428,"org.easymock.tests.UsageExpectAndThrowTest.object":256,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":312,"org.easymock.tests2.DelegateToTest.testWrongClass":342,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":266,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":267,"org.easymock.tests.UsageStrictMockTest.range":128,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":257,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":273,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":375,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":424,"org.easymock.tests2.CaptureTest.testCaptureNone":332,"org.easymock.tests.UsageUnorderedTest.message":119,"org.easymock.tests.UsageVerifyTest.twoReturns":126,"org.easymock.tests.UsageVarargTest.varargByteAccepted":236,"org.easymock.tests2.ThreadingTest.testThreadSafe":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":109,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":176,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":7,"org.easymock.tests2.CaptureTest.testCapture_2617107":326,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":381,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":2,"org.easymock.tests2.UsageConstraintsTest.any":118,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":391,"org.easymock.tests2.StubTest.stub":5,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":169,"org.easymock.tests.UsageExpectAndThrowTest.longType":249,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":27,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":150,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":371,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":318,"org.easymock.tests.LimitationsTest.mockNativeMethod":18,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":14,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":222,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":373,"org.easymock.tests2.NameTest.nameForMocksControl":406,"org.easymock.tests2.MockedExceptionTest.testMockedException":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":97,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":250,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":70,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":63,"org.easymock.tests.MockingTest.testNicePartialClassMocking":34,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":74,"org.easymock.tests2.CaptureTest.testCaptureLast":331,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":396,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":133,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":91,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":313,"org.easymock.tests.MockingTest.testTwoMocks":32,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":254,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":130,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":317,"org.easymock.samples.ExampleTest.removeNonExistingDocument":384,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":389,"org.easymock.tests.UsageStrictMockTest.differentMethods":280,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":25,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":383,"org.easymock.tests2.MockBuilderTest.testCreateMockString":67,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":99,"org.easymock.tests.UsageExpectAndThrowTest.floatType":248,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":94,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":359,"org.easymock.tests.UsageVerifyTest.twoThrows":125,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":108,"org.easymock.samples.ExampleTest.voteAgainstRemoval":158,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":422,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":82,"org.easymock.tests.LimitationsTest.privateConstructor":17,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":143,"org.easymock.tests2.UsageConstraintsTest.testNotNull":316,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":202,"org.easymock.tests2.UsageTest.defaultResetToNice":355,"org.easymock.samples.ExampleTest.voteAgainstRemovals":155,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":218,"org.easymock.tests.UsageVarargTest.differentLength":233,"org.easymock.tests2.CallbackTest.callback":367,"org.easymock.tests2.UsageConstraintsTest.equals":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":78,"org.easymock.tests.UsageTest.openCallCountByLastCall":190,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":244,"org.easymock.tests.UsageCallCountTest.tooFewCalls":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":275,"org.easymock.tests.UsageThrowableTest.throwCheckedException":199,"org.easymock.tests.MockingTest.testStrictClassMocking":30,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":376,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":90,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":194,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":88,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":393,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":365,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":361,"org.easymock.tests.ObjectMethodsTest.testHashCode":401,"org.easymock.tests2.CompareToTest.testGreateOrEqual":149,"org.easymock.tests2.NameTest.nameForNiceMock":405,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":322,"org.easymock.tests2.DependencyTest.testInterfaceMocking":338,"org.easymock.samples.ExampleTest.addDocument":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":115,"org.easymock.tests2.DelegateToTest.testStubDelegate":341,"org.easymock.tests2.AnswerTest.stubAnswer":360,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":278,"org.easymock.tests.UsageVarargTest.varargLongAccepted":235,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.tests.UsageExpectAndReturnTest.floatType":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":68,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests.UsageThrowableTest.noUpperLimit":196,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":310,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":297,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":47,"org.easymock.tests2.SerializationTest.test":135,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":329,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":204,"org.easymock.tests2.UsageConstraintsTest.testSame":302,"org.easymock.samples.SupportTest.addDocument":153,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":100,"org.easymock.tests.GenericTest.testPackageScope":12,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":410,"org.easymock.tests2.NameTest.nameForMock":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":215,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":140,"org.easymock.tests2.UsageStrictMockTest.differentMethods":372,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":79,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":207,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":260,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":241,"org.easymock.tests2.MockedExceptionTest.testRealException":295,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":370,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":243,"org.easymock.tests2.NameTest.nameForStrictMock":404,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":59,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":362,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":73,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":48,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":26,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":311,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":57,"org.easymock.tests2.UsageStrictMockTest.range":132,"org.easymock.tests2.UsageConstraintsTest.lessThan":148,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":104,"org.easymock.tests2.CaptureTest.testCaptureRightOne":334,"org.easymock.tests2.UsageConstraintsTest.testOr":303,"org.easymock.tests.UsageRangeTest.combination":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":71,"org.easymock.tests.UsageTest.wrongArguments":122,"org.easymock.tests2.MockBuilderTest.testWithConstructor":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":101,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":216,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":28,"org.easymock.tests.UsageVarargTest.varargShortAccepted":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":177,"org.easymock.tests2.UsageConstraintsTest.cmpTo":304,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":429,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":354,"org.easymock.tests2.CaptureTest.testCaptureFromStub":335,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":20,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":58,"org.easymock.tests.UsageTest.unexpectedCallWithArray":121,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":175,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":217,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":279,"org.easymock.tests2.UsageConstraintsTest.constraints":298,"org.easymock.samples.ExampleTest.addAndChangeDocument":161,"org.easymock.tests.UsageStrictMockTest.testVerify":399,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":152,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":163,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":224,"org.easymock.tests.LimitationsTest.abstractClass":16,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":209,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":225,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":288}}]
