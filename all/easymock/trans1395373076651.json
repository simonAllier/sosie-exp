[{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[13,14,15,6,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,7,80,10,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[259,260],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[261,262,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[13,14,15,6,16,17,18,19,264,20,21,22,23,24,25,26,27,28,29,265,266,30,267,268,269,259,270,31,271,272,273,274,275,276,277,278,32,33,34,279,280,35,36,281,282,37,38,39,40,41,42,43,44,45,46,283,47,48,49,284,50,51,52,53,285,54,55,56,57,58,59,286,287,60,61,288,62,63,64,65,289,263,66,290,291,67,292,68,293,294,295,69,258,70,71,72,73,74,296,297,298,260,299,75,300,301,302,303,304,305,76,77,78,79,306,7,80,8,9,10,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,307,100,101,102,103,104,105,308,106,107,108,109,110,111,112,113,114,115,116,117,309,118,119,120,121,310,122,123,124,125,126,311,312,127,128,129,130,313,314,315,131,132,133,134,316,317,318,319,320,321,322,323,324,135,136,325,137,138,326,327,139,328,329,140,330,331,332,333,141,334,335,142,336,337,338,339,340,341,342,343,344,143,345,346,347,348,349,144,350,351,352,353,354,355,145,146,147,148,149,150,151,152,153,154,155,156,356,357,358,359,360,361,362,157,158,363,364,365,366,367,368,159,4,160,369,370,161,162,163,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,164,165,166,167,168,169,387,388,389,390,391,392,393,394,170,171,172,173,174,175,395,396,397,398,176,177,399,400,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,401,402,403,404,405,406,407,408,409,410,411,412,413,414,11,415,416,198,417,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,418,419,420,219,421,422,423,424,425,426,220,427,428,221,222,223,224,225,226,227,429,430,228,431,229,230,231,232,233,432,234,235,433,236,237,238,239,240,241,242,243,244,245,246,247,434,435,436,248,249,437,250,438,439,440,441,251,442,443,444,445,446,447,252,448,449,450,451,452,12,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,253,254,255,256,474,257,5,475,476,477,478,479,480],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[481],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[422],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[282,325,328,329,150,151,482,4,370,417,418,5,475,478,479],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[64,112,138],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[99,104,115],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[282,37,370,161],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[24,39,483,289,130,484,313,314,131,132,133,134,317,318,485,319,387,392,399],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[352,401,451,454,455,464,469],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[117],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":99,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":474,"org.easymock.tests2.UsageTest.argumentsOrdered":329,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":460,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":138,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":23,"org.easymock.tests2.DelegateToTest.testReturnException":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":165,"org.easymock.tests.MockingTest.testPartialClassMocking":248,"org.easymock.tests.MockClassControlTest.testToString":442,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":310,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":339,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":199,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":33,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":226,"org.easymock.tests2.UsageTest.wrongArguments":325,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":147,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":392,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":439,"org.easymock.tests2.UsageConstraintsTest.testNull":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":63,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":447,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":90,"org.easymock.tests2.CaptureTest.testPrimitive":53,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":228,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":218,"org.easymock.tests.UsageTest.moreThanOneArgument":257,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":245,"org.easymock.tests.UsageTest.argumentsOrdered":479,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":422,"org.easymock.tests.UsageVarargTest.varargIntAccepted":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":152,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":304,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":156,"org.easymock.tests.ReplayStateInvalidUsageTest.times":409,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":31,"org.easymock.tests2.DependencyTest.testClassMocking":277,"org.easymock.tests2.AnswerTest.answer":126,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":79,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":389,"org.easymock.tests2.CaptureTest.testAnd":50,"org.easymock.tests2.UsageTest.strictResetToDefault":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":85,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":255,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":426,"org.easymock.tests2.DelegateToTest.testDelegate":10,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":214,"org.easymock.tests.LimitationsTest.mockFinalMethod":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":225,"org.easymock.tests2.DependencyTest.testClassMockingSupport":278,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":359,"org.easymock.tests2.CaptureTest.testCapture1_2446744":285,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":263,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":77,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":403,"org.easymock.tests.UsageThrowableTest.throwError":362,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":391,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":351,"org.easymock.samples.PartialClassMockTest.testGetArea":24,"org.easymock.tests.MockingTest.testInterfaceMocking":437,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":153,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":354,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":386,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":340,"org.easymock.tests2.ThreadingTest.testChangeDefault":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":131,"org.easymock.tests2.MockBuilderTest.testCreateMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":273,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":208,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":86,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":388,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":450,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":170,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":145,"org.easymock.tests.UsageOverloadedMethodTest.overloading":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":349,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":415,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":110,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":189,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":481,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":109,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":58,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":432,"org.easymock.tests.MockClassControlTest.testEquals":446,"org.easymock.tests2.EasyMockSupportClassTest.testAll":141,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":177,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":216,"org.easymock.tests2.CaptureTest.testCaptureAll":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":223,"org.easymock.tests.MockNameTest.defaultName":428,"org.easymock.tests2.UsageConstraintsTest.testMatches":111,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":246,"org.easymock.samples.ExampleTest.voteForRemovals":19,"org.easymock.tests.UsageVarargTest.allKinds":240,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":149,"org.easymock.samples.BasicClassMockTest.testPrintContent":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":224,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":366,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":169,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":301,"org.easymock.tests2.UsageConstraintsTest.greaterThan":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":254,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":293,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":380,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":29,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":294,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":289,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":252,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":324,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":83,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":164,"org.easymock.tests2.CaptureTest.testCaptureFirst":60,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":84,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":330,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":417,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":185,"org.easymock.tests2.UsageTest.moreThanOneArgument":136,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":266,"org.easymock.tests2.CaptureTest.testCapture2_2446744":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":318,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":239,"org.easymock.tests.GenericTest.testBridgedEquals":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":396,"org.easymock.tests.UsageExpectAndReturnTest.longType":181,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":221,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":485,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":217,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":309,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":372,"org.easymock.tests.UsageCallCountTest.tooManyCalls":397,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":275,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":365,"org.easymock.tests.MockingTest.testNiceClassMocking":440,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":44,"org.easymock.tests.MockingTest.testClassMocking":435,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":484,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":171,"org.easymock.tests2.UsageConstraintsTest.testContains":108,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":73,"org.easymock.tests2.UsageConstraintsTest.testFind":100,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":230,"org.easymock.tests.MockTypeTest.fromEasyMockClass":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":70,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":368,"org.easymock.tests.UsageExpectAndReturnTest.object":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":89,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":235,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":384,"org.easymock.tests.UsageTest.exactCallCountByLastCall":480,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":423,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":279,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":194,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":231,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":11,"org.easymock.tests.MockClassControlTest.testHashCode":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":297,"org.easymock.tests2.EasyMockSupportTest.testVerify":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":342,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":424,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":449,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":76,"org.easymock.tests.UsageVarargTest.varargCharAccepted":234,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":473,"org.easymock.tests2.UsageTest.openCallCountByLastCall":326,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":92,"org.easymock.tests.DefaultClassInstantiatorTest.object":374,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":448,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":382,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":482,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":343,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":363,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":296,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":444,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":292,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":205,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":195,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":371,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":144,"org.easymock.tests2.UsageTest.resumeIfFailure":140,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":167,"org.easymock.tests2.StubTest.stubWithReturnValue":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":187,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":118,"org.easymock.tests2.SerializationTest.testAllMockedMethod":41,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":466,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":211,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":472,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":311,"org.easymock.tests.UsageExpectAndThrowTest.object":209,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":358,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":116,"org.easymock.tests2.DelegateToTest.testWrongClass":8,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":242,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests.UsageStrictMockTest.range":370,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":322,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":88,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":210,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":133,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":478,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":146,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":355,"org.easymock.tests.UsageUnorderedTest.message":418,"org.easymock.tests.UsageVerifyTest.twoReturns":151,"org.easymock.tests.UsageVarargTest.varargByteAccepted":238,"org.easymock.tests2.ThreadingTest.testThreadSafe":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":345,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":175,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":385,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":25,"org.easymock.tests2.CaptureTest.testCapture_2617107":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":430,"org.easymock.tests2.UsageConstraintsTest.any":106,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":408,"org.easymock.tests2.StubTest.stub":94,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":166,"org.easymock.tests.UsageExpectAndThrowTest.longType":202,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":407,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":281,"org.easymock.tests2.SerializationTest.testClass":39,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":75,"org.easymock.tests.LimitationsTest.mockNativeMethod":219,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":399,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":197,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":269,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":38,"org.easymock.tests2.NameTest.nameForMocksControl":125,"org.easymock.tests2.MockedExceptionTest.testMockedException":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":335,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":477,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":203,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":250,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":258,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":134,"org.easymock.tests.MockingTest.testNicePartialClassMocking":249,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":65,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":360,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":49,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":117,"org.easymock.tests.MockingTest.testTwoMocks":436,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":207,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":328,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":120,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":262,"org.easymock.samples.ExampleTest.removeNonExistingDocument":264,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":405,"org.easymock.tests.UsageStrictMockTest.differentMethods":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":272,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":298,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":376,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":265,"org.easymock.tests2.MockBuilderTest.testCreateMockString":319,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":441,"org.easymock.tests.UsageExpectAndThrowTest.floatType":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":336,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":127,"org.easymock.tests.UsageVerifyTest.twoThrows":150,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":143,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":353,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":68,"org.easymock.tests.LimitationsTest.privateConstructor":420,"org.easymock.tests2.UsageConstraintsTest.testNotNull":119,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":367,"org.easymock.tests2.UsageTest.defaultResetToNice":139,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":193,"org.easymock.tests.UsageVarargTest.differentLength":433,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":268,"org.easymock.tests2.CallbackTest.callback":42,"org.easymock.tests2.UsageConstraintsTest.equals":307,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":290,"org.easymock.tests.UsageTest.openCallCountByLastCall":476,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":429,"org.easymock.tests.UsageCallCountTest.tooFewCalls":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":148,"org.easymock.tests.UsageThrowableTest.throwCheckedException":364,"org.easymock.tests.MockingTest.testStrictClassMocking":434,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":427,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":271,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":47,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":129,"org.easymock.tests.ObjectMethodsTest.testHashCode":383,"org.easymock.tests2.NameTest.nameForNiceMock":124,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":30,"org.easymock.tests2.DependencyTest.testInterfaceMocking":32,"org.easymock.samples.ExampleTest.addDocument":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":346,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.AnswerTest.stubAnswer":128,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":160,"org.easymock.tests.UsageVarargTest.varargLongAccepted":237,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.floatType":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":196,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":34,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":416,"org.easymock.tests.UsageThrowableTest.noUpperLimit":157,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":97,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":320,"org.easymock.tests2.SerializationTest.test":40,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":54,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":179,"org.easymock.tests2.UsageConstraintsTest.testSame":102,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":283,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":337,"org.easymock.tests.GenericTest.testPackageScope":176,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":302,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":438,"org.easymock.tests2.NameTest.nameForMock":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":190,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":291,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":182,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":213,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":381,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":256,"org.easymock.tests2.MockedExceptionTest.testRealException":74,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":463,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":227,"org.easymock.tests2.NameTest.nameForStrictMock":123,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":315,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":321,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":115,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":377,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":313,"org.easymock.tests2.UsageStrictMockTest.range":282,"org.easymock.tests2.UsageConstraintsTest.lessThan":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":82,"org.easymock.tests2.CaptureTest.testCaptureRightOne":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":341,"org.easymock.tests2.UsageConstraintsTest.testOr":103,"org.easymock.tests.UsageRangeTest.combination":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":288,"org.easymock.tests.UsageTest.wrongArguments":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":338,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":191,"org.easymock.tests.UsageVarargTest.varargShortAccepted":236,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":395,"org.easymock.tests2.UsageConstraintsTest.cmpTo":107,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":327,"org.easymock.tests2.CaptureTest.testCaptureFromStub":286,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":402,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":314,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":192,"org.easymock.tests2.UsageConstraintsTest.constraints":98,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":369,"org.easymock.samples.ExampleTest.addAndChangeDocument":20,"org.easymock.tests.UsageStrictMockTest.testVerify":163,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":27,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":222,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":55,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":154,"org.easymock.tests.LimitationsTest.abstractClass":419,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":155,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":87,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":232}}]
