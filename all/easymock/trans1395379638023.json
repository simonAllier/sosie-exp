[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[66,61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[67,68,69],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.LastControl.NO_MATCHERS_FOUND"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:59","sourceCode":"return org.easymock.Mock","type":"CtReturnImpl"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[20,96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[98,99,100,101,102,103,104],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[23,24],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"actualTypeArgument","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[105,106,47,107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[67,68,69],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[2,110,111,112,113,114,115,116,117,118,119,47,48,120,121,122,123,124,125,126,127,128,129,130,131,65],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[132,133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[135,136],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[137,138,139,140,141,142,143,144,145,146,147,49,148,51,149,150,151,60,61,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[176,177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[178,2,179,110,111,180,5,20,181,182,183,184,185,186,187,188,137,112,113,189,97,114,115,190,116,117,118,119,191,192,47,48,193,120,121,194,195,122,123,124,196,197,198,199,200,150,125,126,127,128,201,202,129,130,131,65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[203,203,204,204,205,206,207,208,209,210,96,211,212,45,213,181,214,182,215,216,217,187,218,219,220,221,222,223,188,224,141,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[258,259,260,261,262,55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[258,263,259,260,261,264,203,203,204,204,205,262,265,266,0,1,2,110,111,77,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,34,35,38,39,40,41,42,43,44,267,268,269,270,176,177,208,209,271,210,96,211,45,181,214,182,216,272,273,274,46,275,276,183,277,278,279,184,185,280,281,186,282,283,187,219,221,222,188,137,136,112,189,284,138,285,286,190,139,140,141,142,89,225,226,227,228,287,229,230,231,288,233,234,235,236,289,290,291,292,293,294,191,295,143,237,239,296,297,298,299,300,48,120,121,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,144,145,146,147,49,148,195,321,322,323,324,122,123,124,50,51,325,326,327,242,243,244,328,329,330,331,332,149,248,197,333,334,335,150,125,336,151,201,53,54,55,56,57,337,257,58,59,60,61,62,63,64,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,65,338,339,172,340,341,342,173,174,343,344,345,346,347,348,349,350,351,352,175,353],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:46","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[104],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[333,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[105,106,47,107,108,109],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests2.UsageTest.argumentsOrdered":115,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":147,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":97,"org.easymock.tests2.StubTest.stubWithReturnValue":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":310,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":71,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":27,"org.easymock.tests2.SerializationTest.testAllMockedMethod":232,"org.easymock.tests2.DelegateToTest.testReturnException":290,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":145,"org.easymock.tests.MockingTest.testPartialClassMocking":242,"org.easymock.samples.SupportTest.voteForRemovals":262,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":106,"org.easymock.tests.MockClassControlTest.testToString":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":87,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":164,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":327,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":152,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":268,"org.easymock.tests.UsageExpectAndThrowTest.object":162,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":129,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":266,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":24,"org.easymock.tests2.DelegateToTest.testWrongClass":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":100,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":63,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":64,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":58,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.samples.ConstructorCalledMockTest.testTax":203,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":83,"org.easymock.tests.UsageStrictMockTest.range":120,"org.easymock.samples.ExampleTest.answerVsDelegate":263,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":280,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":225,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":163,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":256,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":221,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":186,"org.easymock.tests2.CaptureTest.testPrimitive":34,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":62,"org.easymock.tests.UsageTest.moreThanOneArgument":125,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":171,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":271,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":298,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":107,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":330,"org.easymock.tests2.CaptureTest.testCaptureNone":39,"org.easymock.tests.UsageUnorderedTest.message":65,"org.easymock.tests.UsageVerifyTest.twoReturns":124,"org.easymock.tests2.ThreadingTest.testThreadSafe":272,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":343,"org.easymock.tests.UsageTest.argumentsOrdered":128,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":53,"org.easymock.tests2.CaptureTest.testCapture_2617107":33,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":61,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":220,"org.easymock.tests2.UsageConstraintsTest.any":14,"org.easymock.tests2.StubTest.stub":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":146,"org.easymock.tests.UsageExpectAndThrowTest.longType":155,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":179,"org.easymock.tests2.SerializationTest.testClass":231,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":89,"org.easymock.tests.LimitationsTest.mockNativeMethod":248,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":77,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":320,"org.easymock.tests2.AnswerTest.answer":267,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":239,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":13,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":74,"org.easymock.tests2.CaptureTest.testAnd":31,"org.easymock.tests2.UsageTest.strictResetToDefault":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":213,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":180,"org.easymock.tests2.NameTest.nameForMocksControl":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":76,"org.easymock.tests2.MockedExceptionTest.testMockedException":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":279,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":151,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":347,"org.easymock.tests2.DelegateToTest.testDelegate":294,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":156,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":208,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":222,"org.easymock.tests.MockingTest.testNicePartialClassMocking":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":167,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":72,"org.easymock.tests2.CaptureTest.testCaptureLast":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":325,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":230,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":11,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":25,"org.easymock.tests.MockingTest.testTwoMocks":241,"org.easymock.tests2.CaptureTest.testCapture1_2446744":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":160,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":114,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":29,"org.easymock.tests.UsageThrowableTest.throwError":338,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":79,"org.easymock.tests.UsageStrictMockTest.differentMethods":121,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":86,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":274,"org.easymock.tests2.MockBuilderTest.testCreateMockString":224,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":95,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":300,"org.easymock.tests.UsageExpectAndThrowTest.floatType":154,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":20,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":270,"org.easymock.tests.ResultTest.createReturnResultToString":133,"org.easymock.tests.UsageVerifyTest.twoThrows":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":235,"org.easymock.samples.PartialClassMockTest.testGetArea":205,"org.easymock.tests.ResultTest.createDelegateResultToString":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":54,"org.easymock.samples.ExampleTest.voteAgainstRemoval":260,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":329,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":214,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":153,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests2.UsageConstraintsTest.testNotNull":28,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":174,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":69,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":219,"org.easymock.tests2.UsageTest.defaultResetToNice":285,"org.easymock.tests2.MockBuilderTest.testCreateMock":223,"org.easymock.samples.ExampleTest.voteAgainstRemovals":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":316,"org.easymock.tests.UsageVarargTest.differentLength":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":73,"org.easymock.tests2.CallbackTest.callback":191,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":80,"org.easymock.tests.UsageTest.openCallCountByLastCall":336,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":161,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":3,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":350,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":60,"org.easymock.tests.UsageCallCountTest.tooFewCalls":198,"org.easymock.tests.UsageOverloadedMethodTest.overloading":332,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":18,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":175,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":228,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":17,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":40,"org.easymock.tests.UsageThrowableTest.throwCheckedException":341,"org.easymock.tests.MockClassControlTest.testEquals":255,"org.easymock.tests2.EasyMockSupportClassTest.testAll":233,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":169,"org.easymock.tests2.CaptureTest.testCaptureAll":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":229,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":51,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":78,"org.easymock.tests2.UsageConstraintsTest.testMatches":19,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":287,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":299,"org.easymock.samples.ExampleTest.voteForRemovals":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":103,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":275,"org.easymock.tests2.NameTest.nameForNiceMock":118,"org.easymock.tests.UsageVarargTest.allKinds":52,"org.easymock.tests2.DependencyTest.testInterfaceMocking":265,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":102,"org.easymock.samples.BasicClassMockTest.testPrintContent":207,"org.easymock.tests2.DelegateToTest.testStubDelegate":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":173,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":178,"org.easymock.tests2.AnswerTest.stubAnswer":176,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":148,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":48,"org.easymock.tests2.UsageConstraintsTest.greaterThan":21,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":182,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.samples.ExampleTest.voteForRemoval":259,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":319,"org.easymock.tests.UsageExpectAndReturnTest.floatType":303,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":212,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":204,"org.easymock.tests.UsageThrowableTest.noUpperLimit":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":93,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":22,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":257,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":4,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":137,"org.easymock.tests2.SerializationTest.test":288,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":277,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":302,"org.easymock.tests2.UsageConstraintsTest.testSame":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":144,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":289,"org.easymock.tests2.CaptureTest.testCaptureFirst":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":278,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":190,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":308,"org.easymock.tests.GenericTest.testPackageScope":237,"org.easymock.tests2.CaptureTest.testCapture2_2446744":43,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":46,"org.easymock.tests2.UsageTest.moreThanOneArgument":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":346,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":188,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":92,"org.easymock.tests.GenericTest.testBridgedEquals":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":199,"org.easymock.tests2.NameTest.nameForMock":116,"org.easymock.tests.UsageExpectAndReturnTest.longType":304,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":170,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":337,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":26,"org.easymock.tests2.UsageStrictMockTest.differentMethods":111,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":296,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":305,"org.easymock.tests.UsageCallCountTest.tooManyCalls":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":323,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":197,"org.easymock.tests2.MockedExceptionTest.testRealException":142,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":82,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":59,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":226,"org.easymock.tests2.UsageConstraintsTest.testContains":16,"org.easymock.tests2.NameTest.nameForStrictMock":117,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":141,"org.easymock.tests2.UsageConstraintsTest.testFind":7,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":68,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":96,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":1,"org.easymock.tests.UsageExpectAndReturnTest.object":311,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":23,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":45,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":81,"org.easymock.tests2.UsageStrictMockTest.range":110,"org.easymock.tests2.UsageConstraintsTest.lessThan":30,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":88,"org.easymock.tests.UsageTest.exactCallCountByLastCall":201,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":50,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":183,"org.easymock.tests2.CaptureTest.testCaptureRightOne":41,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":344,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":209,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":352,"org.easymock.tests.UsageTest.wrongArguments":126,"org.easymock.tests.ResultTest.createThrowResultToString":134,"org.easymock.tests.MockClassControlTest.testHashCode":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":85,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":314,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":349,"org.easymock.tests2.UsageConstraintsTest.cmpTo":15,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":66,"org.easymock.tests2.UsageTest.openCallCountByLastCall":284,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":348,"org.easymock.tests2.CaptureTest.testCaptureFromStub":42,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":218,"org.easymock.tests.UsageTest.unexpectedCallWithArray":109,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":340,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":75,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":315,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":253,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":193,"org.easymock.tests2.UsageConstraintsTest.constraints":5,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":181,"org.easymock.samples.ExampleTest.addAndChangeDocument":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":333,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":70,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":236,"org.easymock.tests2.UsageTest.resumeIfFailure":286,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":55,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":307,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":246,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":56,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":185}}]
