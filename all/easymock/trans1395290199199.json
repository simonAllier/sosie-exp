[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[2],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[21,23,24,27,28,30,70,3,71,72,73,74,75,76,77,78,37,39,40,79,41,42,43,80,81,44,82,83,84,85,86,87,88,89,50,53,54,59,64,90,65,68],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[91,92,70,33,3,93,94,95,4,75,96,97],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[98,99,100,101],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[98,99,100],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,98,99,100,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,5,149,150,151,152,153,154,155,21,156,157,22,23,24,158,25,1,159,26,27,28,160,161,162,29,30,31,32,91,163,92,164,165,166,167,168,169,170,70,171,172,173,174,175,33,3,176,177,93,94,95,71,72,4,73,178,179,74,180,181,34,182,183,75,76,77,184,78,96,97,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,35,214,215,216,217,218,219,220,221,222,223,36,37,224,38,225,226,227,228,229,230,231,232,233,234,235,236,6,7,8,9,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,39,260,261,262,263,264,265,40,266,79,267,41,42,268,269,43,80,81,270,271,44,272,273,274,275,276,277,278,279,280,281,45,82,46,282,283,284,285,286,287,288,289,290,10,11,12,291,292,293,294,295,296,297,298,299,83,84,300,85,86,87,88,89,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,13,14,15,16,17,18,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,49,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,50,375,51,376,52,53,54,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,55,400,56,57,401,402,58,59,60,403,404,405,406,407,408,61,62,63,64,409,410,411,412,413,414,415,90,416,417,418,419,420,421,422,423,19,424,425,426,427,428,429,430,431,432,433,434,435,436,437,0,438,65,439,440,441,67,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,68,69,472,473,474,475,476,477,20,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,116,117,117,118,119,120,121,122,123,124,98,99,100,127,128,134,148,5,149,151,157,91,163,92,164,165,166,167,168,169,170,70,171,172,173,174,175,33,3,177,93,94,95,71,72,4,73,178,179,74,180,181,34,182,183,75,76,77,184,78,96,97,185,211,264,278,291,292,293,294,295,17,347,51,376,64,462,463,464,465,466,477,20,488,489],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,98,99,100,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,5,149,150,151,152,153,154,155,21,156,157,22,23,24,158,25,1,159,26,27,28,160,161,162,29,30,31,32,91,163,92,164,165,166,167,168,169,170,70,171,172,173,174,175,33,3,176,177,93,94,95,71,72,4,73,178,179,74,180,181,34,182,183,75,76,77,184,78,96,97,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,35,214,215,216,217,218,219,220,221,222,223,36,37,224,38,225,226,227,228,229,230,231,232,233,234,235,236,6,7,8,9,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,39,260,261,262,263,264,265,40,266,79,267,41,42,268,269,43,80,81,270,271,44,272,273,274,275,276,277,278,279,280,281,45,82,46,282,283,284,285,286,287,288,289,290,10,11,12,291,292,293,294,295,296,297,298,299,83,84,300,85,86,87,88,89,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,13,14,15,16,17,18,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,49,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,50,375,51,376,52,53,54,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,55,400,56,57,401,402,58,59,60,403,404,405,406,407,408,61,62,63,64,409,410,411,412,413,414,415,90,416,417,418,419,420,421,422,423,19,424,425,426,427,428,429,430,431,432,433,434,435,436,437,0,438,65,439,440,441,67,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,68,69,472,473,474,475,476,477,20,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[10,11,12,389,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[370],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:139","sourceCode":"return java.lang.Class<?>[][int].isPrimitive()","type":"CtReturnImpl"},"failures":[92,164,165,166,167,70,172,93,94,73,178,34,182,184,96,97,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[192],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[102,104,105,107,112,114,121,98,99,127,128,134,5,157,23,24,25,1,159,27,160,161,162,31,32,91,163,92,164,165,168,169,170,70,172,173,174,175,33,3,177,93,94,95,71,72,73,178,179,74,180,181,34,182,183,75,76,77,184,78,96,97,185,189,192,202,208,35,217,219,221,37,230,8,242,243,244,245,247,248,249,251,255,257,260,261,262,263,264,265,40,266,79,267,41,42,268,269,43,80,81,271,44,272,273,274,275,278,45,82,46,289,291,292,295,296,83,300,85,86,87,88,89,371,376,53,54,55,400,401,402,60,415,90,416,65,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,469,471,69,477,20,481,482,484,488,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[382],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[215],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[134,135,21,157,22,23,24,158,25,159,26,27,28,29,30,31,32,33,34,212,35,214,219,221,36,37,38,230,231,238,239,240,241,243,244,248,249,39,40,79,41,42,269,43,44,281,46,283,285,288,289,290,304,305,316,49,355,356,357,50,51,376,52,53,54,377,392,395,396,397,398,399,55,400,56,57,58,59,60,403,405,406,61,62,63,64,410,413,414,65,471,68,69],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[98,493,494,495,496,497,498,499,220,223,500,257,258],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[501],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[23,24,53,54,471],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[494,495,496,498,502,220,258],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[91,92,70,33,3,93,95,71,4,75,96],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[116,117,213,503,224,279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[504,505,506,507,51,56],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[73,477],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[382],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[116,116,117,117,157,171,174,175,177,93,94,95,179,180,181,182,183,96,97,185,291,292,295,310,311,312,313,314,376,462,463,464,465,466,477,488,489],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[5,287,294,83,85,86,87,88,89,301,302,303,17,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[75,76],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[148,31,386,433,439,440,441],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[116,116,117,117,98,223,257,258,279],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[103,120,122,124,286],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":30,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":426,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":28,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":118,"org.easymock.tests2.DelegateToTest.testReturnException":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":14,"org.easymock.tests.MockingTest.testPartialClassMocking":481,"org.easymock.tests.MockClassControlTest.testToString":355,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":237,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":196,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":317,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":494,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":72,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":291,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":298,"org.easymock.samples.ExampleTest.answerVsDelegate":103,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":397,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":486,"org.easymock.tests2.UsageConstraintsTest.testNull":93,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":273,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":43,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":360,"org.easymock.tests2.CaptureTest.testPrimitive":164,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":295,"org.easymock.tests.UsageTest.moreThanOneArgument":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":336,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":312,"org.easymock.tests.UsageTest.argumentsOrdered":59,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":348,"org.easymock.tests.UsageVarargTest.varargIntAccepted":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":462,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":212,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":235,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":466,"org.easymock.tests.ReplayStateInvalidUsageTest.times":387,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":134,"org.easymock.tests2.DependencyTest.testClassMocking":125,"org.easymock.tests2.AnswerTest.answer":251,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":433,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":155,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":394,"org.easymock.tests2.CaptureTest.testAnd":91,"org.easymock.tests2.UsageTest.strictResetToDefault":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":267,"org.easymock.tests2.DelegateToTest.testDelegate":124,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":332,"org.easymock.tests.LimitationsTest.mockFinalMethod":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":476,"org.easymock.tests2.DependencyTest.testClassMockingSupport":126,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":304,"org.easymock.tests2.CaptureTest.testCapture1_2446744":165,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":153,"org.easymock.tests.UsageThrowableTest.throwError":83,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":381,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":396,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":67,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":210,"org.easymock.samples.PartialClassMockTest.testGetArea":112,"org.easymock.tests.MockingTest.testInterfaceMocking":483,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":463,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":308,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":414,"org.easymock.tests2.UsageTest.niceToStrict":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":217,"org.easymock.tests2.MockBuilderTest.testCreateMock":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":137,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":326,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":41,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":393,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":403,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":296,"org.easymock.tests.UsageOverloadedMethodTest.overloading":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":207,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":180,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":453,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":415,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":74,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":170,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":340,"org.easymock.tests2.EasyMockSupportClassTest.testAll":189,"org.easymock.tests.MockClassControlTest.testEquals":359,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":372,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureAll":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":154,"org.easymock.tests.MockNameTest.defaultName":316,"org.easymock.tests2.UsageConstraintsTest.testMatches":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":313,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":379,"org.easymock.samples.ExampleTest.voteForRemovals":107,"org.easymock.tests.UsageVarargTest.allKinds":347,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":471,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":475,"org.easymock.samples.BasicClassMockTest.testPrintContent":111,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":88,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":21,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":499,"org.easymock.tests2.UsageConstraintsTest.greaterThan":182,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":46,"org.easymock.samples.ExampleTest.voteForRemoval":104,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":369,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":261,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":282,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":276,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":25,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":315,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":266,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":13,"org.easymock.tests2.CaptureTest.testCaptureFirst":173,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":79,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":32,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":449,"org.easymock.tests2.CaptureTest.testCapture2_2446744":172,"org.easymock.tests2.UsageTest.moreThanOneArgument":159,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":37,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":346,"org.easymock.tests.GenericTest.testBridgedEquals":374,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":62,"org.easymock.tests.UsageExpectAndReturnTest.longType":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":472,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":335,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":391,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":184,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":310,"org.easymock.tests.UsageCallCountTest.tooManyCalls":63,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":206,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":450,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":87,"org.easymock.tests.MockingTest.testNiceClassMocking":487,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":243,"org.easymock.tests.MockingTest.testClassMocking":479,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":404,"org.easymock.tests2.UsageConstraintsTest.testContains":179,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":8,"org.easymock.tests2.UsageConstraintsTest.testFind":177,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":416,"org.easymock.tests.MockTypeTest.fromEasyMockClass":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":151,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":50,"org.easymock.tests.UsageExpectAndReturnTest.object":452,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":495,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":342,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":412,"org.easymock.tests.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":490,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":258,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":458,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":337,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":226,"org.easymock.tests.MockClassControlTest.testHashCode":358,"org.easymock.tests2.EasyMockSupportTest.testVerify":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":199,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":350,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":152,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":47,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":211,"org.easymock.tests.UsageVarargTest.varargCharAccepted":341,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":361,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":438,"org.easymock.tests2.UsageTest.openCallCountByLastCall":160,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":81,"org.easymock.tests.DefaultClassInstantiatorTest.object":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":301,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":410,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":132,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":357,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":323,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":459,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":208,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":356,"org.easymock.tests2.UsageTest.resumeIfFailure":31,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":392,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":16,"org.easymock.tests2.StubTest.stubWithReturnValue":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":220,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":451,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":78,"org.easymock.tests2.SerializationTest.testAllMockedMethod":100,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":432,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":114,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":370,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":329,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":101,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":0,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":252,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":492,"org.easymock.tests.UsageExpectAndThrowTest.object":327,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":76,"org.easymock.tests2.DelegateToTest.testWrongClass":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":488,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":489,"org.easymock.samples.ConstructorCalledMockTest.testTax":116,"org.easymock.tests.UsageStrictMockTest.range":53,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":146,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":242,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":328,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":219,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":186,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":297,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":506,"org.easymock.tests2.CaptureTest.testCaptureNone":169,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":309,"org.easymock.tests.UsageUnorderedTest.message":64,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":66,"org.easymock.tests.UsageVerifyTest.twoReturns":69,"org.easymock.tests.UsageVarargTest.varargByteAccepted":345,"org.easymock.tests2.ThreadingTest.testThreadSafe":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":203,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":408,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":413,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":110,"org.easymock.tests2.CaptureTest.testCapture_2617107":92,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":294,"org.easymock.tests2.UsageConstraintsTest.any":73,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":386,"org.easymock.tests2.StubTest.stub":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":15,"org.easymock.tests.UsageExpectAndThrowTest.longType":320,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":385,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":22,"org.easymock.tests2.SerializationTest.testClass":98,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests.LimitationsTest.mockNativeMethod":469,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":461,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":131,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests2.NameTest.nameForMocksControl":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":133,"org.easymock.tests2.MockedExceptionTest.testMockedException":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":191,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":402,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":484,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":321,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":271,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":221,"org.easymock.tests.MockingTest.testNicePartialClassMocking":482,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":493,"org.easymock.tests2.CaptureTest.testCaptureLast":168,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":129,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":305,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":71,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":249,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":77,"org.easymock.tests.MockingTest.testTwoMocks":480,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":442,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":325,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":97,"org.easymock.samples.ExampleTest.removeNonExistingDocument":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":136,"org.easymock.tests.UsageStrictMockTest.differentMethods":54,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":227,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":364,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":262,"org.easymock.tests2.MockBuilderTest.testCreateMockString":38,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":193,"org.easymock.tests.UsageExpectAndThrowTest.floatType":319,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":254,"org.easymock.tests.UsageVerifyTest.twoThrows":68,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":259,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":202,"org.easymock.samples.ExampleTest.voteAgainstRemoval":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":307,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":82,"org.easymock.tests.LimitationsTest.privateConstructor":468,"org.easymock.tests2.UsageConstraintsTest.testNotNull":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":6,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":89,"org.easymock.tests2.UsageTest.defaultResetToNice":162,"org.easymock.samples.ExampleTest.voteAgainstRemovals":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":428,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":130,"org.easymock.tests.UsageVarargTest.differentLength":49,"org.easymock.tests2.CallbackTest.callback":39,"org.easymock.tests2.UsageConstraintsTest.equals":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":279,"org.easymock.tests.UsageTest.openCallCountByLastCall":401,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":293,"org.easymock.tests.UsageCallCountTest.tooFewCalls":406,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":245,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":299,"org.easymock.tests.UsageThrowableTest.throwCheckedException":86,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":507,"org.easymock.tests.MockingTest.testStrictClassMocking":478,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":20,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":135,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":244,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":388,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":247,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":256,"org.easymock.tests.ObjectMethodsTest.testHashCode":411,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":498,"org.easymock.tests2.NameTest.nameForNiceMock":240,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":264,"org.easymock.tests2.DependencyTest.testInterfaceMocking":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":496,"org.easymock.samples.ExampleTest.addDocument":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":204,"org.easymock.tests2.DelegateToTest.testStubDelegate":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":209,"org.easymock.tests2.AnswerTest.stubAnswer":255,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":376,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":222,"org.easymock.tests.UsageVarargTest.varargLongAccepted":344,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":460,"org.easymock.tests.UsageExpectAndReturnTest.floatType":444,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":257,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":117,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":183,"org.easymock.tests.UsageThrowableTest.noUpperLimit":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":234,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":175,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":141,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":166,"org.easymock.tests2.SerializationTest.test":99,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":443,"org.easymock.tests2.UsageConstraintsTest.testSame":94,"org.easymock.samples.SupportTest.addDocument":113,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":246,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":194,"org.easymock.tests.GenericTest.testPackageScope":371,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":233,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":485,"org.easymock.tests2.NameTest.nameForMock":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":454,"org.easymock.tests2.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":224,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":446,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":331,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":409,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":441,"org.easymock.tests2.MockedExceptionTest.testRealException":9,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":429,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":157,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":292,"org.easymock.tests2.NameTest.nameForStrictMock":239,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":216,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":149,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":274,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":145,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":75,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":365,"org.easymock.tests.ErrorMessageTest.testGetters":501,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":35,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests2.UsageConstraintsTest.lessThan":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":40,"org.easymock.tests2.CaptureTest.testCaptureRightOne":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":198,"org.easymock.tests2.UsageConstraintsTest.testOr":95,"org.easymock.tests.UsageRangeTest.combination":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":44,"org.easymock.tests.UsageTest.wrongArguments":57,"org.easymock.tests2.MockBuilderTest.testWithConstructor":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":195,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":418,"org.easymock.tests.UsageVarargTest.varargShortAccepted":343,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":61,"org.easymock.tests2.UsageConstraintsTest.cmpTo":178,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":161,"org.easymock.tests2.CaptureTest.testCaptureFromStub":171,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":380,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":214,"org.easymock.tests.UsageTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":407,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":456,"org.easymock.tests2.UsageConstraintsTest.constraints":33,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.samples.ExampleTest.addAndChangeDocument":109,"org.easymock.tests.UsageStrictMockTest.testVerify":378,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":115,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":375,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":473,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":464,"org.easymock.tests.LimitationsTest.abstractClass":467,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":465,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":42,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":338}}]
