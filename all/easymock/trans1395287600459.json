[{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[18,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[23,24],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[3,25,26,27,28,29,30,8,11,12],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[31,32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[50,51,52],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[53,54,55,56,0,57,58,3,59,60,61,62,63,64,65,66,67,68,33,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,19,87,88,89,90,91,92,20,93,94,95,96,21,97,98,99,100,101,102,103,104,105,106,22,107,4,5,108,109,6,110,111,112,113,114,115,116,117,118,119,120,121,122,123,11,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,14,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,45,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:381","sourceCode":"while (java.lang.Class<?> != null) {\n    for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n        final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n        if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n            java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:317","failures":[215,216,217,218],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[219,220,0,1,1,2,2,3,221,222,223,224,225,226,107,227,228,4,229,230,231,232,233,234,235,236,237,5,238,239,240,241,242,108,243,244,245,109,246,247,6,248,110,111,8,9,112,10,249,250,114,115,116,117,118,120,121,11,12,141,142,144,145,146,251,147,13,252,253,148,14,149,254,15,255,256,257,258,259,260,261,262,263,264,265,266,50,267,268,269,16,165,270,17,271,272,273,274,205,275,276,209,210,211],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[75,277,82,19,87,91,92,278,101],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[279,280],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[219,220,0,1,1,2,2,3,221,281,282,283,107,4,5,108,245,284,109,246,6,248,110,111,9,112,285,10,114,115,116,117,118,120,121,11,141,142,144,145,146,251,147,253,148,14,149,255,257,165,270,17,272,273,205,276,209,210,211],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[286,58,287],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[288],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[4],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[53,289,54,55,290,56,291,292,219,220,0,293,57,294,1,2,295,286,296,58,297,298,299,3,59,221,300,301,60,61,302,303,304,305,306,62,307,308,309,310,311,312,222,313,314,315,223,316,317,318,63,319,320,321,322,323,324,325,326,327,64,328,65,66,329,67,68,33,34,69,330,70,71,72,35,36,73,74,75,76,277,77,78,331,332,79,80,81,82,333,83,84,85,86,19,87,334,88,89,90,91,92,20,278,93,94,95,96,21,97,98,99,100,101,102,103,335,104,105,106,22,224,225,226,107,227,228,4,229,230,231,232,233,234,235,236,237,5,238,239,240,241,242,108,243,244,336,245,337,109,246,338,247,6,248,110,30,111,7,8,9,112,339,10,340,341,342,343,344,113,345,346,347,348,349,350,249,250,114,23,351,352,353,354,355,115,116,117,118,356,119,120,121,357,122,31,32,358,123,359,11,12,360,361,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,362,141,142,143,144,145,146,251,363,147,13,252,253,148,14,149,254,15,364,365,366,24,367,150,368,279,215,216,151,152,369,370,153,371,372,373,374,154,375,155,156,157,158,159,160,280,217,218,376,377,378,161,162,163,164,379,380,381,382,255,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,256,257,258,259,260,427,428,261,262,263,264,265,266,50,267,268,269,16,165,270,17,271,429,430,44,166,431,167,168,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,272,447,448,449,450,273,451,452,169,45,46,47,170,171,48,49,172,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,173,174,175,469,470,471,472,473,474,475,476,477,478,287,479,480,481,482,483,484,485,486,487,488,489,490,491,176,177,178,179,492,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,274,493,205,275,206,494,207,495,496,497,498,499,208,500,501,502,276,209,210,503,211,504,505,506,212,213,507,214,508],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":87,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":169,"org.easymock.tests2.UsageTest.argumentsOrdered":36,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":287,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":330,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":295,"org.easymock.tests2.DelegateToTest.testReturnException":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":384,"org.easymock.tests.MockingTest.testPartialClassMocking":209,"org.easymock.tests.MockClassControlTest.testToString":258,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":351,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":487,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":390,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":4,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":25,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":151,"org.easymock.tests2.UsageTest.wrongArguments":34,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":373,"org.easymock.samples.ExampleTest.answerVsDelegate":289,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":273,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":505,"org.easymock.tests2.UsageConstraintsTest.testNull":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":144,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":138,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":261,"org.easymock.tests2.CaptureTest.testPrimitive":77,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":153,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":409,"org.easymock.tests.UsageTest.moreThanOneArgument":45,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":380,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":422,"org.easymock.tests.UsageTest.argumentsOrdered":49,"org.easymock.tests.UsageVarargTest.varargIntAccepted":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":200,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":245,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":349,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":204,"org.easymock.tests.ReplayStateInvalidUsageTest.times":442,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests2.DependencyTest.testClassMocking":300,"org.easymock.tests2.AnswerTest.answer":122,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":485,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":325,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":448,"org.easymock.tests2.CaptureTest.testAnd":75,"org.easymock.tests2.UsageTest.strictResetToDefault":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":253,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":133,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":426,"org.easymock.tests2.DelegateToTest.testDelegate":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":405,"org.easymock.tests.LimitationsTest.mockFinalMethod":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":499,"org.easymock.tests2.DependencyTest.testClassMockingSupport":301,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":376,"org.easymock.tests2.CaptureTest.testCapture1_2446744":78,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":403,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":323,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":436,"org.easymock.tests.UsageThrowableTest.throwError":154,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":450,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":492,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":244,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":503,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":201,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":162,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":468,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":391,"org.easymock.tests2.UsageTest.niceToStrict":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":6,"org.easymock.tests2.MockBuilderTest.testCreateMock":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":309,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":399,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":37,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":134,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":447,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":218,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":453,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":371,"org.easymock.tests.UsageOverloadedMethodTest.overloading":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":242,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":24,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":21,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":191,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":173,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":96,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":51,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":413,"org.easymock.tests.MockClassControlTest.testEquals":428,"org.easymock.tests2.EasyMockSupportClassTest.testAll":107,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":407,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":38,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":497,"org.easymock.tests2.CaptureTest.testCaptureAll":76,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":324,"org.easymock.tests.MockNameTest.defaultName":389,"org.easymock.tests2.UsageConstraintsTest.testMatches":97,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":381,"org.easymock.samples.ExampleTest.voteForRemovals":56,"org.easymock.tests.UsageVarargTest.allKinds":421,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":498,"org.easymock.samples.BasicClassMockTest.testPrintContent":220,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":159,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":388,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":298,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":346,"org.easymock.tests2.UsageConstraintsTest.greaterThan":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":29,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":177,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":149,"org.easymock.samples.ExampleTest.voteForRemoval":54,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":269,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":125,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":451,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":315,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":251,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":255,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":131,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":383,"org.easymock.tests2.CaptureTest.testCaptureFirst":84,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":132,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":74,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":187,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":33,"org.easymock.tests2.CaptureTest.testCapture2_2446744":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":486,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":420,"org.easymock.tests.GenericTest.testBridgedEquals":271,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":460,"org.easymock.tests.UsageExpectAndReturnTest.longType":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":495,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":408,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":285,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":446,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":215,"org.easymock.tests.UsageCallCountTest.tooManyCalls":461,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":311,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":395,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":158,"org.easymock.tests.MockingTest.testNiceClassMocking":506,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":116,"org.easymock.tests.MockingTest.testClassMocking":502,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":454,"org.easymock.tests2.UsageConstraintsTest.testContains":95,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":284,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":88,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":175,"org.easymock.tests.MockTypeTest.fromEasyMockClass":449,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":429,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":321,"org.easymock.tests.UsageExpectAndReturnTest.object":190,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":137,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":415,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":26,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":466,"org.easymock.tests.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":507,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":423,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":43,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":410,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":196,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":366,"org.easymock.tests.MockClassControlTest.testHashCode":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":341,"org.easymock.tests2.EasyMockSupportTest.testVerify":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":235,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":424,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":217,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":322,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":336,"org.easymock.tests.UsageVarargTest.varargCharAccepted":414,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":262,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":491,"org.easymock.tests2.UsageTest.openCallCountByLastCall":70,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":140,"org.easymock.tests.DefaultClassInstantiatorTest.object":263,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":280,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":464,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":340,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":148,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":197,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":108,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":259,"org.easymock.tests2.UsageTest.resumeIfFailure":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":272,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":386,"org.easymock.tests2.StubTest.stubWithReturnValue":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":30,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":189,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":104,"org.easymock.tests2.SerializationTest.testAllMockedMethod":221,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":484,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":288,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":39,"org.easymock.samples.SupportTest.voteForRemovals":57,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":402,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":490,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":31,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":508,"org.easymock.tests.UsageExpectAndThrowTest.object":400,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":102,"org.easymock.tests2.DelegateToTest.testWrongClass":297,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":212,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":213,"org.easymock.tests.UsageStrictMockTest.range":167,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":316,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":110,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":444,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":372,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":163,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests.UsageUnorderedTest.message":462,"org.easymock.tests.UsageVerifyTest.twoReturns":207,"org.easymock.tests.UsageVarargTest.varargByteAccepted":419,"org.easymock.tests2.ThreadingTest.testThreadSafe":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":238,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":458,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":467,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":219,"org.easymock.tests2.CaptureTest.testCapture_2617107":277,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":40,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":370,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":441,"org.easymock.tests2.StubTest.stub":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndThrowTest.longType":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":385,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":50,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":440,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests.LimitationsTest.mockNativeMethod":205,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":199,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":283,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":304,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":329,"org.easymock.tests2.NameTest.nameForMocksControl":355,"org.easymock.tests2.MockedExceptionTest.testMockedException":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":228,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":394,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":211,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":320,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":111,"org.easymock.tests.MockingTest.testNicePartialClassMocking":210,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":146,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":302,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":377,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":121,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":92,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":103,"org.easymock.tests.MockingTest.testTwoMocks":276,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":398,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":106,"org.easymock.samples.ExampleTest.removeNonExistingDocument":291,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":438,"org.easymock.tests.UsageStrictMockTest.differentMethods":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":342,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":265,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":126,"org.easymock.tests2.MockBuilderTest.testCreateMockString":10,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":256,"org.easymock.tests.UsageExpectAndThrowTest.floatType":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":229,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":226,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":358,"org.easymock.tests.UsageVerifyTest.twoThrows":494,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":360,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":5,"org.easymock.samples.ExampleTest.voteAgainstRemoval":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":161,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":14,"org.easymock.tests.LimitationsTest.privateConstructor":493,"org.easymock.tests2.UsageConstraintsTest.testNotNull":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":160,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":249,"org.easymock.tests2.UsageTest.defaultResetToNice":72,"org.easymock.samples.ExampleTest.voteAgainstRemovals":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":195,"org.easymock.tests.UsageVarargTest.differentLength":416,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":303,"org.easymock.tests2.CallbackTest.callback":361,"org.easymock.tests2.UsageConstraintsTest.equals":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":13,"org.easymock.tests.UsageTest.openCallCountByLastCall":170,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":369,"org.easymock.tests.UsageCallCountTest.tooFewCalls":456,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":374,"org.easymock.tests.UsageThrowableTest.throwCheckedException":157,"org.easymock.tests.MockingTest.testStrictClassMocking":501,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":42,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":500,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":120,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":307,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":443,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":119,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":359,"org.easymock.tests.ObjectMethodsTest.testHashCode":465,"org.easymock.tests2.CompareToTest.testGreateOrEqual":18,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":128,"org.easymock.tests2.NameTest.nameForNiceMock":354,"org.easymock.tests2.DependencyTest.testInterfaceMocking":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":27,"org.easymock.samples.ExampleTest.addDocument":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":239,"org.easymock.tests2.DelegateToTest.testStubDelegate":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":243,"org.easymock.tests2.AnswerTest.stubAnswer":123,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":166,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":7,"org.easymock.tests.UsageVarargTest.varargLongAccepted":418,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageExpectAndReturnTest.floatType":182,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":198,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":348,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests.UsageThrowableTest.noUpperLimit":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":86,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":222,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":331,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":52,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":181,"org.easymock.tests2.UsageConstraintsTest.testSame":90,"org.easymock.samples.SupportTest.addDocument":293,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":356,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":230,"org.easymock.tests.GenericTest.testPackageScope":165,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":347,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":504,"org.easymock.tests2.NameTest.nameForMock":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":192,"org.easymock.tests2.UsageStrictMockTest.differentMethods":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":339,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":184,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":404,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":463,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":179,"org.easymock.tests2.MockedExceptionTest.testRealException":23,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":481,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":64,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":152,"org.easymock.tests2.NameTest.nameForStrictMock":353,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":247,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":145,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":223,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":101,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":266,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":109,"org.easymock.tests2.UsageStrictMockTest.range":65,"org.easymock.tests2.UsageConstraintsTest.lessThan":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":28,"org.easymock.tests2.CaptureTest.testCaptureRightOne":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":234,"org.easymock.tests2.UsageConstraintsTest.testOr":91,"org.easymock.tests.UsageRangeTest.combination":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":142,"org.easymock.tests.UsageTest.wrongArguments":47,"org.easymock.tests2.MockBuilderTest.testWithConstructor":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":231,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":193,"org.easymock.tests.UsageVarargTest.varargShortAccepted":417,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":267,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":459,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":71,"org.easymock.tests2.CaptureTest.testCaptureFromStub":333,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":435,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":246,"org.easymock.tests.UsageTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":457,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":194,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":431,"org.easymock.tests2.UsageConstraintsTest.constraints":19,"org.easymock.samples.ExampleTest.addAndChangeDocument":292,"org.easymock.tests.UsageStrictMockTest.testVerify":433,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":294,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":430,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":496,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":202,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":186,"org.easymock.tests.LimitationsTest.abstractClass":274,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":203,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":135}}]
