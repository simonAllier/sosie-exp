[{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[29,30,31,32,33,34],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[35,9,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,51,52,52,53,20,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[69,70,71,72,73,74,75],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[77,78,79,80,81,82,83,84,85,86,87,35,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,8,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,9,11,139,140,36,37,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,38,39,40,41,42,12,13,14,43,44,45,166,46,47,48,49,50,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,53,189,190,191,192,193,194,19,195,196,197,198,199,200,201,202,203,204,205,206,207,208,20,22,209,54,55,210,211,56,57,58,59,212,213,214,215,60,216,61,62,217,63,64,218,219,220,221,65,66,67,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[252,253],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[254,7,29,255,256,257,30,10,258,13,14,259,260,261,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[210,212,218,243],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[262],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[263],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[80,81,82,264,265,87,266,88,89,267,268,269,270,271,272,273,274,90,91,92,93,94,101,102,103,104,105,106,107,108,109,110,111,112,7,255,256,257,275,120,121,123,128,133,138,30,9,276,10,11,139,144,145,147,152,157,162,13,14,43,44,277,278,279,167,169,170,171,172,173,174,175,23,280,281,24,282,283,284,177,285,286,287,181,288,289,290,291,193,292,293,194,259,195,196,260,261,294,199,295,200,201,202,203,204,206,207,296,297,298,299,300,301,302,303,304,305,306,307,208,20,308,21,22,209,211,57,212,213,214,215,216,217,218,219,220,309,221,65,222,310,223,224,229,311,231,232,233,312,234,235,313,314,236,237,238,315,240,241,242,243,244,245,246,247,248,249,250,251],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[186,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[317,318,319,320],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[321,196,202,217],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[7,29,255,256,257,30,10,258,13,14,259,260,261,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[322,323,324,325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[326,266,89,267,268,269,270,271,274,99,327,328,329,317,318,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,13,278,168,53,293,330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":211,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":327,"org.easymock.tests2.UsageTest.argumentsOrdered":261,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":98,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":196,"org.easymock.tests2.StubTest.stubWithReturnValue":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":69,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":221,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":151,"org.easymock.tests2.SerializationTest.testAllMockedMethod":233,"org.easymock.tests2.DelegateToTest.testReturnException":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":96,"org.easymock.tests.MockingTest.testPartialClassMocking":91,"org.easymock.samples.SupportTest.voteForRemovals":281,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":130,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":118,"org.easymock.tests.UsageExpectAndThrowTest.object":128,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":15,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":292,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":219,"org.easymock.tests2.DelegateToTest.testWrongClass":315,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":70,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":36,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":37,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":213,"org.easymock.tests2.UsageTest.wrongArguments":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":43,"org.easymock.samples.ConstructorCalledMockTest.testTax":51,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":85,"org.easymock.samples.ExampleTest.answerVsDelegate":170,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":312,"org.easymock.tests2.UsageConstraintsTest.testNull":57,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":129,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":304,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":285,"org.easymock.tests2.CaptureTest.testPrimitive":244,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":45,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":256,"org.easymock.tests.UsageTest.moreThanOneArgument":8,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":137,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":48,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":31,"org.easymock.tests2.CaptureTest.testCaptureNone":248,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":108,"org.easymock.tests2.ThreadingTest.testThreadSafe":179,"org.easymock.tests.UsageTest.argumentsOrdered":257,"org.easymock.tests.UsageVarargTest.varargIntAccepted":103,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":82,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":283,"org.easymock.tests2.CaptureTest.testCapture_2617107":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":74,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":176,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":278,"org.easymock.tests2.UsageConstraintsTest.any":214,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":178,"org.easymock.tests2.StubTest.stub":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":97,"org.easymock.tests.UsageExpectAndThrowTest.longType":121,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":321,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":311,"org.easymock.tests2.SerializationTest.testClass":231,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":310,"org.easymock.tests.LimitationsTest.mockNativeMethod":94,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":262,"org.easymock.tests2.AnswerTest.answer":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":185,"org.easymock.tests2.CaptureTest.testAnd":241,"org.easymock.tests2.UsageTest.strictResetToDefault":194,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":205,"org.easymock.tests2.NameTest.nameForMocksControl":192,"org.easymock.tests2.MockedExceptionTest.testMockedException":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":164,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":328,"org.easymock.tests2.DelegateToTest.testDelegate":240,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":316,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":122,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":286,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":133,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":203,"org.easymock.tests2.CaptureTest.testCaptureLast":247,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":325,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":237,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":212,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":117,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":142,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":183,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":260,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":66,"org.easymock.tests.UsageThrowableTest.throwError":266,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":50,"org.easymock.tests.UsageExpectAndThrowTest.floatType":120,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":217,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":224,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":290,"org.easymock.samples.PartialClassMockTest.testGetArea":282,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":39,"org.easymock.samples.ExampleTest.voteAgainstRemoval":172,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":206,"org.easymock.tests2.UsageTest.niceToStrict":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":119,"org.easymock.tests2.UsageConstraintsTest.testNotNull":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":271,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":177,"org.easymock.tests2.UsageTest.defaultResetToNice":197,"org.easymock.samples.ExampleTest.voteAgainstRemovals":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":157,"org.easymock.tests2.CallbackTest.callback":207,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":127,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":301,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":54,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":83,"org.easymock.tests.UsageCallCountTest.tooFewCalls":80,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":274,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":313,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":153,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":216,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":249,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":86,"org.easymock.tests.UsageThrowableTest.throwCheckedException":268,"org.easymock.tests2.EasyMockSupportClassTest.testAll":288,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":112,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":135,"org.easymock.tests2.CaptureTest.testCaptureAll":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":184,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":236,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":26,"org.easymock.tests2.UsageConstraintsTest.testMatches":62,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":314,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":49,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":5,"org.easymock.samples.ExampleTest.voteForRemovals":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":73,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":181,"org.easymock.tests2.NameTest.nameForNiceMock":191,"org.easymock.tests.UsageVarargTest.allKinds":110,"org.easymock.tests2.DependencyTest.testInterfaceMocking":193,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":72,"org.easymock.samples.BasicClassMockTest.testPrintContent":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":116,"org.easymock.samples.ExampleTest.addDocument":173,"org.easymock.tests2.DelegateToTest.testStubDelegate":239,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":270,"org.easymock.tests2.AnswerTest.stubAnswer":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.UsageConstraintsTest.greaterThan":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":163,"org.easymock.tests.UsageVarargTest.varargLongAccepted":107,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":139,"org.easymock.samples.ExampleTest.voteForRemoval":171,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":180,"org.easymock.tests.UsageExpectAndReturnTest.floatType":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":222,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":52,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.UsageThrowableTest.noUpperLimit":88,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":64,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":293,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":87,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":55,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":245,"org.easymock.tests2.SerializationTest.test":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":298,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":89,"org.easymock.tests2.UsageConstraintsTest.testSame":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":143,"org.easymock.samples.SupportTest.addDocument":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":95,"org.easymock.tests2.CaptureTest.testCaptureFirst":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":299,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":294,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":149,"org.easymock.tests.GenericTest.testPackageScope":111,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":287,"org.easymock.tests2.UsageTest.moreThanOneArgument":19,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":1,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":264,"org.easymock.tests2.NameTest.nameForMock":189,"org.easymock.tests.UsageExpectAndReturnTest.longType":145,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":154,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":309,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":6,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":146,"org.easymock.tests.UsageCallCountTest.tooManyCalls":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":132,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":165,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":79,"org.easymock.tests2.MockedExceptionTest.testRealException":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":3,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":44,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":78,"org.easymock.tests2.UsageConstraintsTest.testContains":60,"org.easymock.tests2.NameTest.nameForStrictMock":190,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":229,"org.easymock.tests2.UsageConstraintsTest.testFind":56,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":202,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":187,"org.easymock.tests.UsageExpectAndReturnTest.object":152,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":218,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":204,"org.easymock.tests.ErrorMessageTest.testGetters":17,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":67,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":71,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":105,"org.easymock.tests.UsageTest.exactCallCountByLastCall":275,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":2,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":297,"org.easymock.tests2.CaptureTest.testCaptureRightOne":250,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":252,"org.easymock.tests2.UsageConstraintsTest.testOr":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":75,"org.easymock.tests.UsageRangeTest.combination":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":295,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":158,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":273,"org.easymock.tests.UsageTest.wrongArguments":255,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":166,"org.easymock.tests2.EasyMockSupportTest.testVerify":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":272,"org.easymock.tests.UsageVarargTest.varargShortAccepted":106,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":182,"org.easymock.tests2.UsageConstraintsTest.cmpTo":215,"org.easymock.tests.UsageVarargTest.varargCharAccepted":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":326,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":208,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":330,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":329,"org.easymock.tests2.CaptureTest.testCaptureFromStub":68,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":267,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":81,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":27,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":156,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":276,"org.easymock.tests2.UsageConstraintsTest.constraints":210,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":124,"org.easymock.samples.ExampleTest.addAndChangeDocument":175,"org.easymock.tests.UsageStrictMockTest.testVerify":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":159,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":291,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":114,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":246,"org.easymock.tests2.UsageTest.resumeIfFailure":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":148,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":302,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":18,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":102}}]
