[{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[14,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[34,35,36,37,38,19,39,40,20,21,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,22,62,63,64,65,66,67,24,68,69,25,26,70,71,72,73,74,28,29,30,31,75,76,32,77],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[2,3,4,6,7,78,79,80,81,82,83,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0,0,1,1,84,2,3,85,4,86,5,87,7,88,11,89,90,12,13,91,92,93,14,94,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[46,96,90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[97,98,99,0,1,100,101,102,103,104,105,106,84,107,108,109,110,111,112,113,114,115,116,117,85,118,119,120,87,121,88,122,123,34,124,125,126,127,81,128,129,130,82,35,131,36,37,132,38,19,133,134,39,40,135,20,21,136,41,137,138,139,140,141,142,143,144,42,145,43,146,147,148,149,150,151,48,152,153,154,155,49,156,157,158,159,160,50,161,162,163,164,165,166,167,51,168,169,170,171,172,173,174,175,176,177,178,179,180,181,96,182,89,183,12,184,52,53,185,54,55,56,57,58,186,187,188,189,59,190,92,93,191,192,193,60,61,22,62,194,195,196,197,198,199,200,201,202,203,204,205,206,207,14,16,17,208,63,209,210,64,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,65,226,227,227,66,67,23,24,68,69,25,26,70,228,229,230,231,232,233,234,71,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,72,250,251,252,27,253,254,255,256,257,258,259,260,261,262,263,264,265,73,74,28,29,266,267,268,30,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,31,75,76,32,77,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[322,323,23,31,324,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[150],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[97,98,99,0,0,1,1,100,101,102,103,104,105,326,106,84,107,108,109,110,111,112,113,114,327,328,329,330,331,115,332,333,334,335,336,337,116,117,338,339,85,118,119,120,5,87,121,88,340,341,342,343,344,122,345,346,347,348,349,350,351,123,34,124,352,125,126,127,81,128,129,130,82,35,353,354,355,356,357,131,36,37,132,38,19,133,134,39,40,135,20,21,136,41,137,138,139,140,141,142,143,358,144,42,359,360,145,43,146,44,45,46,47,147,148,149,150,361,151,48,152,153,154,155,362,49,156,157,158,159,160,50,161,162,163,164,165,166,167,51,168,169,170,171,172,173,174,175,176,177,178,179,180,181,11,363,96,182,89,183,364,90,12,13,184,52,53,185,54,55,56,57,58,186,187,188,189,59,365,366,367,190,368,369,92,370,371,372,373,374,375,376,377,378,93,379,380,381,382,383,191,384,385,192,193,60,61,22,62,194,195,196,197,198,199,200,201,202,203,204,205,206,207,14,16,17,386,387,388,389,390,391,392,393,394,208,63,209,210,64,211,212,213,214,215,395,396,397,216,217,218,219,94,220,221,95,398,399,400,401,402,403,404,405,222,223,224,225,65,226,66,67,23,24,68,69,25,26,70,228,229,230,231,232,233,234,71,235,236,237,238,239,240,406,407,408,409,410,411,412,413,414,241,242,243,244,245,246,247,415,416,417,248,249,72,250,418,251,252,419,420,27,421,422,423,253,254,424,255,425,426,427,428,429,430,256,257,258,431,259,260,261,262,263,264,265,73,74,28,29,266,432,267,268,433,434,435,436,437,30,438,439,440,441,442,443,444,445,446,447,448,449,450,451,269,452,453,454,455,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,290,291,292,293,294,480,481,482,483,484,485,486,487,295,296,297,298,31,75,76,32,77,299,488,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,489],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[115,116,118,119,120,121,88,122,37,19,133,134,135,20,21,41,149,170,171,172,173,180,96,192,61,22,62,197,199,200,202,203,211,212,213,214,215,216,217,218,219,66,23,24,25,26,70,28,29,30,297,31,76,32,77],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[410,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[353,143,144,147,148,149,150,151,48,152,153,154,155,362,49,156,157,158,159,160,50,161,162,163,164,165,166,167,51,168,169,181,184,52,53,185,54,55,56,57,58,186,187,188,189,59,60,208,63,209,210,64,65,228,229,230,231,232,73,30,295,296,31,75,300,301],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[172,218,226,270,271,278,285,293,301,302,303,310,317],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[38,60,22,62,67,493,494,495,496,74,28,29,30,75,32,77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[38,19,20,21,44,45,46,47,60,22,62,67,24,25,26,420,74,28,29,30,31,75,32,77],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[497],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:161","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[372],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[353,143,144,147,148,149,150,151,48,152,153,154,155,362,49,156,157,158,159,160,50,161,162,163,164,165,166,167,51,168,169,181,184,52,53,185,54,55,56,57,58,186,187,188,189,59,60,208,63,209,210,64,65,228,229,230,231,232,73,30,295,296,31,75,300,301],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[98,99,0,0,1,1,84,116,498,117,338,339,85,118,119,120,5,87,121,499,88,126,127,81,128,130,82,354,355,500,139,140,141,174,175,177,178,179,180,181,11,363,96,182,89,183,364,90,12,13,365,366,367,190,368,369,92,370,371,372,373,374,375,376,377,378,93,379,380,381,382,383,191,384,385,14,17,389,392,94,220,221,95,398,405,240,406,407,408,409,410,411,412,421,422,423,253,254,255,427,450,451,269,452,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[406,407,408,409,411,412],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[155],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[0,0,1,1,86,5,11,12,13,14],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[14,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[36,37,40,210,65,66,69,233,71,235,236,237,238,239,72,252,28,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:36","failures":[97,98,99,0,1,100,101,102,103,104,105,326,106,84,107,108,109,110,111,112,113,114,327,328,329,330,331,115,332,333,334,335,336,337,116,2,117,338,3,339,85,118,119,4,120,86,5,87,121,7,88,340,341,342,343,344,122,345,346,347,348,349,350,351,123,34,124,352,125,126,127,81,128,501,129,130,82,83,35,353,354,502,503,504,355,356,357,131,36,37,132,38,19,133,134,39,40,135,20,21,136,41,505,506,137,138,139,140,141,142,143,358,144,42,359,360,145,43,146,507,44,45,46,47,147,148,149,150,361,151,48,152,153,154,155,362,49,156,157,158,159,160,50,161,162,163,164,165,166,167,51,168,169,170,171,172,173,174,175,176,177,178,179,180,508,181,11,363,96,182,89,183,364,90,12,13,91,184,52,53,185,54,55,56,57,58,186,187,188,189,59,365,366,367,190,368,369,92,370,371,372,373,374,375,376,377,378,93,379,380,381,382,383,191,384,385,192,193,60,61,22,62,194,195,196,197,198,199,200,201,202,203,204,205,206,207,14,16,17,386,387,388,389,509,510,390,391,392,393,394,208,63,209,210,64,211,212,213,214,215,395,396,397,216,217,218,219,94,220,221,95,398,399,400,401,402,403,404,405,222,223,224,225,65,226,66,67,23,24,68,69,25,26,70,228,229,230,231,232,233,234,71,235,236,237,238,239,240,511,406,407,408,409,410,411,512,412,413,414,241,242,243,244,245,246,247,415,416,417,248,249,72,250,418,251,252,419,420,27,421,422,423,253,254,424,255,425,426,427,428,429,430,256,257,258,431,259,260,261,262,263,264,265,73,74,28,29,266,432,267,268,433,434,435,436,437,30,438,439,440,441,442,443,444,445,446,447,448,449,450,451,269,452,453,454,455,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,290,291,292,293,294,513,480,481,482,483,484,485,486,487,295,296,297,298,31,75,76,32,77,299,488,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,489],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[20,361,25],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[478],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[48,362,163,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[396,428,429,430,465,467,476,477,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[514],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[0,0,1,1,86,5,11,12,13,14],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[406,407,408,409,411,412],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[94,398],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":150,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":466,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":134,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":107,"org.easymock.tests2.DelegateToTest.testReturnException":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":223,"org.easymock.tests.MockingTest.testPartialClassMocking":253,"org.easymock.tests.MockClassControlTest.testToString":482,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":507,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":270,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":493,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":138,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":155,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":208,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":218,"org.easymock.samples.ExampleTest.answerVsDelegate":101,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":392,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":426,"org.easymock.tests2.UsageConstraintsTest.testNull":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":177,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":204,"org.easymock.tests2.CaptureTest.testPrimitive":185,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":64,"org.easymock.tests.UsageTest.moreThanOneArgument":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":289,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":292,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":433,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.UsageVarargTest.varargIntAccepted":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":228,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":503,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":349,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":458,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":232,"org.easymock.tests.ReplayStateInvalidUsageTest.times":446,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.DependencyTest.testClassMocking":505,"org.easymock.tests2.AnswerTest.answer":42,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":473,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":173,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":510,"org.easymock.tests2.CaptureTest.testAnd":184,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":267,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":437,"org.easymock.tests2.DelegateToTest.testDelegate":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":285,"org.easymock.tests.LimitationsTest.mockFinalMethod":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":215,"org.easymock.tests2.DependencyTest.testClassMockingSupport":506,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":453,"org.easymock.tests2.CaptureTest.testCapture1_2446744":54,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":508,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":171,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":440,"org.easymock.tests.UsageThrowableTest.throwError":233,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":391,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":513,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":294,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":8,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":385,"org.easymock.samples.PartialClassMockTest.testGetArea":84,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":441,"org.easymock.tests.MockingTest.testInterfaceMocking":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":429,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":405,"org.easymock.tests2.UsageTest.niceToStrict":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":85,"org.easymock.tests2.MockBuilderTest.testCreateMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":279,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":322,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":509,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":417,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":413,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":216,"org.easymock.tests.UsageOverloadedMethodTest.overloading":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":159,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":252,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":313,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":490,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":158,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":186,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":431,"org.easymock.tests.MockClassControlTest.testEquals":486,"org.easymock.tests2.EasyMockSupportClassTest.testAll":190,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":221,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":172,"org.easymock.tests2.CaptureTest.testCaptureAll":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":213,"org.easymock.tests.MockNameTest.defaultName":489,"org.easymock.tests2.UsageConstraintsTest.testMatches":160,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":293,"org.easymock.samples.ExampleTest.voteForRemovals":105,"org.easymock.tests.UsageVarargTest.allKinds":73,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":74,"org.easymock.samples.BasicClassMockTest.testPrintContent":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":214,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":238,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":346,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":352,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":512,"org.easymock.tests2.UsageConstraintsTest.greaterThan":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":432,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":183,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":412,"org.easymock.samples.ExampleTest.voteForRemoval":102,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":111,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":364,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":504,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":180,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":240,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":197,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":222,"org.easymock.tests2.CaptureTest.testCaptureFirst":59,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":198,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":41,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":27,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":309,"org.easymock.tests2.CaptureTest.testCapture2_2446744":189,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":113,"org.easymock.tests2.UsageTest.moreThanOneArgument":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":474,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":121,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":265,"org.easymock.tests.GenericTest.testBridgedEquals":398,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":246,"org.easymock.tests.UsageExpectAndReturnTest.longType":305,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":211,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":288,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":399,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":166,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":247,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":275,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":237,"org.easymock.tests.MockingTest.testNiceClassMocking":427,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":127,"org.easymock.tests.MockingTest.testClassMocking":422,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":498,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":414,"org.easymock.tests2.UsageConstraintsTest.testContains":157,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":141,"org.easymock.tests2.UsageConstraintsTest.testFind":151,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":72,"org.easymock.tests.MockTypeTest.fromEasyMockClass":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":144,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndReturnTest.object":312,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":335,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":514,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":203,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":260,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":403,"org.easymock.tests.UsageTest.exactCallCountByLastCall":70,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":434,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":395,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":256,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":318,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":251,"org.easymock.tests.MockClassControlTest.testHashCode":485,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":341,"org.easymock.tests2.EasyMockSupportTest.testVerify":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":376,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":435,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":416,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":170,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":353,"org.easymock.tests.UsageVarargTest.varargCharAccepted":259,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":511,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":479,"org.easymock.tests2.UsageTest.openCallCountByLastCall":39,"org.easymock.tests.DefaultClassInstantiatorTest.object":406,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":206,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":415,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":401,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":33,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":377,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":340,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":484,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":182,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":276,"org.easymock.tests.CapturesMatcherTest.test":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":386,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":191,"org.easymock.tests2.UsageTest.resumeIfFailure":136,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":502,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":225,"org.easymock.tests2.StubTest.stubWithReturnValue":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":167,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":311,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":472,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":10,"org.easymock.samples.SupportTest.voteForRemovals":109,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":323,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":282,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":478,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":359,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":397,"org.easymock.tests.UsageExpectAndThrowTest.object":280,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":164,"org.easymock.tests2.DelegateToTest.testWrongClass":124,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":300,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":301,"org.easymock.tests.UsageStrictMockTest.range":32,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":356,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":281,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":119,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":448,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":217,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":324,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":430,"org.easymock.tests2.CaptureTest.testCaptureNone":58,"org.easymock.tests.UsageUnorderedTest.message":30,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":497,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageVarargTest.varargByteAccepted":264,"org.easymock.tests2.ThreadingTest.testThreadSafe":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":379,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":244,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":404,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":98,"org.easymock.tests2.CaptureTest.testCapture_2617107":53,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":476,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":210,"org.easymock.tests2.UsageConstraintsTest.any":49,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":445,"org.easymock.tests2.StubTest.stub":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":224,"org.easymock.tests.UsageExpectAndThrowTest.longType":273,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":410,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":444,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":61,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests.LimitationsTest.mockNativeMethod":269,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":95,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":321,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":329,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests2.NameTest.nameForMocksControl":47,"org.easymock.tests2.MockedExceptionTest.testMockedException":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":369,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":69,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":274,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":358,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":174,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":120,"org.easymock.tests.MockingTest.testNicePartialClassMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":179,"org.easymock.tests2.CaptureTest.testCaptureLast":57,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":454,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":154,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":82,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":165,"org.easymock.tests.MockingTest.testTwoMocks":423,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":278,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":168,"org.easymock.samples.ExampleTest.removeNonExistingDocument":326,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":442,"org.easymock.tests.UsageStrictMockTest.differentMethods":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":342,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":408,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":112,"org.easymock.tests2.MockBuilderTest.testCreateMockString":88,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":480,"org.easymock.tests.UsageExpectAndThrowTest.floatType":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":145,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":91,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":93,"org.easymock.samples.ExampleTest.voteAgainstRemoval":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":467,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":428,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":89,"org.easymock.tests.LimitationsTest.privateConstructor":451,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":79,"org.easymock.tests2.UsageConstraintsTest.testNotNull":51,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":239,"org.easymock.tests2.UsageTest.defaultResetToNice":135,"org.easymock.samples.ExampleTest.voteAgainstRemovals":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":317,"org.easymock.tests.UsageVarargTest.differentLength":261,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":328,"org.easymock.tests2.CallbackTest.callback":35,"org.easymock.tests2.UsageConstraintsTest.equals":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":11,"org.easymock.tests.UsageTest.openCallCountByLastCall":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":209,"org.easymock.tests.UsageCallCountTest.tooFewCalls":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":219,"org.easymock.tests.UsageThrowableTest.throwCheckedException":236,"org.easymock.tests.MockingTest.testStrictClassMocking":421,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":325,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":130,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":296,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":447,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":129,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":146,"org.easymock.tests.ObjectMethodsTest.testHashCode":402,"org.easymock.tests2.CompareToTest.testGreateOrEqual":15,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":114,"org.easymock.tests2.NameTest.nameForNiceMock":46,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.samples.ExampleTest.addDocument":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.DelegateToTest.testStubDelegate":34,"org.easymock.tests2.AnswerTest.stubAnswer":43,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":75,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":86,"org.easymock.tests.UsageVarargTest.varargLongAccepted":263,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.floatType":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":419,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":162,"org.easymock.tests.UsageThrowableTest.noUpperLimit":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":348,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":148,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":354,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":55,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":491,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":407,"org.easymock.tests2.UsageConstraintsTest.testSame":152,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":303,"org.easymock.samples.SupportTest.addDocument":108,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":501,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":371,"org.easymock.tests.GenericTest.testPackageScope":220,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":347,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":425,"org.easymock.tests2.NameTest.nameForMock":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":314,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":7,"org.easymock.tests2.UsageStrictMockTest.differentMethods":62,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":284,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":400,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":268,"org.easymock.tests2.MockedExceptionTest.testRealException":142,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":357,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":469,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":449,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":63,"org.easymock.tests2.NameTest.nameForStrictMock":45,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":339,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":143,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":355,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":409,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":163,"org.easymock.tests.ErrorMessageTest.testGetters":495,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":117,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.UsageConstraintsTest.lessThan":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":344,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":196,"org.easymock.tests2.CaptureTest.testCaptureRightOne":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":375,"org.easymock.tests2.UsageConstraintsTest.testOr":153,"org.easymock.tests.UsageRangeTest.combination":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":175,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests2.MockBuilderTest.testWithConstructor":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":372,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":457,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":315,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":411,"org.easymock.tests.UsageVarargTest.varargShortAccepted":262,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":245,"org.easymock.tests2.UsageConstraintsTest.cmpTo":156,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":459,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests2.CaptureTest.testCaptureFromStub":188,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":439,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":338,"org.easymock.tests.UsageTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":243,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":316,"org.easymock.tests2.UsageConstraintsTest.constraints":149,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":76,"org.easymock.samples.ExampleTest.addAndChangeDocument":106,"org.easymock.tests.UsageStrictMockTest.testVerify":488,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":97,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":212,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":56,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":230,"org.easymock.tests.LimitationsTest.abstractClass":450,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":308,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":231,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":201,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":257}}]
