[{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[13],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,1,30,2,3,4,5,6,7,31,8,10,11,32,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,13,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[332,333,422],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[130,131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[490],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[185,351],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[22,23,24,25,1,44,51,52,61,144,149,175,182,188,191,200,205,212,217,224,225,226,227,267,268,269,270,271,272,273,274,275,276,277,278,280,305,314,315,316,317,318,319,320,321,398,403,442,455,459,460,461,462,463,465,466,467,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[128,491],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[152],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[281,285],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[197],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[70,72,73,493,494,495,496,497,498,194,300,302,303,332,333,499,500,501,430,441,470,471,472],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[55,68,71,72,73,112,127,139,150,152,177,188,189,191,192,195,196,197,201,202,203,204,206,210,211,214,259,502,263,297,299,301,302,303,503,501,391,403,404,405,430,440,442,443,446,447,448,471,472],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:99","sourceCode":"return ((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","type":"CtReturnImpl"},"failures":[121,181,214,216,259,504,474,478,484,485,487,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[150,151,181,505,506,507],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[508,100,480,481],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.RecordState:243","failures":[70,72,73,78,81,91,97,100,138,139,140,141,142,143,146,150,151,152,158,160,161,162,163,165,166,167,173,174,177,181,183,185,189,220,250,257,258,259,260,261,262,265,288,293,300,302,303,327,328,329,330,338,339,341,365,366,367,368,369,370,373,374,376,377,378,380,381,382,383,384,431,432,433,434,435,438,474,478,482,484,485,487],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[70,73,74,194,300,303,304,441,454,470,471,472],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[322],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[170,192,199,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,306,308,309,310,311,312,313,349,360,361,362,409,440,445,452,458,471],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,1,30,2,3,4,5,6,7,31,8,10,11,32,12,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,107,108,109,110,111,112,113,114,115,13,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,509,156,157,158,159,160,161,162,163,164,165,166,167,168,510,511,512,513,514,515,169,170,171,172,173,174,175,177,178,180,181,182,183,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[51,52,53,54,170,192,199,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,290,291,294,295,296,306,308,309,310,311,312,313,345,346,347,348,349,350,360,361,362,364,440,445,452,458,471],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[494,538,299,539,499,442],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[19,21,22,23,24,25,26,27,28,1,30,2,3,4,5,6,7,31,8,10,11,32,12,33,36,37,38,44,51,52,53,54,55,61,68,69,70,71,72,73,74,78,81,91,97,100,110,111,112,113,115,13,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,149,150,151,152,155,156,157,158,159,160,161,162,163,165,166,167,169,170,173,174,175,177,181,182,183,185,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,257,258,259,261,262,288,289,290,291,292,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,323,324,327,328,329,330,331,338,339,341,345,346,347,348,349,350,492,492,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,399,400,401,402,403,404,405,430,431,432,433,434,435,438,440,441,442,443,444,445,446,447,448,449,451,452,455,456,457,458,459,460,461,462,463,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,489],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[314,319,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[139,338],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":440,"org.easymock.tests2.UsageTest.argumentsOrdered":202,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":215,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":416,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":197,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":477,"org.easymock.tests2.DelegateToTest.testReturnException":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":346,"org.easymock.tests.MockingTest.testPartialClassMocking":338,"org.easymock.tests.MockClassControlTest.testToString":316,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":14,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":85,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":228,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":174,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":537,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":119,"org.easymock.tests2.UsageTest.wrongArguments":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":288,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":226,"org.easymock.samples.ExampleTest.answerVsDelegate":483,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":356,"org.easymock.tests2.UsageConstraintsTest.testNull":13,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":343,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":141,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":214,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":321,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":292,"org.easymock.tests.UsageTest.moreThanOneArgument":441,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":247,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":329,"org.easymock.tests.UsageTest.argumentsOrdered":447,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":252,"org.easymock.tests.UsageVarargTest.varargIntAccepted":387,"org.easymock.tests.InvocationTest.testEquals":504,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":431,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":175,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":66,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":435,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":521,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":44,"org.easymock.tests.ReplayStateInvalidUsageTest.times":275,"org.easymock.tests2.DependencyTest.testClassMocking":171,"org.easymock.tests2.AnswerTest.answer":33,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":423,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":25,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":353,"org.easymock.tests2.UsageTest.strictResetToDefault":193,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":261,"org.easymock.tests2.DelegateToTest.testDelegate":223,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":256,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":520,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":243,"org.easymock.tests.LimitationsTest.mockFinalMethod":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":349,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":463,"org.easymock.tests2.DependencyTest.testClassMockingSupport":172,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":332,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":241,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":23,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":269,"org.easymock.tests.UsageThrowableTest.throwError":306,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":355,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":67,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":331,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":99,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":524,"org.easymock.samples.PartialClassMockTest.testGetArea":478,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":270,"org.easymock.tests.MockingTest.testInterfaceMocking":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":432,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":250,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":86,"org.easymock.tests2.UsageTest.niceToStrict":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":229,"org.easymock.tests2.ThreadingTest.testChangeDefault":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":181,"org.easymock.tests2.MockBuilderTest.testCreateMock":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":94,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":47,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":237,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":210,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":362,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":224,"org.easymock.tests.UsageOverloadedMethodTest.overloading":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":90,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":452,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":125,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":376,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":124,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":388,"org.easymock.tests2.EasyMockSupportClassTest.testAll":78,"org.easymock.tests.MockClassControlTest.testEquals":320,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":245,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":505,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":461,"org.easymock.tests2.CaptureTest.testCaptureAll":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":24,"org.easymock.tests.MockNameTest.defaultName":359,"org.easymock.tests2.UsageConstraintsTest.testMatches":126,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":330,"org.easymock.samples.ExampleTest.voteForRemovals":487,"org.easymock.tests.UsageVarargTest.allKinds":396,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":470,"org.easymock.samples.BasicClassMockTest.testPrintContent":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":462,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":312,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":63,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":350,"org.easymock.tests2.UsageConstraintsTest.greaterThan":128,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":260,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":152,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":525,"org.easymock.samples.ExampleTest.voteForRemoval":484,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":287,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":153,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":357,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":106,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":144,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":517,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":248,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":207,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":345,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":208,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":204,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":455,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":372,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":158,"org.easymock.tests2.CaptureTest.testCapture2_2446744":32,"org.easymock.tests2.UsageTest.moreThanOneArgument":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":424,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":189,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":395,"org.easymock.tests.GenericTest.testBridgedEquals":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":404,"org.easymock.tests.UsageExpectAndReturnTest.longType":368,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":459,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":246,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":133,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":327,"org.easymock.tests.UsageCallCountTest.tooManyCalls":405,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":373,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":311,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":161,"org.easymock.tests.MockingTest.testNiceClassMocking":344,"org.easymock.tests.MockingTest.testClassMocking":336,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":398,"org.easymock.tests2.UsageConstraintsTest.testContains":123,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":53,"org.easymock.tests2.UsageConstraintsTest.testFind":115,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":458,"org.easymock.tests.MockTypeTest.fromEasyMockClass":354,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":21,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndReturnTest.object":375,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":213,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":390,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":467,"org.easymock.tests.UsageTest.exactCallCountByLastCall":448,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":253,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":101,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":385,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":381,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":57,"org.easymock.tests.MockClassControlTest.testHashCode":319,"org.easymock.tests2.EasyMockSupportTest.testVerify":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":88,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":449,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":361,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":503,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":22,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":29,"org.easymock.tests.UsageVarargTest.varargCharAccepted":389,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":279,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":216,"org.easymock.tests.DefaultClassInstantiatorTest.object":280,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":360,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":465,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":235,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":507,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":42,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":56,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":523,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":150,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":234,"org.easymock.tests.CapturesMatcherTest.test":492,"org.easymock.tests.ReplayStateInvalidCallsTest.times":529,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":294,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":530,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":97,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":317,"org.easymock.tests2.UsageTest.resumeIfFailure":203,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":348,"org.easymock.tests2.StubTest.stubWithReturnValue":170,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":374,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":422,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":538,"org.easymock.samples.SupportTest.voteForRemovals":474,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":59,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":240,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":428,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":34,"org.easymock.tests.UsageExpectAndThrowTest.object":238,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":266,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":131,"org.easymock.tests2.DelegateToTest.testWrongClass":221,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":527,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":257,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":258,"org.easymock.samples.ConstructorCalledMockTest.testTax":480,"org.easymock.tests.UsageStrictMockTest.range":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":108,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":239,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":183,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":225,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":539,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":519,"org.easymock.tests2.CaptureTest.testCaptureNone":31,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":251,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":511,"org.easymock.tests.UsageUnorderedTest.message":430,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":502,"org.easymock.tests.UsageVerifyTest.twoReturns":472,"org.easymock.tests.UsageVarargTest.varargByteAccepted":394,"org.easymock.tests2.ThreadingTest.testThreadSafe":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":92,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":402,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":475,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":468,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":291,"org.easymock.tests2.UsageConstraintsTest.any":121,"org.easymock.tests2.StubTest.stub":169,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndThrowTest.longType":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":347,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":284,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":273,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":71,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":61,"org.easymock.tests.LimitationsTest.mockNativeMethod":438,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":384,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":325,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":506,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":41,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":535,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":74,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":512,"org.easymock.tests2.NameTest.nameForMocksControl":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":43,"org.easymock.tests2.MockedExceptionTest.testMockedException":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":80,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":445,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":232,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":341,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":138,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":185,"org.easymock.tests.MockingTest.testNicePartialClassMocking":339,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":143,"org.easymock.tests2.CompareToTest.testNotComparable":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":39,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":333,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":534,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":167,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":118,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":132,"org.easymock.tests.MockingTest.testTwoMocks":337,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":531,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":236,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":201,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":136,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":515,"org.easymock.samples.ExampleTest.removeNonExistingDocument":488,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":46,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":271,"org.easymock.tests.UsageStrictMockTest.differentMethods":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":58,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":514,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":282,"org.easymock.tests2.ConstraintsToStringTest.andToString":497,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":157,"org.easymock.tests2.MockBuilderTest.testCreateMockString":191,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":82,"org.easymock.tests.UsageExpectAndThrowTest.floatType":230,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":77,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":36,"org.easymock.tests.UsageVerifyTest.twoThrows":471,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":102,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":91,"org.easymock.samples.ExampleTest.voteAgainstRemoval":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":151,"org.easymock.tests.LimitationsTest.privateConstructor":437,"org.easymock.tests2.UsageConstraintsTest.testNotNull":135,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":313,"org.easymock.tests2.UsageTest.defaultResetToNice":200,"org.easymock.samples.ExampleTest.voteAgainstRemovals":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":380,"org.easymock.tests.UsageVarargTest.differentLength":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":40,"org.easymock.tests2.CallbackTest.callback":55,"org.easymock.tests2.UsageConstraintsTest.equals":114,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":147,"org.easymock.tests.UsageTest.openCallCountByLastCall":444,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":290,"org.easymock.tests.UsageCallCountTest.tooFewCalls":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":163,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":227,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":513,"org.easymock.tests.UsageThrowableTest.throwCheckedException":310,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":499,"org.easymock.tests.MockingTest.testStrictClassMocking":335,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":166,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":364,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":45,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":165,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":38,"org.easymock.tests.ObjectMethodsTest.testHashCode":466,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":533,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":159,"org.easymock.tests2.NameTest.nameForNiceMock":17,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":528,"org.easymock.tests2.DependencyTest.testInterfaceMocking":173,"org.easymock.samples.ExampleTest.addDocument":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.DelegateToTest.testStubDelegate":220,"org.easymock.tests2.AnswerTest.stubAnswer":37,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":300,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":186,"org.easymock.tests.UsageVarargTest.varargLongAccepted":393,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.floatType":367,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":383,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":100,"org.easymock.tests2.ConstraintsToStringTest.orToString":493,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":481,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":453,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":65,"org.easymock.tests.UsageThrowableTest.noUpperLimit":307,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":111,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":103,"org.easymock.tests2.SerializationTest.test":27,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":281,"org.easymock.tests2.UsageConstraintsTest.testSame":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":366,"org.easymock.samples.SupportTest.addDocument":473,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":164,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":518,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":83,"org.easymock.tests.GenericTest.testPackageScope":323,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":64,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":342,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":516,"org.easymock.tests2.NameTest.nameForMock":15,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":377,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":190,"org.easymock.tests2.UsageStrictMockTest.differentMethods":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":242,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":464,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":262,"org.easymock.tests2.MockedExceptionTest.testRealException":54,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":109,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":419,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":289,"org.easymock.tests2.NameTest.nameForStrictMock":16,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":180,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":19,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":142,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":107,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":130,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":283,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":177,"org.easymock.tests2.UsageStrictMockTest.range":72,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":522,"org.easymock.tests2.UsageConstraintsTest.lessThan":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":206,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":87,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":510,"org.easymock.tests2.UsageConstraintsTest.testOr":117,"org.easymock.tests.UsageRangeTest.combination":259,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":139,"org.easymock.tests.UsageTest.wrongArguments":443,"org.easymock.tests2.MockBuilderTest.testWithConstructor":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":84,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":378,"org.easymock.tests.UsageVarargTest.varargShortAccepted":392,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":285,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":403,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":536,"org.easymock.tests2.UsageConstraintsTest.cmpTo":122,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":35,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":526,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":409,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":199,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":268,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":178,"org.easymock.tests.UsageTest.unexpectedCallWithArray":442,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":532,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":379,"org.easymock.tests2.CaptureTest.testCapture":9,"org.easymock.tests2.UsageConstraintsTest.constraints":112,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.samples.ExampleTest.addAndChangeDocument":489,"org.easymock.tests2.ConstraintsToStringTest.notToString":495,"org.easymock.tests.UsageStrictMockTest.testVerify":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":479,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests2.CompareToTest.testGreateThan":491,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":460,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":433,"org.easymock.tests.LimitationsTest.abstractClass":436,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":371,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":434,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":211}}]
