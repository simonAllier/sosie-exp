[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[3,4,5,6],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[86,87,88,89,90,91],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[93,94],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[95,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[97],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[98,99,100,101,102,103,104,105,106,92,107],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[29,108,109,110,111,112,113,35,36,114,115,116,117,118,81,82,104,119],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:85","sourceCode":"return ((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","type":"CtReturnImpl"},"failures":[7,8,120,9,10,121,11,122,123,12,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,13,14,15,16,17,18,153,154,19,20,155,21,22,23,156,24,25,26,27,28,29,31,32,157,158,159,95,110,160,96,161,162,163,164,33,165,166,167,168,111,169,170,171,172,112,113,173,174,175,176,177,178,179,180,181,182,183,34,184,35,36,185,37,38,39,115,186,187,188,189,190,191,192,116,40,41,42,43,193,44,45,46,47,48,194,195,196,197,198,199,200,201,202,203,49,50,51,52,53,54,55,56,57,58,60,98,204,99,205,206,207,208,209,210,211,100,212,213,214,215,216,217,62,218,63,64,65,66,219,220,221,222,223,224,225,226,227,4,5,6,228,229,230,231,232,233,234,235,236,237,238,239,240,67,68,69,70,71,72,73,241,74,242,243,76,77,78,244,245,246,247,248,117,118,249,250,251,80,252,81,82,253,83,84,254,255,256,257,258,101,102,259,103,260,104,105,261,262,263,264,265,266,267,268,269,119,92,270,271,272,273,107,274,94,275,276,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[7,8,120,9,10,121,11,277,122,123,12,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,278,279,280,281,282,283,284,150,151,285,286,287,152,13,14,15,16,17,18,153,154,19,20,155,21,22,23,156,24,25,26,27,28,29,30,31,32,157,158,288,289,108,109,290,291,159,292,293,294,295,0,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,95,110,160,96,161,162,163,164,33,165,166,167,168,111,169,170,318,319,320,321,322,323,324,325,171,172,88,326,112,113,327,328,173,174,175,176,177,178,179,180,329,181,182,330,331,332,333,183,89,34,184,35,36,185,334,335,336,337,37,38,338,39,339,340,341,342,114,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,115,186,187,188,367,189,190,191,192,116,40,41,42,43,193,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,44,45,46,47,48,386,387,388,194,195,196,389,197,198,390,199,200,201,202,203,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,49,50,413,414,51,415,416,417,418,419,420,421,422,423,52,53,54,55,56,57,424,425,58,426,427,428,59,60,61,429,430,98,204,99,205,206,207,208,209,210,211,100,212,213,214,215,431,216,217,62,218,432,433,434,63,435,436,64,437,438,439,440,441,442,443,444,445,65,446,447,448,449,450,66,451,452,219,220,221,222,223,224,453,454,225,226,227,4,5,6,228,229,230,231,232,233,234,455,235,236,237,238,239,456,457,458,459,460,240,461,462,463,464,465,466,67,68,69,70,467,71,72,73,468,469,470,471,472,473,474,241,74,242,475,243,476,75,477,478,76,479,77,78,480,481,482,79,483,484,485,486,487,488,489,244,245,246,490,247,248,117,118,491,492,493,249,250,494,251,80,252,81,82,253,495,496,497,498,499,500,83,84,254,255,501,502,503,504,505,256,506,507,508,509,510,511,257,258,101,102,512,259,103,260,104,105,261,106,262,263,264,265,266,267,268,269,119,92,270,271,272,273,107,274,94,513,275,514,276,85,515],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[347,453,226,227],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,278,279,280,282,150,152,13,14,15,16,17,18,153,154,19,20,155,21,22,23,156,24,25,26,27,28,29,30,31,32,157,95,160,96,161,162,163,164,33,165,168,111,170,171,172,112,113,173,331,34,35,36,37,38,39,191,192,116,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,98,204,205,206,209,210,211,100,213,214,215,216,217,62,218,63,64,65,66,222,224,226,4,5,228,229,230,231,232,233,234,455,235,236,237,238,240,67,68,69,70,71,72,73,74,75,76,77,78,79,244,245,246,247,117,118,491,249,250,80,81,82,83,84,255,256,257,258,101,102,259,103,260,104,105,261,262,263,264,265,266,267,268,269,119,92,270,271,273,107,274,94,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:191","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,125,125,126,126,130,131,132,133,134,138,139,145,146,147,148,149,279,280,282,150,285,13,14,15,16,17,19,20,24,25,26,27,28,157,158,288,307,308,309,95,160,96,161,162,163,164,168,111,169,170,171,112,113,173,174,175,178,179,180,329,181,182,330,331,337,37,38,39,191,192,116,40,41,43,44,45,46,47,48,386,387,388,49,50,51,416,417,52,54,55,57,98,204,205,206,209,210,211,100,212,213,214,215,216,217,62,218,63,64,65,66,219,220,221,222,223,227,228,229,230,231,232,233,234,455,235,236,237,238,240,67,68,69,70,71,72,73,474,241,74,242,475,243,75,76,77,78,79,244,245,247,117,118,491,249,250,255,256,257,258,102,259,260,104,105,261,262,263,264,265,266,267,268,269,119,92,270,271,273,274,94,85],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[7,8,120,9,10,121,11,277,122,123,12,124,125,125,126,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,278,279,280,281,282,283,284,150,151,285,286,287,152,13,14,15,16,17,18,153,154,19,20,155,21,22,23,156,24,25,26,27,28,29,30,31,32,157,158,288,289,108,109,290,291,159,292,293,294,295,0,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,95,110,160,96,161,162,163,164,33,165,166,167,168,111,169,170,318,321,322,323,324,325,171,172,88,326,112,113,327,328,173,174,175,176,177,178,179,180,329,181,182,330,331,332,333,183,89,34,184,35,36,185,334,335,336,337,37,38,338,39,339,340,341,342,114,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,115,186,187,188,367,189,190,191,192,116,40,41,42,43,193,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,44,45,46,47,48,386,387,388,194,195,196,389,197,198,390,199,200,201,202,203,49,50,413,414,51,415,416,417,418,52,53,54,55,56,57,424,425,58,426,427,428,59,60,61,429,430,98,204,99,205,206,207,208,209,210,211,100,212,213,214,215,216,217,62,218,432,433,434,63,435,436,64,437,438,439,440,441,442,443,444,445,65,446,447,448,449,450,66,451,452,219,220,221,222,223,224,453,454,225,226,227,4,5,6,228,229,230,231,232,233,234,455,235,236,237,238,239,456,457,458,459,460,240,461,462,463,464,465,466,67,68,69,70,71,72,73,469,470,471,472,473,474,241,74,242,475,243,476,75,477,478,76,479,77,78,481,482,79,483,484,487,488,489,244,245,246,490,247,248,117,118,491,492,493,249,250,494,251,80,252,81,82,253,495,496,497,498,499,500,83,84,254,255,501,502,503,504,505,256,506,507,508,509,510,511,257,258,101,102,512,259,103,260,104,105,261,106,262,263,264,265,266,267,268,269,119,92,270,271,272,273,107,274,94,275,514,276,85,515],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[8,120,9,10,121,11,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,13,14,15,16,17,18,153,154,19,20,155,21,22,23,156,24,25,26,27,28,29,30,31,32,157,158,159,298,299,300,301,302,303,304,305,306,311,95,110,160,96,161,162,163,164,33,165,166,167,168,111,169,170,171,172,88,326,112,113,327,328,173,174,175,176,177,178,179,331,333,183,89,34,184,35,36,185,334,37,38,39,365,366,115,186,187,188,192,116,40,41,42,43,193,378,44,45,46,47,48,194,195,196,197,198,199,200,201,202,203,49,50,51,417,52,53,54,55,56,57,58,428,60,98,204,99,205,206,207,208,209,210,211,100,212,213,214,215,216,217,62,218,219,220,221,222,223,224,225,226,227,4,5,6,68,69,72,73,470,471,472,473,241,74,242,243,476,76,479,79,483,244,245,246,490,247,248,117,118,491,492,493,249,250,494,251,80,252,81,82,253,495,496,497,498,83,254,255,257,258,101,102,259,103,260,104,105,261,262,263,264,265,266,267,268,269,119,92,270,271,273,107,274,94,513,275,276,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[203,103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[516],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:218","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[56,248,268],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[7,8,120,9,10,121,11,277,122,123,12,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,278,279,280,281,282,283,284,150,151,285,286,287,152,13,14,15,16,17,18,153,154,19,20,155,21,22,23,156,24,25,26,27,28,29,30,31,32,157,158,288,289,108,109,290,291,159,517,292,293,294,295,0,296,518,297,519,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,95,110,160,96,161,162,163,164,33,165,166,167,168,111,169,170,318,319,320,321,322,323,324,325,171,172,88,326,112,113,327,328,173,174,175,176,177,178,179,180,329,181,182,330,331,332,333,183,89,34,184,35,36,185,334,335,336,337,37,38,338,39,339,340,341,342,114,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,115,186,187,188,367,189,190,191,192,116,40,41,42,43,193,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,44,45,46,47,48,386,387,388,194,195,196,389,197,198,390,199,200,201,202,203,49,50,413,414,51,415,416,417,418,52,53,54,55,56,57,424,425,58,426,427,428,59,60,61,429,430,98,204,99,205,206,207,208,209,210,211,100,212,213,214,215,216,217,62,218,432,433,434,63,435,436,64,437,438,439,440,441,442,443,444,445,65,446,447,448,449,450,66,451,452,219,220,221,222,223,224,453,454,225,226,227,4,5,6,228,229,230,231,232,233,234,455,235,236,237,238,239,456,457,458,459,460,240,461,462,463,464,465,466,67,68,69,70,467,71,72,73,468,469,470,471,472,473,474,241,74,242,475,243,476,520,75,477,521,478,76,479,77,522,78,480,481,482,79,523,483,484,485,486,524,487,488,489,244,245,246,490,247,248,117,118,491,492,493,249,250,494,251,80,252,81,82,253,495,496,497,498,499,500,83,84,254,255,501,502,503,504,505,256,506,507,508,509,510,511,257,258,101,102,512,259,103,260,104,105,261,106,262,263,264,265,266,267,268,269,119,92,270,271,272,273,107,274,94,513,275,514,276,85,515,525],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[291],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[98,99,100,101,102,103,104,105,106,92,107],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[526,269],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[7,8,120,9,10,11,122,12,125,125,126,126,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,278,279,280,282,150,285,152,13,14,15,16,17,18,153,154,19,20,155,21,22,23,156,24,25,26,27,28,29,30,31,32,157,158,288,108,109,159,298,299,300,301,302,303,304,305,306,307,308,309,95,110,160,96,161,162,163,164,33,165,166,167,168,111,169,170,171,172,88,326,112,113,327,328,173,174,175,176,177,178,179,180,329,181,182,330,331,332,333,89,34,184,35,36,185,337,37,38,39,357,363,115,191,192,116,40,41,42,43,193,44,45,46,47,48,386,387,388,203,49,50,51,416,417,52,53,54,55,56,57,424,58,428,59,60,61,98,204,99,205,206,207,208,209,210,211,100,212,213,214,215,216,217,62,218,63,64,65,66,219,220,221,222,223,224,453,454,225,226,227,4,5,6,228,229,230,231,232,233,234,455,235,236,237,238,240,67,68,69,70,71,72,73,474,241,74,242,475,243,476,75,76,479,77,78,482,79,483,244,245,246,490,247,248,117,118,491,492,493,249,250,494,80,252,81,82,253,495,496,497,498,83,84,254,255,256,257,258,101,102,259,103,260,104,105,261,106,262,263,264,265,266,267,268,269,119,92,270,271,272,273,107,274,94,275,276,85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,158,307,308,309,95,160,96,161,162,163,164,166,167,169,171,113,174,175,176,177,178,179,182,116,386,387,388,220,221,222,223,244,118,255],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[7,125,125,126,126,284,285,426,60,430,64,65,4,520,521,76,522,480,481,482,523,483,85,515,525],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[204,205,209,210,211,214],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":102,"org.easymock.tests2.UsageTest.argumentsOrdered":493,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":237,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":351,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":248,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":129,"org.easymock.tests2.DelegateToTest.testReturnException":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":175,"org.easymock.tests.MockingTest.testPartialClassMocking":37,"org.easymock.tests.MockClassControlTest.testToString":312,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":469,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":440,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":130,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":64,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":84,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":412,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":261,"org.easymock.tests2.UsageTest.wrongArguments":490,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":33,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":466,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":300,"org.easymock.samples.ExampleTest.answerVsDelegate":120,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":323,"org.easymock.tests2.UsageConstraintsTest.testNull":103,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":340,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":236,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":317,"org.easymock.tests2.CaptureTest.testPrimitive":205,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":168,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":149,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":289,"org.easymock.tests.UsageTest.argumentsOrdered":328,"org.easymock.tests.UsageVarargTest.varargIntAccepted":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":44,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":510,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":486,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":48,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":396,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":240,"org.easymock.tests.ReplayStateInvalidUsageTest.times":382,"org.easymock.tests2.DependencyTest.testClassMocking":499,"org.easymock.tests2.AnswerTest.answer":224,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":498,"org.easymock.tests2.CaptureTest.testAnd":98,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":320,"org.easymock.tests2.UsageTest.strictResetToDefault":245,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":521,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":41,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":232,"org.easymock.tests2.DelegateToTest.testDelegate":243,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":291,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":395,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":145,"org.easymock.tests.LimitationsTest.mockFinalMethod":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":306,"org.easymock.tests2.DependencyTest.testClassMockingSupport":500,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":416,"org.easymock.tests2.CaptureTest.testCapture1_2446744":206,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":496,"org.easymock.tests.UsageThrowableTest.throwError":95,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":376,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":322,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":519,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":511,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":452,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":399,"org.easymock.samples.PartialClassMockTest.testGetArea":7,"org.easymock.tests.MockingTest.testInterfaceMocking":338,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":45,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":441,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":131,"org.easymock.tests2.UsageTest.niceToStrict":247,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":373,"org.easymock.tests2.ThreadingTest.testChangeDefault":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":448,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":463,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":139,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":90,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":233,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":319,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":388,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":298,"org.easymock.tests.UsageOverloadedMethodTest.overloading":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":445,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":182,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":266,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":21,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":265,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":211,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":389,"org.easymock.tests2.EasyMockSupportClassTest.testAll":63,"org.easymock.tests.MockClassControlTest.testEquals":316,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":151,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":497,"org.easymock.tests2.CaptureTest.testCaptureAll":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":304,"org.easymock.tests.MockNameTest.defaultName":287,"org.easymock.tests2.UsageConstraintsTest.testMatches":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":43,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":374,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":203,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":111,"org.easymock.samples.BasicClassMockTest.testPrintContent":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":305,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":163,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":507,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":179,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":518,"org.easymock.tests2.UsageConstraintsTest.greaterThan":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":30,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":61,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":400,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":297,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":429,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":524,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":424,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":392,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":159,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":244,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":230,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":174,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":474,"org.easymock.tests2.CaptureTest.testCaptureFirst":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":231,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":250,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":154,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":62,"org.easymock.tests2.CaptureTest.testCapture2_2446744":213,"org.easymock.tests2.UsageTest.moreThanOneArgument":246,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":359,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":202,"org.easymock.tests.GenericTest.testBridgedEquals":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":189,"org.easymock.tests.UsageExpectAndReturnTest.longType":16,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":302,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":148,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":272,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":308,"org.easymock.tests.UsageCallCountTest.tooManyCalls":190,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":162,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":68,"org.easymock.tests.MockingTest.testNiceClassMocking":341,"org.easymock.tests.MockingTest.testClassMocking":336,"org.easymock.tests2.UsageConstraintsTest.testContains":264,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":366,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":222,"org.easymock.tests2.UsageConstraintsTest.testFind":259,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":116,"org.easymock.tests.MockTypeTest.fromEasyMockClass":321,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":276,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":333,"org.easymock.tests.UsageExpectAndReturnTest.object":155,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":235,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":198,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":371,"org.easymock.tests.UsageTest.exactCallCountByLastCall":173,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":108,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":515,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":25,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":194,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":181,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":502,"org.easymock.tests.MockClassControlTest.testHashCode":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":443,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":109,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":387,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":495,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":513,"org.easymock.tests.UsageVarargTest.varargCharAccepted":197,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":517,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":364,"org.easymock.tests2.UsageTest.openCallCountByLastCall":117,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":238,"org.easymock.tests.DefaultClassInstantiatorTest.object":292,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":386,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":444,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":501,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":398,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":59,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":314,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":136,"org.easymock.tests.ReplayStateInvalidCallsTest.times":404,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":26,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":307,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":66,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":313,"org.easymock.tests2.UsageTest.resumeIfFailure":249,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":318,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":177,"org.easymock.tests2.StubTest.stubWithReturnValue":255,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":522,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":20,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":273,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":357,"org.easymock.samples.SupportTest.voteForRemovals":12,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":91,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":504,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":142,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":363,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":453,"org.easymock.tests.UsageExpectAndThrowTest.object":140,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":283,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":270,"org.easymock.tests2.DelegateToTest.testWrongClass":242,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":402,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":49,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":50,"org.easymock.samples.ConstructorCalledMockTest.testTax":125,"org.easymock.tests.UsageStrictMockTest.range":35,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":488,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":455,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":67,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":432,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":384,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":299,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":86,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":394,"org.easymock.tests2.CaptureTest.testCaptureNone":210,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":280,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":420,"org.easymock.tests.UsageUnorderedTest.message":152,"org.easymock.tests.UsageVerifyTest.twoReturns":170,"org.easymock.tests.UsageVarargTest.varargByteAccepted":201,"org.easymock.tests2.ThreadingTest.testThreadSafe":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":446,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":188,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":127,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":372,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":361,"org.easymock.tests2.UsageConstraintsTest.any":262,"org.easymock.tests2.StubTest.stub":254,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":381,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":176,"org.easymock.tests.UsageExpectAndThrowTest.longType":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":380,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":252,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":256,"org.easymock.tests.LimitationsTest.mockNativeMethod":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":28,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":458,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":410,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests2.NameTest.nameForMocksControl":473,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":460,"org.easymock.tests2.MockedExceptionTest.testMockedException":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":436,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":113,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":514,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":134,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":39,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":52,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":78,"org.easymock.tests.MockingTest.testNicePartialClassMocking":38,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":57,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":456,"org.easymock.tests2.CaptureTest.testCaptureLast":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":417,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":409,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":105,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":271,"org.easymock.tests.MockingTest.testTwoMocks":337,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":406,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":138,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":492,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":274,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":423,"org.easymock.samples.ExampleTest.removeNonExistingDocument":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":462,"org.easymock.tests.UsageStrictMockTest.differentMethods":36,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":503,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":422,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":294,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":217,"org.easymock.tests2.MockBuilderTest.testCreateMockString":483,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":437,"org.easymock.tests.UsageExpectAndThrowTest.floatType":132,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":525,"org.easymock.tests.UsageVerifyTest.twoThrows":169,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":65,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":352,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":60,"org.easymock.tests.LimitationsTest.privateConstructor":414,"org.easymock.tests2.UsageConstraintsTest.testNotNull":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":164,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":220,"org.easymock.tests2.UsageTest.defaultResetToNice":491,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":353,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":457,"org.easymock.tests.UsageVarargTest.differentLength":390,"org.easymock.tests2.CallbackTest.callback":219,"org.easymock.tests2.UsageConstraintsTest.equals":512,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":426,"org.easymock.tests.UsageTest.openCallCountByLastCall":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":166,"org.easymock.tests.UsageCallCountTest.tooFewCalls":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":301,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":421,"org.easymock.tests.UsageThrowableTest.throwCheckedException":161,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":87,"org.easymock.tests.MockingTest.testStrictClassMocking":335,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":158,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":461,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":69,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":383,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":71,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests.ObjectMethodsTest.testHashCode":370,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":516,"org.easymock.tests2.NameTest.nameForNiceMock":472,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":408,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":218,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":403,"org.easymock.tests2.DependencyTest.testInterfaceMocking":83,"org.easymock.samples.ExampleTest.addDocument":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":451,"org.easymock.tests2.DelegateToTest.testStubDelegate":74,"org.easymock.tests2.AnswerTest.stubAnswer":226,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":480,"org.easymock.tests.UsageVarargTest.varargLongAccepted":200,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":27,"org.easymock.tests.UsageExpectAndReturnTest.floatType":15,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":85,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":509,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":119,"org.easymock.tests.UsageThrowableTest.noUpperLimit":110,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":258,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":484,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":207,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":14,"org.easymock.tests2.UsageConstraintsTest.testSame":260,"org.easymock.samples.SupportTest.addDocument":123,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":467,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":393,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":438,"org.easymock.tests.GenericTest.testPackageScope":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":508,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":339,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":391,"org.easymock.tests2.NameTest.nameForMock":470,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":523,"org.easymock.tests2.UsageStrictMockTest.differentMethods":82,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":144,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":32,"org.easymock.tests2.MockedExceptionTest.testRealException":223,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":325,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":354,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":165,"org.easymock.tests2.NameTest.nameForStrictMock":471,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":478,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":487,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":92,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":295,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":75,"org.easymock.tests2.UsageStrictMockTest.range":81,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":397,"org.easymock.tests2.UsageConstraintsTest.lessThan":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":505,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":442,"org.easymock.tests2.CaptureTest.testCaptureRightOne":100,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":419,"org.easymock.tests2.UsageConstraintsTest.testOr":104,"org.easymock.tests.UsageRangeTest.combination":29,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":53,"org.easymock.tests.UsageTest.wrongArguments":326,"org.easymock.tests2.MockBuilderTest.testWithConstructor":520,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":439,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":23,"org.easymock.tests.UsageVarargTest.varargShortAccepted":199,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":296,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":367,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":411,"org.easymock.tests2.UsageConstraintsTest.cmpTo":263,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":454,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":401,"org.easymock.tests2.CompareToTest.testLessThan":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":344,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":118,"org.easymock.tests2.CaptureTest.testCaptureFromStub":212,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":375,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":477,"org.easymock.tests.UsageTest.unexpectedCallWithArray":88,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":407,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":89,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":187,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":156,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":184,"org.easymock.tests2.UsageConstraintsTest.constraints":101,"org.easymock.samples.ExampleTest.addAndChangeDocument":122,"org.easymock.tests.UsageStrictMockTest.testVerify":334,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":124,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":183,"org.easymock.tests2.CompareToTest.testGreateThan":526,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":303,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":46,"org.easymock.tests.LimitationsTest.abstractClass":413,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":47,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":195,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":234}}]
