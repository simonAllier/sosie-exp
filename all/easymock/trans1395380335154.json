[{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[18,19,1,3,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,8,10,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[18,68,69,70,71,72,73,74,75,76,77,78,5,79,80,81,82,83,28,84,85,86,59,7,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,13,138],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[139],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,18,68,168,169,170,171,172,173,174,69,175,176,177,178,179,180,181,182,19,1,54,55,56,2,3,57,58,4,71,72,20,183,21,22,23,24,25,26,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,74,75,76,77,78,5,27,6,207,208,209,210,211,212,213,214,215,216,79,217,218,219,81,82,83,28,84,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,85,86,220,221,49,222,223,224,225,226,227,228,59,7,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,250,251,252,117,253,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,254,255,133,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,8,275,64,65,276,277,9,10,278,66,67,279,11,280,12,281,282,283,134,135,284,285,286,287,288,289,290,136,137,291,292,293,294,295,296,297,298,299,300,301,50,302,303,304,13,138,305,306,307,308,309,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[312,313,314,117],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[140,148,149,151,152,154,161,315,163,181,182,19,1,54,2,3,4,71,20,21,22,23,24,25,26,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,74,75,76,77,78,5,6,217,316,218,219,81,82,84,85,86,317,7,230,231,233,234,235,236,237,238,239,240,241,242,243,244,248,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,116,250,251,252,117,253,118,119,120,122,123,126,127,128,129,131,132,254,255,133,256,259,267,268,270,271,273,8,275,64,276,9,10,278,279,11,280,12,282,284,285,286,287,288,289,136,291,292,293,294,295,296,297,298,299,300,50,13,305,306,308,309,310,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[51,52,55,59,60,62],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[318,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[318,319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[144,145,320,321,322],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[89,90,92,94,95,97,107,112,119,121,129],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","bridgeMethod":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[323,69],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[140,141,142,143,144,144,145,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,18,68,324,325,168,169,170,171,69,326,327,328,329,330,331,175,176,177,178,179,180,182,19,1,54,55,56,2,3,57,58,4,71,72,20,183,21,22,23,24,25,26,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,74,75,76,77,78,5,27,6,207,208,209,210,211,213,214,215,216,79,332,217,316,218,219,81,82,83,28,84,333,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,85,86,317,223,224,225,226,227,228,59,7,229,230,231,232,334,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,250,251,252,117,253,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,254,255,133,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,273,274,8,275,64,65,276,277,9,10,278,66,67,279,11,280,12,281,282,283,134,135,284,285,286,287,288,289,136,137,292,294,295,296,297,298,299,300,301,50,302,335,336,337,338,303,304,13,138,305,306,307,308,309,310,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[133,256,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,18,68,168,169,170,171,172,173,174,69,175,176,177,178,179,180,181,182,19,1,54,55,56,2,3,57,58,4,71,72,20,183,21,22,23,24,25,26,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,74,75,76,77,78,5,27,6,207,208,209,210,211,212,213,214,215,216,79,217,218,219,81,82,83,28,84,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,85,86,220,221,49,222,223,224,225,226,227,228,59,7,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,250,251,117,253,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,254,255,133,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,8,275,64,65,276,277,9,10,278,66,67,279,11,280,12,281,282,283,134,135,284,285,286,287,288,289,290,136,137,291,292,293,294,295,296,297,298,299,300,301,50,302,303,304,13,138,305,306,307,308,309,310,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[339,323,340,69,54,56,57,58,5,27,6,59,7,230,231,64,65,66,67,335,336,337,338,13,305,306],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":90,"org.easymock.tests2.UsageTest.argumentsOrdered":67,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":1,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":167,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":277,"org.easymock.tests2.StubTest.stubWithReturnValue":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":111,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":143,"org.easymock.tests2.SerializationTest.testAllMockedMethod":257,"org.easymock.tests2.DelegateToTest.testReturnException":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":165,"org.easymock.tests.MockingTest.testPartialClassMocking":184,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":62,"org.easymock.samples.SupportTest.voteForRemovals":148,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":41,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":309,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":29,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":314,"org.easymock.tests.UsageExpectAndThrowTest.object":39,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":339,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":255,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":108,"org.easymock.tests2.DelegateToTest.testWrongClass":260,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":86,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":81,"org.easymock.tests2.UsageTest.wrongArguments":65,"org.easymock.tests.UsageStrictMockTest.range":230,"org.easymock.samples.ConstructorCalledMockTest.testTax":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":225,"org.easymock.samples.ExampleTest.answerVsDelegate":150,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":294,"org.easymock.tests2.UsageConstraintsTest.testNull":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":270,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":242,"org.easymock.tests2.CaptureTest.testPrimitive":122,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":84,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests.UsageTest.moreThanOneArgument":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":48,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":224,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":0,"org.easymock.tests2.CaptureTest.testCaptureNone":127,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":215,"org.easymock.tests2.ThreadingTest.testThreadSafe":250,"org.easymock.tests.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageVarargTest.varargIntAccepted":209,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":171,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":74,"org.easymock.tests2.CaptureTest.testCapture_2617107":121,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":28,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":269,"org.easymock.tests2.UsageConstraintsTest.any":98,"org.easymock.tests2.StubTest.stub":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":78,"org.easymock.tests.UsageExpectAndThrowTest.longType":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":166,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":329,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":116,"org.easymock.tests2.SerializationTest.testClass":133,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":118,"org.easymock.tests.LimitationsTest.mockNativeMethod":163,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":206,"org.easymock.tests2.AnswerTest.answer":12,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":265,"org.easymock.tests2.CaptureTest.testAnd":119,"org.easymock.tests2.UsageTest.strictResetToDefault":275,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":137,"org.easymock.tests2.NameTest.nameForMocksControl":338,"org.easymock.tests2.MockedExceptionTest.testMockedException":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":218,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests2.DelegateToTest.testDelegate":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":33,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":186,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":284,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":271,"org.easymock.tests.MockingTest.testNicePartialClassMocking":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":44,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":289,"org.easymock.tests2.CaptureTest.testCaptureLast":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":18,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":333,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":300,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":160,"org.easymock.tests2.CaptureTest.testCapture1_2446744":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":187,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":42,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":37,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":66,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":113,"org.easymock.tests.UsageThrowableTest.throwError":20,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":328,"org.easymock.tests.UsageStrictMockTest.differentMethods":231,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":252,"org.easymock.tests2.MockBuilderTest.testCreateMockString":274,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":80,"org.easymock.tests.UsageExpectAndThrowTest.floatType":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":180,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":104,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":281,"org.easymock.tests.UsageVerifyTest.twoThrows":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":310,"org.easymock.samples.PartialClassMockTest.testGetArea":140,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":75,"org.easymock.samples.ExampleTest.voteAgainstRemoval":152,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":292,"org.easymock.tests2.UsageTest.niceToStrict":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":30,"org.easymock.tests2.UsageConstraintsTest.testNotNull":112,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":26,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":268,"org.easymock.tests2.UsageTest.defaultResetToNice":278,"org.easymock.tests2.MockBuilderTest.testCreateMock":272,"org.easymock.samples.ExampleTest.voteAgainstRemovals":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":202,"org.easymock.tests.UsageVarargTest.differentLength":212,"org.easymock.tests2.CallbackTest.callback":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":322,"org.easymock.tests.UsageTest.openCallCountByLastCall":2,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":38,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":238,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":83,"org.easymock.tests.UsageCallCountTest.tooFewCalls":169,"org.easymock.tests.UsageOverloadedMethodTest.overloading":182,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":49,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":198,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":181,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":101,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":226,"org.easymock.tests.UsageThrowableTest.throwCheckedException":23,"org.easymock.tests2.EasyMockSupportClassTest.testAll":308,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":162,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":61,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":52,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":264,"org.easymock.tests2.CaptureTest.testCaptureAll":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":158,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":299,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":72,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":296,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":330,"org.easymock.tests2.UsageConstraintsTest.testMatches":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":298,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":283,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":179,"org.easymock.samples.ExampleTest.voteForRemovals":154,"org.easymock.tests2.NameTest.nameForNiceMock":337,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":253,"org.easymock.tests.UsageVarargTest.allKinds":79,"org.easymock.tests2.DependencyTest.testInterfaceMocking":254,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":5,"org.easymock.samples.BasicClassMockTest.testPrintContent":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":159,"org.easymock.samples.ExampleTest.addDocument":153,"org.easymock.tests2.DelegateToTest.testStubDelegate":259,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":25,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":303,"org.easymock.tests2.AnswerTest.stubAnswer":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":68,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":7,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":16,"org.easymock.tests2.UsageConstraintsTest.greaterThan":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":316,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":293,"org.easymock.tests.UsageVarargTest.varargLongAccepted":214,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":232,"org.easymock.samples.ExampleTest.voteForRemoval":151,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":251,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":205,"org.easymock.tests.UsageExpectAndReturnTest.floatType":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":280,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":145,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":106,"org.easymock.tests.UsageThrowableTest.noUpperLimit":183,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":88,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":175,"org.easymock.tests2.SerializationTest.test":256,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":235,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":21,"org.easymock.tests2.UsageConstraintsTest.testSame":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":188,"org.easymock.samples.SupportTest.addDocument":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":164,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":17,"org.easymock.tests2.CaptureTest.testCaptureFirst":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":236,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":11,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":312,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":194,"org.easymock.tests.GenericTest.testPackageScope":161,"org.easymock.tests2.UsageTest.moreThanOneArgument":64,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":131,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":273,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":216,"org.easymock.tests.GenericTest.testBridgedEquals":319,"org.easymock.tests2.NameTest.nameForMock":335,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":173,"org.easymock.tests.UsageExpectAndReturnTest.longType":190,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":47,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":321,"org.easymock.tests2.UsageStrictMockTest.differentMethods":306,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":191,"org.easymock.tests.UsageCallCountTest.tooManyCalls":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":43,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":219,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":168,"org.easymock.tests2.MockedExceptionTest.testRealException":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":195,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":34,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":24,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":295,"org.easymock.tests2.NameTest.nameForStrictMock":336,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":325,"org.easymock.tests2.UsageConstraintsTest.testContains":100,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":248,"org.easymock.tests2.UsageConstraintsTest.testFind":91,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":19,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":288,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":227,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":135,"org.easymock.tests.UsageExpectAndReturnTest.object":197,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":323,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":136,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":267,"org.easymock.tests2.UsageStrictMockTest.range":305,"org.easymock.tests2.UsageConstraintsTest.lessThan":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":241,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":211,"org.easymock.tests.UsageTest.exactCallCountByLastCall":4,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":71,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":234,"org.easymock.tests2.CaptureTest.testCaptureRightOne":129,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":313,"org.easymock.tests2.UsageConstraintsTest.testOr":94,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":53,"org.easymock.tests.UsageRangeTest.combination":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":285,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":203,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":221,"org.easymock.tests.UsageTest.wrongArguments":56,"org.easymock.tests2.MockBuilderTest.testWithConstructor":320,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":332,"org.easymock.tests2.EasyMockSupportTest.testVerify":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":200,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":220,"org.easymock.tests.UsageVarargTest.varargShortAccepted":213,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":262,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":172,"org.easymock.tests2.UsageConstraintsTest.cmpTo":99,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":115,"org.easymock.tests.UsageVarargTest.varargCharAccepted":210,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":15,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":304,"org.easymock.tests2.UsageTest.openCallCountByLastCall":9,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":10,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":73,"org.easymock.tests2.CaptureTest.testCaptureFromStub":130,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":326,"org.easymock.tests.UsageTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":36,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":170,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":201,"org.easymock.tests2.CaptureTest.testCapture":139,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":291,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":229,"org.easymock.tests2.UsageConstraintsTest.constraints":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":35,"org.easymock.samples.ExampleTest.addAndChangeDocument":155,"org.easymock.tests.UsageStrictMockTest.testVerify":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":204,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":311,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":157,"org.easymock.tests2.UsageTest.resumeIfFailure":279,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":76,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":193,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":77,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":239,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":208}}]
