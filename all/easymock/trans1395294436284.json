[{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[0,1,2,3],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[4,4,5,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[46],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[48,49,50,51],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[52,53,48,54,55,56,57,58,59,60],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[61,62,63,4,4,5,5,64,65,66,52,53,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,48,50,101,102,103,104,105,106,107,108,109,59,110,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,46,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[166,167,7,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[202,203,204,205,206,207],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[208,209,11,13,210,211,212,19,213,214,215],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[48,60,216],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[217,17],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:117","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[53,54,55,56,218,219,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[220,221,222],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[61,62,63,4,4,5,5,64,65,66,52,53,223,224,68,69,70,71,72,73,74,225,226,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,48,50,101,103,104,106,107,108,109,110,60,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,46,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,165],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[227],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[53,54,55,56,218,219,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[228],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[229,202,230,231,232,233,234,63,4,4,5,5,64,65,66,235,52,236,237,238,68,69,70,71,239,72,73,240,6,241,242,243,166,244,245,246,247,167,248,249,250,251,7,79,82,92,98,252,253,254,255,256,8,9,208,209,10,11,12,13,210,257,258,259,14,260,15,16,261,17,18,212,47,262,263,19,20,21,203,204,264,265,266,267,268,269,213,270,271,272,273,274,275,215,22,276,277,278,279,280,281,282,283,284,285,286,287,288,289,48,49,205,290,291,206,207,292,103,107,109,110,112,115,116,293,117,118,119,121,125,126,127,294,295,168,296,297,298,299,300,0,1,130,132,23,24,301,302,169,303,304,305,30,306,307,170,308,309,171,310,138,311,312,313,314,172,315,140,316,317,173,318,31,32,319,174,33,34,35,36,37,38,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,39,345,175,346,176,177,178,179,180,181,40,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,347,348,349,145,146,147,350,351,41,42,43,44,45,352,2,3,353],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[6,354,241,242,243,166,245,355,247,167,356,357,250,7,11,258,261,19,358,359,360,361,266,270,214,272,362,363,273,274,277,205,207,168,301,302,169,303,364,30,365,306,307,170,308,366,309,171,367,368,310,172,32,33,369,176],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:47","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[24,320,321,328,335,44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":209,"org.easymock.tests2.UsageTest.argumentsOrdered":357,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":314,"org.easymock.tests2.StubTest.stubWithReturnValue":7,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":329,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":263,"org.easymock.tests2.SerializationTest.testAllMockedMethod":50,"org.easymock.tests2.DelegateToTest.testReturnException":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":312,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":304,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":216,"org.easymock.tests.MockingTest.testPartialClassMocking":145,"org.easymock.samples.SupportTest.voteForRemovals":234,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":46,"org.easymock.tests.MockClassControlTest.testToString":151,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":29,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":86,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":305,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":182,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":290,"org.easymock.tests.UsageExpectAndThrowTest.object":192,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":238,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":47,"org.easymock.tests2.DelegateToTest.testWrongClass":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":54,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":23,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":24,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":257,"org.easymock.tests2.UsageTest.wrongArguments":355,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":31,"org.easymock.tests.UsageStrictMockTest.range":306,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.samples.ExampleTest.answerVsDelegate":202,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":68,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":135,"org.easymock.tests2.UsageConstraintsTest.testNull":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":193,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":287,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":156,"org.easymock.tests2.CaptureTest.testPrimitive":271,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":33,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":367,"org.easymock.tests.UsageTest.moreThanOneArgument":308,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":76,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":43,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":349,"org.easymock.tests2.CaptureTest.testCaptureNone":274,"org.easymock.tests.UsageUnorderedTest.message":301,"org.easymock.tests.UsageVerifyTest.twoReturns":303,"org.easymock.tests2.ThreadingTest.testThreadSafe":252,"org.easymock.tests.UsageTest.argumentsOrdered":368,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":93,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":61,"org.easymock.tests2.CaptureTest.testCapture_2617107":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":219,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":101,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":174,"org.easymock.tests2.UsageConstraintsTest.any":258,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":108,"org.easymock.tests2.StubTest.stub":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":313,"org.easymock.tests.UsageExpectAndThrowTest.longType":185,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":162,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":354,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":240,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":236,"org.easymock.tests.LimitationsTest.mockNativeMethod":138,"org.easymock.tests2.DependencyTest.testClassMocking":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":339,"org.easymock.tests2.AnswerTest.answer":205,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":132,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":211,"org.easymock.tests2.CaptureTest.testAnd":213,"org.easymock.tests2.UsageTest.strictResetToDefault":244,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":124,"org.easymock.tests2.NameTest.nameForMocksControl":361,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":227,"org.easymock.tests2.MockedExceptionTest.testMockedException":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":42,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":81,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":171,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":344,"org.easymock.tests2.DelegateToTest.testDelegate":269,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":147,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":186,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":110,"org.easymock.tests.MockingTest.testNicePartialClassMocking":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":197,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":119,"org.easymock.tests.LimitationsTest.mockFinalMethod":139,"org.easymock.tests2.CaptureTest.testCaptureLast":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":172,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":353,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":210,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":262,"org.easymock.tests2.DependencyTest.testClassMockingSupport":224,"org.easymock.tests.MockingTest.testTwoMocks":144,"org.easymock.tests2.CaptureTest.testCapture1_2446744":272,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":190,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":356,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":20,"org.easymock.tests.UsageThrowableTest.throwError":175,"org.easymock.tests.UsageStrictMockTest.differentMethods":307,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":160,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":254,"org.easymock.tests2.MockBuilderTest.testCreateMockString":114,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":45,"org.easymock.tests.UsageExpectAndThrowTest.floatType":184,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":67,"org.easymock.tests.UsageVerifyTest.twoThrows":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":92,"org.easymock.samples.PartialClassMockTest.testGetArea":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":35,"org.easymock.samples.ExampleTest.voteAgainstRemoval":231,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":348,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":126,"org.easymock.tests2.UsageTest.niceToStrict":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":87,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":183,"org.easymock.tests.LimitationsTest.privateConstructor":137,"org.easymock.tests2.UsageConstraintsTest.testNotNull":19,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":181,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":25,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":107,"org.easymock.tests2.UsageTest.defaultResetToNice":248,"org.easymock.tests2.MockBuilderTest.testCreateMock":111,"org.easymock.samples.ExampleTest.voteAgainstRemovals":229,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":95,"org.easymock.tests2.CallbackTest.callback":243,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":122,"org.easymock.tests.UsageTest.openCallCountByLastCall":309,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":191,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":8,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":319,"org.easymock.tests.UsageOverloadedMethodTest.overloading":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":97,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":15,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":331,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":71,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":260,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":275,"org.easymock.tests.UsageThrowableTest.throwCheckedException":178,"org.easymock.tests2.EasyMockSupportClassTest.testAll":79,"org.easymock.tests.MockClassControlTest.testEquals":155,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":199,"org.easymock.tests.MockingTest.testStrictClassMocking":142,"org.easymock.tests2.CaptureTest.testCaptureAll":270,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":345,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":72,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":70,"org.easymock.tests2.UsageConstraintsTest.testMatches":16,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":239,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":44,"org.easymock.samples.ExampleTest.voteForRemovals":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":218,"org.easymock.tests2.NameTest.nameForNiceMock":360,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":256,"org.easymock.tests.UsageVarargTest.allKinds":369,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":302,"org.easymock.tests2.DependencyTest.testInterfaceMocking":237,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":56,"org.easymock.samples.BasicClassMockTest.testPrintContent":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":94,"org.easymock.tests2.DelegateToTest.testStubDelegate":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":99,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":180,"org.easymock.tests2.AnswerTest.stubAnswer":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":315,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":268,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":58,"org.easymock.tests2.UsageConstraintsTest.greaterThan":17,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":297,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":127,"org.easymock.samples.ExampleTest.voteForRemoval":230,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":165,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":253,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":338,"org.easymock.tests.UsageExpectAndReturnTest.floatType":322,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":120,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests.UsageThrowableTest.noUpperLimit":346,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":18,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":9,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":140,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":166,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":74,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":362,"org.easymock.tests2.SerializationTest.test":49,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":280,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":159,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":321,"org.easymock.tests2.UsageConstraintsTest.testSame":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":311,"org.easymock.tests2.CaptureTest.testCaptureFirst":277,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":281,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":84,"org.easymock.tests.GenericTest.testPackageScope":130,"org.easymock.tests2.CaptureTest.testCapture2_2446744":276,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":255,"org.easymock.tests2.UsageTest.moreThanOneArgument":245,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":343,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":26,"org.easymock.tests.GenericTest.testBridgedEquals":133,"org.easymock.tests2.NameTest.nameForMock":358,"org.easymock.tests.UsageExpectAndReturnTest.longType":323,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":332,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":200,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":40,"org.easymock.tests2.UsageStrictMockTest.differentMethods":242,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":198,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":113,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":41,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":299,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":350,"org.easymock.tests2.MockedExceptionTest.testRealException":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":96,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":28,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":69,"org.easymock.tests.MockingTest.testNiceClassMocking":148,"org.easymock.tests.MockingTest.testClassMocking":143,"org.easymock.tests2.NameTest.nameForStrictMock":359,"org.easymock.tests2.UsageConstraintsTest.testContains":14,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":66,"org.easymock.tests2.UsageConstraintsTest.testFind":10,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":168,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":221,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":118,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":204,"org.easymock.tests.UsageExpectAndReturnTest.object":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":75,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":212,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":121,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":103,"org.easymock.tests2.UsageStrictMockTest.range":241,"org.easymock.tests2.UsageConstraintsTest.lessThan":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":55,"org.easymock.tests.UsageTest.exactCallCountByLastCall":310,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":57,"org.easymock.tests2.CaptureTest.testCaptureRightOne":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":88,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":341,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":228,"org.easymock.tests2.UsageConstraintsTest.testOr":13,"org.easymock.tests.UsageRangeTest.combination":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":116,"org.easymock.tests.UsageTest.wrongArguments":366,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":317,"org.easymock.tests2.MockBuilderTest.testWithConstructor":102,"org.easymock.tests.MockClassControlTest.testHashCode":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":85,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":89,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":342,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":316,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":0,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":163,"org.easymock.tests2.UsageConstraintsTest.cmpTo":259,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":157,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":291,"org.easymock.tests2.UsageTest.openCallCountByLastCall":247,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":220,"org.easymock.tests.DefaultClassInstantiatorTest.object":158,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":300,"org.easymock.tests2.CaptureTest.testCaptureFromStub":22,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":189,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":177,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":334,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":365,"org.easymock.tests2.UsageConstraintsTest.constraints":208,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":125,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":153,"org.easymock.samples.ExampleTest.addAndChangeDocument":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":337,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":98,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":152,"org.easymock.tests2.CompareToTest.testGreateThan":217,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":363,"org.easymock.tests2.UsageTest.resumeIfFailure":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":36,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":326,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":134,"org.easymock.tests.LimitationsTest.abstractClass":136,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":284,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":225}}]
