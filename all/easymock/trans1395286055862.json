[{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[0,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,0,1,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[17,18,20,22,23,197,34,38,80,82,89],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[198,199],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:161","sourceCode":"for (final org.easymock.internal.Injection org.easymock.internal.Injection : java.util.List<org.easymock.internal.Injection>) {\n    final java.lang.reflect.Field java.lang.reflect.Field = org.easymock.internal.Injector.org.easymock.internal.Injector.getFieldByName(java.lang.Class<?>, org.easymock.internal.Injection.getQualifier());\n    final org.easymock.internal.InjectionTarget org.easymock.internal.InjectionTarget = org.easymock.internal.Injector.org.easymock.internal.Injector.injectionTargetWithField(java.lang.reflect.Field);\n    if (org.easymock.internal.InjectionTarget == null) {\n        continue;\n    } \n    if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n        org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n        java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n    } \n}","type":"CtForEachImpl"},"failures":[200,201,202,203,204,205,206,41,207,208,209,210,211,212,213,63,214,215],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[216,52,53,217,54,55,218,219,220,221,222,223,224,0,2,225,226,227,228,67,229,230,231,232,68,233,69,70,75,234,77,235,78,236,237,238,239,240,241,242,93,243,96,97,98,244,245,246,247,248,249,250,251,251,252,252,253,254,255],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[256,257,258,259,111,139],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[260,261],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[262],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[263,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[167,168,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[265,8,9,10,266,11,12,13,267,14,15,16,17,18,268,19,20,21,22,23,24,197,25,26,27,28,29,30,31,32,33,34,35,36,269,37,38,39,40,270,200,201,271,202,203,272,204,205,273,274,206,41,42,43,44,45,46,47,48,275,49,50,276,51,216,52,217,277,278,279,280,56,281,57,282,58,59,60,61,62,283,284,218,285,219,286,287,288,289,220,290,291,292,293,294,221,295,296,207,208,297,209,210,298,211,212,299,300,213,63,301,302,64,65,66,303,304,305,306,307,1,2,225,227,228,308,67,229,230,231,232,68,69,309,310,311,312,71,313,72,73,74,75,234,76,77,235,78,236,314,237,315,238,239,240,241,316,317,318,319,242,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,263,79,80,81,82,83,84,85,86,87,338,88,89,90,91,92,339,340,93,341,342,343,344,345,346,347,348,94,95,349,350,243,351,352,353,354,99,100,101,102,103,355,356,357,358,104,105,106,107,359,108,360,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,361,362,363,364,365,198,366,367,138,368,139,140,141,142,143,144,369,370,244,371,372,373,374,375,376,145,146,147,148,149,377,378,379,150,151,380,381,382,383,384,385,386,387,388,152,153,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,260,245,246,247,261,413,154,262,155,414,415,416,417,418,419,420,421,156,422,248,423,424,425,426,157,427,428,429,430,431,432,433,158,159,160,161,162,163,249,434,435,250,436,437,164,438,165,166,167,168,169,170,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,171,172,173,199,454,455,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,194,195,472,473,196,474,475,214,253,215,476,477,254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[270,272,296,298,214,215],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Any:36","failures":[22,25,58,81,87,338,92,99,100,101,102,103,359,140,150,151,152,153,158,159,160,161,162,163],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[478],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[9,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,203,41,42,43,45,47,48,275,276,51,216,52,53,217,277,54,55,56,281,58,60,61,218,219,220,221,210,65,0,1,227,67,230,231,68,70,71,313,72,73,74,75,234,76,77,235,78,237,239,240,241,242,321,322,323,324,325,326,327,328,329,330,331,332,79,80,81,83,84,87,338,88,89,91,92,93,348,94,95,96,97,98,99,100,101,102,103,109,110,113,114,117,140,142,143,378,379,150,151,152,398,400,409,410,412,245,247,155,414,415,416,156,158,159,162,164,165,166,167,168,169,170,440,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,471,195,472,196,253,477],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[53,55,278,283,284,479,218,480,285,219,286,287,481,482,288,483,484,289,485,220,290,291,292,293,294,221,486,487,488,489,0,490,491,492,493,494,495,70,496,251,252],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[216,52,53,217,54,55,218,219,220,221,222,223,0,2,225,226,227,228,67,229,230,231,232,68,233,69,70,75,234,77,235,78,236,237,238,239,240,241,242,93,243,96,97,98,244,245,246,247,248,249,250,251,251,252,252,253,254,255],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,203,41,42,43,44,45,46,49,50,276,51,216,52,53,217,277,54,55,56,281,57,282,58,59,60,61,62,218,219,220,221,210,63,64,65,66,304,305,306,307,0,1,2,227,67,230,231,68,70,71,313,74,75,234,76,77,235,78,237,239,240,241,242,321,322,323,324,325,326,327,329,330,331,332,333,263,79,80,81,82,83,85,86,87,338,88,89,92,93,94,95,96,97,98,99,100,101,102,103,359,109,110,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,368,139,140,141,142,143,144,150,151,152,245,246,155,414,415,416,156,248,158,159,160,161,162,163,438,165,442,443,444,446,447,448,449,450,451,452,453,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,457,459,460,461,462,464,465,471,194,195,472,473,196,475,214,253,215,476,477,254,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"min"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[53,55,278,283,284,479,218,480,285,219,286,287,481,482,288,483,484,289,485,220,290,291,292,293,294,221,486,487,488,489,497,0,490,491,492,493,494,495,70,496,251,252],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[41,48,79,95,359,109,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,420,161,164,165,166,167,168,169,170,172],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[498,499,500,501,502,492,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[20,197,34,38],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[23,24],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,490,491,492,493,495,70,496,504,505,251,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[79,359,160],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[80,82,83,84,85,86,87,88,478,89],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":18,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":109,"org.easymock.tests2.UsageTest.argumentsOrdered":50,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":399,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":46,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":214,"org.easymock.tests2.DelegateToTest.testReturnException":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":105,"org.easymock.tests.MockingTest.testPartialClassMocking":96,"org.easymock.tests.MockClassControlTest.testToString":371,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":303,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":482,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":118,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":219,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":158,"org.easymock.tests2.UsageTest.wrongArguments":44,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":357,"org.easymock.samples.ExampleTest.answerVsDelegate":194,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":250,"org.easymock.tests2.UsageConstraintsTest.testNull":20,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":353,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":77,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":330,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":376,"org.easymock.tests2.CaptureTest.testPrimitive":83,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":162,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":137,"org.easymock.tests.UsageTest.moreThanOneArgument":110,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":466,"org.easymock.tests.UsageTest.argumentsOrdered":116,"org.easymock.tests.UsageVarargTest.varargIntAccepted":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":225,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":274,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":103,"org.easymock.tests.ReplayStateInvalidUsageTest.times":430,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":210,"org.easymock.tests2.DependencyTest.testClassMocking":279,"org.easymock.tests2.AnswerTest.answer":63,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":406,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":312,"org.easymock.tests2.CaptureTest.testAnd":80,"org.easymock.tests2.UsageTest.strictResetToDefault":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":146,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":325,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":470,"org.easymock.tests2.DelegateToTest.testDelegate":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":133,"org.easymock.tests.LimitationsTest.mockFinalMethod":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":359,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":365,"org.easymock.tests2.DependencyTest.testClassMockingSupport":280,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":413,"org.easymock.tests2.CaptureTest.testCapture1_2446744":84,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":310,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":425,"org.easymock.tests.UsageThrowableTest.throwError":164,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":435,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":149,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":487,"org.easymock.samples.PartialClassMockTest.testGetArea":253,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":426,"org.easymock.tests.MockingTest.testInterfaceMocking":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":119,"org.easymock.tests2.UsageTest.niceToStrict":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":288,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":292,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":127,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":256,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":455,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":457,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":355,"org.easymock.tests.UsageOverloadedMethodTest.overloading":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":294,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":420,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":29,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":185,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":348,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":28,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":445,"org.easymock.tests2.EasyMockSupportClassTest.testAll":218,"org.easymock.tests.MockClassControlTest.testEquals":375,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":135,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":222,"org.easymock.tests2.CaptureTest.testCaptureAll":81,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":363,"org.easymock.tests.MockNameTest.defaultName":360,"org.easymock.tests2.UsageConstraintsTest.testMatches":30,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":148,"org.easymock.samples.ExampleTest.voteForRemovals":196,"org.easymock.tests.UsageVarargTest.allKinds":453,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.samples.BasicClassMockTest.testPrintContent":255,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":364,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":169,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":204,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":266,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":387,"org.easymock.tests2.UsageConstraintsTest.greaterThan":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":480,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":414,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":241,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":388,"org.easymock.samples.ExampleTest.voteForRemoval":195,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":316,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":264,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":236,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":248,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":323,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":104,"org.easymock.tests2.CaptureTest.testCaptureFirst":92,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":324,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":51,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":181,"org.easymock.tests2.UsageTest.moreThanOneArgument":43,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":73,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":407,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":68,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":452,"org.easymock.tests.GenericTest.testBridgedEquals":261,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":464,"org.easymock.tests.UsageExpectAndReturnTest.longType":177,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":361,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":136,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":233,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":456,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":269,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":366,"org.easymock.tests.UsageCallCountTest.tooManyCalls":465,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":168,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":52,"org.easymock.tests.MockingTest.testNiceClassMocking":354,"org.easymock.tests.MockingTest.testClassMocking":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":458,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":226,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":242,"org.easymock.tests2.UsageConstraintsTest.testFind":19,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":95,"org.easymock.tests.MockTypeTest.fromEasyMockClass":434,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":14,"org.easymock.tests.UsageExpectAndReturnTest.object":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":447,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":345,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":497,"org.easymock.tests.UsageTest.exactCallCountByLastCall":117,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":467,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":439,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":496,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":442,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":190,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":419,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":200,"org.easymock.tests.MockClassControlTest.testHashCode":374,"org.easymock.tests2.EasyMockSupportTest.testVerify":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":484,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":468,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":454,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":417,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":309,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":295,"org.easymock.tests.UsageVarargTest.varargCharAccepted":446,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":380,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":412,"org.easymock.tests2.UsageTest.openCallCountByLastCall":47,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":332,"org.easymock.tests.DefaultClassInstantiatorTest.object":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":199,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":297,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":239,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":124,"org.easymock.tests.CapturesMatcherTest.test":506,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":221,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":372,"org.easymock.tests2.UsageTest.resumeIfFailure":276,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":107,"org.easymock.tests2.StubTest.stubWithReturnValue":79,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":37,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":405,"org.easymock.samples.SupportTest.voteForRemovals":477,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":257,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":130,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":411,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":301,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":441,"org.easymock.tests.UsageExpectAndThrowTest.object":128,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":35,"org.easymock.tests2.DelegateToTest.testWrongClass":10,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":151,"org.easymock.tests.UsageStrictMockTest.range":142,"org.easymock.samples.ConstructorCalledMockTest.testTax":251,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":336,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":230,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":432,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":356,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":258,"org.easymock.tests2.CaptureTest.testCaptureNone":338,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":379,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":5,"org.easymock.tests.UsageUnorderedTest.message":163,"org.easymock.tests.UsageVerifyTest.twoReturns":173,"org.easymock.tests.UsageVarargTest.varargByteAccepted":451,"org.easymock.tests2.ThreadingTest.testThreadSafe":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":290,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":462,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":254,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":346,"org.easymock.tests2.CaptureTest.testCapture_2617107":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":409,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":161,"org.easymock.tests2.UsageConstraintsTest.any":25,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":429,"org.easymock.tests2.StubTest.stub":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndThrowTest.longType":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":106,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":385,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":428,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":59,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests.LimitationsTest.mockNativeMethod":93,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":193,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":247,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":208,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":224,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":62,"org.easymock.tests2.NameTest.nameForMocksControl":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":209,"org.easymock.tests2.MockedExceptionTest.testMockedException":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":285,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":122,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":98,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":267,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":231,"org.easymock.tests.MockingTest.testNicePartialClassMocking":97,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":296,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":154,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":23,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":36,"org.easymock.tests.MockingTest.testTwoMocks":243,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":126,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":39,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":7,"org.easymock.samples.ExampleTest.removeNonExistingDocument":474,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":157,"org.easymock.tests.UsageStrictMockTest.differentMethods":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":211,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":201,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":383,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":72,"org.easymock.tests2.MockBuilderTest.testCreateMockString":69,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":370,"org.easymock.tests.UsageExpectAndThrowTest.floatType":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":286,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":479,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":504,"org.easymock.tests.UsageVerifyTest.twoThrows":172,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":220,"org.easymock.samples.ExampleTest.voteAgainstRemoval":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":400,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":240,"org.easymock.tests.LimitationsTest.privateConstructor":340,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":489,"org.easymock.tests2.UsageConstraintsTest.testNotNull":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":170,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":318,"org.easymock.tests2.UsageTest.defaultResetToNice":275,"org.easymock.samples.ExampleTest.voteAgainstRemovals":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":189,"org.easymock.tests.UsageVarargTest.differentLength":448,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":207,"org.easymock.tests2.CallbackTest.callback":12,"org.easymock.tests2.UsageConstraintsTest.equals":268,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":505,"org.easymock.tests.UsageTest.openCallCountByLastCall":113,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":160,"org.easymock.tests.UsageCallCountTest.tooFewCalls":460,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":358,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":6,"org.easymock.tests.UsageThrowableTest.throwCheckedException":167,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":259,"org.easymock.tests.MockingTest.testStrictClassMocking":349,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":153,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":298,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":431,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":277,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":66,"org.easymock.tests.ObjectMethodsTest.testHashCode":344,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":74,"org.easymock.tests2.NameTest.nameForNiceMock":306,"org.easymock.tests2.DependencyTest.testInterfaceMocking":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.DelegateToTest.testStubDelegate":9,"org.easymock.tests2.AnswerTest.stubAnswer":65,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":140,"org.easymock.tests.UsageVarargTest.varargLongAccepted":450,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":398,"org.easymock.tests.UsageExpectAndReturnTest.floatType":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":70,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":252,"org.easymock.tests.UsageThrowableTest.noUpperLimit":438,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":273,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":16,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":334,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":85,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":175,"org.easymock.tests2.UsageConstraintsTest.testSame":21,"org.easymock.samples.SupportTest.addDocument":476,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":287,"org.easymock.tests.GenericTest.testPackageScope":245,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":205,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":352,"org.easymock.tests2.NameTest.nameForMock":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":495,"org.easymock.tests2.UsageStrictMockTest.differentMethods":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":132,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":416,"org.easymock.tests2.MockedExceptionTest.testRealException":320,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":402,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":58,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":433,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":159,"org.easymock.tests2.NameTest.nameForStrictMock":305,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":308,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":13,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":235,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":335,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":384,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":34,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":227,"org.easymock.tests2.UsageStrictMockTest.range":60,"org.easymock.tests2.UsageConstraintsTest.lessThan":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":483,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":4,"org.easymock.tests2.UsageConstraintsTest.testOr":22,"org.easymock.tests.UsageRangeTest.combination":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":234,"org.easymock.tests.UsageTest.wrongArguments":112,"org.easymock.tests2.MockBuilderTest.testWithConstructor":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":481,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":187,"org.easymock.tests.UsageVarargTest.varargShortAccepted":449,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":386,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":463,"org.easymock.tests2.UsageConstraintsTest.cmpTo":26,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":392,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":48,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":424,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":228,"org.easymock.tests.UsageTest.unexpectedCallWithArray":111,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":139,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":461,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":188,"org.easymock.tests2.CaptureTest.testCapture":478,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.UsageConstraintsTest.constraints":17,"org.easymock.samples.ExampleTest.addAndChangeDocument":475,"org.easymock.tests.UsageStrictMockTest.testVerify":369,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":215,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":368,"org.easymock.tests2.CompareToTest.testGreateThan":503,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":362,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":101,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":180,"org.easymock.tests.LimitationsTest.abstractClass":339,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":102,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":327}}]
