[{"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[1,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[5],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[21,22,23,24,25,26,2,27,28],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,8,67,68,69,70,71,72,73,74,5,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,9,167,168,169,10,11,170,171,12,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,13,257,14,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,0,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,15,327,328,329,330,21,22,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,6,376,377,378,379,380,381,7,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,2,3,4,16,441,442,443,444,445,17,18,446,447,448,449,19,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,27,478,479,28,480,481,482,483,484,485,486,487,20,488,489,490,491,492],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[149,9,11,257,16,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[155,384],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[56,61,124,270,307,493,2,469,494,471,472,475,476,477,478,480,481,495,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[496,497,498],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[288,289,290,0,297,298,6,376,378,379,380,381,7,382,383,384,393,394,398,399],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[31,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,64,65,66,8,67,68,69,70,71,72,73,74,5,75,76,78,79,80,81,83,84,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,126,127,128,129,131,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,9,167,168,169,10,11,170,171,12,174,175,176,178,195,196,197,199,200,201,202,203,204,205,206,223,229,231,244,245,246,247,248,249,251,252,253,254,255,256,13,257,14,258,259,260,262,263,264,265,266,267,268,269,270,271,272,273,273,274,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,0,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,312,313,314,315,318,319,321,322,323,324,325,326,15,327,328,329,330,21,342,352,355,365,371,374,375,6,376,378,379,380,381,7,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,409,410,411,412,413,414,415,421,428,429,430,431,432,433,434,435,436,437,438,439,440,2,3,4,16,441,442,443,444,445,17,18,446,447,448,449,19,450,452,460,461,462,463,465,466,467,469,471,475,477,478,481,484,485,486,487,20,488,489,490,491,492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[66,68,499,500,168,169,170,171,250,251,257,14,328,443,447,448],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[155,384],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[391,501],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[379,383,393,398],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[56,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[187,188,189,190,192,194],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[187,188,189,190,192,194],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[191,502,503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[504],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[66,505,506,168,507,508],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[312],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[308],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[121],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[382,388,400,509],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[1,2,3,4],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":376,"org.easymock.tests2.UsageTest.argumentsOrdered":448,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":438,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":217,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":445,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":276,"org.easymock.tests2.DelegateToTest.testReturnException":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":159,"org.easymock.tests.MockingTest.testPartialClassMocking":175,"org.easymock.tests.MockClassControlTest.testToString":138,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":320,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":98,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":355,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":410,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":23,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":382,"org.easymock.tests2.UsageTest.wrongArguments":443,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":93,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":184,"org.easymock.samples.ExampleTest.answerVsDelegate":280,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":61,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":180,"org.easymock.tests2.UsageConstraintsTest.testNull":379,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":304,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":437,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":143,"org.easymock.tests2.CaptureTest.testPrimitive":0,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":97,"org.easymock.tests.UsageTest.moreThanOneArgument":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":117,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":254,"org.easymock.tests.UsageTest.argumentsOrdered":171,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":72,"org.easymock.tests.UsageVarargTest.varargIntAccepted":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":262,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":469,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":455,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":426,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":266,"org.easymock.tests.ReplayStateInvalidUsageTest.times":239,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":342,"org.easymock.tests2.DependencyTest.testClassMocking":407,"org.easymock.tests2.AnswerTest.answer":20,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":335,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":58,"org.easymock.tests2.CaptureTest.testAnd":288,"org.easymock.tests2.UsageTest.strictResetToDefault":441,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":473,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":128,"org.easymock.tests2.DelegateToTest.testDelegate":406,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":113,"org.easymock.tests.LimitationsTest.mockFinalMethod":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":89,"org.easymock.tests2.DependencyTest.testClassMockingSupport":408,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":90,"org.easymock.tests2.CaptureTest.testCapture1_2446744":291,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":333,"org.easymock.tests.UsageThrowableTest.throwError":147,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":233,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":60,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":427,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":373,"org.easymock.samples.PartialClassMockTest.testGetArea":270,"org.easymock.tests.MockingTest.testInterfaceMocking":177,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":263,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":119,"org.easymock.tests2.UsageTest.niceToStrict":444,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":475,"org.easymock.tests2.MockBuilderTest.testCreateMock":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":345,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":107,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":433,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":57,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":166,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":182,"org.easymock.tests.UsageOverloadedMethodTest.overloading":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":388,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":247,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":47,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":502,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":387,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":296,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":198,"org.easymock.tests.MockClassControlTest.testEquals":142,"org.easymock.tests2.EasyMockSupportClassTest.testAll":352,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":87,"org.easymock.tests2.CaptureTest.testCaptureAll":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":334,"org.easymock.tests.MockNameTest.defaultName":243,"org.easymock.tests2.UsageConstraintsTest.testMatches":389,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":255,"org.easymock.samples.ExampleTest.voteForRemovals":284,"org.easymock.tests.UsageVarargTest.allKinds":206,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":88,"org.easymock.samples.BasicClassMockTest.testPrintContent":272,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":153,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":423,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":163,"org.easymock.tests2.UsageConstraintsTest.greaterThan":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":26,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":127,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":315,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":194,"org.easymock.samples.ExampleTest.voteForRemoval":281,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":412,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":316,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":456,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":307,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":430,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":158,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":401,"org.easymock.tests2.CaptureTest.testCaptureFirst":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":431,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":19,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":43,"org.easymock.tests2.UsageTest.moreThanOneArgument":442,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":414,"org.easymock.tests2.CaptureTest.testCapture2_2446744":299,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":225,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":205,"org.easymock.tests.GenericTest.testBridgedEquals":125,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":83,"org.easymock.tests.UsageExpectAndReturnTest.longType":39,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":428,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":85,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":116,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":396,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":157,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":268,"org.easymock.tests.UsageCallCountTest.tooManyCalls":84,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":103,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":461,"org.easymock.tests.MockingTest.testNiceClassMocking":181,"org.easymock.tests.MockingTest.testClassMocking":173,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":494,"org.easymock.tests2.UsageConstraintsTest.testContains":386,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":77,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":486,"org.easymock.tests2.UsageConstraintsTest.testFind":378,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":146,"org.easymock.tests.MockTypeTest.fromEasyMockClass":59,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":452,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":64,"org.easymock.tests.UsageExpectAndReturnTest.object":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":436,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":24,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":200,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":133,"org.easymock.tests.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":33,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":52,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":195,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":246,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":417,"org.easymock.tests.MockClassControlTest.testHashCode":141,"org.easymock.tests2.EasyMockSupportTest.testVerify":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":362,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":74,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":165,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":244,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":499,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":332,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":336,"org.easymock.tests.UsageVarargTest.varargCharAccepted":199,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":186,"org.easymock.tests2.CaptureTest.testCaptureMultiple":504,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":230,"org.easymock.tests2.UsageTest.openCallCountByLastCall":17,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":439,"org.easymock.tests.DefaultClassInstantiatorTest.object":187,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":164,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":131,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":363,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":416,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":140,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":267,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":371,"org.easymock.tests2.UsageTest.resumeIfFailure":449,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":161,"org.easymock.tests2.StubTest.stubWithReturnValue":319,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":27,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":45,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":223,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":508,"org.easymock.samples.SupportTest.voteForRemovals":278,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":419,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":110,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":1,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":229,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":488,"org.easymock.tests.UsageExpectAndThrowTest.object":108,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":35,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":394,"org.easymock.tests2.DelegateToTest.testWrongClass":404,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":259,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":260,"org.easymock.tests.UsageStrictMockTest.range":68,"org.easymock.samples.ConstructorCalledMockTest.testTax":273,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":458,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":435,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":460,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":477,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":170,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":183,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":505,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":120,"org.easymock.tests2.CaptureTest.testCaptureNone":295,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":497,"org.easymock.tests.UsageUnorderedTest.message":251,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":204,"org.easymock.tests2.ThreadingTest.testThreadSafe":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":366,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":81,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":134,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":271,"org.easymock.tests2.CaptureTest.testCapture_2617107":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":227,"org.easymock.tests2.UsageConstraintsTest.any":384,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":238,"org.easymock.tests2.StubTest.stub":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":160,"org.easymock.tests.UsageExpectAndThrowTest.longType":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":228,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":191,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":237,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":327,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":421,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":31,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":55,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":339,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":330,"org.easymock.tests2.NameTest.nameForMocksControl":324,"org.easymock.tests2.MockedExceptionTest.testMockedException":485,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":354,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":451,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":102,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":301,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":478,"org.easymock.tests.MockingTest.testNicePartialClassMocking":176,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":306,"org.easymock.tests2.CaptureTest.testCaptureLast":294,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":337,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":91,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":467,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":395,"org.easymock.tests.MockingTest.testTwoMocks":174,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":106,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":447,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":399,"org.easymock.samples.ExampleTest.removeNonExistingDocument":285,"org.easymock.tests.UsageStrictMockTest.differentMethods":69,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":418,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":498,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":189,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":413,"org.easymock.tests2.MockBuilderTest.testCreateMockString":483,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":136,"org.easymock.tests.UsageExpectAndThrowTest.floatType":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":356,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":490,"org.easymock.tests.UsageVerifyTest.twoThrows":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":331,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":365,"org.easymock.samples.ExampleTest.voteAgainstRemoval":282,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":218,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":314,"org.easymock.tests.LimitationsTest.privateConstructor":30,"org.easymock.tests2.UsageConstraintsTest.testNotNull":398,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":484,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":154,"org.easymock.tests2.UsageTest.defaultResetToNice":446,"org.easymock.samples.ExampleTest.voteAgainstRemovals":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":219,"org.easymock.tests.UsageVarargTest.differentLength":201,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":338,"org.easymock.tests2.CallbackTest.callback":287,"org.easymock.tests2.UsageConstraintsTest.equals":377,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":310,"org.easymock.tests.UsageTest.openCallCountByLastCall":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":374,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":95,"org.easymock.tests.UsageCallCountTest.tooFewCalls":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":463,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":185,"org.easymock.tests.UsageThrowableTest.throwCheckedException":151,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":506,"org.easymock.tests.MockingTest.testStrictClassMocking":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":466,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":156,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":462,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":343,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":465,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":492,"org.easymock.tests2.CompareToTest.testGreateOrEqual":509,"org.easymock.tests.ObjectMethodsTest.testHashCode":132,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":415,"org.easymock.tests2.NameTest.nameForNiceMock":323,"org.easymock.tests2.DependencyTest.testInterfaceMocking":409,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":25,"org.easymock.samples.ExampleTest.addDocument":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":367,"org.easymock.tests2.DelegateToTest.testStubDelegate":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.stubAnswer":491,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":479,"org.easymock.tests.UsageVarargTest.varargLongAccepted":203,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":216,"org.easymock.tests.UsageExpectAndReturnTest.floatType":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":425,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":392,"org.easymock.tests.UsageThrowableTest.noUpperLimit":148,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":375,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":453,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":292,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":503,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":188,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":37,"org.easymock.tests2.UsageConstraintsTest.testSame":380,"org.easymock.samples.SupportTest.addDocument":277,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":464,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":357,"org.easymock.tests.GenericTest.testPackageScope":122,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":424,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":179,"org.easymock.tests2.NameTest.nameForMock":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":482,"org.easymock.tests2.UsageStrictMockTest.differentMethods":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":311,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":112,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":129,"org.easymock.tests2.MockedExceptionTest.testRealException":487,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":221,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":94,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":242,"org.easymock.tests2.NameTest.nameForStrictMock":322,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":474,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":450,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":305,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":457,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":393,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":190,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":471,"org.easymock.tests2.UsageStrictMockTest.range":328,"org.easymock.tests2.UsageConstraintsTest.lessThan":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":215,"org.easymock.tests2.CaptureTest.testCaptureRightOne":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":361,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":496,"org.easymock.tests2.UsageConstraintsTest.testOr":381,"org.easymock.tests.UsageRangeTest.combination":126,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":302,"org.easymock.tests.UsageTest.wrongArguments":169,"org.easymock.tests2.MockBuilderTest.testWithConstructor":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":358,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":41,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":208,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":192,"org.easymock.tests.UsageVarargTest.varargShortAccepted":202,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":82,"org.easymock.tests2.UsageConstraintsTest.cmpTo":385,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":210,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":18,"org.easymock.tests2.CaptureTest.testCaptureFromStub":298,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":232,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":472,"org.easymock.tests.UsageTest.unexpectedCallWithArray":168,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":80,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":50,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":67,"org.easymock.samples.ExampleTest.addAndChangeDocument":286,"org.easymock.tests.UsageStrictMockTest.testVerify":71,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":275,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":65,"org.easymock.tests2.CompareToTest.testGreateThan":501,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":86,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":293,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":493,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":264,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":42,"org.easymock.tests.LimitationsTest.abstractClass":29,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":434,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":196}}]
