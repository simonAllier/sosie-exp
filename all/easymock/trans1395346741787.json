[{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"failures":[253],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[131],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"org.easymock.MockType.STRICT","org.easymock.MockType.STRICT":"type"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[254,255,256,257,258,259,260,238,242,261,262,263,264,265,266,267],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[168,169],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[256,259,268,269,270,271,272],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,119,273,198,200,201,202],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[163,170,174,274],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[154,275,168,172],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[5,118,276,218,220,223,245],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Invocation:99","failures":[0,3,6,7,8,9,277,85,142,144,159,204],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[278,122,123,124,279],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[280,83,84,126,247],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:114","sourceCode":"if (int == (java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    int--;\n} ","type":"CtIfImpl"},"failures":[281,282,283,25,36,284,40,83,84,285,286,287,208,215,216,227,245,288],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[289],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[5,118,276,218,220,221,223,224,225,245],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[0,290,291,292,293,294,3,4,5,6,7,295,8,9,11,12,15,296,17,22,297,24,298,299,300,282,283,25,26,32,33,34,36,37,301,38,39,302,303,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,304,305,306,307,308,309,310,311,312,313,314,315,85,86,87,88,89,90,91,92,93,316,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,317,318,319,125,285,126,127,320,321,131,133,134,135,136,137,138,139,140,141,142,143,144,322,147,149,150,151,152,153,154,155,156,157,158,275,159,160,161,162,163,164,165,166,167,168,169,170,323,171,172,173,174,175,176,177,178,179,180,181,182,183,324,184,185,325,326,186,187,188,189,191,192,193,194,195,196,327,198,199,200,202,203,204,205,206,207,208,209,210,328,211,329,212,213,214,330,331,215,216,217,218,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,332,333,334,335,336,337,246,288,247,248,338,249,250,251,252],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":152,"org.easymock.tests2.UsageTest.argumentsOrdered":331,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":21,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":329,"org.easymock.tests2.StubTest.stubWithReturnValue":244,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":256,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":292,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":66,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":171,"org.easymock.tests2.SerializationTest.testAllMockedMethod":327,"org.easymock.tests2.DelegateToTest.testReturnException":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":19,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":131,"org.easymock.tests.MockingTest.testPartialClassMocking":54,"org.easymock.samples.SupportTest.voteForRemovals":3,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":107,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":95,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":132,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":219,"org.easymock.tests.UsageExpectAndThrowTest.object":105,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":194,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":268,"org.easymock.tests2.DelegateToTest.testWrongClass":200,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":117,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":158,"org.easymock.tests2.UsageTest.wrongArguments":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":89,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":126,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":236,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":264,"org.easymock.tests2.UsageConstraintsTest.testNull":154,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":205,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests2.CaptureTest.testPrimitive":184,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":93,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":302,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":278,"org.easymock.tests.UsageTest.moreThanOneArgument":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":114,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":29,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":130,"org.easymock.tests2.CaptureTest.testCaptureNone":187,"org.easymock.tests.UsageUnorderedTest.message":25,"org.easymock.tests.UsageVerifyTest.twoReturns":84,"org.easymock.tests.UsageVarargTest.varargByteAccepted":312,"org.easymock.tests2.ThreadingTest.testThreadSafe":176,"org.easymock.tests.UsageTest.argumentsOrdered":303,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":10,"org.easymock.tests.UsageVarargTest.varargIntAccepted":306,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":300,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":290,"org.easymock.tests.InvocationTest.testEquals":277,"org.easymock.tests2.CaptureTest.testCapture_2617107":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":272,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":92,"org.easymock.tests2.UsageConstraintsTest.any":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":273,"org.easymock.tests2.StubTest.stub":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":81,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":20,"org.easymock.tests.UsageExpectAndThrowTest.longType":98,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.tests2.SerializationTest.testClass":195,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests.LimitationsTest.mockNativeMethod":17,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests2.AnswerTest.answer":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":76,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":16,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":275,"org.easymock.tests2.CaptureTest.testAnd":182,"org.easymock.tests2.UsageTest.strictResetToDefault":209,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":255,"org.easymock.tests2.NameTest.nameForMocksControl":335,"org.easymock.tests2.MockedExceptionTest.testMockedException":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":39,"org.easymock.tests2.DelegateToTest.testDelegate":202,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":14,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":99,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":206,"org.easymock.tests.MockingTest.testNicePartialClassMocking":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":110,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":231,"org.easymock.tests2.CaptureTest.testCaptureLast":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":242,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":157,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":170,"org.easymock.tests.MockingTest.testTwoMocks":253,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":316,"org.easymock.tests2.CaptureTest.testCapture1_2446744":185,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":57,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":103,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":330,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":173,"org.easymock.tests.UsageThrowableTest.throwError":46,"org.easymock.tests.UsageStrictMockTest.differentMethods":127,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":178,"org.easymock.tests2.MockBuilderTest.testCreateMockString":287,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":31,"org.easymock.tests.UsageExpectAndThrowTest.floatType":97,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":165,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":221,"org.easymock.tests.UsageVerifyTest.twoThrows":83,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":251,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":78,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":129,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":234,"org.easymock.tests2.UsageTest.niceToStrict":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":96,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":263,"org.easymock.tests2.UsageConstraintsTest.testNotNull":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":53,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":145,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":204,"org.easymock.tests2.MockBuilderTest.testCreateMock":286,"org.easymock.tests2.UsageTest.defaultResetToNice":214,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":72,"org.easymock.tests.UsageVarargTest.differentLength":309,"org.easymock.tests2.CallbackTest.callback":245,"org.easymock.tests.UsageTest.openCallCountByLastCall":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":104,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":149,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":91,"org.easymock.tests.UsageCallCountTest.tooFewCalls":298,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":265,"org.easymock.tests.UsageOverloadedMethodTest.overloading":33,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":120,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":68,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":32,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":162,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":188,"org.easymock.tests.UsageThrowableTest.throwCheckedException":50,"org.easymock.tests2.EasyMockSupportClassTest.testAll":249,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":112,"org.easymock.tests2.CaptureTest.testCaptureAll":183,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":241,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":238,"org.easymock.tests2.UsageConstraintsTest.testMatches":164,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":240,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":30,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":271,"org.easymock.tests2.NameTest.nameForNiceMock":334,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":180,"org.easymock.tests.UsageVarargTest.allKinds":314,"org.easymock.tests2.DependencyTest.testInterfaceMocking":193,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":270,"org.easymock.samples.BasicClassMockTest.testPrintContent":291,"org.easymock.samples.ExampleTest.addDocument":295,"org.easymock.tests2.DelegateToTest.testStubDelegate":199,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":52,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests2.AnswerTest.stubAnswer":222,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":23,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":125,"org.easymock.tests2.UsageConstraintsTest.greaterThan":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":86,"org.easymock.tests.UsageVarargTest.varargLongAccepted":311,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":235,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":320,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":75,"org.easymock.tests.UsageExpectAndReturnTest.floatType":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":217,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests.UsageThrowableTest.noUpperLimit":47,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":167,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":208,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":26,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":150,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":325,"org.easymock.tests2.SerializationTest.test":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":58,"org.easymock.tests2.UsageConstraintsTest.testSame":155,"org.easymock.samples.SupportTest.addDocument":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":18,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":197,"org.easymock.tests2.CaptureTest.testCaptureFirst":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":64,"org.easymock.tests.GenericTest.testPackageScope":15,"org.easymock.tests2.UsageTest.moreThanOneArgument":210,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":179,"org.easymock.tests2.CaptureTest.testCapture2_2446744":191,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":13,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":207,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":313,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":266,"org.easymock.tests2.NameTest.nameForMock":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":282,"org.easymock.tests.UsageExpectAndReturnTest.longType":60,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":113,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":258,"org.easymock.tests2.UsageStrictMockTest.differentMethods":248,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":27,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":61,"org.easymock.tests.UsageCallCountTest.tooManyCalls":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":109,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":88,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":24,"org.easymock.tests2.MockedExceptionTest.testRealException":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":276,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":237,"org.easymock.tests2.NameTest.nameForStrictMock":333,"org.easymock.tests2.UsageConstraintsTest.testContains":161,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":147,"org.easymock.tests2.UsageConstraintsTest.testFind":153,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":34,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":260,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":230,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":317,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":225,"org.easymock.tests.UsageExpectAndReturnTest.object":67,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":232,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":203,"org.easymock.tests2.UsageStrictMockTest.range":247,"org.easymock.tests2.UsageConstraintsTest.lessThan":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":269,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":267,"org.easymock.tests.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":41,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests2.CaptureTest.testCaptureRightOne":189,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":11,"org.easymock.tests2.UsageConstraintsTest.testOr":156,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":259,"org.easymock.tests.UsageRangeTest.combination":85,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":73,"org.easymock.tests.UsageTest.wrongArguments":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":119,"org.easymock.tests2.MockBuilderTest.testWithConstructor":254,"org.easymock.tests2.EasyMockSupportTest.testVerify":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":70,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":12,"org.easymock.tests.UsageVarargTest.varargShortAccepted":310,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":44,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":118,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":289,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":281,"org.easymock.tests2.UsageConstraintsTest.cmpTo":160,"org.easymock.tests.UsageVarargTest.varargCharAccepted":307,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":220,"org.easymock.tests2.CompareToTest.testLessThan":274,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":337,"org.easymock.tests2.UsageTest.openCallCountByLastCall":212,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":213,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":43,"org.easymock.tests2.CaptureTest.testCaptureFromStub":190,"org.easymock.tests.UsageTest.unexpectedCallWithArray":284,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":102,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":299,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":71,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":233,"org.easymock.tests2.UsageConstraintsTest.constraints":151,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":101,"org.easymock.tests.UsageStrictMockTest.testVerify":321,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":74,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":122,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":293,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":252,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":326,"org.easymock.tests2.UsageTest.resumeIfFailure":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":80,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":305,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139}}]
