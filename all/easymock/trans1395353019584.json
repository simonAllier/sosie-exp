[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[7,7,8,8,9,10,11,12,0,2,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[64],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[65,66,67,68,69,70,71],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[72],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:25","sourceCode":"-1951159588262854559L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[74,75,76],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[7,8,12,77,78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[79,80,34,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[121,122,123,124],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,7,8,8,143,144,82,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[182,183,184,185,186,187,188,189,190,191,7,7,8,8,192,9,10,11,193,194,195,196,197,198,199,200,201,12,202,203,143,204,205,206,207,0,1,2,208,13,14,15,16,209,17,18,210,211,212,213,214,215,216,217,218,219,220,144,221,222,23,24,223,25,26,27,28,29,30,31,32,33,224,225,79,80,34,81,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,82,145,146,249,250,147,148,149,150,251,252,253,254,151,255,152,153,256,154,155,257,258,259,260,261,156,157,158,262,263,264,265,266,267,122,123,36,38,40,41,42,43,44,45,47,83,268,269,270,271,272,273,84,274,275,276,277,278,48,49,50,51,279,280,281,282,283,284,285,160,161,162,163,164,286,287,288,85,289,290,291,86,87,292,293,294,165,295,296,297,298,299,300,301,302,303,88,89,90,91,92,93,304,305,306,307,308,309,310,311,312,54,55,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,94,348,349,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,350,57,166,115,351,352,353,354,355,167,168,116,117,169,356,357,118,358,359,360,361,362,363,364,365,366,367,368,170,171,172,173,174,175,176,59,60,61,369,62,370,371,372,373,374,375,63,376,377,378,379,119,380,381,382,383,120,384,385,386],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[79,80,34,81,82,4,387,388,88,89,90,91,92,93,343,115,116,389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[256],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[197,143,210,211,212,213,214,215,216,217,218,219,220,144,221,222,29,224,225,145,146,249,250,147,148,149,150,251,252,390,253,254,151,255,152,153,256,154,155,257,258,259,260,261,156,157,158,160,161,162,163,164,294,165,92,350,166,115,167,168,116,117,169,368,170,171],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:136","failures":[7,7,8,8,9,10,11,391,392,12,65,0,2,13,14,15,16,17,18,23,24,25,26,27,28,29,393,394,30,31,32,33,395,396,79,80,34,36,38,39,397,40,41,42,43,398,44,45,47,399,400,401,402,403,404,405,48,406,407,49,408,409,410,411,412,413,414,415,416,50,417,418,419,420,421,51,422,423,300,424,425,426,74,427,428,52,53,429,54,55,56,430,431,432,57,433,434,435,58,59,60,61,436,369,62,370,371,372,373,374,375,63],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[437,210,211,212,144,221,73,369],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[335,438,439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[197,199,143,204,210,211,212,213,214,215,216,217,218,219,220,144,221,222,29,30,224,225,440,227,145,146,249,250,147,148,149,150,251,252,390,253,254,151,255,152,153,256,154,155,257,258,259,260,261,156,157,158,160,161,162,163,164,294,165,92,93,350,166,115,351,167,168,116,117,169,368,170,171,172],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[74,75,76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[240,271],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[7,7,8,8,12,65,0,393,398],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":250,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":119,"org.easymock.tests2.UsageTest.argumentsOrdered":276,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":245,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":272,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":192,"org.easymock.tests2.DelegateToTest.testReturnException":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":89,"org.easymock.tests.MockingTest.testPartialClassMocking":59,"org.easymock.tests.MockClassControlTest.testToString":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":95,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":66,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":252,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":167,"org.easymock.tests2.UsageTest.wrongArguments":270,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":281,"org.easymock.samples.ExampleTest.answerVsDelegate":185,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":53,"org.easymock.tests2.UsageConstraintsTest.testNull":148,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":25,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":244,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":375,"org.easymock.tests2.CaptureTest.testPrimitive":213,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":114,"org.easymock.tests.UsageTest.moreThanOneArgument":380,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":174,"org.easymock.tests.UsageTest.argumentsOrdered":385,"org.easymock.tests.UsageVarargTest.varargIntAccepted":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":438,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":160,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":70,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":141,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":164,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":199,"org.easymock.tests.ReplayStateInvalidUsageTest.times":341,"org.easymock.tests2.DependencyTest.testClassMocking":391,"org.easymock.tests2.AnswerTest.answer":266,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":230,"org.easymock.tests2.CaptureTest.testAnd":210,"org.easymock.tests2.UsageTest.strictResetToDefault":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":239,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":378,"org.easymock.tests2.DelegateToTest.testDelegate":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":110,"org.easymock.tests.LimitationsTest.mockFinalMethod":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":355,"org.easymock.tests2.DependencyTest.testClassMockingSupport":392,"org.easymock.tests2.CaptureTest.testCapture1_2446744":214,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":228,"org.easymock.tests.UsageThrowableTest.throwError":287,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":335,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":176,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":423,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":96,"org.easymock.tests2.UsageTest.niceToStrict":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":177,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":40,"org.easymock.tests2.MockBuilderTest.testCreateMock":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":419,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":130,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":104,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":279,"org.easymock.tests.UsageOverloadedMethodTest.overloading":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":152,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":324,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":356,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":75,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":255,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":219,"org.easymock.tests2.EasyMockSupportClassTest.testAll":48,"org.easymock.tests.MockClassControlTest.testEquals":374,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":55,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":112,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":19,"org.easymock.tests2.CaptureTest.testCaptureAll":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":353,"org.easymock.tests2.UsageConstraintsTest.testMatches":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":175,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":333,"org.easymock.samples.ExampleTest.voteForRemovals":189,"org.easymock.tests.UsageVarargTest.allKinds":368,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":283,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":354,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":86,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":202,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":93,"org.easymock.tests2.UsageConstraintsTest.greaterThan":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":377,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":33,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":428,"org.easymock.samples.ExampleTest.voteForRemoval":186,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":395,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":28,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":237,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":88,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":64,"org.easymock.tests2.CaptureTest.testCaptureFirst":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":238,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":278,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":320,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":197,"org.easymock.tests2.CaptureTest.testCapture2_2446744":221,"org.easymock.tests2.UsageTest.moreThanOneArgument":269,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":367,"org.easymock.tests.GenericTest.testBridgedEquals":430,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":311,"org.easymock.tests.UsageExpectAndReturnTest.longType":316,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":351,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":113,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":46,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":159,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":111,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":172,"org.easymock.tests.UsageCallCountTest.tooManyCalls":312,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":291,"org.easymock.tests.MockingTest.testNiceClassMocking":436,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":14,"org.easymock.tests.MockingTest.testClassMocking":435,"org.easymock.tests2.UsageConstraintsTest.testContains":151,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":37,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":34,"org.easymock.tests2.UsageConstraintsTest.testFind":147,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":118,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":225,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndReturnTest.object":323,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":67,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":362,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":303,"org.easymock.tests.UsageTest.exactCallCountByLastCall":386,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":179,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":329,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":358,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":134,"org.easymock.tests.MockClassControlTest.testHashCode":373,"org.easymock.tests2.EasyMockSupportTest.testVerify":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":414,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":227,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":440,"org.easymock.tests.UsageVarargTest.varargCharAccepted":361,"org.easymock.tests2.CaptureTest.testCaptureMultiple":437,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":203,"org.easymock.tests2.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":246,"org.easymock.tests.DefaultClassInstantiatorTest.object":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":5,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":415,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":102,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":127,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":31,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":372,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":101,"org.easymock.tests.CapturesMatcherTest.test":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":51,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":371,"org.easymock.tests2.UsageTest.resumeIfFailure":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":91,"org.easymock.tests2.StubTest.stubWithReturnValue":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":71,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":261,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":322,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.samples.SupportTest.voteForRemovals":183,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":429,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":136,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":107,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":439,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":121,"org.easymock.tests.UsageExpectAndThrowTest.object":105,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":258,"org.easymock.tests2.DelegateToTest.testWrongClass":233,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests.UsageStrictMockTest.range":296,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":403,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":384,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":280,"org.easymock.tests2.CaptureTest.testCaptureNone":218,"org.easymock.tests.UsageUnorderedTest.message":350,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":72,"org.easymock.tests.UsageVerifyTest.twoReturns":285,"org.easymock.tests.UsageVarargTest.varargByteAccepted":366,"org.easymock.tests2.ThreadingTest.testThreadSafe":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":417,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests2.CaptureTest.testCapture_2617107":212,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":117,"org.easymock.tests2.UsageConstraintsTest.any":253,"org.easymock.tests2.StubTest.stub":248,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":388,"org.easymock.tests.UsageExpectAndThrowTest.longType":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":90,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":74,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":339,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":204,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":332,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":126,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":21,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":207,"org.easymock.tests2.NameTest.nameForMocksControl":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":128,"org.easymock.tests2.MockedExceptionTest.testMockedException":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":407,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":99,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":61,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":43,"org.easymock.tests.MockingTest.testNicePartialClassMocking":60,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":27,"org.easymock.tests2.CaptureTest.testCaptureLast":217,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":286,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":18,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":251,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":259,"org.easymock.tests.MockingTest.testTwoMocks":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":103,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":157,"org.easymock.samples.ExampleTest.removeNonExistingDocument":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":129,"org.easymock.tests.UsageStrictMockTest.differentMethods":297,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":135,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":425,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":196,"org.easymock.tests2.MockBuilderTest.testCreateMockString":47,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":408,"org.easymock.tests.UsageExpectAndThrowTest.floatType":97,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":405,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":267,"org.easymock.tests.UsageVerifyTest.twoThrows":284,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":50,"org.easymock.samples.ExampleTest.voteAgainstRemoval":187,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":32,"org.easymock.tests.LimitationsTest.privateConstructor":432,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":78,"org.easymock.tests2.UsageConstraintsTest.testNotNull":156,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":87,"org.easymock.tests2.UsageTest.defaultResetToNice":274,"org.easymock.samples.ExampleTest.voteAgainstRemovals":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":328,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":125,"org.easymock.tests.UsageVarargTest.differentLength":363,"org.easymock.tests2.CallbackTest.callback":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":393,"org.easymock.tests.UsageTest.openCallCountByLastCall":383,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":116,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":282,"org.easymock.tests.UsageThrowableTest.throwCheckedException":290,"org.easymock.tests.MockingTest.testStrictClassMocking":434,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":115,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":15,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":209,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":123,"org.easymock.tests.ObjectMethodsTest.testHashCode":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":69,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":198,"org.easymock.tests2.NameTest.nameForNiceMock":264,"org.easymock.tests2.DependencyTest.testInterfaceMocking":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":68,"org.easymock.samples.ExampleTest.addDocument":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.DelegateToTest.testStubDelegate":232,"org.easymock.tests2.AnswerTest.stubAnswer":122,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":165,"org.easymock.tests.UsageVarargTest.varargLongAccepted":365,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":298,"org.easymock.tests.UsageExpectAndReturnTest.floatType":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":140,"org.easymock.tests.UsageThrowableTest.noUpperLimit":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":146,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":399,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":215,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":76,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":424,"org.easymock.tests2.UsageConstraintsTest.testSame":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":314,"org.easymock.samples.SupportTest.addDocument":182,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":409,"org.easymock.tests.GenericTest.testPackageScope":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":178,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":139,"org.easymock.tests2.NameTest.nameForMock":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":325,"org.easymock.tests2.UsageStrictMockTest.differentMethods":206,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":394,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":109,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":379,"org.easymock.tests2.MockedExceptionTest.testRealException":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":180,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":168,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":344,"org.easymock.tests2.NameTest.nameForStrictMock":263,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":397,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":402,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":426,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":257,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":38,"org.easymock.tests2.UsageStrictMockTest.range":205,"org.easymock.tests2.UsageConstraintsTest.lessThan":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":137,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":35,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":413,"org.easymock.tests2.CaptureTest.testCaptureRightOne":220,"org.easymock.tests2.UsageConstraintsTest.testOr":150,"org.easymock.tests.UsageRangeTest.combination":376,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":24,"org.easymock.tests.UsageTest.wrongArguments":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":410,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":326,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":427,"org.easymock.tests.UsageVarargTest.varargShortAccepted":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":310,"org.easymock.tests2.UsageConstraintsTest.cmpTo":254,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":84,"org.easymock.tests2.CaptureTest.testCaptureFromStub":144,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":334,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":39,"org.easymock.tests.UsageTest.unexpectedCallWithArray":381,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":327,"org.easymock.tests2.UsageConstraintsTest.constraints":249,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":191,"org.easymock.tests.UsageStrictMockTest.testVerify":299,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":193,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests2.CompareToTest.testGreateThan":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":352,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":162,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":20,"org.easymock.tests.LimitationsTest.abstractClass":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":163,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":241,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":359}}]
