[{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:130","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[22,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[24,25,26,27,28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[32,33],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:286","sourceCode":"return this","type":"CtReturnImpl"},"failures":[0,1,2,4,6],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[24,24,25,25,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,26,52,53,54,55,56,57,58,59,60,61,62,27,63,64,65,66,67,68,69,70,71,72,73,74,29,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,32,112,113,114,33,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"classMockingDisabled"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[146,147,148,149,150,151,8,9,152,153,38,39,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,67,172,173,174,175,86,113,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,145,202,23,203],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[204,205,156,157,13,206,172,174,175,19,177,207,179,180,208,209,210,182,183,211,212,213,214,215,216,189,190,191,217,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[218],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[146,0,147,148,149,150,219,151,220,221,222,223,154,205,155,156,157,158,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,7,244,245,246,247,248,159,249,250,251,252,253,160,161,254,255,162,163,164,165,256,257,258,259,166,260,261,262,263,44,45,264,46,47,48,49,51,53,54,55,56,59,265,266,267,268,269,62,63,67,68,73,74,75,270,271,206,172,272,173,273,274,275,174,175,276,277,76,77,78,278,80,81,83,84,85,279,86,280,281,282,283,1,284,2,4,285,286,287,288,289,290,291,112,113,292,293,294,295,296,116,297,176,177,207,178,179,180,181,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,208,209,210,329,330,183,127,128,129,331,332,333,211,334,335,135,336,337,338,184,185,186,339,187,188,340,341,342,343,344,345,346,347,348,349,350,351,137,138,139,140,141,142,143,144,352,215,216,189,353,354,190,191,355,192,193,194,195,196,356,197,198,199,200,201,357,358,359,360,361,145,362,363,202,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,23,393,203,394,395,396,397,398,399,400,401,6,402,403,404],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[230,236],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:643","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2000","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[37,49,62,30,63,64,67,68,69,71,73,74,31,75,85,405,114,131,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[116,117,118,119,120,121,406,407,123],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[146,0,147,148,149,150,151,220,221,222,154,205,155,156,157,158,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,7,244,245,246,247,248,159,249,250,251,252,253,160,161,254,255,162,163,164,165,256,257,258,259,166,260,261,262,263,44,45,264,46,47,48,49,51,53,55,59,265,266,267,268,269,62,67,68,270,271,206,172,272,173,273,274,275,174,175,276,277,76,77,78,278,80,81,83,84,85,279,86,1,284,2,4,285,286,287,288,289,290,291,112,113,292,293,294,295,296,176,177,207,178,179,180,181,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,208,209,210,329,330,183,127,128,129,331,332,333,135,338,184,185,186,187,188,344,352,215,189,353,354,190,191,355,192,193,194,195,196,197,198,199,200,201,357,358,359,360,361,145,362,363,202,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,23,393,203,394,395,396,397,398,399,400,6,402,403],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[408],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[230,231,233,235,236,409,246,250,253,161,257],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[410,411],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":231,"org.easymock.tests2.UsageTest.argumentsOrdered":175,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":352,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":169,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":173,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":9,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":320,"org.easymock.tests.MockingTest.testPartialClassMocking":127,"org.easymock.tests.MockClassControlTest.testToString":139,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":97,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":373,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":237,"org.easymock.tests2.UsageTest.wrongArguments":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":362,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":290,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":132,"org.easymock.tests2.UsageConstraintsTest.testNull":233,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":168,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":144,"org.easymock.tests2.CaptureTest.testPrimitive":254,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":365,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":392,"org.easymock.tests.UsageTest.moreThanOneArgument":215,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":294,"org.easymock.tests.UsageTest.argumentsOrdered":191,"org.easymock.tests.UsageVarargTest.varargIntAccepted":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":357,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":42,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":361,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":13,"org.easymock.tests.ReplayStateInvalidUsageTest.times":348,"org.easymock.tests2.AnswerTest.answer":260,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":227,"org.easymock.tests2.CaptureTest.testAnd":253,"org.easymock.tests2.UsageTest.strictResetToDefault":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":293,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":327,"org.easymock.tests2.DelegateToTest.testDelegate":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":388,"org.easymock.tests.LimitationsTest.mockFinalMethod":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":182,"org.easymock.tests2.CaptureTest.testCapture1_2446744":255,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":386,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":225,"org.easymock.tests.UsageThrowableTest.throwError":393,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":342,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":111,"org.easymock.samples.PartialClassMockTest.testGetArea":37,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":98,"org.easymock.tests2.UsageTest.niceToStrict":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":374,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":106,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":382,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":288,"org.easymock.tests.UsageOverloadedMethodTest.overloading":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":102,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":402,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":310,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":331,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":406,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":241,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":256,"org.easymock.tests.MockClassControlTest.testEquals":143,"org.easymock.tests2.EasyMockSupportClassTest.testAll":90,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":390,"org.easymock.tests2.CaptureTest.testCaptureAll":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":370,"org.easymock.tests.MockNameTest.defaultName":217,"org.easymock.tests2.UsageConstraintsTest.testMatches":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":295,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":340,"org.easymock.samples.ExampleTest.voteForRemovals":150,"org.easymock.tests.UsageVarargTest.allKinds":201,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":208,"org.easymock.samples.BasicClassMockTest.testPrintContent":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":371,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":398,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":223,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":324,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":122,"org.easymock.tests2.UsageConstraintsTest.greaterThan":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":326,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":56,"org.easymock.samples.ExampleTest.voteForRemoval":147,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":123,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":57,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":49,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":145,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":270,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":72,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":319,"org.easymock.tests2.CaptureTest.testCaptureFirst":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":167,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":404,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":306,"org.easymock.tests2.UsageTest.moreThanOneArgument":206,"org.easymock.tests2.CaptureTest.testCapture2_2446744":259,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":268,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":200,"org.easymock.tests.GenericTest.testBridgedEquals":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":187,"org.easymock.tests.UsageExpectAndReturnTest.longType":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":368,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":391,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":31,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":159,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":292,"org.easymock.tests.UsageCallCountTest.tooManyCalls":188,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":378,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":397,"org.easymock.tests.MockingTest.testNiceClassMocking":130,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":80,"org.easymock.tests.MockingTest.testClassMocking":125,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":30,"org.easymock.tests2.UsageConstraintsTest.testContains":240,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":337,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":78,"org.easymock.tests2.UsageConstraintsTest.testFind":232,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":333,"org.easymock.tests.MockTypeTest.fromEasyMockClass":213,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":222,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndReturnTest.object":309,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":51,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":196,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":355,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":60,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":315,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":6,"org.easymock.tests.MockClassControlTest.testHashCode":142,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":17,"org.easymock.tests2.EasyMockSupportTest.testVerify":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":100,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":400,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":224,"org.easymock.tests.UsageVarargTest.varargCharAccepted":195,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":115,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":154,"org.easymock.tests2.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":170,"org.easymock.tests.DefaultClassInstantiatorTest.object":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":35,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":101,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":380,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":16,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":141,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":379,"org.easymock.tests.CapturesMatcherTest.test":411,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":316,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":34,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":109,"org.easymock.tests2.UsageTest.resumeIfFailure":276,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":131,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":322,"org.easymock.tests2.StubTest.stubWithReturnValue":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":70,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":249,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":308,"org.easymock.tests2.SerializationTest.testAllMockedMethod":86,"org.easymock.samples.SupportTest.voteForRemovals":153,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":385,"org.easymock.tests.UsageExpectAndThrowTest.object":383,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":247,"org.easymock.tests2.DelegateToTest.testWrongClass":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":366,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":367,"org.easymock.tests.UsageStrictMockTest.range":179,"org.easymock.samples.ConstructorCalledMockTest.testTax":24,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":384,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":69,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":289,"org.easymock.tests2.CaptureTest.testCaptureNone":165,"org.easymock.tests.UsageUnorderedTest.message":23,"org.easymock.tests.UsageVerifyTest.twoReturns":210,"org.easymock.tests.UsageVarargTest.varargByteAccepted":199,"org.easymock.tests2.ThreadingTest.testThreadSafe":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":104,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":186,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":38,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":212,"org.easymock.tests2.CaptureTest.testCapture_2617107":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":364,"org.easymock.tests2.UsageConstraintsTest.any":238,"org.easymock.tests2.StubTest.stub":286,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":321,"org.easymock.tests.UsageExpectAndThrowTest.longType":376,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":120,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":346,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests2.SerializationTest.testClass":85,"org.easymock.tests.LimitationsTest.mockNativeMethod":135,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":114,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":318,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":12,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":36,"org.easymock.tests2.NameTest.nameForMocksControl":283,"org.easymock.tests2.MockedExceptionTest.testMockedException":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":92,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":354,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":377,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":71,"org.easymock.tests.MockingTest.testNicePartialClassMocking":128,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":48,"org.easymock.tests2.CaptureTest.testCaptureLast":164,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":10,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":183,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":236,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":248,"org.easymock.tests.MockingTest.testTwoMocks":126,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":381,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":174,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":251,"org.easymock.samples.ExampleTest.removeNonExistingDocument":219,"org.easymock.tests.UsageStrictMockTest.differentMethods":180,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":18,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":118,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":267,"org.easymock.tests2.MockBuilderTest.testCreateMockString":75,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":94,"org.easymock.tests.UsageExpectAndThrowTest.floatType":375,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":61,"org.easymock.tests.UsageVerifyTest.twoThrows":209,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":103,"org.easymock.samples.ExampleTest.voteAgainstRemoval":148,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":55,"org.easymock.tests.LimitationsTest.privateConstructor":134,"org.easymock.tests2.UsageConstraintsTest.testNotNull":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":399,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":76,"org.easymock.tests2.UsageTest.defaultResetToNice":275,"org.easymock.samples.ExampleTest.voteAgainstRemovals":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":314,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":11,"org.easymock.tests.UsageVarargTest.differentLength":356,"org.easymock.tests2.CallbackTest.callback":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":26,"org.easymock.tests.UsageTest.openCallCountByLastCall":353,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":202,"org.easymock.tests.UsageCallCountTest.tooFewCalls":184,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":291,"org.easymock.tests.UsageThrowableTest.throwCheckedException":396,"org.easymock.tests.MockingTest.testStrictClassMocking":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":330,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":81,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":349,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":263,"org.easymock.tests.ObjectMethodsTest.testHashCode":334,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":269,"org.easymock.tests2.NameTest.nameForNiceMock":282,"org.easymock.tests2.DependencyTest.testInterfaceMocking":220,"org.easymock.samples.ExampleTest.addDocument":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":110,"org.easymock.tests2.DelegateToTest.testStubDelegate":284,"org.easymock.tests2.AnswerTest.stubAnswer":262,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":207,"org.easymock.tests.UsageVarargTest.varargLongAccepted":198,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":181,"org.easymock.tests.UsageExpectAndReturnTest.floatType":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":25,"org.easymock.tests.UsageThrowableTest.noUpperLimit":203,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":245,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":229,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":40,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":162,"org.easymock.tests2.SerializationTest.test":279,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":407,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":117,"org.easymock.tests2.UsageConstraintsTest.testSame":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":300,"org.easymock.samples.SupportTest.addDocument":152,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":95,"org.easymock.tests.GenericTest.testPackageScope":112,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":20,"org.easymock.tests2.NameTest.nameForMock":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":311,"org.easymock.tests2.UsageStrictMockTest.differentMethods":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":303,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":328,"org.easymock.tests2.MockedExceptionTest.testRealException":278,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":214,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":205,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":351,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":363,"org.easymock.tests2.NameTest.nameForStrictMock":281,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":66,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":43,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":119,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":22,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":246,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":63,"org.easymock.tests2.UsageStrictMockTest.range":156,"org.easymock.tests2.UsageConstraintsTest.lessThan":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":99,"org.easymock.tests2.CaptureTest.testCaptureRightOne":257,"org.easymock.tests2.UsageConstraintsTest.testOr":235,"org.easymock.tests.UsageRangeTest.combination":325,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":45,"org.easymock.tests.UsageTest.wrongArguments":189,"org.easymock.tests2.MockBuilderTest.testWithConstructor":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":96,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":312,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":121,"org.easymock.tests.UsageVarargTest.varargShortAccepted":197,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":339,"org.easymock.tests2.UsageConstraintsTest.cmpTo":239,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests2.CaptureTest.testCaptureFromStub":258,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":341,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":64,"org.easymock.tests.UsageTest.unexpectedCallWithArray":216,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":177,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":185,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":28,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":313,"org.easymock.tests2.CaptureTest.testCapture":410,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":178,"org.easymock.tests2.UsageConstraintsTest.constraints":230,"org.easymock.samples.ExampleTest.addAndChangeDocument":151,"org.easymock.tests2.ConstraintsToStringTest.containsToString":218,"org.easymock.tests.UsageStrictMockTest.testVerify":298,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":8,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":369,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":163,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":359,"org.easymock.tests.LimitationsTest.abstractClass":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":305,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":360,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":193}}]
