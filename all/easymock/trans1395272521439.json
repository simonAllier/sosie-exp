[{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,207,208,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,1,2,3,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,360,19,361,362,363,364,365,366,367,368,369,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,370,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,371,67,68,372,373,69,70,71,374,72,375,376,377,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,378,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,379,131,132,133,380,134,135,136,137,138,139,381,382,140,383,141,142,143,144,145,146,147,148,149,150,151,152,384,153,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,154,408,409,410,411,412,155,413,156,157,158,159,414,160,161,162,415,416,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,417,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,418,227,419,420,421,228,229,230,422,231,423,424,232,233,425,234,426,427,235,236,237,238,239,240,241,242,243,428,244,429,430,245,246,247,248,431,432,249,250,251,252,433,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,434,292,293,294,295,296,297,298,435,436,437,438,439,299,440,441,442,443,444,445,300,301,302,303,304,305,1,2,3,306,446,447,307,308,309,310,311,312,313,314,315,316,317,318,319,448,320,321,322,323,449,450,451,452,453,454,455,456,457,458,324,459,460,325,461,462,463,464,465,466,467,468,469,326,470,471,472,473,474,327,475,476,477,478,479,480,481,328,482,483,484,485,486,487,329,330,331,332,333,334,335,336,337,338,339,340,341,342,488,343,344,345,489,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[20,21,22,68,92,134,135,136,137,138,139,287,288,289,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[218,241,266],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[21,22,24,25],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[422,424,490,491,492,4,493,1,306,446],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:61","sourceCode":"java.io.InputStream java.io.InputStream = org.easymock.internal.EasyMockProperties.getClassLoader().getResourceAsStream(java.lang.String)","type":"CtLocalVariableImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,360,19,361,362,363,364,365,366,367,368,369,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,370,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,371,67,68,372,373,69,70,71,374,72,375,376,377,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,378,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,118,119,120,121,122,123,124,125,126,127,128,129,130,379,131,132,133,380,134,135,136,137,138,139,381,382,140,383,141,142,143,144,145,146,147,148,149,150,151,152,153,385,386,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,154,408,409,410,411,412,155,413,156,157,158,159,414,160,161,162,415,416,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,419,421,228,229,230,231,424,232,233,234,426,427,235,236,237,238,239,240,241,242,243,428,244,429,430,245,246,247,248,431,432,249,250,251,252,433,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,516,517,518,519,520,521,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,434,292,293,522,294,295,296,297,298,435,436,437,438,439,299,440,441,442,443,444,445,300,301,302,303,304,305,1,2,3,306,446,307,308,309,310,311,312,313,314,315,316,317,318,319,448,320,321,322,323,449,450,451,453,454,455,456,457,458,324,459,460,325,461,462,463,464,465,466,467,468,469,326,470,471,472,473,474,327,475,476,477,478,479,480,481,328,482,483,484,485,486,487,329,330,331,332,333,334,335,336,337,339,340,341,342,488,343,344,345,489,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[362,367,57,372,373,69,70,71,72,377,379,131,132,133,380,381,382,140,383,153,385,386,387,388,389,391,416,183,184,185,186,187,188,189,190,197,207,207,208,208,209,210,226,523,227,419,421,228,229,230,231,424,232,233,524,234,237,238,240,241,242,243,244,429,430,245,246,247,248,431,432,287,288,289,525,526,527,528,529,1,3,306,446,449,453,456,457,458,324,459,460,325,461,462,463,464,465,466,467,468,469,326,470,471,472,473,474,327,475,476,339,340,341,342,344,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[12,530,531,165,532,533],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[10,12,13,16,17,18,534,535,51,64,65,66,73,89,96,97,163,165,167,168,169,536,417,213,216,217,218,222,223,224,225,227,232,233,234,238,246,248,251,266,298,308,312,313,316,329,332,333,334],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"this"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[537],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[251,252,254,256,257,259,269,274,346,348,356],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,65,66,67,68,70,71,72,73,74,75,76,77,79,80,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,131,132,133,134,135,136,137,138,139,140,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,154,408,409,410,411,412,155,413,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,207,208,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,230,231,233,235,236,237,238,239,240,241,242,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,1,2,3,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[251,252,254,256,257,259,269,274,346,348,356],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[56,433],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"this","myArgument":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[228,524],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[218,241,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[422,490,491,492,538,539,446],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[11,12,13,16,17,362,365,366,367,368,369,371,87,88,89,95,96,97,160,415,416,165,166,168,169,185,186,187,215,216,222,223,226,419,230,231,233,234,238,245,248,432,299,440,310,313,315,320,321,322,323,328,482,331,333,334,340,341,344,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[12,13,16,17,534,535,83,89,96,97,165,168,216,222,223,333],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[67,68,89,90,91,92,93,94,138,166,172,173,191,192,193,194,195,256,260,331,347,353,354,359],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,540,540,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,70,71,72,73,75,76,77,79,80,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,156,157,158,159,163,164,165,166,167,168,169,170,172,173,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,305,1,2,3,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[12,13,16,17,535,89,96,97,165,168,216,222,223,333],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[541,538,539],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[257],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,59,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,88,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,207,208,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,247,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,280,281,282,283,284,285,286,287,288,289,290,293,294,295,296,297,299,301,302,303,305,1,2,3,306,307,308,309,310,311,312,313,314,315,316,317,318,319,324,325,326,327,328,330,331,332,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:136","failures":[362,367,57,372,373,69,70,71,72,377,379,131,132,133,380,381,382,140,383,153,385,386,387,388,389,391,183,184,185,186,187,188,189,190,197,207,207,208,208,209,210,226,227,419,421,228,229,230,231,424,232,233,234,426,427,237,238,240,241,242,243,244,429,430,245,246,247,248,431,432,287,288,289,1,3,306,446,449,450,451,453,456,457,458,324,459,460,325,461,462,463,464,465,466,467,468,469,326,470,471,472,473,474,327,475,476,339,340,341,342,344,345],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:70","failures":[168,169,333,334],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":252,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests2.UsageTest.argumentsOrdered":223,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":402,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":218,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":198,"org.easymock.tests2.DelegateToTest.testReturnException":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":135,"org.easymock.tests.MockingTest.testPartialClassMocking":70,"org.easymock.tests.MockClassControlTest.testToString":185,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":448,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":26,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":325,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":236,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":515,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":90,"org.easymock.tests2.UsageTest.wrongArguments":216,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":487,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":158,"org.easymock.samples.ExampleTest.answerVsDelegate":200,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":367,"org.easymock.tests2.UsageConstraintsTest.testNull":254,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":240,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":190,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":316,"org.easymock.tests2.CaptureTest.testPrimitive":349,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":94,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":45,"org.easymock.tests.UsageTest.moreThanOneArgument":11,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":7,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":178,"org.easymock.tests.UsageTest.argumentsOrdered":17,"org.easymock.tests.UsageVarargTest.varargIntAccepted":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":539,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":226,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":451,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":444,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":195,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":499,"org.easymock.tests.ReplayStateInvalidUsageTest.times":149,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":328,"org.easymock.tests2.DependencyTest.testClassMocking":426,"org.easymock.tests2.AnswerTest.answer":277,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":408,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":286,"org.easymock.tests2.CaptureTest.testAnd":346,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":364,"org.easymock.tests2.UsageTest.strictResetToDefault":214,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":6,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":311,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":182,"org.easymock.tests2.DelegateToTest.testDelegate":305,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":498,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":41,"org.easymock.tests.LimitationsTest.mockFinalMethod":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":130,"org.easymock.tests2.DependencyTest.testClassMockingSupport":427,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":87,"org.easymock.tests2.CaptureTest.testCapture1_2446744":350,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":284,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":143,"org.easymock.tests.UsageThrowableTest.throwError":118,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":366,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":445,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":417,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":476,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":502,"org.easymock.samples.PartialClassMockTest.testGetArea":197,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":144,"org.easymock.tests.MockingTest.testInterfaceMocking":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":465,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":416,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":27,"org.easymock.tests2.UsageTest.niceToStrict":217,"org.easymock.tests2.ThreadingTest.testChangeDefault":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":228,"org.easymock.tests2.MockBuilderTest.testCreateMock":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":484,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":532,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":35,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":363,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":156,"org.easymock.tests.UsageOverloadedMethodTest.overloading":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":80,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":109,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":84,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":263,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":355,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":370,"org.easymock.tests.MockClassControlTest.testEquals":189,"org.easymock.tests2.EasyMockSupportClassTest.testAll":324,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":132,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":43,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":525,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":285,"org.easymock.tests2.CaptureTest.testCaptureAll":347,"org.easymock.tests.MockNameTest.defaultName":371,"org.easymock.tests2.UsageConstraintsTest.testMatches":265,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":8,"org.easymock.samples.ExampleTest.voteForRemovals":204,"org.easymock.tests.UsageVarargTest.allKinds":56,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":129,"org.easymock.samples.BasicClassMockTest.testPrintContent":210,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":124,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":139,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":493,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":390,"org.easymock.tests2.UsageConstraintsTest.greaterThan":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":74,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":248,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":503,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":391,"org.easymock.samples.ExampleTest.voteForRemoval":201,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":431,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":294,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":368,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":243,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":495,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":57,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":213,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":309,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":134,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":300,"org.easymock.tests2.CaptureTest.testCaptureFirst":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":310,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":225,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":83,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":105,"org.easymock.tests2.UsageTest.moreThanOneArgument":215,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":296,"org.easymock.tests2.CaptureTest.testCapture2_2446744":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":409,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":233,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":55,"org.easymock.tests.GenericTest.testBridgedEquals":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":65,"org.easymock.tests.UsageExpectAndReturnTest.longType":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":126,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":307,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":524,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":44,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":177,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":272,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":5,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":21,"org.easymock.tests.UsageCallCountTest.tooManyCalls":66,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":486,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":123,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":340,"org.easymock.tests.MockingTest.testNiceClassMocking":377,"org.easymock.tests.MockingTest.testClassMocking":373,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":523,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":59,"org.easymock.tests2.UsageConstraintsTest.testContains":262,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":289,"org.easymock.tests2.UsageConstraintsTest.testFind":253,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":86,"org.easymock.tests.MockTypeTest.fromEasyMockClass":365,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":292,"org.easymock.tests.UsageExpectAndReturnTest.object":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":485,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":315,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":491,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":50,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":162,"org.easymock.tests.UsageTest.exactCallCountByLastCall":18,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":179,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":446,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":114,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":46,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":79,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":436,"org.easymock.tests.MockClassControlTest.testHashCode":188,"org.easymock.tests2.EasyMockSupportTest.testVerify":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":467,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":180,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":24,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":77,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":534,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":283,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":338,"org.easymock.tests.UsageVarargTest.varargCharAccepted":49,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":384,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastCall":219,"org.easymock.tests.DefaultClassInstantiatorTest.object":153,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":23,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":160,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":535,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":468,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":33,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":529,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":480,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":435,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":501,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":246,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":32,"org.easymock.tests.CapturesMatcherTest.test":540,"org.easymock.tests.ReplayStateInvalidCallsTest.times":507,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":115,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":20,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":508,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":327,"org.easymock.tests2.UsageTest.resumeIfFailure":224,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":137,"org.easymock.tests2.StubTest.stubWithReturnValue":337,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":422,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":107,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":273,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":154,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":533,"org.easymock.samples.SupportTest.voteForRemovals":212,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":379,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":438,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":38,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":155,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":278,"org.easymock.tests.UsageExpectAndThrowTest.object":36,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":361,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":270,"org.easymock.tests2.DelegateToTest.testWrongClass":303,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":505,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":172,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":173,"org.easymock.tests.UsageStrictMockTest.range":168,"org.easymock.samples.ConstructorCalledMockTest.testTax":207,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":454,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":314,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":456,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":151,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":157,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":530,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":497,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":176,"org.easymock.tests2.CaptureTest.testCaptureNone":354,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":517,"org.easymock.tests.UsageUnorderedTest.message":89,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":536,"org.easymock.tests.UsageVerifyTest.twoReturns":97,"org.easymock.tests.UsageVarargTest.varargByteAccepted":54,"org.easymock.tests2.ThreadingTest.testThreadSafe":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":470,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":63,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":415,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":209,"org.easymock.tests2.CaptureTest.testCapture_2617107":348,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":93,"org.easymock.tests2.UsageConstraintsTest.any":260,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":148,"org.easymock.tests2.StubTest.stub":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":136,"org.easymock.tests.UsageExpectAndThrowTest.longType":29,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":388,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":147,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":332,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":299,"org.easymock.tests.LimitationsTest.mockNativeMethod":140,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":117,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":528,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":479,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":513,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":335,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":518,"org.easymock.tests2.NameTest.nameForMocksControl":323,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":481,"org.easymock.tests2.MockedExceptionTest.testMockedException":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":460,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":15,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":434,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":30,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":237,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":231,"org.easymock.tests.MockingTest.testNicePartialClassMocking":71,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":541,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":477,"org.easymock.tests2.CaptureTest.testCaptureLast":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":88,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":512,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":257,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":345,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":271,"org.easymock.tests.MockingTest.testTwoMocks":69,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":509,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":489,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":34,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":222,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":275,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":521,"org.easymock.samples.ExampleTest.removeNonExistingDocument":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":483,"org.easymock.tests.UsageStrictMockTest.differentMethods":169,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":145,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":437,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":520,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":386,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":295,"org.easymock.tests2.MockBuilderTest.testCreateMockString":234,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":461,"org.easymock.tests.UsageExpectAndThrowTest.floatType":28,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":280,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":447,"org.easymock.tests.UsageVerifyTest.twoThrows":96,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":326,"org.easymock.samples.ExampleTest.voteAgainstRemoval":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":174,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":247,"org.easymock.tests.LimitationsTest.privateConstructor":382,"org.easymock.tests2.UsageConstraintsTest.testNotNull":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":125,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":287,"org.easymock.tests2.UsageTest.defaultResetToNice":221,"org.easymock.samples.ExampleTest.voteAgainstRemovals":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":113,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":478,"org.easymock.tests.UsageVarargTest.differentLength":51,"org.easymock.tests2.CallbackTest.callback":298,"org.easymock.tests2.UsageConstraintsTest.equals":433,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":429,"org.easymock.tests.UsageTest.openCallCountByLastCall":14,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":249,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":92,"org.easymock.tests.UsageCallCountTest.tooFewCalls":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":159,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":519,"org.easymock.tests.UsageThrowableTest.throwCheckedException":122,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":531,"org.easymock.tests.MockingTest.testStrictClassMocking":372,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":68,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":482,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":341,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":343,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":282,"org.easymock.tests.ObjectMethodsTest.testHashCode":161,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":538,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":511,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":297,"org.easymock.tests2.NameTest.nameForNiceMock":322,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":506,"org.easymock.tests2.DependencyTest.testInterfaceMocking":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":492,"org.easymock.samples.ExampleTest.addDocument":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.DelegateToTest.testStubDelegate":302,"org.easymock.tests2.AnswerTest.stubAnswer":281,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":166,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":423,"org.easymock.tests.UsageVarargTest.varargLongAccepted":53,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":116,"org.easymock.tests.UsageExpectAndReturnTest.floatType":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":306,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":443,"org.easymock.tests.UsageThrowableTest.noUpperLimit":119,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":81,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":268,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":250,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":449,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":351,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":99,"org.easymock.tests2.UsageConstraintsTest.testSame":255,"org.easymock.samples.SupportTest.addDocument":211,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":488,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":496,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":462,"org.easymock.tests.GenericTest.testPackageScope":131,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":442,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":375,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":494,"org.easymock.tests2.NameTest.nameForMock":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":425,"org.easymock.tests2.UsageStrictMockTest.differentMethods":334,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":430,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":40,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":414,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":76,"org.easymock.tests2.MockedExceptionTest.testRealException":290,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":369,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":405,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":331,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":91,"org.easymock.tests2.NameTest.nameForStrictMock":321,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":291,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":453,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":387,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":269,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":227,"org.easymock.tests2.UsageStrictMockTest.range":333,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":500,"org.easymock.tests2.UsageConstraintsTest.lessThan":276,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":526,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":400,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":4,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":466,"org.easymock.tests2.CaptureTest.testCaptureRightOne":356,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":516,"org.easymock.tests2.UsageConstraintsTest.testOr":256,"org.easymock.tests.UsageRangeTest.combination":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":238,"org.easymock.tests.UsageTest.wrongArguments":13,"org.easymock.tests2.MockBuilderTest.testWithConstructor":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":463,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":111,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":389,"org.easymock.tests.UsageVarargTest.varargShortAccepted":52,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":64,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":514,"org.easymock.tests2.UsageConstraintsTest.cmpTo":261,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":279,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":395,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":220,"org.easymock.tests2.CaptureTest.testCaptureFromStub":357,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":142,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":419,"org.easymock.tests.UsageTest.unexpectedCallWithArray":12,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":510,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":62,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":112,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.UsageConstraintsTest.constraints":251,"org.easymock.samples.ExampleTest.addAndChangeDocument":206,"org.easymock.tests2.ConstraintsToStringTest.containsToString":537,"org.easymock.tests.UsageStrictMockTest.testVerify":171,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":196,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":127,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":352,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":527,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":193,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":104,"org.easymock.tests.LimitationsTest.abstractClass":381,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":194,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":313}}]
