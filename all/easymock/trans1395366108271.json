[{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[13,54,55,64,65,66,67,68,69,70,87,89,90,91,92,93,129,130,131,156,157,189,298,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,267,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[205,206,300],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[301,302,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[304,305],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[306,307,308,309,310,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,0,1,1,14,55,64,66,67,70,312,89,90,91,92,93,129,130,313,314,315,316,317,147,148,149,150,151,159,189,232,233,236,237,238,239,245,247,248,250,251,252,257,258,259,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[318,319,320,321,15,16,17,19,55,57,58,131,177,189,191,192],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[253],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[322,323,20,54,324,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[249],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[36,42,49,50,62,84,93,98,111,117,124,125,148],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[3,5,15,16,18,19,22,23,33,34,37,39,40,41,42,44,45,46,47,49,50,51,52,55,57,58,64,66,67,70,87,89,90,91,92,93,106,107,108,109,112,114,115,116,117,119,120,121,122,124,125,126,127,129,130,134,137,138,139,140,141,152,153,154,155,156,157,159,160,161,162,165,166,169,171,174,176,177,179,181,182,186,189,191,192,199,200,213,227,228,232,233,234,235,236,237,238,239,240,241,243,245,246,247,248,249,250,251,252,253,254,256,257,258,259,264,270,274,276,277,280,281,282,283,286,290,293],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[326,0,0,1,1,327,2,3,328,4,5,6,7,329,8,9,330,331,332,333,334,335,336,337,338,339,340,13,15,16,17,18,19,20,21,22,23,24,25,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,341,54,55,56,57,58,59,342,64,65,66,67,68,69,70,343,344,345,346,347,348,71,72,73,74,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,349,350,102,351,352,353,103,354,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,355,134,135,136,137,138,139,140,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,356,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,357,189,190,191,192,193,194,358,359,360,361,195,198,199,200,201,202,203,204,205,206,300,207,208,209,210,211,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,267,268,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,293,294,295,296,297],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[299,196,199,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,0,1,1,3,4,5,7,362,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,342,64,65,66,67,70,312,343,363,344,345,364,346,365,366,347,367,348,71,72,73,74,75,76,77,78,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,350,368,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,369,355,370,371,372,373,374,375,376,377,378,379,134,136,137,138,139,140,141,147,148,149,150,151,152,153,154,155,159,160,161,162,163,164,165,166,167,168,169,170,171,356,172,173,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,298,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,276,277,282,283,284,285,287,289,290,291,293,294,295,296,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[16,18,23,136,175,182],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[199,200],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[322,323,54,324,325],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[380,16,17,20,21,24,25,54,57,81,131,178,184,185,191],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[326,0,1,327,2,3,328,4,5,6,7,329,8,362,9,330,331,332,333,334,335,336,381,337,338,339,340,13,15,16,17,18,19,20,21,22,23,24,25,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,341,54,55,56,57,58,59,342,64,65,66,67,68,69,70,312,343,363,344,345,364,346,365,366,347,367,348,71,72,73,74,75,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,349,350,102,351,352,353,368,382,383,103,354,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,369,355,370,371,372,373,374,375,376,377,378,379,134,135,136,137,138,139,140,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,356,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,357,189,190,191,192,193,194,358,359,360,361,195,198,199,200,201,202,203,204,205,206,300,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,293,294,295,296,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[384,385],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[386,387,388],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":235,"org.easymock.tests2.UsageTest.argumentsOrdered":185,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":170,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":180,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":328,"org.easymock.tests2.DelegateToTest.testReturnException":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":84,"org.easymock.tests.MockingTest.testPartialClassMocking":30,"org.easymock.tests.MockClassControlTest.testToString":370,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":108,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":208,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":318,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":173,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":241,"org.easymock.tests2.UsageTest.wrongArguments":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":73,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests2.UsageConstraintsTest.testNull":237,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":263,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":169,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":375,"org.easymock.tests2.CaptureTest.testPrimitive":276,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":127,"org.easymock.tests.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":149,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":142,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageVarargTest.varargIntAccepted":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":211,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":93,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":287,"org.easymock.tests.ReplayStateInvalidUsageTest.times":366,"org.easymock.tests2.AnswerTest.answer":195,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":204,"org.easymock.tests2.CaptureTest.testAnd":273,"org.easymock.tests2.UsageTest.strictResetToDefault":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":154,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":146,"org.easymock.tests2.DelegateToTest.testDelegate":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":98,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":27,"org.easymock.tests2.CaptureTest.testCapture1_2446744":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":202,"org.easymock.tests.UsageThrowableTest.throwError":134,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":151,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":90,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":61,"org.easymock.tests2.UsageTest.niceToStrict":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":213,"org.easymock.tests2.MockBuilderTest.testCreateMock":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":117,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":324,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":71,"org.easymock.tests.UsageOverloadedMethodTest.overloading":106,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":78,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":247,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":44,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":387,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":246,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":282,"org.easymock.tests2.EasyMockSupportClassTest.testAll":207,"org.easymock.tests.MockClassControlTest.testEquals":374,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":203,"org.easymock.tests2.CaptureTest.testCaptureAll":274,"org.easymock.tests2.UsageConstraintsTest.testMatches":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":150,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":312,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":13,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":97,"org.easymock.samples.BasicClassMockTest.testPrintContent":331,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":140,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":88,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":292,"org.easymock.tests2.UsageConstraintsTest.greaterThan":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":153,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":271,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":266,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":175,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":162,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":83,"org.easymock.tests2.CaptureTest.testCaptureFirst":286,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":163,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":187,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":81,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":40,"org.easymock.tests2.UsageTest.moreThanOneArgument":177,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":230,"org.easymock.tests2.CaptureTest.testCapture2_2446744":285,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":218,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":340,"org.easymock.tests.GenericTest.testBridgedEquals":305,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":382,"org.easymock.tests.UsageExpectAndReturnTest.longType":36,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":94,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":126,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":14,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":100,"org.easymock.tests.UsageCallCountTest.tooManyCalls":383,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":221,"org.easymock.tests2.UsageConstraintsTest.testContains":245,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":350,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":296,"org.easymock.tests2.UsageConstraintsTest.testFind":236,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":107,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":157,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":53,"org.easymock.tests.UsageExpectAndReturnTest.object":43,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":168,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":336,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":379,"org.easymock.tests.UsageTest.exactCallCountByLastCall":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":49,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":77,"org.easymock.tests.ResultTest.createThrowResultToString":303,"org.easymock.tests.MockClassControlTest.testHashCode":373,"org.easymock.tests2.EasyMockSupportTest.testVerify":356,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":11,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":201,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":298,"org.easymock.tests.UsageVarargTest.varargCharAccepted":335,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":357,"org.easymock.tests2.UsageTest.openCallCountByLastCall":181,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":171,"org.easymock.tests.DefaultClassInstantiatorTest.object":376,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":10,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":377,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":380,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":137,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":269,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":372,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":114,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":50,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":210,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":371,"org.easymock.tests2.UsageTest.resumeIfFailure":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":86,"org.easymock.tests2.StubTest.stubWithReturnValue":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":256,"org.easymock.tests2.SerializationTest.testAllMockedMethod":300,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":132,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":325,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":304,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":120,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":133,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":196,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":385,"org.easymock.tests.UsageExpectAndThrowTest.object":118,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":253,"org.easymock.tests2.DelegateToTest.testWrongClass":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":129,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":130,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":57,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":167,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":220,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":215,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":72,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":322,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":62,"org.easymock.tests2.CaptureTest.testCaptureNone":281,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":307,"org.easymock.tests.UsageUnorderedTest.message":131,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.UsageVarargTest.varargByteAccepted":339,"org.easymock.tests2.ThreadingTest.testThreadSafe":227,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":353,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":330,"org.easymock.tests2.CaptureTest.testCapture_2617107":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":69,"org.easymock.tests2.UsageConstraintsTest.any":243,"org.easymock.tests2.StubTest.stub":158,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":365,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":101,"org.easymock.tests.UsageExpectAndThrowTest.longType":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":85,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":386,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":346,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests2.SerializationTest.testClass":205,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":272,"org.easymock.tests.LimitationsTest.mockNativeMethod":128,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":52,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":308,"org.easymock.tests2.NameTest.nameForMocksControl":361,"org.easymock.tests2.MockedExceptionTest.testMockedException":295,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":112,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":32,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":260,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":216,"org.easymock.tests.MockingTest.testNicePartialClassMocking":31,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":265,"org.easymock.tests2.CaptureTest.testCaptureLast":280,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":28,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":226,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":240,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":254,"org.easymock.tests.MockingTest.testTwoMocks":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":116,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":184,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":258,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":311,"org.easymock.samples.ExampleTest.removeNonExistingDocument":362,"org.easymock.tests.UsageStrictMockTest.differentMethods":58,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":345,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":310,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":229,"org.easymock.tests2.MockBuilderTest.testCreateMockString":219,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":369,"org.easymock.tests.UsageExpectAndThrowTest.floatType":110,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":249,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":198,"org.easymock.tests.ResultTest.createReturnResultToString":302,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":209,"org.easymock.tests.ResultTest.createDelegateResultToString":301,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":60,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":270,"org.easymock.tests2.UsageConstraintsTest.testNotNull":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":141,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":294,"org.easymock.tests2.UsageTest.defaultResetToNice":183,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":48,"org.easymock.tests.UsageVarargTest.differentLength":381,"org.easymock.tests2.CallbackTest.callback":174,"org.easymock.tests.UsageTest.openCallCountByLastCall":22,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":68,"org.easymock.tests.UsageCallCountTest.tooFewCalls":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":223,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":74,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":309,"org.easymock.tests.UsageThrowableTest.throwCheckedException":138,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":323,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":225,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":222,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":224,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":200,"org.easymock.tests.ObjectMethodsTest.testHashCode":378,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":231,"org.easymock.tests2.NameTest.nameForNiceMock":360,"org.easymock.tests2.DependencyTest.testInterfaceMocking":172,"org.easymock.samples.ExampleTest.addDocument":329,"org.easymock.tests2.DelegateToTest.testStubDelegate":290,"org.easymock.tests2.AnswerTest.stubAnswer":199,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":55,"org.easymock.tests.UsageVarargTest.varargLongAccepted":338,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":59,"org.easymock.tests.UsageExpectAndReturnTest.floatType":35,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":51,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":194,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.UsageThrowableTest.noUpperLimit":135,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":79,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":251,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":233,"org.easymock.tests2.SerializationTest.test":206,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":278,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":34,"org.easymock.tests2.UsageConstraintsTest.testSame":238,"org.easymock.samples.SupportTest.addDocument":327,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":364,"org.easymock.tests.GenericTest.testPackageScope":103,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.NameTest.nameForMock":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":45,"org.easymock.tests2.UsageStrictMockTest.differentMethods":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":37,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":155,"org.easymock.tests2.MockedExceptionTest.testRealException":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":348,"org.easymock.tests2.NameTest.nameForStrictMock":359,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":264,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":252,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":319,"org.easymock.tests.ErrorMessageTest.testGetters":320,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":212,"org.easymock.tests2.UsageStrictMockTest.range":191,"org.easymock.tests2.UsageConstraintsTest.lessThan":259,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":161,"org.easymock.tests2.CaptureTest.testCaptureRightOne":283,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":306,"org.easymock.tests2.UsageConstraintsTest.testOr":239,"org.easymock.tests.UsageRangeTest.combination":152,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":261,"org.easymock.tests.UsageTest.wrongArguments":21,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":46,"org.easymock.tests.UsageVarargTest.varargShortAccepted":337,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":368,"org.easymock.tests2.UsageConstraintsTest.cmpTo":244,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":197,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":182,"org.easymock.tests2.CaptureTest.testCaptureFromStub":284,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":343,"org.easymock.tests.UsageTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":54,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":47,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":56,"org.easymock.tests2.UsageConstraintsTest.constraints":234,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageStrictMockTest.testVerify":342,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":326,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":341,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":95,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":91,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":39,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":166,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":321,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":333}}]
