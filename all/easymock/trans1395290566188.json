[{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:116","sourceCode":"try {\n    java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:105","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[2,3,4,5],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[6,7,8],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[9,10,11],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:108","sourceCode":"if (org.easymock.TestSubject != null) {\n    org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n    continue;\n} ","type":"CtIfImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[2,30,31,3,32,4,33,34,35,5,36,37,38,39],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[40,41,42,43,44,45,46],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[43,47,48,44,46,49,50,51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[55],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[56,57],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[40,41,42,43,46],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[40,40,41,41,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,2,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,50,122,123,124,51,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,0,143,144,145,146,147,1,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,4,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,39,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[79,2,80,95,30,31,3,155,240,241,242,243,244,245,246,247,248,249,250,251,252,167,253,32,171,4,172,178,179,181,33,34,35,5,254,255,256,257,258,259,36,37,195,38,39],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[40,41,62,12,260,261,63,262,64,65,263,66,264,265,67,13,68,69,70,71,72,73,266,74,267,75,76,77,268,269,78,270,271,272,79,273,2,80,274,81,82,275,83,84,276,277,85,86,87,88,89,90,91,92,278,279,280,281,93,94,95,30,96,282,97,98,99,31,3,100,101,102,103,104,105,106,107,108,109,110,111,112,113,283,284,114,115,285,116,117,286,118,287,119,120,121,50,122,123,124,51,125,288,126,289,127,128,290,129,130,131,132,133,291,292,134,293,135,294,295,136,137,138,139,140,141,142,0,143,144,145,146,147,1,148,149,150,151,152,153,154,155,156,157,158,159,160,296,161,162,163,164,165,166,297,298,299,300,301,253,168,169,170,302,303,32,171,304,4,172,305,173,174,306,307,175,176,177,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,180,181,33,34,182,183,35,5,184,340,341,342,343,186,188,189,192,193,194,344,345,346,347,348,349,350,351,352,353,354,37,195,38,39,196,355,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,356,213,357,358,359,360,361,362,363,216,219,364,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[40,41,62,12,260,261,63,262,64,65,263,66,365,264,265,67,13,68,69,70,71,72,73,266,6,74,42,366,267,75,76,77,367,368,268,269,78,270,271,272,79,273,2,80,274,369,370,371,372,373,81,82,275,83,84,276,277,85,86,87,88,89,90,91,14,15,16,374,17,92,18,19,20,375,376,21,278,279,280,281,93,94,95,30,96,282,97,98,99,31,3,100,101,102,103,104,105,106,107,108,109,110,111,112,113,283,284,114,377,378,115,285,116,117,379,380,286,118,287,119,49,120,121,50,122,381,123,124,51,52,382,383,384,385,125,60,386,288,126,289,387,127,128,290,22,23,24,388,25,129,26,27,28,389,390,29,391,392,393,130,394,395,131,396,397,398,399,400,401,402,403,404,132,405,406,407,408,409,133,410,411,291,292,134,58,293,135,294,412,295,136,137,138,139,140,141,142,0,143,413,144,145,146,147,1,148,414,149,150,151,152,153,154,155,156,157,158,159,160,296,161,162,163,164,415,416,165,166,297,55,298,299,251,300,301,252,167,253,417,418,419,168,169,420,170,421,422,423,302,303,32,171,304,4,172,305,424,173,174,306,307,175,176,177,425,426,427,428,429,430,431,432,433,434,435,436,437,438,308,309,310,311,312,313,314,439,440,441,442,443,178,179,444,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,180,181,33,34,182,183,35,5,184,445,446,447,448,449,450,451,452,185,340,341,342,343,453,454,455,456,457,458,459,460,186,187,188,189,461,462,463,464,465,466,61,467,468,469,59,470,471,472,473,474,190,475,476,477,478,479,191,480,192,193,194,481,482,483,484,485,486,487,488,489,490,491,492,493,494,344,345,346,495,347,348,349,350,351,352,353,354,496,497,498,37,195,38,39,196,355,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,356,56,213,357,214,57,499,215,500,358,359,360,361,362,363,501,502,216,503,504,217,218,505,506,507,219,364,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[100,187,189,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[69,75,77,271,273,2,80,93,30,96,282,31,3,100,101,103,107,108,111,114,286,118,287,291,0,155,302,32,304,4,172,312,313,314,180,33,34,35,5,184,186,349,508,36,509,510,37,38,39],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[511,512,513,514,515,516,517,518],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[82,90],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[448],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[62,12,260,261,63,262,64,65,263,66,265,67,13,68,69,70,71,72,73,74,76,78,272,273,274,81,82,275,83,276,277,85,86,87,88,91,92,93,94,30,96,282,31,3,101,102,103,104,105,106,107,108,110,111,112,113,283,115,116,117,119,120,121,50,122,123,124,51,125,288,387,127,128,290,129,130,131,132,133,293,294,139,140,143,1,148,149,150,152,155,158,159,160,296,161,165,166,299,300,301,167,168,169,170,303,32,304,305,307,310,311,313,314,179,322,323,325,330,335,34,35,5,184,192,193,344,345,346,347,348,350,351,352,353,354,38,39,196,355,197,198,199,200,201,202,356,213,357,216,222,223,225,230,235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[2,4,519,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[196,198],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,30,31,3,253,32,4,33,34,35,5,36,37,38,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[69,368,369,370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[40,40,41,41,62,68,69,71,72,73,266,74,42,366,267,75,76,77,367,368,269,78,284,520,114,377,378,115,285,116,117,286,118,521,522,287,523,524,119,49,120,121,50,122,124,51,382,383,127,290,130,131,132,133,417,418,419,168,169,170,423,445,450,453,454,455,457,458,459,460,486,487,488,489,490,491,492,493,356,56,213,214,501,502,216],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[48,380,525,526,527,528,529,119,49,127],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[530],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[79,80,370,371,372,373,95,30,31,3,32,171,172,181,34,35,5,37,38,39],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":143,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":180,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":59,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":282,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":12,"org.easymock.tests2.DelegateToTest.testReturnException":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":359,"org.easymock.tests.MockingTest.testPartialClassMocking":168,"org.easymock.tests.MockClassControlTest.testToString":455,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":369,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":399,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":320,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":525,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageTest.wrongArguments":30,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":21,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":342,"org.easymock.samples.ExampleTest.answerVsDelegate":262,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":450,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":422,"org.easymock.tests2.UsageConstraintsTest.testNull":145,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":71,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":523,"org.easymock.tests2.CaptureTest.testPrimitive":83,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":175,"org.easymock.tests.UsageTest.moreThanOneArgument":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":339,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":205,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":439,"org.easymock.tests.UsageTest.argumentsOrdered":5,"org.easymock.tests.UsageVarargTest.varargIntAccepted":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":208,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":390,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":212,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":244,"org.easymock.tests.ReplayStateInvalidUsageTest.times":433,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":92,"org.easymock.tests2.DependencyTest.testClassMocking":415,"org.easymock.tests2.AnswerTest.answer":125,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":281,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":447,"org.easymock.tests2.CaptureTest.testAnd":81,"org.easymock.tests2.UsageTest.strictResetToDefault":94,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":204,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":106,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":443,"org.easymock.tests2.DelegateToTest.testDelegate":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":335,"org.easymock.tests.LimitationsTest.mockFinalMethod":503,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":362,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":319,"org.easymock.tests2.DependencyTest.testClassMockingSupport":416,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":178,"org.easymock.tests2.CaptureTest.testCapture1_2446744":84,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":6,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":279,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":427,"org.easymock.tests.UsageThrowableTest.throwError":196,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":449,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":510,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":207,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":411,"org.easymock.samples.PartialClassMockTest.testGetArea":62,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":428,"org.easymock.tests.MockingTest.testInterfaceMocking":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":209,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":217,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":400,"org.easymock.tests2.UsageTest.niceToStrict":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":321,"org.easymock.tests2.ThreadingTest.testChangeDefault":8,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":115,"org.easymock.tests2.MockBuilderTest.testCreateMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":407,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":20,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":241,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":329,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":446,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":498,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":437,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":340,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":515,"org.easymock.tests.UsageOverloadedMethodTest.overloading":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":153,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":301,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":231,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":152,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":87,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":495,"org.easymock.tests.MockClassControlTest.testEquals":459,"org.easymock.tests2.EasyMockSupportClassTest.testAll":130,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":357,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":337,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":45,"org.easymock.tests2.CaptureTest.testCaptureAll":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":317,"org.easymock.tests.MockNameTest.defaultName":494,"org.easymock.tests2.UsageConstraintsTest.testMatches":154,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":206,"org.easymock.samples.ExampleTest.voteForRemovals":66,"org.easymock.tests.UsageVarargTest.allKinds":354,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":195,"org.easymock.samples.BasicClassMockTest.testPrintContent":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":318,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":201,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":363,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":529,"org.easymock.tests2.UsageConstraintsTest.greaterThan":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":394,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":77,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":493,"org.easymock.samples.ExampleTest.voteForRemoval":64,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":367,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":521,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":266,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":356,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":358,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":58,"org.easymock.tests2.CaptureTest.testCaptureFirst":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":227,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.CaptureTest.testCapture2_2446744":90,"org.easymock.tests2.UsageTest.moreThanOneArgument":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":476,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":118,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":353,"org.easymock.tests.GenericTest.testBridgedEquals":57,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":516,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":513,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":313,"org.easymock.tests.UsageExpectAndReturnTest.longType":223,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":315,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":522,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":338,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":185,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":506,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":203,"org.easymock.tests.UsageCallCountTest.tooManyCalls":314,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":255,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":325,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":200,"org.easymock.tests.MockingTest.testNiceClassMocking":423,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":121,"org.easymock.tests.MockingTest.testClassMocking":418,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":520,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":438,"org.easymock.tests2.UsageConstraintsTest.testContains":151,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":78,"org.easymock.tests2.UsageConstraintsTest.testFind":144,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":194,"org.easymock.tests.MockTypeTest.fromEasyMockClass":448,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":298,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":302,"org.easymock.tests.UsageExpectAndReturnTest.object":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":526,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":348,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":484,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":517,"org.easymock.tests.UsageTest.exactCallCountByLastCall":184,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":499,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":440,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":259,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":49,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":236,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":300,"org.easymock.tests.MockClassControlTest.testHashCode":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":23,"org.easymock.tests2.EasyMockSupportTest.testVerify":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":402,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":243,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":441,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":497,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":299,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":508,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":278,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":387,"org.easymock.tests.UsageVarargTest.varargCharAccepted":347,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":480,"org.easymock.tests2.UsageTest.openCallCountByLastCall":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":511,"org.easymock.tests.DefaultClassInstantiatorTest.object":487,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":496,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":482,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":403,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":22,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":457,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":326,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":505,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":133,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":245,"org.easymock.tests2.UsageTest.resumeIfFailure":100,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":361,"org.easymock.tests2.StubTest.stubWithReturnValue":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":48,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":161,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":229,"org.easymock.tests2.SerializationTest.testAllMockedMethod":290,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":190,"org.easymock.samples.SupportTest.voteForRemovals":67,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":248,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":332,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":191,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":60,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":500,"org.easymock.tests.UsageExpectAndThrowTest.object":330,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":159,"org.easymock.tests2.DelegateToTest.testWrongClass":294,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":176,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":177,"org.easymock.samples.ConstructorCalledMockTest.testTax":40,"org.easymock.tests.UsageStrictMockTest.range":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":384,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":120,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":514,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":331,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":116,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":391,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":341,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":254,"org.easymock.tests2.CaptureTest.testCaptureNone":86,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":218,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":10,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":509,"org.easymock.tests.UsageVerifyTest.twoReturns":39,"org.easymock.tests.UsageVarargTest.varargByteAccepted":352,"org.easymock.tests2.ThreadingTest.testThreadSafe":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":405,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":311,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":485,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":260,"org.easymock.tests2.CaptureTest.testCapture_2617107":275,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":250,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":307,"org.easymock.tests2.UsageConstraintsTest.any":149,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":432,"org.easymock.tests2.StubTest.stub":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndThrowTest.longType":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":360,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":491,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":431,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests2.SerializationTest.testClass":127,"org.easymock.tests.LimitationsTest.mockNativeMethod":216,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":16,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":274,"org.easymock.tests2.NameTest.nameForMocksControl":373,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":17,"org.easymock.tests2.MockedExceptionTest.testMockedException":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":395,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":183,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":170,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":324,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":117,"org.easymock.tests.MockingTest.testNicePartialClassMocking":169,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":14,"org.easymock.tests2.CaptureTest.testCaptureLast":85,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":179,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":160,"org.easymock.tests.MockingTest.testTwoMocks":419,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":328,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":163,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":7,"org.easymock.samples.ExampleTest.removeNonExistingDocument":365,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":429,"org.easymock.tests.UsageStrictMockTest.differentMethods":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":19,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":24,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":489,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":11,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":138,"org.easymock.tests2.ConstraintsToStringTest.andToString":247,"org.easymock.tests2.MockBuilderTest.testCreateMockString":287,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":396,"org.easymock.tests.UsageExpectAndThrowTest.floatType":322,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":393,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":288,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":132,"org.easymock.samples.ExampleTest.voteAgainstRemoval":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":470,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests.LimitationsTest.privateConstructor":502,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":54,"org.easymock.tests2.UsageConstraintsTest.testNotNull":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":202,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":268,"org.easymock.tests2.UsageTest.defaultResetToNice":99,"org.easymock.samples.ExampleTest.voteAgainstRemovals":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":235,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":15,"org.easymock.tests.UsageVarargTest.differentLength":349,"org.easymock.tests2.CallbackTest.callback":291,"org.easymock.tests2.UsageConstraintsTest.equals":413,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":42,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":257,"org.easymock.tests.UsageTest.openCallCountByLastCall":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":306,"org.easymock.tests.UsageCallCountTest.tooFewCalls":309,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":343,"org.easymock.tests.UsageThrowableTest.throwCheckedException":199,"org.easymock.tests.MockingTest.testStrictClassMocking":417,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":256,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":124,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":364,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":18,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":50,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":434,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":123,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":289,"org.easymock.tests.ObjectMethodsTest.testHashCode":483,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests2.NameTest.nameForNiceMock":372,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":527,"org.easymock.samples.ExampleTest.addDocument":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":410,"org.easymock.tests2.DelegateToTest.testStubDelegate":135,"org.easymock.tests2.AnswerTest.stubAnswer":126,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":171,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":379,"org.easymock.tests.UsageVarargTest.varargLongAccepted":351,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.floatType":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":119,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":41,"org.easymock.tests2.ConstraintsToStringTest.orToString":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":389,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":157,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests.UsageThrowableTest.noUpperLimit":355,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":142,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":382,"org.easymock.tests2.SerializationTest.test":128,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":276,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":488,"org.easymock.tests2.UsageConstraintsTest.testSame":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":221,"org.easymock.samples.SupportTest.addDocument":265,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":381,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":397,"org.easymock.tests.GenericTest.testPackageScope":213,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":28,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":421,"org.easymock.tests2.NameTest.nameForMock":370,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":46,"org.easymock.tests2.UsageStrictMockTest.differentMethods":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":366,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":224,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":334,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":481,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":189,"org.easymock.tests2.MockedExceptionTest.testRealException":270,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":385,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":79,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":174,"org.easymock.tests2.NameTest.nameForStrictMock":371,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":512,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":72,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":383,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":490,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":158,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":114,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":25,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":530,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":528,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":401,"org.easymock.tests2.CaptureTest.testCaptureRightOne":88,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":9,"org.easymock.tests2.UsageConstraintsTest.testOr":147,"org.easymock.tests.UsageRangeTest.combination":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":69,"org.easymock.tests.UsageTest.wrongArguments":34,"org.easymock.tests2.MockBuilderTest.testWithConstructor":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":398,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":233,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":492,"org.easymock.tests.UsageVarargTest.varargShortAccepted":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":312,"org.easymock.tests2.UsageConstraintsTest.cmpTo":150,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":98,"org.easymock.tests2.CaptureTest.testCaptureFromStub":89,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":426,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":377,"org.easymock.tests.UsageTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":310,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":234,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":304,"org.easymock.samples.ExampleTest.addAndChangeDocument":264,"org.easymock.tests2.ConstraintsToStringTest.notToString":242,"org.easymock.tests.UsageStrictMockTest.testVerify":424,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":13,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":316,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":277,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":524,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":210,"org.easymock.tests.LimitationsTest.abstractClass":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":226,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":211,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":519,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":345}}]
