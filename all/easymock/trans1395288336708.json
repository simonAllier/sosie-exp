[{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[58,59,60,61,62,63],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:75","sourceCode":"return this","type":"CtReturnImpl"},"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[65,86,87,88],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[89,90,91,92,93,94,95,96,97,19,23,98,99,31,100,101,102,103,104,105,106,107,108,109,34,110,111,112,113,114,115,116,117,118,119,120,9,121,122,123,124,125,126,127,128,129,51,130,131,132,133,134,135,136,53,54],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[103,34,112,137,122,51,132,138,134,135,136,139,140,141,142,143,144,145],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[64,146,147,148,149,150,151,152,153,154,155,156,157,158,16,17,159,89,90,160,91,92,93,94,95,161,162,18,163,96,65,86,87,164,97,165,166,167,19,168,20,21,169,170,22,23,24,25,171,172,98,173,26,174,27,28,99,29,30,175,176,177,178,179,31,32,33,180,181,182,183,184,185,186,100,187,101,188,189,190,66,67,68,102,191,103,104,192,193,105,106,194,107,108,195,109,196,197,198,199,200,201,69,202,203,70,71,204,205,206,207,208,209,210,211,34,110,111,112,137,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,117,227,228,229,230,231,1,2,3,4,73,74,76,77,78,79,80,81,82,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,118,256,257,258,259,260,119,261,262,263,264,265,266,267,268,269,270,271,120,5,6,7,8,9,10,35,36,37,38,39,121,122,272,123,124,125,126,127,128,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,45,46,47,48,49,50,14,288,289,129,51,130,131,132,138,290,291,292,293,294,133,295,296,297,298,299,300,301,134,135,136,302,303,304,305,52,53,15,306,54,307,308,309,310,141,311,312,313,142,143,314,144,315,316,145,317,318,319,320,321,55,56,322,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[290,85,293,323],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[111,112,131,132,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[324,325,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"value","key":"key"}},{"position":"org.easymock.internal.LastControl:92","failures":[159,90,162,169,170,25,171,327,175],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[64,146,147,148,149,150,151,152,329,153,154,155,156,157,158,16,17,159,89,90,160,91,92,93,94,95,161,162,18,163,96,65,86,87,330,164,97,165,331,166,167,19,168,332,333,20,21,169,170,334,22,23,24,25,171,172,327,98,173,26,174,27,28,99,29,30,175,176,177,178,179,31,32,33,335,336,337,338,339,340,341,180,181,182,183,342,184,185,186,343,100,344,345,187,101,188,346,347,348,349,350,189,351,352,353,354,355,356,357,358,359,190,360,361,66,362,363,364,365,366,367,368,369,370,67,371,372,373,374,375,68,376,377,102,191,103,104,192,193,105,106,194,107,108,195,109,378,196,197,198,199,200,201,69,325,202,379,380,203,70,71,204,381,72,205,206,207,208,209,210,211,34,110,111,112,137,382,383,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,384,113,114,115,116,117,227,228,229,230,385,386,387,388,389,231,390,391,392,393,394,395,1,2,3,4,73,396,74,75,397,398,76,77,78,399,79,400,401,80,81,402,82,232,403,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,118,256,257,258,259,260,119,83,404,405,406,407,84,408,409,410,58,59,60,61,411,62,412,63,413,414,261,415,262,263,264,416,265,266,267,268,269,270,271,120,5,6,7,8,9,10,417,418,419,420,421,422,423,424,35,36,37,38,39,40,425,426,427,41,42,428,429,430,431,432,433,434,435,43,436,437,438,439,44,440,441,442,443,121,122,272,123,124,125,126,127,128,273,274,275,276,277,444,445,446,278,279,447,280,448,449,450,281,451,282,283,284,285,286,287,45,46,47,48,49,11,12,13,452,453,454,455,50,14,288,289,129,51,130,131,132,138,456,0,290,291,85,457,292,293,294,133,458,459,460,461,462,463,464,295,296,297,298,299,300,301,134,135,136,302,465,303,304,466,139,305,467,468,323,469,470,471,328,472,140,473,474,475,476,477,478,479,480,481,482,483,484,52,53,15,306,54,307,308,309,310,141,311,312,313,142,143,314,144,315,316,145,317,318,319,320,321,55,56,57,485,486,487,488,489,490,491],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[65,86,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[103,104,107,108,34,111,112,113,114,115,116,119,122,123,126,127,129,51,131,132,134,135,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:109","sourceCode":"org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[492,493,494,495,496,324],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[159,90,162,169,170,23,25,171,327,175,31],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[33,497],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[65,86,87,88],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[146,158,189,231],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1385","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[19,102,106,3,254,118,256,257,258,259,260,5,6,7,8,9,10,121,125,14,133,135,304,15,306,307,308,309,310,141,311,312,313,142,143,314,144,315,316,145,317,318,319,320,321],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[498],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[64,16,16,17,17,65,168,332,66,67,68,69,379,70,71,72,1,73,74,75,398,76,78,79,400,401,81,82,83,84,0,85],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[78],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[169,99,102,104,192,193,107,108,195,109,197,70,204,210,110,111,112,215,219,220,223,117,74,80,81,82,119,499,500,267,121,272,123,126,127,128,281,501,452,288,129,130,131,132,299,300,301,135,136],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[29,502],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[20,169,503],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[64,146,147,148,149,150,151,152,329,153,154,155,156,157,158,16,17,159,89,90,160,91,92,93,94,95,161,162,18,163,96,65,86,87,330,164,97,165,331,166,167,19,168,332,333,20,21,169,170,334,22,23,24,25,171,172,327,98,173,26,174,27,28,99,29,30,175,176,177,178,179,31,32,33,335,336,337,338,339,340,341,180,181,182,183,342,184,185,186,343,100,344,345,187,101,188,346,347,348,349,350,189,351,352,353,354,355,356,357,358,359,190,360,361,66,362,363,364,365,366,367,368,369,370,67,371,372,373,374,375,68,376,377,102,191,103,104,192,193,105,106,194,107,108,195,109,378,196,197,198,199,200,201,69,325,202,379,380,203,70,71,204,381,72,205,206,207,208,209,210,211,34,110,111,112,137,382,383,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,384,113,114,115,116,117,227,228,229,230,385,386,387,388,389,231,390,391,392,393,394,395,1,2,3,4,73,396,74,75,397,398,76,77,78,399,79,400,401,80,81,402,82,232,403,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,118,256,257,258,259,260,119,83,404,405,406,407,84,408,409,410,58,59,60,61,411,62,412,63,413,414,261,415,262,263,264,416,265,266,267,268,269,270,271,120,5,6,7,8,9,10,417,418,419,420,421,422,423,424,35,36,37,38,39,40,425,426,427,41,42,428,429,430,431,432,433,434,435,43,436,437,438,439,44,440,441,442,443,121,122,272,123,124,125,126,127,128,273,274,275,276,277,444,445,446,278,279,447,280,448,449,450,281,451,282,283,284,285,286,287,45,46,47,48,49,11,12,13,452,453,454,455,50,14,288,289,129,51,130,131,132,138,456,0,290,291,85,457,292,293,294,133,458,459,460,461,462,463,464,295,296,297,298,299,300,301,134,135,136,302,465,303,304,466,139,305,467,468,323,469,470,471,328,472,140,473,474,475,476,477,478,479,480,481,482,483,484,52,53,15,306,54,307,308,309,310,141,311,312,313,142,143,314,144,315,316,145,317,318,319,320,321,55,56,57,485,486,487,488,489,490,491],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[65,86,87,88],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[16,17,379,396,504,402],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[120,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[64,147,149,150,152,155,159,89,160,91,94,95,161,162,163,96,65,86,97,19,168,20,21,169,170,22,23,24,25,171,172,98,173,26,174,27,28,99,29,30,175,176,177,179,31,32,33,180,181,182,183,184,185,186,100,101,189,190,66,67,68,102,191,103,192,105,106,194,195,109,196,197,198,199,200,201,202,70,71,204,205,206,207,208,209,34,111,112,212,213,214,215,216,217,218,219,220,221,222,223,224,225,231,3,74,76,78,79,81,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,118,256,257,258,259,260,261,121,122,124,125,128,278,279,280,281,451,282,283,45,46,47,48,49,50,51,131,132,290,292,293,294,133,134,136,139,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[103,34,112,137,122,51,132,138,134,135,136,139,140,141,142,143,144,145],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[162,170,171,172,98,174,175,176,177,179,192,193,108,197,71,210,111,112,215,217,219,220,223,224,225,117,81,254,255,256,257,258,259,260,119,127,281,288,131,132,294,135],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":170,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests2.UsageTest.argumentsOrdered":108,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":224,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":432,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":193,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":146,"org.easymock.tests2.DelegateToTest.testReturnException":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":6,"org.easymock.tests.MockingTest.testPartialClassMocking":278,"org.easymock.tests.MockClassControlTest.testToString":419,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":384,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":44,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":307,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":213,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":172,"org.easymock.tests2.UsageTest.wrongArguments":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":52,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":286,"org.easymock.samples.ExampleTest.answerVsDelegate":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":84,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":449,"org.easymock.tests2.UsageConstraintsTest.testNull":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":199,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":223,"org.easymock.tests2.CaptureTest.testPrimitive":160,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":54,"org.easymock.tests.UsageTest.moreThanOneArgument":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":321,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":37,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":458,"org.easymock.tests.UsageTest.argumentsOrdered":127,"org.easymock.tests.UsageVarargTest.varargIntAccepted":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":45,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":337,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":49,"org.easymock.tests.ReplayStateInvalidUsageTest.times":481,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests2.DependencyTest.testClassMocking":382,"org.easymock.tests2.AnswerTest.answer":100,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":438,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":230,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":405,"org.easymock.tests2.CaptureTest.testAnd":159,"org.easymock.tests2.UsageTest.strictResetToDefault":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":282,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":462,"org.easymock.tests2.DelegateToTest.testDelegate":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":317,"org.easymock.tests.LimitationsTest.mockFinalMethod":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":277,"org.easymock.tests2.DependencyTest.testClassMockingSupport":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":328,"org.easymock.tests2.CaptureTest.testCapture1_2446744":91,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":228,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":475,"org.easymock.tests.UsageThrowableTest.throwError":254,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":407,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":452,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":377,"org.easymock.samples.PartialClassMockTest.testGetArea":64,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":476,"org.easymock.tests.MockingTest.testInterfaceMocking":447,"org.easymock.tests2.CompareToTest.testLessOrEqual":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":468,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":490,"org.easymock.tests2.UsageTest.niceToStrict":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":366,"org.easymock.tests2.ThreadingTest.testChangeDefault":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":40,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":143,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":404,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":471,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":463,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":284,"org.easymock.tests.UsageOverloadedMethodTest.overloading":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":375,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":27,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":245,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":293,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":174,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":161,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":416,"org.easymock.tests.MockClassControlTest.testEquals":423,"org.easymock.tests2.EasyMockSupportClassTest.testAll":190,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":319,"org.easymock.tests2.CaptureTest.testCaptureAll":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":275,"org.easymock.tests.MockNameTest.defaultName":491,"org.easymock.tests2.UsageConstraintsTest.testMatches":28,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":38,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests.UsageVarargTest.allKinds":120,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":134,"org.easymock.samples.BasicClassMockTest.testPrintContent":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":276,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":259,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":10,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":331,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":412,"org.easymock.tests2.UsageConstraintsTest.greaterThan":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":451,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":204,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":63,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":206,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":381,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":338,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":69,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":102,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":292,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":216,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":5,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":217,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":241,"org.easymock.tests2.CaptureTest.testCapture2_2446744":163,"org.easymock.tests2.UsageTest.moreThanOneArgument":103,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":439,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":271,"org.easymock.tests.GenericTest.testBridgedEquals":457,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":300,"org.easymock.tests.UsageExpectAndReturnTest.longType":237,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":320,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":178,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":12,"org.easymock.tests.UsageCallCountTest.tooManyCalls":301,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":311,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":258,"org.easymock.tests.MockingTest.testNiceClassMocking":450,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":181,"org.easymock.tests.MockingTest.testClassMocking":445,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":464,"org.easymock.tests2.UsageConstraintsTest.testContains":26,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":3,"org.easymock.tests2.UsageConstraintsTest.testFind":22,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":133,"org.easymock.tests.MockTypeTest.fromEasyMockClass":406,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":233,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":222,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":266,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":488,"org.easymock.tests.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":42,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":459,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":250,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":262,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":303,"org.easymock.tests.MockClassControlTest.testHashCode":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":386,"org.easymock.tests2.EasyMockSupportTest.testVerify":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":368,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":460,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":470,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":302,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":499,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":227,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":378,"org.easymock.tests.UsageVarargTest.varargCharAccepted":265,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":410,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":443,"org.easymock.tests2.UsageTest.openCallCountByLastCall":105,"org.easymock.tests.DefaultClassInstantiatorTest.object":58,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":225,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":469,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":486,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":369,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":385,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":421,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":312,"org.easymock.tests.CapturesMatcherTest.test":322,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":11,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":68,"org.easymock.tests2.UsageTest.resumeIfFailure":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":83,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":8,"org.easymock.tests2.StubTest.stubWithReturnValue":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":399,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":243,"org.easymock.tests2.SerializationTest.testAllMockedMethod":87,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":437,"org.easymock.samples.SupportTest.voteForRemovals":155,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":315,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":88,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":442,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":344,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":455,"org.easymock.tests.UsageExpectAndThrowTest.object":314,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":176,"org.easymock.tests2.DelegateToTest.testWrongClass":165,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":55,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":56,"org.easymock.tests.UsageStrictMockTest.range":131,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":340,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":78,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":483,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":285,"org.easymock.tests2.CaptureTest.testCaptureNone":95,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":323,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":493,"org.easymock.tests.UsageUnorderedTest.message":119,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":501,"org.easymock.tests.UsageVerifyTest.twoReturns":136,"org.easymock.tests.UsageVarargTest.varargByteAccepted":270,"org.easymock.tests2.ThreadingTest.testThreadSafe":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":371,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":298,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":489,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":156,"org.easymock.tests2.CaptureTest.testCapture_2617107":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":306,"org.easymock.tests2.UsageConstraintsTest.any":98,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":480,"org.easymock.tests2.StubTest.stub":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":7,"org.easymock.tests.UsageExpectAndThrowTest.longType":310,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":411,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":479,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.tests2.SerializationTest.testClass":65,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":231,"org.easymock.tests.LimitationsTest.mockNativeMethod":261,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":85,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":348,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":137,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":494,"org.easymock.tests2.NameTest.nameForMocksControl":116,"org.easymock.tests2.MockedExceptionTest.testMockedException":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":361,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":125,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":403,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":141,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":280,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":196,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":79,"org.easymock.tests.MockingTest.testNicePartialClassMocking":279,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":201,"org.easymock.tests2.CaptureTest.testCaptureLast":94,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":346,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":472,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":186,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":171,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":177,"org.easymock.tests.MockingTest.testTwoMocks":446,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":142,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":32,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":324,"org.easymock.samples.ExampleTest.removeNonExistingDocument":329,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":477,"org.easymock.tests.UsageStrictMockTest.differentMethods":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":387,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":496,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":60,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":207,"org.easymock.tests2.MockBuilderTest.testCreateMockString":82,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":417,"org.easymock.tests.UsageExpectAndThrowTest.floatType":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":362,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":187,"org.easymock.tests.UsageVerifyTest.twoThrows":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":333,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":67,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":71,"org.easymock.tests.LimitationsTest.privateConstructor":414,"org.easymock.tests2.UsageConstraintsTest.testNotNull":31,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":260,"org.easymock.tests2.UsageTest.defaultResetToNice":194,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":249,"org.easymock.tests.UsageVarargTest.differentLength":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":347,"org.easymock.tests2.CallbackTest.callback":117,"org.easymock.tests2.UsageConstraintsTest.equals":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":379,"org.easymock.tests.UsageTest.openCallCountByLastCall":124,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":15,"org.easymock.tests.UsageCallCountTest.tooFewCalls":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":287,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":495,"org.easymock.tests.UsageThrowableTest.throwCheckedException":257,"org.easymock.tests.MockingTest.testStrictClassMocking":444,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":185,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":351,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":482,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":184,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":188,"org.easymock.tests.ObjectMethodsTest.testHashCode":487,"org.easymock.tests2.NameTest.nameForNiceMock":115,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":209,"org.easymock.tests2.DependencyTest.testInterfaceMocking":212,"org.easymock.samples.ExampleTest.addDocument":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":372,"org.easymock.tests2.DelegateToTest.testStubDelegate":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.AnswerTest.stubAnswer":101,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":51,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":400,"org.easymock.tests.UsageVarargTest.varargLongAccepted":269,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.floatType":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":168,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":393,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":30,"org.easymock.tests.UsageThrowableTest.noUpperLimit":255,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":335,"org.easymock.tests2.SerializationTest.test":86,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":92,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":59,"org.easymock.tests2.UsageConstraintsTest.testSame":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":235,"org.easymock.samples.SupportTest.addDocument":154,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":342,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":363,"org.easymock.tests.GenericTest.testPackageScope":290,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":41,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":392,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":448,"org.easymock.tests2.NameTest.nameForMock":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":246,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":402,"org.easymock.tests2.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":380,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":238,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":145,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":485,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":283,"org.easymock.tests2.MockedExceptionTest.testRealException":4,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":435,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":484,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":53,"org.easymock.tests2.NameTest.nameForStrictMock":114,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":200,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":339,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":175,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":61,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":74,"org.easymock.tests2.UsageStrictMockTest.range":111,"org.easymock.tests2.UsageConstraintsTest.lessThan":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":215,"org.easymock.tests2.CaptureTest.testCaptureRightOne":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":367,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":492,"org.easymock.tests2.UsageConstraintsTest.testOr":25,"org.easymock.tests.UsageRangeTest.combination":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":197,"org.easymock.tests.UsageTest.wrongArguments":123,"org.easymock.tests2.MockBuilderTest.testWithConstructor":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":364,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":247,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":62,"org.easymock.tests.UsageVarargTest.varargShortAccepted":268,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":299,"org.easymock.tests2.UsageConstraintsTest.cmpTo":173,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":345,"org.easymock.tests2.CompareToTest.testLessThan":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":427,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.CaptureTest.testCaptureFromStub":18,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":474,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":75,"org.easymock.tests.UsageTest.unexpectedCallWithArray":272,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":129,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":297,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":504,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":248,"org.easymock.tests2.UsageConstraintsTest.constraints":169,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":130,"org.easymock.samples.ExampleTest.addAndChangeDocument":153,"org.easymock.tests.UsageStrictMockTest.testVerify":456,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":158,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests2.CompareToTest.testGreateThan":502,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":274,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":47,"org.easymock.tests.LimitationsTest.abstractClass":413,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":240,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":220,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":263}}]
