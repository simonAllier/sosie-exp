[{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[0,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[7,8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,5,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,13,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,6,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,38,222,39,223,224,40,41,42,43,44,225,226,227,228,229,230,5,231,45,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,46,270,271,272,273,274,275,276,277,278,279,280,281,282,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[51,53,56,60,62,63,64,65,66,67,68,70,71,72,73,75,76,77,79,80,81,83,85,86,87,88,94,95,97,99,102,103,104,106,107,13,108,109,110,112,113,114,115,119,120,124,126,128,129,145,156,157,158,159,160,161,168,169,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,201,202,203,204,206,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,207,208,209,210,211,213,214,215,216,217,218,287,288,289,290,291,221,38,222,39,223,224,40,41,42,43,44,229,230,5,292,293,294,295,45,296,232,233,241,242,244,245,248,254,256,257,258,259,260,262,263,264,265,266,268,269,46,270,271,272,273,274,275,276,277,278,280,281,282,283],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,77,79,80,81,82,83,84,85,86,87,88,90,91,94,95,96,97,98,99,101,102,103,104,105,106,13,108,109,110,112,114,115,116,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,6,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,157,159,160,164,165,166,167,168,169,171,174,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,297,200,201,202,203,204,218,221,222,39,224,40,41,42,43,44,225,226,227,228,231,232,233,241,242,244,245,248,249,250,251,256,258,259,262,263,266,268,269,46,270,272,273,275,279,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[75,76,78,162,163,172,229,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:191","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[298],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[299,300,301,302,303,304,305,171],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[52,53,55,56,57,306,58,307,308,59,60,61,309,310,311,312,84,100,101,313,314,102,315,103,104,316,105,317,148,149,150,151,153,154,318,164,165,166,167,168,170,171,10,319,320,321,322,11,323,324,197,198,199,297,325,326,327,328,329,249,250,251,330,252,267,277,278,331,331,332,332,279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[111,117,118,159,333,206,38,222,334,335,243,246,247,255,258],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:54","sourceCode":"try {\n    return java.lang.reflect.Constructor<?>.newInstance(java.lang.Object[]);\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException);\n}","type":"CtTryImpl"},"failures":[267,336,337,338,339,340],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[51,106,341],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[58,87,88,89,90,91,92,93,94,95,96,97,342,98,99,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,6,137,138,139,140,141,142,143,144,145,146,147,343,157,162,163,200,201,202,203,204,206,217,218,344,45,232,233,255,256,262,263,264,265,266],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[87,89,97,123,124,128,129,131,140],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[285],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[124,131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[345,47,48,49,50,346,347,348,349,350,351,352,353,354,51,355,356,357,358,359,360,52,53,54,55,56,57,306,361,58,362,307,308,59,60,61,309,310,62,63,64,65,66,67,68,69,70,71,72,73,74,75,363,364,76,77,78,79,80,81,82,83,311,312,84,4,365,366,85,86,87,88,89,90,91,92,93,94,95,96,97,342,98,99,100,367,101,313,368,314,102,315,103,369,104,370,371,316,105,372,317,373,374,375,376,377,106,378,379,380,381,382,383,107,13,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,384,125,126,127,128,129,130,131,132,133,134,135,136,6,137,138,139,140,141,142,143,144,145,146,147,343,148,149,150,151,385,152,153,154,386,155,156,157,158,159,160,161,162,387,163,388,389,390,391,318,392,393,394,395,396,164,397,398,165,399,400,401,402,403,404,405,406,407,166,408,409,410,411,412,167,413,414,168,169,170,171,415,416,172,284,173,174,175,417,176,0,1,418,419,420,421,14,422,423,424,425,426,427,285,428,429,430,431,432,433,434,435,436,437,438,439,440,10,319,320,321,322,11,323,324,441,442,12,443,444,445,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,446,447,448,197,449,286,198,199,297,450,200,201,202,203,204,325,451,452,453,454,326,341,455,205,456,457,206,458,459,460,461,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,207,208,209,462,210,211,212,213,214,215,216,217,218,344,287,288,289,290,291,463,219,220,464,465,221,38,222,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,39,223,224,40,41,42,43,44,483,225,226,227,228,484,229,2,230,5,3,231,334,292,293,294,295,45,296,232,233,234,485,235,236,237,238,486,239,240,241,242,335,243,244,245,246,247,248,327,328,329,249,250,487,251,488,489,330,252,253,254,255,256,257,258,259,260,261,490,491,492,493,494,495,262,263,264,265,266,496,267,336,337,338,7,339,497,340,268,269,46,270,271,272,273,274,275,498,276,277,278,331,332,279,280,281,282,283],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":124,"org.easymock.tests2.UsageTest.argumentsOrdered":118,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":241,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":285,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":113,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":283,"org.easymock.tests2.DelegateToTest.testReturnException":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":293,"org.easymock.tests.MockingTest.testPartialClassMocking":249,"org.easymock.tests.MockClassControlTest.testToString":320,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":345,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":18,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":300,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":130,"org.easymock.tests2.UsageTest.wrongArguments":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":262,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":460,"org.easymock.samples.ExampleTest.answerVsDelegate":271,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":326,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":489,"org.easymock.tests2.UsageConstraintsTest.testNull":126,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":71,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":324,"org.easymock.tests2.CaptureTest.testPrimitive":90,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":266,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":37,"org.easymock.tests.UsageTest.moreThanOneArgument":242,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":289,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":463,"org.easymock.tests.UsageTest.argumentsOrdered":247,"org.easymock.tests.UsageVarargTest.varargIntAccepted":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":200,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":304,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":359,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":204,"org.easymock.tests.ReplayStateInvalidUsageTest.times":479,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests2.DependencyTest.testClassMocking":365,"org.easymock.tests2.AnswerTest.answer":75,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":349,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":452,"org.easymock.tests2.CaptureTest.testAnd":87,"org.easymock.tests2.UsageTest.strictResetToDefault":109,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":308,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":66,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":227,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":465,"org.easymock.tests2.DelegateToTest.testDelegate":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":33,"org.easymock.tests.LimitationsTest.mockFinalMethod":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":470,"org.easymock.tests2.DependencyTest.testClassMockingSupport":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":0,"org.easymock.tests2.CaptureTest.testCapture1_2446744":91,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":31,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":347,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":473,"org.easymock.tests.UsageThrowableTest.throwError":39,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":454,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":483,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":414,"org.easymock.samples.PartialClassMockTest.testGetArea":279,"org.easymock.tests.MockingTest.testInterfaceMocking":487,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":201,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":456,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":403,"org.easymock.tests2.UsageTest.niceToStrict":112,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":102,"org.easymock.tests2.MockBuilderTest.testCreateMock":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":27,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":67,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":451,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":458,"org.easymock.tests.UsageOverloadedMethodTest.overloading":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":136,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":5,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":188,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":268,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":135,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":8,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":96,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":462,"org.easymock.tests2.EasyMockSupportClassTest.testAll":164,"org.easymock.tests.MockClassControlTest.testEquals":323,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":199,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":468,"org.easymock.tests2.CaptureTest.testCaptureAll":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":348,"org.easymock.tests.MockNameTest.defaultName":446,"org.easymock.tests2.UsageConstraintsTest.testMatches":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":471,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":290,"org.easymock.samples.ExampleTest.voteForRemovals":275,"org.easymock.tests.UsageVarargTest.allKinds":217,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":469,"org.easymock.samples.BasicClassMockTest.testPrintContent":278,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":43,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":155,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":296,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":356,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":497,"org.easymock.tests2.UsageConstraintsTest.greaterThan":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":226,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":61,"org.easymock.samples.ExampleTest.voteForRemoval":272,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":340,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":80,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":309,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":306,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":108,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":252,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":64,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":292,"org.easymock.tests2.CaptureTest.testCaptureFirst":99,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":65,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":120,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":184,"org.easymock.tests2.UsageTest.moreThanOneArgument":110,"org.easymock.tests2.CaptureTest.testCapture2_2446744":98,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":105,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":216,"org.easymock.tests.GenericTest.testBridgedEquals":450,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":239,"org.easymock.tests.UsageExpectAndReturnTest.longType":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":466,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":62,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":36,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":484,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":143,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":34,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":491,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":287,"org.easymock.tests.UsageCallCountTest.tooManyCalls":240,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":23,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":42,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":149,"org.easymock.tests.MockingTest.testNiceClassMocking":330,"org.easymock.tests.MockingTest.testClassMocking":328,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":485,"org.easymock.tests2.UsageConstraintsTest.testContains":134,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":84,"org.easymock.tests2.UsageConstraintsTest.testFind":125,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":46,"org.easymock.tests.MockTypeTest.fromEasyMockClass":453,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":163,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":253,"org.easymock.tests.UsageExpectAndReturnTest.object":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":70,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":211,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":301,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":443,"org.easymock.tests.UsageTest.exactCallCountByLastCall":248,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":493,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":415,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":193,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":207,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":230,"org.easymock.tests.MockClassControlTest.testHashCode":11,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":351,"org.easymock.tests2.EasyMockSupportTest.testVerify":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":405,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":220,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":16,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":346,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":343,"org.easymock.tests.UsageVarargTest.varargCharAccepted":210,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":496,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastCall":114,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":73,"org.easymock.tests.DefaultClassInstantiatorTest.object":267,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":15,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":442,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":350,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":59,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":24,"org.easymock.tests.CapturesMatcherTest.test":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":167,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":321,"org.easymock.tests2.UsageTest.resumeIfFailure":119,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":325,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":295,"org.easymock.tests2.StubTest.stubWithReturnValue":13,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":369,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":144,"org.easymock.tests2.SerializationTest.testAllMockedMethod":170,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":433,"org.easymock.samples.SupportTest.voteForRemovals":282,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":30,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":439,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":363,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":495,"org.easymock.tests.UsageExpectAndThrowTest.object":28,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":141,"org.easymock.tests2.DelegateToTest.testWrongClass":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":232,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":233,"org.easymock.tests.UsageStrictMockTest.range":258,"org.easymock.samples.ConstructorCalledMockTest.testTax":331,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":392,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":69,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":148,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":459,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":457,"org.easymock.tests2.CaptureTest.testCaptureNone":95,"org.easymock.tests.UsageUnorderedTest.message":206,"org.easymock.tests.UsageVerifyTest.twoReturns":222,"org.easymock.tests.UsageVarargTest.varargByteAccepted":215,"org.easymock.tests2.ThreadingTest.testThreadSafe":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":408,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":238,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":444,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":277,"org.easymock.tests2.CaptureTest.testCapture_2617107":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":265,"org.easymock.tests2.UsageConstraintsTest.any":132,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":478,"org.easymock.tests2.StubTest.stub":107,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndThrowTest.longType":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":294,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":7,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":477,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":158,"org.easymock.tests2.SerializationTest.testClass":168,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":51,"org.easymock.tests.LimitationsTest.mockNativeMethod":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":196,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":297,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":375,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":161,"org.easymock.tests2.NameTest.nameForMocksControl":50,"org.easymock.tests2.MockedExceptionTest.testMockedException":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":398,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":245,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":387,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":22,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":251,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":52,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":104,"org.easymock.tests.MockingTest.testNicePartialClassMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":57,"org.easymock.tests2.CaptureTest.testCaptureLast":94,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":373,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":1,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":154,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":129,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":142,"org.easymock.tests.MockingTest.testTwoMocks":329,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":26,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":117,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":146,"org.easymock.samples.ExampleTest.removeNonExistingDocument":498,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":475,"org.easymock.tests.UsageStrictMockTest.differentMethods":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":352,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":337,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":81,"org.easymock.tests2.MockBuilderTest.testCreateMockString":317,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":399,"org.easymock.tests.UsageExpectAndThrowTest.floatType":20,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":76,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":416,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":166,"org.easymock.samples.ExampleTest.voteAgainstRemoval":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":428,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":205,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":60,"org.easymock.tests.LimitationsTest.privateConstructor":448,"org.easymock.tests2.UsageConstraintsTest.testNotNull":145,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":44,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":311,"org.easymock.tests2.UsageTest.defaultResetToNice":116,"org.easymock.samples.ExampleTest.voteAgainstRemovals":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":192,"org.easymock.tests.UsageVarargTest.differentLength":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":374,"org.easymock.tests2.CallbackTest.callback":172,"org.easymock.tests2.UsageConstraintsTest.equals":384,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":362,"org.easymock.tests.UsageTest.openCallCountByLastCall":244,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":264,"org.easymock.tests.UsageCallCountTest.tooFewCalls":236,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":461,"org.easymock.tests.UsageThrowableTest.throwCheckedException":41,"org.easymock.tests.MockingTest.testStrictClassMocking":327,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":153,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":344,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":480,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":152,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":78,"org.easymock.tests.ObjectMethodsTest.testHashCode":12,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":303,"org.easymock.tests2.NameTest.nameForNiceMock":49,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":83,"org.easymock.tests2.DependencyTest.testInterfaceMocking":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":302,"org.easymock.samples.ExampleTest.addDocument":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.DelegateToTest.testStubDelegate":174,"org.easymock.tests2.AnswerTest.stubAnswer":77,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":256,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":370,"org.easymock.tests.UsageVarargTest.varargLongAccepted":214,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.floatType":179,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":171,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":332,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":139,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":3,"org.easymock.tests.UsageThrowableTest.noUpperLimit":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":122,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":388,"org.easymock.tests2.SerializationTest.test":169,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":92,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":9,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":336,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":178,"org.easymock.tests2.UsageConstraintsTest.testSame":127,"org.easymock.samples.SupportTest.addDocument":281,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":385,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":400,"org.easymock.tests.GenericTest.testPackageScope":198,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":357,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":488,"org.easymock.tests2.NameTest.nameForMock":47,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":189,"org.easymock.tests2.UsageStrictMockTest.differentMethods":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":372,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":307,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":32,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":441,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":228,"org.easymock.tests2.MockedExceptionTest.testRealException":4,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":430,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":157,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":482,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":263,"org.easymock.tests2.NameTest.nameForStrictMock":48,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":314,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":318,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":140,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":338,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":101,"org.easymock.tests2.UsageStrictMockTest.range":159,"org.easymock.tests2.UsageConstraintsTest.lessThan":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":404,"org.easymock.tests2.CaptureTest.testCaptureRightOne":97,"org.easymock.tests2.UsageConstraintsTest.testOr":128,"org.easymock.tests.UsageRangeTest.combination":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":53,"org.easymock.tests.UsageTest.wrongArguments":243,"org.easymock.tests2.MockBuilderTest.testWithConstructor":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":401,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":190,"org.easymock.tests.UsageVarargTest.varargShortAccepted":213,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":339,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":486,"org.easymock.tests2.UsageConstraintsTest.cmpTo":133,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":14,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":115,"org.easymock.tests2.CaptureTest.testCaptureFromStub":342,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":472,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":313,"org.easymock.tests.UsageTest.unexpectedCallWithArray":335,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":237,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":191,"org.easymock.tests2.UsageConstraintsTest.constraints":123,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.samples.ExampleTest.addAndChangeDocument":276,"org.easymock.tests.UsageStrictMockTest.testVerify":261,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":280,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":467,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":202,"org.easymock.tests.LimitationsTest.abstractClass":447,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":203,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":68,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":208}}]
