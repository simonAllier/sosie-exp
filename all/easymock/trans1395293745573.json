[{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[10,11],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.LastControl:92","failures":[13,14,15,16,17,18,19,10,20,21,22],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,13,94,95,96,97,98,99,15,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,16,17,124,18,125,19,10,11,126,127,128,129,130,131,132,133,134,21,135,136,137,22,138,139,12,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[23,186,187,54,188,189,190,191,75,76,77,192,88,193,194,195,195,196,196,102,103,105,106,107,197,108,198,109,110,111,116,199,200,201,118,119,120,121,160,202,171,172,173,174,176,177,203,204,178,205,179,206,180,181,207,182,208,209,183],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,210,211,212,45,213,46,47,214,215,216,217,218,219,220,221,222,223,224,225,226,48,49,227,228,50,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,54,188,55,56,57,58,190,60,61,62,249,63,64,65,66,67,68,69,250,251,252,253,254,255,256,70,71,257,258,72,73,259,260,74,75,76,77,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,78,281,282,283,284,285,286,79,287,80,192,81,82,83,84,85,86,87,88,193,194,195,195,196,196,288,289,290,89,90,291,91,92,292,93,293,294,13,94,14,95,96,295,296,97,98,99,15,297,100,101,102,103,104,105,106,107,108,198,110,298,112,299,300,301,302,303,304,113,305,114,115,306,116,307,308,309,310,117,118,119,120,121,122,123,16,17,124,18,125,19,10,11,126,127,128,129,130,131,132,133,134,21,135,136,137,22,138,139,311,12,312,313,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,314,160,161,202,162,163,164,315,165,316,166,167,168,317,318,169,170,319,320,171,172,173,174,175,176,177,203,179,206,180,181,182,209,321,322,183,323,184,324,185,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[116,326,327,328,329,330,331,160,332,333],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[212,334,335,257,336,337],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[210,212,213,46,47,338,339,340,55,341,342,70,257,258,259,260,74,343,281,287,80,344,345,294,103,109,111,303,305,114,115,16,132,149,153,154,157,162,315,165,316,317,318,169,170,178,207,182,209],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[346,347,23,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,24,372,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,186,373,374,375,376,187,377,378,210,211,212,45,213,46,47,214,215,379,380,381,382,383,216,217,218,219,220,221,338,339,340,222,223,224,225,226,384,385,386,48,49,227,228,50,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,51,52,53,387,54,188,189,388,55,56,57,58,389,390,391,392,393,394,395,190,396,397,398,399,400,401,59,60,61,62,249,63,64,65,66,67,68,69,250,402,251,252,253,254,255,256,403,404,405,70,71,257,258,72,73,259,260,74,406,407,191,75,76,408,77,409,410,411,261,262,263,264,412,413,414,415,416,417,418,265,266,267,419,268,269,343,270,271,272,273,274,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,275,445,276,277,446,278,447,448,279,449,280,450,451,452,453,454,455,78,456,281,282,283,284,285,286,79,287,80,192,81,82,83,84,85,86,87,457,458,459,88,193,194,195,196,288,289,290,89,90,291,91,92,292,93,460,293,294,13,94,14,95,96,295,296,97,98,99,15,297,100,101,102,103,104,105,106,107,197,461,108,462,463,198,109,110,111,464,465,298,112,466,299,300,301,302,303,304,113,305,114,115,306,116,326,307,308,309,310,467,468,469,470,0,1,117,471,2,472,3,4,473,474,475,476,118,477,478,119,479,480,481,482,483,484,485,486,487,120,488,489,490,491,492,121,493,494,122,123,16,17,495,124,18,125,19,10,11,20,126,127,128,129,130,131,132,133,134,21,135,136,496,137,22,138,139,497,311,12,312,498,313,499,500,140,141,142,501,143,144,145,146,502,503,504,5,6,147,505,7,506,8,9,507,148,149,150,151,152,153,154,155,156,157,158,159,314,160,161,202,162,163,164,315,165,316,166,167,168,317,318,169,170,319,508,320,509,510,511,512,513,514,515,516,517,518,519,520,171,172,173,174,521,175,176,177,522,203,178,205,523,179,206,180,181,524,333,207,182,209,321,322,183,323,184,525,526,324,185,325],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[160,333],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[116,326,327,328,329,330,331,160,332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[180],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[416,527,528],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:508","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[13,14,95,96,295,296,97,99,529,15,297,101],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[288,289,468,469,470,0,1,471,2,472,3,4,473,502,503,504,5,6,505,7,506,8,9,507],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[346,347,23,348,371,24,372,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,186,373,374,375,376,187,377,378,210,211,212,45,213,46,47,214,215,379,380,381,382,383,216,217,218,219,220,221,338,339,340,222,223,224,225,226,384,385,386,48,49,227,228,50,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,51,52,53,387,54,188,189,388,55,56,57,58,389,390,391,392,393,394,395,190,396,397,398,399,400,401,59,60,61,62,249,63,64,65,66,67,68,69,250,402,251,252,253,254,255,256,403,404,405,70,71,257,258,72,73,259,260,74,406,407,191,75,76,408,77,409,410,411,261,262,263,264,412,413,414,415,416,417,418,265,266,267,419,268,269,343,270,271,272,273,274,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,275,445,276,277,446,278,447,448,279,449,280,450,451,452,453,454,455,78,456,281,282,283,284,285,286,79,287,80,192,81,82,83,84,85,86,87,457,458,459,88,193,194,195,196,288,289,290,89,90,291,91,92,292,93,460,293,294,13,94,14,95,96,295,296,97,98,99,15,297,100,101,102,103,104,105,106,107,197,461,108,462,463,198,109,110,111,464,465,298,112,466,299,300,301,302,303,304,113,305,114,115,306,116,326,307,308,309,310,467,468,469,470,0,1,117,471,2,472,3,4,473,474,475,476,118,477,478,119,479,480,481,482,483,484,485,486,487,120,488,489,490,491,492,121,493,494,122,123,16,17,495,124,18,125,19,10,11,20,126,127,128,129,130,131,132,133,134,21,135,136,496,137,22,138,139,497,311,12,312,498,313,499,500,140,141,142,143,144,145,146,502,503,504,5,6,147,505,7,506,8,9,507,148,149,150,151,152,153,154,155,156,157,158,159,314,160,161,202,162,163,164,315,165,316,166,167,168,317,318,169,170,319,508,320,509,512,513,514,171,172,173,174,521,175,176,177,522,203,178,205,523,179,206,180,181,524,333,207,182,209,321,322,183,323,184,525,526,324,185,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"position":"org.easymock.internal.LastControl:95","failures":[13,14,15,16,17,18,19,10,20,21,22],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,61,62,63,64,65,66,67,68,255,403,404,405,70,73,423,454,287,112,162,167],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[12],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:115","sourceCode":"for (final org.easymock.internal.MethodSerializationWrapper org.easymock.internal.MethodSerializationWrapper : java.util.Set<org.easymock.internal.MethodSerializationWrapper>) {\n    try {\n        java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n    }\n}","type":"CtForEachImpl"},"failures":[160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[20],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[383],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[346,347,23,348,186,187,387,54,188,189,388,394,395,190,396,397,398,399,400,401,406,407,191,75,76,77,411,412,413,414,415,416,417,418,192,88,193,194,195,195,196,196,102,103,105,106,107,197,108,462,463,198,109,110,111,464,465,116,326,200,474,475,476,118,477,478,119,479,480,481,482,483,484,485,486,487,120,488,489,490,491,492,121,493,494,160,202,509,512,171,172,173,174,176,177,203,204,178,205,523,179,206,180,181,333,207,182,208,209,321,322,183],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[426],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[17,10,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[195,195,196,196,462,116,326,160,524,333],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[212,46,342,257,258,259,260,456,281,287,80,114,315,317,318],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[212,334,335,257,336,337],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[375,378,212,45,46,47,384,385,390,393,71,257,258,259,260,450,281,79,287,80,113,114,115,117,147,164,315,317,318,513],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[422],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"answer"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[530,160,161,202],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[531,532,533,534,45,46,47,71,281,79,287,80,113,114,115,164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[46,47,380,381,218,55,61,249,72,73,421,79,114,115,19,134,166,167],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":17,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":70,"org.easymock.tests2.UsageTest.argumentsOrdered":318,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":430,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":316,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":289,"org.easymock.tests2.DelegateToTest.testReturnException":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":252,"org.easymock.tests.MockingTest.testPartialClassMocking":75,"org.easymock.tests.MockClassControlTest.testToString":396,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":466,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":24,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":482,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":229,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":531,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":141,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":327,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":48,"org.easymock.tests2.UsageTest.wrongArguments":315,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":263,"org.easymock.samples.ExampleTest.answerVsDelegate":291,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":187,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":410,"org.easymock.tests2.UsageConstraintsTest.testNull":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":401,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":157,"org.easymock.tests2.CaptureTest.testPrimitive":95,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":50,"org.easymock.tests.UsageTest.moreThanOneArgument":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":248,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":284,"org.easymock.tests.UsageTest.argumentsOrdered":260,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":379,"org.easymock.tests.UsageVarargTest.varargIntAccepted":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":83,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":203,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":511,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":87,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":354,"org.easymock.tests.ReplayStateInvalidUsageTest.times":448,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":117,"org.easymock.tests2.DependencyTest.testClassMocking":499,"org.easymock.tests2.AnswerTest.answer":184,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":437,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":310,"org.easymock.tests2.CaptureTest.testAnd":13,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":374,"org.easymock.tests2.UsageTest.strictResetToDefault":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":57,"org.easymock.tests2.DelegateToTest.testDelegate":313,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":383,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":353,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":244,"org.easymock.tests.LimitationsTest.mockFinalMethod":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":255,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":226,"org.easymock.tests2.DependencyTest.testClassMockingSupport":500,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":384,"org.easymock.tests2.CaptureTest.testCapture1_2446744":96,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":308,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":445,"org.easymock.tests.UsageThrowableTest.throwError":62,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":376,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":507,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":494,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":357,"org.easymock.samples.PartialClassMockTest.testGetArea":88,"org.easymock.tests.MockingTest.testInterfaceMocking":408,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":84,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":483,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":394,"org.easymock.tests2.UsageTest.niceToStrict":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":230,"org.easymock.tests2.ThreadingTest.testChangeDefault":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.MockBuilderTest.testCreateMock":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":472,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":238,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":336,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":153,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":373,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":405,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":261,"org.easymock.tests.UsageOverloadedMethodTest.overloading":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":487,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":454,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":36,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":59,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":527,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":129,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":99,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":419,"org.easymock.tests.MockClassControlTest.testEquals":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":118,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":246,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":199,"org.easymock.tests2.CaptureTest.testCaptureAll":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":309,"org.easymock.tests.MockNameTest.defaultName":450,"org.easymock.tests2.UsageConstraintsTest.testMatches":131,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":285,"org.easymock.samples.ExampleTest.voteForRemovals":93,"org.easymock.tests.UsageVarargTest.allKinds":274,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":79,"org.easymock.samples.BasicClassMockTest.testPrintContent":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":225,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":67,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":303,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":256,"org.easymock.tests2.UsageConstraintsTest.greaterThan":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":56,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":111,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":358,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":418,"org.easymock.samples.ExampleTest.voteForRemoval":91,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":464,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":143,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":377,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":197,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":350,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":192,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":150,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":251,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":497,"org.easymock.tests2.CaptureTest.testCaptureFirst":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":151,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":32,"org.easymock.tests2.UsageTest.moreThanOneArgument":164,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":145,"org.easymock.tests2.CaptureTest.testCapture2_2446744":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":182,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":273,"org.easymock.tests.GenericTest.testBridgedEquals":388,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":339,"org.easymock.tests.UsageExpectAndReturnTest.longType":28,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":222,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":247,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":496,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":402,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":282,"org.easymock.tests.UsageCallCountTest.tooManyCalls":340,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":66,"org.easymock.tests.MockingTest.testNiceClassMocking":411,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":172,"org.easymock.tests.MockingTest.testClassMocking":407,"org.easymock.tests2.UsageConstraintsTest.testContains":128,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":204,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":217,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":183,"org.easymock.tests2.UsageConstraintsTest.testFind":124,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":61,"org.easymock.tests.MockTypeTest.fromEasyMockClass":375,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":210,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":320,"org.easymock.tests.UsageExpectAndReturnTest.object":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":156,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":328,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":392,"org.easymock.tests.UsageTest.exactCallCountByLastCall":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":371,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":326,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":41,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":265,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":503,"org.easymock.tests.MockClassControlTest.testHashCode":399,"org.easymock.tests2.EasyMockSupportTest.testVerify":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":485,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":381,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":451,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":404,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":307,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":341,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":467,"org.easymock.tests.UsageVarargTest.varargCharAccepted":268,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":443,"org.easymock.tests2.UsageTest.openCallCountByLastCall":166,"org.easymock.tests.DefaultClassInstantiatorTest.object":412,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":159,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":403,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":390,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":486,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":0,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":502,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":398,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":109,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":235,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":42,"org.easymock.tests.ReplayStateInvalidCallsTest.times":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":457,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":363,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":121,"org.easymock.tests2.UsageTest.resumeIfFailure":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":186,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":510,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":254,"org.easymock.tests2.StubTest.stubWithReturnValue":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":332,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":34,"org.easymock.tests2.SerializationTest.testAllMockedMethod":202,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":436,"org.easymock.samples.SupportTest.voteForRemovals":89,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":337,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":241,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":530,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":442,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":525,"org.easymock.tests.UsageExpectAndThrowTest.object":239,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":372,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":135,"org.easymock.tests2.DelegateToTest.testWrongClass":312,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":81,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":360,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":82,"org.easymock.tests.UsageStrictMockTest.range":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":195,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":513,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":240,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":474,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":449,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":334,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":352,"org.easymock.tests2.CaptureTest.testCaptureNone":98,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":53,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":516,"org.easymock.tests.UsageUnorderedTest.message":281,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":344,"org.easymock.tests.UsageVerifyTest.twoReturns":80,"org.easymock.tests.UsageVarargTest.varargByteAccepted":272,"org.easymock.tests2.ThreadingTest.testThreadSafe":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":488,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":221,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":393,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":193,"org.easymock.tests2.CaptureTest.testCapture_2617107":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":228,"org.easymock.tests2.UsageConstraintsTest.any":126,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":447,"org.easymock.tests2.StubTest.stub":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndThrowTest.longType":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":253,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":416,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":278,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.tests2.SerializationTest.testClass":160,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests.LimitationsTest.mockNativeMethod":23,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":470,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":201,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":368,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":306,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":517,"org.easymock.tests2.NameTest.nameForMocksControl":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":1,"org.easymock.tests2.MockedExceptionTest.testMockedException":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":478,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":508,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":233,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":181,"org.easymock.tests.MockingTest.testNicePartialClassMocking":76,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":107,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":468,"org.easymock.tests2.CaptureTest.testCaptureLast":97,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":385,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":177,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":367,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":136,"org.easymock.tests.MockingTest.testTwoMocks":191,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":364,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":522,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":237,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":317,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":138,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":520,"org.easymock.samples.ExampleTest.removeNonExistingDocument":460,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":2,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":277,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":504,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":519,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":414,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":144,"org.easymock.tests2.MockBuilderTest.testCreateMockString":209,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":479,"org.easymock.tests.UsageExpectAndThrowTest.floatType":231,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":324,"org.easymock.tests.UsageVerifyTest.twoThrows":287,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":120,"org.easymock.samples.ExampleTest.voteAgainstRemoval":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":51,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":110,"org.easymock.tests.LimitationsTest.privateConstructor":347,"org.easymock.tests2.UsageConstraintsTest.testNotNull":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":68,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":321,"org.easymock.tests2.UsageTest.defaultResetToNice":168,"org.easymock.samples.ExampleTest.voteAgainstRemovals":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":40,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":469,"org.easymock.tests.UsageVarargTest.differentLength":343,"org.easymock.tests2.CallbackTest.callback":294,"org.easymock.tests2.UsageConstraintsTest.equals":495,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":462,"org.easymock.tests.UsageTest.openCallCountByLastCall":72,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":227,"org.easymock.tests.UsageCallCountTest.tooFewCalls":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":174,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":264,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":518,"org.easymock.tests.UsageThrowableTest.throwCheckedException":65,"org.easymock.tests.MockingTest.testStrictClassMocking":406,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":335,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":176,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":471,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":173,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":175,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":325,"org.easymock.tests.ObjectMethodsTest.testHashCode":391,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":146,"org.easymock.tests2.NameTest.nameForNiceMock":301,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":366,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":361,"org.easymock.tests2.DependencyTest.testInterfaceMocking":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":329,"org.easymock.samples.ExampleTest.addDocument":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.DelegateToTest.testStubDelegate":12,"org.easymock.tests2.AnswerTest.stubAnswer":185,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":45,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":524,"org.easymock.tests.UsageVarargTest.varargLongAccepted":271,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":43,"org.easymock.tests.UsageExpectAndReturnTest.floatType":27,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":116,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":196,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":455,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":8,"org.easymock.tests.UsageThrowableTest.noUpperLimit":249,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":123,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":509,"org.easymock.tests2.SerializationTest.test":161,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":295,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":528,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":413,"org.easymock.tests2.UsageConstraintsTest.testSame":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":26,"org.easymock.samples.SupportTest.addDocument":290,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":521,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":351,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":480,"org.easymock.tests.GenericTest.testPackageScope":54,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":506,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":409,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":349,"org.easymock.tests2.NameTest.nameForMock":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":37,"org.easymock.tests2.UsageStrictMockTest.differentMethods":115,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":463,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":29,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":243,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":58,"org.easymock.tests2.MockedExceptionTest.testRealException":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":378,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":433,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":49,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":280,"org.easymock.tests2.NameTest.nameForStrictMock":300,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":523,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":512,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":532,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":415,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests.ErrorMessageTest.testGetters":533,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":178,"org.easymock.tests2.UsageStrictMockTest.range":114,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":355,"org.easymock.tests2.UsageConstraintsTest.lessThan":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":484,"org.easymock.tests2.CaptureTest.testCaptureRightOne":15,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":515,"org.easymock.tests2.UsageConstraintsTest.testOr":19,"org.easymock.tests.UsageRangeTest.combination":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":103,"org.easymock.tests.UsageTest.wrongArguments":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":481,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":38,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":417,"org.easymock.tests.UsageVarargTest.varargShortAccepted":270,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":338,"org.easymock.tests2.UsageConstraintsTest.cmpTo":127,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":369,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":526,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":423,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.CaptureTest.testCaptureFromStub":297,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":275,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":205,"org.easymock.tests.UsageTest.unexpectedCallWithArray":257,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":365,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":212,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":220,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":39,"org.easymock.tests2.CaptureTest.testCapture":529,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":213,"org.easymock.samples.ExampleTest.addAndChangeDocument":293,"org.easymock.tests.UsageStrictMockTest.testVerify":215,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":288,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":223,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":85,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":200,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":31,"org.easymock.tests.LimitationsTest.abstractClass":346,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":86,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":534,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":154,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":266}}]
