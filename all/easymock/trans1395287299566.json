[{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:173","sourceCode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.setPotentialValue(null);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[17,18],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[19,19,20,20,21,22,23,24,25],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[28,29,30,31,32,33],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[34,35,36,2,37,38,39,40,41,42,9,11,12,43,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[44,45],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[46,47,48,49,34,35,36,50,51,2,3,52,53,37,54,38,55,39,40,41,42,9,11,12,56,57,58,43,14,15],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[59],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[22,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:562","sourceCode":"org.easymock.IMocksControl.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[116,117,118],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[119,120,121],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[138,19,20,139,140,21,22,141,142,108,46,143,109,144,28,145,146,110,147,23,47,48,112,49,148,149,150,151,152,153,154,24,155,156,29,30,157,158,159,60,61,62,160,161,162,163,113,164,165,114,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,25,27,185,186,187,188,189,190,191,192,193,194,195,44,196,197,198,45,199,200,119,201,120,121,202,203,204,205,206,207,208,209,210,211,212,213],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[34,35,36,2,37,38,39,40,41,42,9,11,12,43,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[200,121],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[214,215,216,217,39,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[218,219,220,221,222,223,224,225,139,140,226,227,228,229,230,231,232,233,28,146,147,123,124,130,234,133,136,149,151,30,235,236,237,238,239,240,241,0,242,243,244,245,50,246,247,248,249,250,251,252,253,254,255,64,256,257,258,259,260,261,262,263,51,264,265,266,267,268,269,1,270,2,3,271,25,26,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,85,299,4,300,301,302,9,303,87,304,305,88,89,90,91,92,201,306,307,93,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,94,95,96,97,98,99,10,11,12,328,329,330,13,331,14,15,332],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[200],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[138,19,20,218,219,220,221,222,223,333,224,225,139,140,226,227,228,21,22,141,334,335,336,337,338,339,340,341,342,343,344,229,345,346,230,347,231,232,348,349,350,351,352,353,354,355,16,356,357,59,358,359,360,361,233,362,363,364,365,366,367,142,108,46,143,109,144,28,145,146,110,147,368,23,47,48,112,49,123,124,125,126,127,128,129,130,234,131,133,134,135,136,148,149,369,150,151,152,153,370,154,24,155,156,29,30,157,158,159,235,236,237,371,238,60,61,62,63,372,373,374,375,376,239,377,378,379,380,381,382,240,241,0,34,242,243,244,245,383,35,36,50,246,384,385,247,248,249,386,387,388,389,390,391,250,392,393,394,395,396,397,17,251,252,253,18,254,160,398,399,400,161,401,402,255,64,162,163,113,164,403,404,165,114,115,256,257,258,259,260,261,262,405,263,51,264,265,406,166,167,407,168,408,169,170,171,172,173,409,174,175,176,177,410,178,179,180,181,182,183,184,411,412,266,413,414,267,268,415,416,269,1,270,2,3,271,25,26,27,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,417,418,419,53,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,185,186,187,188,189,420,190,421,422,191,423,424,425,426,427,428,429,430,431,432,433,434,292,293,294,295,296,192,435,436,437,438,193,439,440,297,441,298,85,442,443,37,444,445,446,447,55,448,449,450,299,4,39,40,300,301,41,42,302,194,451,452,453,454,455,456,457,458,459,460,461,195,44,196,197,198,45,462,199,9,463,464,465,303,86,466,87,304,305,88,89,90,91,92,200,119,201,120,121,306,307,93,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,308,309,310,491,311,312,492,313,314,315,316,317,202,203,204,205,206,207,208,209,210,211,212,213,318,319,320,321,322,493,494,495,496,323,324,325,326,327,497,498,499,500,501,502,503,504,505,94,95,96,97,98,99,10,11,12,506,507,508,509,510,511,56,57,58,328,329,512,330,43,13,331,14,15,332,513,514,515,516],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[344,229,230,231,232,349,59,233,123,125,133],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[517],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[25,26,27,518],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[413],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[138,19,20,218,219,220,221,222,223,224,225,139,140,226,227,228,21,335,336,337,338,339,341,342,343,344,229,346,230,347,231,232,348,350,351,352,353,354,355,16,356,357,59,358,359,361,233,362,363,364,365,366,367,142,28,145,146,147,123,124,125,126,128,129,130,234,131,133,136,148,369,150,151,152,154,156,30,235,236,238,60,61,62,63,239,241,0,242,243,383,50,247,248,249,250,251,252,254,255,64,162,163,113,164,404,165,114,256,257,258,259,260,261,262,405,263,51,264,265,406,168,170,178,184,266,267,268,415,269,1,3,271,25,26,27,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,188,189,190,292,293,294,295,296,443,446,55,448,449,450,4,194,456,457,458,459,460,303,304,305,119,201,307,93,308,309,310,311,312,313,314,315,316,317,203,212,318,319,322,493,494,495,496,323,324,325,326,327,94,95,96,97,98,99,10,11,12,506,507,508,509,510,511,328,329,330,13,15,332,513],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":229,"org.easymock.tests2.UsageTest.argumentsOrdered":36,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":299,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":477,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":243,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":225,"org.easymock.tests2.DelegateToTest.testReturnException":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":95,"org.easymock.tests.MockingTest.testPartialClassMocking":188,"org.easymock.tests.MockClassControlTest.testToString":204,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":334,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":409,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":65,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":5,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":248,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":348,"org.easymock.tests2.UsageTest.wrongArguments":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":318,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":495,"org.easymock.samples.ExampleTest.answerVsDelegate":219,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":193,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":422,"org.easymock.tests2.UsageConstraintsTest.testNull":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":150,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":51,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":209,"org.easymock.tests2.CaptureTest.testPrimitive":126,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":322,"org.easymock.tests.UsageTest.moreThanOneArgument":4,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":84,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":294,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":451,"org.easymock.tests.UsageTest.argumentsOrdered":42,"org.easymock.tests.UsageVarargTest.varargIntAccepted":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":482,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":323,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":142,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":381,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":327,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":117,"org.easymock.tests.ReplayStateInvalidUsageTest.times":431,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":250,"org.easymock.tests2.DependencyTest.testClassMocking":384,"org.easymock.tests2.AnswerTest.answer":266,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":484,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":367,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":436,"org.easymock.tests2.CaptureTest.testAnd":123,"org.easymock.tests2.UsageTest.strictResetToDefault":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":293,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":260,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":455,"org.easymock.tests2.DelegateToTest.testDelegate":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":80,"org.easymock.tests.LimitationsTest.mockFinalMethod":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":460,"org.easymock.tests2.DependencyTest.testClassMockingSupport":385,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":444,"org.easymock.tests2.CaptureTest.testCapture1_2446744":127,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":365,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":425,"org.easymock.tests.UsageThrowableTest.throwError":87,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":438,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":53,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":296,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":412,"org.easymock.samples.PartialClassMockTest.testGetArea":138,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":426,"org.easymock.tests.MockingTest.testInterfaceMocking":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":324,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":515,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":66,"org.easymock.tests2.UsageTest.niceToStrict":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":28,"org.easymock.tests2.MockBuilderTest.testCreateMock":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":181,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":394,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":74,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":214,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":261,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":435,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":465,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":506,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":493,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":105,"org.easymock.tests.UsageOverloadedMethodTest.overloading":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":183,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":85,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":283,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":306,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":353,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":131,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":491,"org.easymock.tests2.EasyMockSupportClassTest.testAll":168,"org.easymock.tests.MockClassControlTest.testEquals":208,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":82,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":458,"org.easymock.tests2.CaptureTest.testCaptureAll":124,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":366,"org.easymock.tests.MockNameTest.defaultName":466,"org.easymock.tests2.UsageConstraintsTest.testMatches":355,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":295,"org.easymock.samples.ExampleTest.voteForRemovals":223,"org.easymock.tests.UsageVarargTest.allKinds":317,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":459,"org.easymock.samples.BasicClassMockTest.testPrintContent":140,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":91,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":99,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":378,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":462,"org.easymock.tests2.UsageConstraintsTest.greaterThan":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":448,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":157,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":199,"org.easymock.samples.ExampleTest.voteForRemoval":220,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":158,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":153,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":194,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":240,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":258,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":94,"org.easymock.tests2.CaptureTest.testCaptureFirst":136,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":259,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":246,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":279,"org.easymock.tests2.CaptureTest.testCapture2_2446744":135,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":485,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":316,"org.easymock.tests.GenericTest.testBridgedEquals":121,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":106,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":103,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":57,"org.easymock.tests.UsageExpectAndReturnTest.longType":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":456,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":256,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":83,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":447,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":81,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":292,"org.easymock.tests.UsageCallCountTest.tooManyCalls":58,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":118,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":70,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":90,"org.easymock.tests.MockingTest.testNiceClassMocking":191,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":163,"org.easymock.tests.MockingTest.testClassMocking":186,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":507,"org.easymock.tests2.UsageConstraintsTest.testContains":352,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":62,"org.easymock.tests2.UsageConstraintsTest.testFind":346,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":93,"org.easymock.tests.MockTypeTest.fromEasyMockClass":437,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":512,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":341,"org.easymock.tests.UsageExpectAndReturnTest.object":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":263,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":312,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":503,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":107,"org.easymock.tests.UsageTest.exactCallCountByLastCall":302,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":497,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":452,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":288,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":298,"org.easymock.tests.MockClassControlTest.testHashCode":207,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":373,"org.easymock.tests2.EasyMockSupportTest.testVerify":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":176,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":116,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":453,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":464,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":297,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":364,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":386,"org.easymock.tests.UsageVarargTest.varargCharAccepted":311,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":461,"org.easymock.tests2.CaptureTest.testCaptureMultiple":122,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":490,"org.easymock.tests2.UsageTest.openCallCountByLastCall":244,"org.easymock.tests.DefaultClassInstantiatorTest.object":195,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":463,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":501,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":72,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":390,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":372,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":29,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":71,"org.easymock.tests.CapturesMatcherTest.test":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":184,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":205,"org.easymock.tests2.UsageTest.resumeIfFailure":50,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":192,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":97,"org.easymock.tests2.StubTest.stubWithReturnValue":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":110,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":281,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":361,"org.easymock.tests2.SerializationTest.testAllMockedMethod":27,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":483,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":215,"org.easymock.samples.SupportTest.voteForRemovals":228,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":77,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":518,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":489,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":413,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":499,"org.easymock.tests.UsageExpectAndThrowTest.object":75,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":358,"org.easymock.tests2.DelegateToTest.testWrongClass":253,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":328,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":329,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":401,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":162,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":76,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":166,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":494,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":516,"org.easymock.tests2.CaptureTest.testCaptureNone":234,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":52,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":315,"org.easymock.tests2.ThreadingTest.testThreadSafe":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":179,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":511,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":504,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":139,"org.easymock.tests2.CaptureTest.testCapture_2617107":125,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":487,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":321,"org.easymock.tests2.UsageConstraintsTest.any":350,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":430,"org.easymock.tests2.StubTest.stub":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":96,"org.easymock.tests.UsageExpectAndThrowTest.longType":68,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":429,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":239,"org.easymock.tests.LimitationsTest.mockNativeMethod":212,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":120,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":389,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":32,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":271,"org.easymock.tests2.NameTest.nameForMocksControl":338,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":391,"org.easymock.tests2.MockedExceptionTest.testMockedException":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":169,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":301,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":190,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":69,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":340,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":147,"org.easymock.tests.MockingTest.testNicePartialClassMocking":189,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":387,"org.easymock.tests2.CaptureTest.testCaptureLast":130,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":445,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":114,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":232,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":359,"org.easymock.tests.MockingTest.testTwoMocks":187,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":73,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":362,"org.easymock.samples.ExampleTest.removeNonExistingDocument":333,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":393,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":374,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":196,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":237,"org.easymock.tests2.MockBuilderTest.testCreateMockString":49,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":171,"org.easymock.tests.UsageExpectAndThrowTest.floatType":67,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":141,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":178,"org.easymock.samples.ExampleTest.voteAgainstRemoval":221,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":30,"org.easymock.tests.LimitationsTest.privateConstructor":211,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":102,"org.easymock.tests2.UsageConstraintsTest.testNotNull":233,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":92,"org.easymock.tests2.UsageTest.defaultResetToNice":383,"org.easymock.samples.ExampleTest.voteAgainstRemovals":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":287,"org.easymock.tests.UsageVarargTest.differentLength":492,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":388,"org.easymock.tests2.CallbackTest.callback":249,"org.easymock.tests2.UsageConstraintsTest.equals":345,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":24,"org.easymock.tests.UsageTest.openCallCountByLastCall":300,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":320,"org.easymock.tests.UsageCallCountTest.tooFewCalls":509,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":164,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":496,"org.easymock.tests.UsageThrowableTest.throwCheckedException":89,"org.easymock.tests.MockingTest.testStrictClassMocking":185,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":217,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":86,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":392,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":113,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":404,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":415,"org.easymock.tests.ObjectMethodsTest.testHashCode":502,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":238,"org.easymock.tests2.NameTest.nameForNiceMock":337,"org.easymock.tests2.DependencyTest.testInterfaceMocking":247,"org.easymock.samples.ExampleTest.addDocument":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.DelegateToTest.testStubDelegate":252,"org.easymock.tests2.AnswerTest.stubAnswer":268,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":368,"org.easymock.tests.UsageVarargTest.varargLongAccepted":314,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.floatType":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests.UsageThrowableTest.noUpperLimit":304,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":357,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":343,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":160,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":128,"org.easymock.tests2.SerializationTest.test":26,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":273,"org.easymock.tests2.UsageConstraintsTest.testSame":347,"org.easymock.samples.SupportTest.addDocument":227,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":403,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":172,"org.easymock.tests.GenericTest.testPackageScope":119,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":379,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":421,"org.easymock.tests2.NameTest.nameForMock":335,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":284,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":112,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":276,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":79,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":500,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":450,"org.easymock.tests2.MockedExceptionTest.testRealException":63,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":480,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":319,"org.easymock.tests2.NameTest.nameForStrictMock":336,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":100,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":339,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":151,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":161,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":6,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":59,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":197,"org.easymock.tests.ErrorMessageTest.testGetters":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":46,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":175,"org.easymock.tests2.CaptureTest.testCaptureRightOne":133,"org.easymock.tests2.UsageConstraintsTest.testOr":231,"org.easymock.tests.UsageRangeTest.combination":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":149,"org.easymock.tests.UsageTest.wrongArguments":40,"org.easymock.tests2.MockBuilderTest.testWithConstructor":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":173,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":285,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":45,"org.easymock.tests.UsageVarargTest.varargShortAccepted":313,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":56,"org.easymock.tests2.UsageConstraintsTest.cmpTo":351,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":470,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":245,"org.easymock.tests2.CaptureTest.testCaptureFromStub":134,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":424,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":143,"org.easymock.tests.UsageTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":510,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":286,"org.easymock.tests2.CaptureTest.testCapture":132,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":331,"org.easymock.tests2.UsageConstraintsTest.constraints":344,"org.easymock.samples.ExampleTest.addAndChangeDocument":224,"org.easymock.tests2.ConstraintsToStringTest.containsToString":517,"org.easymock.tests.UsageStrictMockTest.testVerify":513,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":226,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":457,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":325,"org.easymock.tests.LimitationsTest.abstractClass":210,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":278,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":326,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":262,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":309}}]
