[{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,5,18,19,20,21,22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,2,65,3,4,66,67,68,10,11,69,70,71,72,73,12,13,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,5,6,202,7,8,203,9,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,18,20,227,228,21,22,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[269,270,271,272,273,274,275,276,47,277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[278,279,280,281,282],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[74,130,283,284,285,286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[26,27,28,29,30,288,31,289,32,33,34,290,35,36,37,38,39,40,41,42,43,44,45,46,291,47,48,292,293,49,294,0,50,1,51,53,54,55,295,56,57,58,59,60,61,62,63,64,2,65,3,4,66,67,68,10,11,69,70,71,72,73,12,13,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,296,297,298,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,299,300,301,302,303,304,305,306,307,308,309,130,131,310,311,312,313,314,314,315,315,132,316,133,134,135,136,137,138,139,140,141,142,143,144,317,318,319,320,321,322,323,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,324,325,164,326,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,327,328,329,330,198,199,200,201,5,6,202,7,8,203,9,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,331,224,225,226,18,20,227,228,21,22,229,230,231,285,286,287,232,233,234,235,236,237,332,333,334,335,336,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[337,325,164,326,338],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[67,72,306,307,308,309,131,146,156,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,192,196,197,226,228,234,235,238,239,240,241,242,243,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[167,244],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[339,340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[52,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[3,4,7,8,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[118,126,341,171,177,183,187,189,205,211,217,221,223,226,230,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[96],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[26,27,28,29,30,288,31,342,289,32,343,33,34,344,290,345,35,36,37,38,39,40,41,42,43,44,45,46,291,47,48,292,293,49,294,0,50,1,346,51,53,54,55,295,56,57,58,59,60,61,62,63,2,65,3,4,66,67,68,10,11,69,70,71,72,73,12,13,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,296,297,298,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,347,348,349,129,299,300,301,302,303,304,305,306,307,308,309,130,131,310,311,312,313,314,314,315,315,316,135,136,137,138,139,141,142,317,318,319,320,321,350,322,323,145,146,147,148,149,150,151,153,154,155,156,157,158,351,159,160,161,162,163,324,325,326,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,327,328,329,330,198,199,200,5,6,202,7,8,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,331,224,225,226,18,19,20,227,228,21,22,229,230,231,285,286,287,232,233,234,235,236,237,332,333,334,335,336,238,239,240,241,242,243,244,245,246,247,352,353,354,355,356,357,358,359,248,249,250,251,252,253,254,255,256,267],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":79,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":226,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":241,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":70,"org.easymock.tests2.StubTest.stubWithReturnValue":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":276,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":213,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":100,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":132,"org.easymock.tests2.SerializationTest.testAllMockedMethod":292,"org.easymock.tests2.DelegateToTest.testReturnException":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":239,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":165,"org.easymock.tests.MockingTest.testPartialClassMocking":328,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":16,"org.easymock.samples.SupportTest.voteForRemovals":135,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":337,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":247,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":182,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":296,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":170,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":27,"org.easymock.tests.UsageExpectAndThrowTest.object":180,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":97,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":270,"org.easymock.tests2.DelegateToTest.testWrongClass":60,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":254,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":255,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":232,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.samples.ConstructorCalledMockTest.testTax":314,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":353,"org.easymock.samples.ExampleTest.answerVsDelegate":137,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":42,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":299,"org.easymock.tests2.UsageConstraintsTest.testNull":81,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":181,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":33,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":44,"org.easymock.tests2.CaptureTest.testPrimitive":117,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":236,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests.UsageTest.moreThanOneArgument":18,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":352,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":294,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":225,"org.easymock.tests2.CaptureTest.testCaptureNone":122,"org.easymock.tests.UsageUnorderedTest.message":230,"org.easymock.tests.UsageVerifyTest.twoReturns":253,"org.easymock.tests.UsageVarargTest.varargByteAccepted":265,"org.easymock.tests2.ThreadingTest.testThreadSafe":109,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":332,"org.easymock.tests.UsageTest.argumentsOrdered":22,"org.easymock.tests.UsageVarargTest.varargIntAccepted":259,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":321,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":143,"org.easymock.tests2.CaptureTest.testCapture_2617107":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":159,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":17,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":274,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":235,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":343,"org.easymock.tests2.UsageConstraintsTest.any":87,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":284,"org.easymock.tests2.StubTest.stub":130,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":240,"org.easymock.tests.UsageExpectAndThrowTest.longType":173,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":65,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":56,"org.easymock.tests2.SerializationTest.testClass":47,"org.easymock.tests.LimitationsTest.mockNativeMethod":237,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":223,"org.easymock.tests2.AnswerTest.answer":26,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":349,"org.easymock.tests2.CaptureTest.testAnd":114,"org.easymock.tests2.UsageTest.strictResetToDefault":68,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":52,"org.easymock.tests2.NameTest.nameForMocksControl":313,"org.easymock.tests2.MockedExceptionTest.testMockedException":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":39,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":336,"org.easymock.tests2.DelegateToTest.testDelegate":62,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":174,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":293,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":34,"org.easymock.tests.MockingTest.testNicePartialClassMocking":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":185,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":1,"org.easymock.tests2.CompareToTest.testCompareEqual":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":269,"org.easymock.tests2.CaptureTest.testCaptureLast":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":305,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":359,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":98,"org.easymock.tests.MockingTest.testTwoMocks":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":198,"org.easymock.tests2.CaptureTest.testCapture1_2446744":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":183,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":178,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":102,"org.easymock.tests.UsageThrowableTest.throwError":190,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":111,"org.easymock.tests2.MockBuilderTest.testCreateMockString":345,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":151,"org.easymock.tests.UsageExpectAndThrowTest.floatType":172,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":93,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":29,"org.easymock.tests.UsageVerifyTest.twoThrows":252,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":297,"org.easymock.samples.PartialClassMockTest.testGetArea":316,"org.easymock.tests2.CompareToTest.testLessOrEqual":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":160,"org.easymock.samples.ExampleTest.voteAgainstRemoval":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":331,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":224,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":54,"org.easymock.tests2.UsageTest.niceToStrict":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":171,"org.easymock.tests2.UsageConstraintsTest.testNotNull":101,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":306,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":197,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":32,"org.easymock.tests2.MockBuilderTest.testCreateMock":344,"org.easymock.tests2.UsageTest.defaultResetToNice":73,"org.easymock.samples.ExampleTest.voteAgainstRemovals":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":219,"org.easymock.tests.UsageVarargTest.differentLength":262,"org.easymock.tests2.CallbackTest.callback":31,"org.easymock.tests.UsageTest.openCallCountByLastCall":227,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":179,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":40,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":76,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":169,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":234,"org.easymock.tests.UsageCallCountTest.tooFewCalls":319,"org.easymock.tests.UsageOverloadedMethodTest.overloading":249,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":91,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":156,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":302,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":90,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":354,"org.easymock.tests.UsageThrowableTest.throwCheckedException":194,"org.easymock.tests2.EasyMockSupportClassTest.testAll":106,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":164,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":15,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":24,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":348,"org.easymock.tests2.CaptureTest.testCaptureAll":115,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":304,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":146,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":301,"org.easymock.tests2.UsageConstraintsTest.testMatches":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":303,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":150,"org.easymock.tests2.CompareToTest.testGreateOrEqual":281,"org.easymock.samples.ExampleTest.voteForRemovals":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":273,"org.easymock.tests2.NameTest.nameForNiceMock":312,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":113,"org.easymock.tests.UsageVarargTest.allKinds":267,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":251,"org.easymock.tests2.DependencyTest.testInterfaceMocking":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":358,"org.easymock.samples.BasicClassMockTest.testPrintContent":144,"org.easymock.samples.ExampleTest.addDocument":140,"org.easymock.tests2.DelegateToTest.testStubDelegate":59,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":196,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":63,"org.easymock.tests2.AnswerTest.stubAnswer":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":243,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":61,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":275,"org.easymock.tests2.UsageConstraintsTest.greaterThan":94,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":285,"org.easymock.tests.UsageVarargTest.varargLongAccepted":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":55,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":203,"org.easymock.samples.ExampleTest.voteForRemoval":138,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":110,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":222,"org.easymock.tests.UsageExpectAndReturnTest.floatType":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":346,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":295,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":315,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":95,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests.UsageThrowableTest.noUpperLimit":191,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":324,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":77,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests2.SerializationTest.test":48,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":37,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":205,"org.easymock.tests2.UsageConstraintsTest.testSame":82,"org.easymock.samples.SupportTest.addDocument":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":238,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":57,"org.easymock.tests2.CaptureTest.testCaptureFirst":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":38,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":75,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":211,"org.easymock.tests.GenericTest.testPackageScope":325,"org.easymock.tests2.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":112,"org.easymock.tests2.CaptureTest.testCapture2_2446744":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":290,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":266,"org.easymock.tests.GenericTest.testBridgedEquals":338,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":322,"org.easymock.tests2.NameTest.nameForMock":310,"org.easymock.tests.UsageExpectAndReturnTest.longType":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":355,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":35,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":188,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":256,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":99,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":147,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":208,"org.easymock.tests.UsageCallCountTest.tooManyCalls":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":184,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":287,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":318,"org.easymock.tests2.MockedExceptionTest.testRealException":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":212,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":175,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":195,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":300,"org.easymock.tests2.NameTest.nameForStrictMock":311,"org.easymock.tests2.UsageConstraintsTest.testContains":89,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":308,"org.easymock.tests2.UsageConstraintsTest.testFind":80,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":250,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":50,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":200,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":105,"org.easymock.tests.UsageExpectAndReturnTest.object":214,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":51,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":289,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":43,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":271,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":261,"org.easymock.tests.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":145,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":36,"org.easymock.tests2.CaptureTest.testCaptureRightOne":124,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":333,"org.easymock.tests2.UsageConstraintsTest.testOr":83,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":25,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":277,"org.easymock.tests.UsageRangeTest.combination":231,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":257,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":49,"org.easymock.tests.UsageTest.wrongArguments":20,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":155,"org.easymock.tests2.EasyMockSupportTest.testVerify":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":334,"org.easymock.tests.UsageVarargTest.varargShortAccepted":263,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":153,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":168,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":350,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":128,"org.easymock.tests2.UsageConstraintsTest.cmpTo":88,"org.easymock.tests.UsageVarargTest.varargCharAccepted":260,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":28,"org.easymock.tests2.CompareToTest.testLessThan":278,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":64,"org.easymock.tests2.UsageTest.openCallCountByLastCall":71,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":72,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":46,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":167,"org.easymock.tests2.CaptureTest.testCaptureFromStub":125,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":339,"org.easymock.tests.UsageTest.unexpectedCallWithArray":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":177,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":193,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.tests2.UsageConstraintsTest.constraints":78,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":53,"org.easymock.samples.ExampleTest.addAndChangeDocument":142,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":176,"org.easymock.tests.CapturesMatcherTest.test":268,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":221,"org.easymock.tests.UsageStrictMockTest.testVerify":9,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":244,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":298,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":356,"org.easymock.tests2.CompareToTest.testGreateThan":279,"org.easymock.tests2.UsageTest.resumeIfFailure":74,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":210,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":162,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":41}}]
