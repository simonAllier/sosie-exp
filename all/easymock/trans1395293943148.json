[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:210","failures":[2,3,4,5,6,7,8,8,9,9],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[4,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[13,14,15,16,17],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[4,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[27,28,29,30,31,32,21,33,22,34,35,36,23,24,25,37,38,39,26,40,41,42,43,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[47,48],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[32,33,37,49,50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[51,52,53,54,55,56,27,28,29,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,2,84,30,31,4,10,11,0,85,86,87,88,89,90,91,92,32,21,33,22,34,35,36,23,24,25,37,38,39,26,93,94,95,96,97,98,99,100,101,102,103,104,105,40,41,42,43,106,107,49,108,109,110,111,112,50,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,44,163,164,165,166,167,8,8,9,9,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,1,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[2,312,313,4,11,86,87,88,89,91,92,134,135,137,138,139,314,140,141,315,142,316,143,317,318,319,144,145,146,147,320,148,321,149,153,155,156,157,158,160,161,8,8,9,9,171,184,185,322,186,226,323,227,228,229,324,325,305],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[19,184,185,322,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[2,3,4,314,5,315,142,326,143,318,319,327,144,146,147,6,7,148,149,151,156,157,158,8,8,9,9,171,19,322,324,325],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[32,33,37,50],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[3,328,329,330,331,332,333,334,4,335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[14,121],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[336,337,189,338,339,291],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[340,32,21,33,22,34,35,36,23,24,25,341,37,38,39,26,93,45,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[2,3,4,11,86,87,88,89,91,92,343,344,345,134,135,137,138,139,314,140,5,346,141,315,142,316,347,326,143,318,319,327,144,145,146,147,7,320,148,149,151,152,153,348,349,350,155,351,352,156,353,354,355,356,357,358,359,360,361,157,362,363,364,365,366,158,367,368,160,161,8,8,9,9,171,369,47,370,371,372,48,373,19,184,185,322,20,374,186,375,376,377,378,379,380,381,382,226,383,384,385,323,227,228,229,386,324,325,305],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[147,324],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[387,388],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,25,37,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,159,170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":108,"org.easymock.tests2.UsageTest.argumentsOrdered":103,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":289,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":405,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":98,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":170,"org.easymock.tests2.DelegateToTest.testReturnException":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":307,"org.easymock.tests.MockingTest.testPartialClassMocking":227,"org.easymock.tests.MockClassControlTest.testToString":375,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":156,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":206,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":329,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":113,"org.easymock.tests2.UsageTest.wrongArguments":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":202,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":399,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":300,"org.easymock.samples.ExampleTest.answerVsDelegate":44,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":325,"org.easymock.tests2.UsageConstraintsTest.testNull":110,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":75,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":380,"org.easymock.tests2.CaptureTest.testPrimitive":22,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":225,"org.easymock.tests.UsageTest.moreThanOneArgument":290,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":181,"org.easymock.tests.UsageTest.argumentsOrdered":296,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":342,"org.easymock.tests.UsageVarargTest.varargIntAccepted":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":265,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":333,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":409,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":145,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":269,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":65,"org.easymock.tests2.AnswerTest.answer":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":54,"org.easymock.tests2.CaptureTest.testAnd":32,"org.easymock.tests2.UsageTest.strictResetToDefault":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":70,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":282,"org.easymock.tests2.DelegateToTest.testDelegate":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":221,"org.easymock.tests.LimitationsTest.mockFinalMethod":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":264,"org.easymock.tests2.CaptureTest.testCapture1_2446744":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":52,"org.easymock.tests.UsageThrowableTest.throwError":230,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":410,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":368,"org.easymock.samples.PartialClassMockTest.testGetArea":171,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":174,"org.easymock.tests2.CompareToTest.testLessOrEqual":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":266,"org.easymock.tests2.UsageTest.niceToStrict":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":357,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":144,"org.easymock.tests2.MockBuilderTest.testCreateMock":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":364,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":396,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":215,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":336,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":71,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":298,"org.easymock.tests.UsageOverloadedMethodTest.overloading":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":366,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":249,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":117,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":25,"org.easymock.tests2.EasyMockSupportClassTest.testAll":155,"org.easymock.tests.MockClassControlTest.testEquals":379,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":185,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":223,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":312,"org.easymock.tests2.CaptureTest.testCaptureAll":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":262,"org.easymock.tests2.UsageConstraintsTest.testMatches":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":182,"org.easymock.samples.ExampleTest.voteForRemovals":166,"org.easymock.tests.UsageVarargTest.allKinds":279,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":284,"org.easymock.samples.BasicClassMockTest.testPrintContent":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":236,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":311,"org.easymock.tests2.UsageConstraintsTest.greaterThan":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":281,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":316,"org.easymock.samples.ExampleTest.voteForRemoval":163,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":80,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":347,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":314,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":93,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":305,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":68,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":306,"org.easymock.tests2.CaptureTest.testCaptureFirst":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":69,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":245,"org.easymock.tests2.CaptureTest.testCapture2_2446744":39,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":82,"org.easymock.tests2.UsageTest.moreThanOneArgument":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":148,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":278,"org.easymock.tests.GenericTest.testBridgedEquals":20,"org.easymock.tests.UsageExpectAndReturnTest.longType":241,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":224,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":179,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":398,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":235,"org.easymock.tests.MockingTest.testNiceClassMocking":386,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":87,"org.easymock.tests.MockingTest.testClassMocking":385,"org.easymock.tests2.UsageConstraintsTest.testContains":116,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":197,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":317,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":153,"org.easymock.tests2.UsageConstraintsTest.testFind":109,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":288,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":187,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":31,"org.easymock.tests.UsageExpectAndReturnTest.object":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":74,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":330,"org.easymock.tests.UsageTest.exactCallCountByLastCall":297,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":254,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":270,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":46,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":401,"org.easymock.tests.MockClassControlTest.testHashCode":378,"org.easymock.tests2.EasyMockSupportTest.testVerify":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":51,"org.easymock.tests.UsageVarargTest.varargCharAccepted":273,"org.easymock.tests2.CaptureTest.testCaptureMultiple":340,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":59,"org.easymock.tests2.UsageTest.openCallCountByLastCall":99,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":77,"org.easymock.tests.DefaultClassInstantiatorTest.object":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":392,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":400,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":315,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":377,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":212,"org.easymock.tests.CapturesMatcherTest.test":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":158,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":376,"org.easymock.tests2.UsageTest.resumeIfFailure":104,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":309,"org.easymock.tests2.StubTest.stubWithReturnValue":85,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":335,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":126,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":247,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.samples.SupportTest.voteForRemovals":169,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":337,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":218,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":12,"org.easymock.tests.UsageExpectAndThrowTest.object":216,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":124,"org.easymock.tests2.DelegateToTest.testWrongClass":42,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":302,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":303,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests.UsageStrictMockTest.range":192,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":73,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":217,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":146,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":299,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":338,"org.easymock.tests2.CaptureTest.testCaptureNone":24,"org.easymock.tests.UsageUnorderedTest.message":172,"org.easymock.tests.UsageVerifyTest.twoReturns":286,"org.easymock.tests.UsageVarargTest.varargByteAccepted":277,"org.easymock.tests2.ThreadingTest.testThreadSafe":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":362,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":201,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":160,"org.easymock.tests2.CaptureTest.testCapture_2617107":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":1,"org.easymock.tests2.UsageConstraintsTest.any":114,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":387,"org.easymock.tests2.StubTest.stub":0,"org.easymock.tests.UsageExpectAndThrowTest.longType":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":308,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":372,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":176,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":61,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests.LimitationsTest.mockNativeMethod":226,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":257,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":391,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":64,"org.easymock.tests2.NameTest.nameForMocksControl":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":393,"org.easymock.tests2.MockedExceptionTest.testMockedException":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":352,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":294,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":210,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":229,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":147,"org.easymock.tests.MockingTest.testNicePartialClassMocking":228,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":389,"org.easymock.tests2.CompareToTest.testCompareEqual":15,"org.easymock.tests2.CaptureTest.testCaptureLast":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":328,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":50,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":92,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":125,"org.easymock.tests.MockingTest.testTwoMocks":323,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":214,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":395,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":175,"org.easymock.tests.UsageStrictMockTest.differentMethods":193,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":402,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":370,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":81,"org.easymock.tests2.MockBuilderTest.testCreateMockString":149,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":374,"org.easymock.tests.UsageExpectAndThrowTest.floatType":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":353,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":28,"org.easymock.tests.UsageVerifyTest.twoThrows":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":157,"org.easymock.samples.ExampleTest.voteAgainstRemoval":164,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":142,"org.easymock.tests.LimitationsTest.privateConstructor":382,"org.easymock.tests2.UsageConstraintsTest.testNotNull":127,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":237,"org.easymock.tests2.UsageTest.defaultResetToNice":101,"org.easymock.samples.ExampleTest.voteAgainstRemovals":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":390,"org.easymock.tests2.CallbackTest.callback":84,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":5,"org.easymock.tests.UsageTest.openCallCountByLastCall":293,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":204,"org.easymock.tests.UsageCallCountTest.tooFewCalls":199,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":301,"org.easymock.tests.UsageThrowableTest.throwCheckedException":234,"org.easymock.tests.MockingTest.testStrictClassMocking":384,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":339,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":91,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":394,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":88,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":90,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":57,"org.easymock.tests2.CompareToTest.testGreateOrEqual":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":332,"org.easymock.tests2.NameTest.nameForNiceMock":132,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":83,"org.easymock.tests2.DependencyTest.testInterfaceMocking":55,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":331,"org.easymock.samples.ExampleTest.addDocument":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":363,"org.easymock.tests2.DelegateToTest.testStubDelegate":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.AnswerTest.stubAnswer":29,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":190,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":6,"org.easymock.tests.UsageVarargTest.varargLongAccepted":276,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests.UsageExpectAndReturnTest.floatType":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":2,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":408,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":122,"org.easymock.tests.UsageThrowableTest.noUpperLimit":231,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":107,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":343,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":35,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":47,"org.easymock.tests2.UsageConstraintsTest.testSame":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":239,"org.easymock.samples.SupportTest.addDocument":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":354,"org.easymock.tests.GenericTest.testPackageScope":184,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":407,"org.easymock.tests2.NameTest.nameForMock":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":250,"org.easymock.tests2.UsageStrictMockTest.differentMethods":63,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":346,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":283,"org.easymock.tests2.MockedExceptionTest.testRealException":154,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":203,"org.easymock.tests2.NameTest.nameForStrictMock":131,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":327,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":345,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":123,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":318,"org.easymock.tests2.UsageStrictMockTest.range":62,"org.easymock.tests2.UsageConstraintsTest.lessThan":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":67,"org.easymock.tests2.CaptureTest.testCaptureRightOne":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":358,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":18,"org.easymock.tests2.UsageConstraintsTest.testOr":112,"org.easymock.tests.UsageRangeTest.combination":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":355,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":186,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":251,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":48,"org.easymock.tests.UsageVarargTest.varargShortAccepted":275,"org.easymock.tests2.UsageConstraintsTest.cmpTo":115,"org.easymock.tests2.CompareToTest.testLessThan":13,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":100,"org.easymock.tests2.CaptureTest.testCaptureFromStub":38,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":173,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":319,"org.easymock.tests.UsageTest.unexpectedCallWithArray":291,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":200,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":252,"org.easymock.tests2.CaptureTest.testCapture":341,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.tests2.UsageConstraintsTest.constraints":49,"org.easymock.samples.ExampleTest.addAndChangeDocument":167,"org.easymock.tests.UsageStrictMockTest.testVerify":195,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":159,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":188,"org.easymock.tests2.CompareToTest.testGreateThan":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":261,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":267,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":244,"org.easymock.tests.LimitationsTest.abstractClass":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":268,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":72,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":271}}]
