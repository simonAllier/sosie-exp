[{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:81","sourceCode":"return org.easymock.internal.Results.getMainInterval().contains(org.easymock.internal.Results.getCallCount())","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,0,83,3,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,4,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[207,208,209,56,57,210,211,212,90,91,94,95,213,214,215,216,217,218,219,220,221,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[223],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:124","failures":[7,8,9,10,224,11,225,12,13,14,226,15,16,17,18,19,20,223,227,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,228,51,52,53,54,207,208,55,229,56,57,210,211,212,58,59,60,61,230,62,63,64,65,66,67,231,232,68,69,70,71,72,73,74,75,76,233,77,78,79,80,81,234,235,82,236,0,83,1,3,237,238,239,240,241,84,242,243,85,86,244,245,246,247,248,87,249,88,89,90,91,92,93,94,95,96,97,98,213,99,100,101,102,250,103,214,251,104,215,105,106,107,108,252,253,109,110,111,112,4,113,114,115,116,117,118,119,120,121,122,123,124,254,255,256,257,125,258,259,126,127,260,128,261,262,129,130,131,263,264,265,266,267,132,133,135,136,137,268,6,269,270,138,139,271,272,140,141,142,143,273,274,275,276,277,278,279,280,281,282,144,145,146,147,148,149,150,283,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,284,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,285,286,287,288,289,290,291,292,293,196,197,294,198,199,295,296,297,298,299,200,300,201,202,203,204,301,205,206,302,303,304,305,305],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (this.int)) + \" and \") + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[225,13,14,307,308,309,310,242,243,247,248,261,262,130,131,141,142,143,284,286,288,291,292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum","maximum":"minimum"}},{"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[311,305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[313,9,10,314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[315,316,317],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[225,12,227,26,27,28,29,30,31,32,33,34,35,36,37,38,318,39,40,41,42,43,44,45,46,47,48,49,50,228,51,52,53,54,207,319,58,59,60,61,230,62,63,64,65,66,67,231,232,68,69,103,214,120,121,122,123,124,254,125,258,261,262,138,139,271,272,140,155,320,284,176,196,197,200,300],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[7,8,9,10,224,11,225,12,13,14,226,15,16,17,19,20,223,227,21,26,27,28,307,308,309,310,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,228,51,52,53,54,207,208,209,321,55,229,210,211,212,319,58,59,60,61,230,62,63,64,65,66,67,231,232,68,234,235,82,236,0,83,1,3,322,323,324,325,326,237,238,239,240,241,84,242,243,85,86,244,245,246,247,248,87,249,88,90,91,94,95,96,97,98,213,99,100,101,102,250,103,327,214,251,104,215,328,105,112,4,113,114,115,116,329,117,120,121,122,123,124,254,255,256,257,125,258,259,126,127,260,128,261,262,129,130,131,263,330,264,265,266,267,132,133,134,135,136,331,332,333,334,335,336,337,338,339,340,341,342,343,137,268,344,6,269,345,270,217,346,347,218,348,349,138,139,271,272,140,141,142,143,273,274,275,276,277,278,279,280,281,282,144,145,146,147,148,149,150,283,151,152,153,154,155,320,350,351,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,284,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,285,286,287,288,289,290,291,292,293,352,353,196,197,294,198,199,295,296,297,298,299,200,300,354,355,201,202,356,203,357,358,359,360,361,204,301,205,206,302,303,304,362,363,220,221,222,364,365,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[367,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[369,370,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[225,36,39,59,64,65,68,120,121,122,123,124,125,262,138,139,271,272,140,284,196,197,200,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[372,373,374],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[224,225,12,13,14,226,18,375,28,307,308,309,310,31,45,207,208,209,56,57,210,211,212,69,376,71,73,75,76,77,78,241,242,243,85,86,247,248,87,249,90,91,94,95,213,214,215,216,260,261,262,129,130,131,263,377,133,344,378,345,270,217,346,347,218,348,349,141,142,143,283,320,379,219,284,285,286,287,288,291,292,293,380,352,360,204,301,302,303,304,220,221,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:116","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[381],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[331,382,383],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[45,86,101],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":32,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":306,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":285,"org.easymock.tests2.UsageTest.argumentsOrdered":248,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":257,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":86,"org.easymock.tests2.StubTest.stubWithReturnValue":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":51,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":165,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests2.DelegateToTest.testReturnException":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":255,"org.easymock.tests.MockingTest.testPartialClassMocking":201,"org.easymock.samples.SupportTest.voteForRemovals":110,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":367,"org.easymock.tests.MockClassControlTest.testToString":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":188,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":176,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":313,"org.easymock.tests.UsageExpectAndThrowTest.object":186,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":49,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":106,"org.easymock.tests2.DelegateToTest.testWrongClass":1,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":196,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":197,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":38,"org.easymock.tests2.UsageTest.wrongArguments":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":138,"org.easymock.samples.ConstructorCalledMockTest.testTax":252,"org.easymock.tests.UsageStrictMockTest.range":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":266,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":233,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":89,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":358,"org.easymock.tests2.UsageConstraintsTest.testNull":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":187,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":366,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":56,"org.easymock.tests2.CaptureTest.testPrimitive":61,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":140,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":342,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":291,"org.easymock.tests.UsageTest.moreThanOneArgument":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":265,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":275,"org.easymock.tests2.CaptureTest.testCaptureNone":65,"org.easymock.tests.UsageUnorderedTest.message":284,"org.easymock.tests.UsageVerifyTest.twoReturns":143,"org.easymock.tests.UsageVarargTest.varargByteAccepted":153,"org.easymock.tests2.ThreadingTest.testThreadSafe":19,"org.easymock.tests.UsageTest.argumentsOrdered":292,"org.easymock.tests.UsageVarargTest.varargIntAccepted":148,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":206,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":379,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":118,"org.easymock.tests2.CaptureTest.testCapture_2617107":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":120,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":207,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":353,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":323,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":272,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":229,"org.easymock.tests2.UsageConstraintsTest.any":39,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":5,"org.easymock.tests2.StubTest.stub":96,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":256,"org.easymock.tests.UsageExpectAndThrowTest.longType":179,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":316,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":338,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests.ReplayStateInvalidUsageTest.times":340,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":18,"org.easymock.tests.LimitationsTest.mockNativeMethod":137,"org.easymock.tests2.AnswerTest.answer":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":240,"org.easymock.tests2.CaptureTest.testAnd":58,"org.easymock.tests2.UsageTest.strictResetToDefault":84,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":214,"org.easymock.tests2.NameTest.nameForMocksControl":310,"org.easymock.tests2.MockedExceptionTest.testMockedException":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":74,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":135,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":290,"org.easymock.tests2.DelegateToTest.testDelegate":3,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":180,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":57,"org.easymock.tests.MockingTest.testNicePartialClassMocking":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":191,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":102,"org.easymock.tests2.CaptureTest.testCaptureLast":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":125,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":352,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":95,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":282,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":380,"org.easymock.tests2.CaptureTest.testCapture1_2446744":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":189,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":184,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":247,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":53,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":334,"org.easymock.tests.UsageThrowableTest.throwError":294,"org.easymock.samples.ExampleTest.removeNonExistingDocument":329,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":336,"org.easymock.tests.UsageStrictMockTest.differentMethods":131,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":347,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":223,"org.easymock.tests2.MockBuilderTest.testCreateMockString":212,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":277,"org.easymock.tests.UsageExpectAndThrowTest.floatType":178,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":45,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":8,"org.easymock.tests.UsageVerifyTest.twoThrows":142,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":24,"org.easymock.samples.PartialClassMockTest.testGetArea":107,"org.easymock.tests.MockingTest.testInterfaceMocking":356,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":121,"org.easymock.samples.ExampleTest.voteAgainstRemoval":114,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":104,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":219,"org.easymock.tests2.UsageTest.niceToStrict":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":177,"org.easymock.tests2.UsageConstraintsTest.testNotNull":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":299,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":234,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":372,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":55,"org.easymock.tests2.UsageTest.defaultResetToNice":246,"org.easymock.tests2.MockBuilderTest.testCreateMock":210,"org.easymock.samples.ExampleTest.voteAgainstRemovals":112,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":171,"org.easymock.tests.UsageVarargTest.differentLength":283,"org.easymock.tests2.CallbackTest.callback":28,"org.easymock.tests.UsageTest.openCallCountByLastCall":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":185,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":75,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":29,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":360,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":264,"org.easymock.tests.UsageCallCountTest.tooFewCalls":301,"org.easymock.tests.UsageOverloadedMethodTest.overloading":126,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":269,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":167,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":370,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":42,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":267,"org.easymock.tests.UsageThrowableTest.throwCheckedException":296,"org.easymock.tests.MockClassControlTest.testEquals":365,"org.easymock.tests2.EasyMockSupportClassTest.testAll":22,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":145,"org.easymock.tests.MockingTest.testStrictClassMocking":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":239,"org.easymock.tests2.CaptureTest.testCaptureAll":59,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":300,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":94,"org.easymock.tests.MockNameTest.defaultName":377,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":375,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":91,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":341,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":93,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":10,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":332,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":276,"org.easymock.tests.ObjectMethodsTest.testHashCode":350,"org.easymock.samples.ExampleTest.voteForRemovals":116,"org.easymock.tests2.NameTest.nameForNiceMock":309,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":21,"org.easymock.tests.UsageVarargTest.allKinds":155,"org.easymock.tests2.DependencyTest.testInterfaceMocking":105,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":281,"org.easymock.samples.BasicClassMockTest.testPrintContent":119,"org.easymock.samples.ExampleTest.addDocument":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.DelegateToTest.testStubDelegate":83,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":298,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":224,"org.easymock.tests2.AnswerTest.stubAnswer":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":258,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":2,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":262,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":134,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":215,"org.easymock.tests.UsageVarargTest.varargLongAccepted":152,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.samples.ExampleTest.voteForRemoval":113,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":328,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":20,"org.easymock.tests.UsageExpectAndReturnTest.floatType":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":250,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":88,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":253,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests.UsageThrowableTest.noUpperLimit":198,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":47,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":241,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":30,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":132,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":62,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":371,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":72,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":199,"org.easymock.tests2.UsageConstraintsTest.testSame":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":157,"org.easymock.samples.SupportTest.addDocument":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":254,"org.easymock.tests2.CaptureTest.testCaptureFirst":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":73,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":249,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":337,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":163,"org.easymock.tests.GenericTest.testPackageScope":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":242,"org.easymock.tests2.CaptureTest.testCapture2_2446744":232,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":211,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":357,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":154,"org.easymock.tests.GenericTest.testBridgedEquals":368,"org.easymock.tests2.NameTest.nameForMock":307,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":303,"org.easymock.tests.UsageExpectAndReturnTest.longType":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":278,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":168,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":192,"org.easymock.tests2.UsageStrictMockTest.differentMethods":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":273,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":160,"org.easymock.tests.UsageCallCountTest.tooManyCalls":304,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":136,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":204,"org.easymock.tests2.MockedExceptionTest.testRealException":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":349,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":164,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":326,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":343,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":139,"org.easymock.tests.MockingTest.testNiceClassMocking":359,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":90,"org.easymock.tests.MockingTest.testClassMocking":355,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":361,"org.easymock.tests2.NameTest.nameForStrictMock":308,"org.easymock.tests2.UsageConstraintsTest.testContains":41,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":33,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":127,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":374,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":26,"org.easymock.tests.MockTypeTest.fromEasyMockClass":346,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":260,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":27,"org.easymock.tests.UsageExpectAndReturnTest.object":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":325,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":103,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":208,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests2.UsageConstraintsTest.lessThan":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":77,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":150,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":351,"org.easymock.tests.UsageTest.exactCallCountByLastCall":293,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":200,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":71,"org.easymock.tests2.CaptureTest.testCaptureRightOne":67,"org.easymock.tests2.UsageConstraintsTest.testOr":36,"org.easymock.tests.UsageRangeTest.combination":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":213,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":172,"org.easymock.tests.UsageTest.wrongArguments":288,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":6,"org.easymock.tests.MockClassControlTest.testHashCode":364,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":363,"org.easymock.tests2.EasyMockSupportTest.testVerify":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":169,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":315,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":383,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":268,"org.easymock.tests.UsageVarargTest.varargShortAccepted":151,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":237,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":319,"org.easymock.tests2.UsageConstraintsTest.cmpTo":40,"org.easymock.tests.UsageVarargTest.varargCharAccepted":149,"org.easymock.tests2.CaptureTest.testCaptureMultiple":312,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":11,"org.easymock.tests2.UsageTest.openCallCountByLastCall":244,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":373,"org.easymock.tests.DefaultClassInstantiatorTest.object":331,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":80,"org.easymock.tests2.CaptureTest.testCaptureFromStub":231,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":333,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":209,"org.easymock.tests.UsageTest.unexpectedCallWithArray":287,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":295,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":261,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":205,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":170,"org.easymock.tests2.CaptureTest.testCapture":311,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":251,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":222,"org.easymock.tests2.UsageConstraintsTest.constraints":31,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":129,"org.easymock.samples.ExampleTest.addAndChangeDocument":117,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":182,"org.easymock.tests.CapturesMatcherTest.test":305,"org.easymock.tests.UsageStrictMockTest.testVerify":330,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":173,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":111,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":25,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":279,"org.easymock.tests2.UsageTest.resumeIfFailure":87,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":122,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":217,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":162,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":76,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":147,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":322}}]
