[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"argType"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[13,14],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[26],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[27,28],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[29,30,31],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[32,33,34,14],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,27,78,79,80,28,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,0,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,15,339,16,340,341,342,343,29,344,30,17,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,26,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,2,419,420,421,422,3,4,423,424,425,426,427,428,429,1,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,18,19,496,497,20,498,21,22,33,23,499,500,501,502,34,503,504,505,506,24,507,508,509,510,25,511,14,512,513,514,515,516,12],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[502],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[517,518,15,339,16,340,341,342,343,29,30,31,17,345,346,347],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:74","sourceCode":"java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[116,117,118,119,121,122],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[517,15,339,16,340,341,342,343,29,30,17,345,346,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[103,107,394,401,444,33,499,502,504,506,24,507,508,510],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[423],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[519,389,390,391],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[423],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[81,82,156,157,158,162,166,168,169,170,173,174,191,192,194,195,249,252,314,315,410,450,454,455,461,462,467,469,470,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,143,145,146,147,148,149,150,154,157,167,172,180,185,242,452,459,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[117,121],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[481],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[15,16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[519,389,390,391],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[154,222,229,256,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[519,389,390,391],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[350,351],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[520,521,522],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[82,523,157,158,169,170,173,174,191,194,455,461,462,469],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[82,523,157,158,169,170,173,174,191,194,455,461,462,469],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[321,329,349],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[46,51,405,406,407,408,409,410,411,412,413,414,415,416,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[82,143,144,146,147,148,149,150,157,174,241,323,335,17,395,402,403,457,462,19,22,33,499,502,24,507,508,510],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[18,19,22,33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":19,"org.easymock.tests2.UsageTest.argumentsOrdered":462,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":167,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":0,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":457,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":51,"org.easymock.tests2.DelegateToTest.testReturnException":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":177,"org.easymock.tests.MockingTest.testPartialClassMocking":201,"org.easymock.tests.MockClassControlTest.testToString":137,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":423,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":52,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":360,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":479,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":307,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":33,"org.easymock.tests2.UsageTest.wrongArguments":455,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":151,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":416,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":125,"org.easymock.samples.ExampleTest.answerVsDelegate":37,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":164,"org.easymock.tests2.UsageConstraintsTest.testNull":20,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":206,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":325,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":401,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":142,"org.easymock.tests2.CaptureTest.testPrimitive":340,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":155,"org.easymock.tests.UsageTest.moreThanOneArgument":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":71,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":245,"org.easymock.tests.UsageTest.argumentsOrdered":174,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":110,"org.easymock.tests.UsageVarargTest.varargIntAccepted":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":266,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":433,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":492,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":448,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":270,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":291,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":410,"org.easymock.tests.ReplayStateInvalidUsageTest.times":262,"org.easymock.tests2.DependencyTest.testClassMocking":476,"org.easymock.tests2.AnswerTest.answer":26,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":475,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":161,"org.easymock.tests2.CaptureTest.testAnd":15,"org.easymock.tests2.UsageTest.strictResetToDefault":453,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":8,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":396,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":105,"org.easymock.tests2.DelegateToTest.testDelegate":432,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":114,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":67,"org.easymock.tests.LimitationsTest.mockFinalMethod":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":131,"org.easymock.tests2.DependencyTest.testClassMockingSupport":477,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":314,"org.easymock.tests2.CaptureTest.testCapture1_2446744":341,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":65,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":473,"org.easymock.tests.UsageThrowableTest.throwError":143,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":256,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":163,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":493,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":247,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":294,"org.easymock.samples.PartialClassMockTest.testGetArea":35,"org.easymock.tests.MockingTest.testInterfaceMocking":203,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":73,"org.easymock.tests2.UsageTest.niceToStrict":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":53,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":365,"org.easymock.tests2.ThreadingTest.testChangeDefault":349,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":208,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":437,"org.easymock.tests2.MockBuilderTest.testCreateMock":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":413,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":61,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":397,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":160,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":231,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":123,"org.easymock.tests.UsageOverloadedMethodTest.overloading":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":375,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":94,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":240,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":502,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":30,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":277,"org.easymock.tests.MockClassControlTest.testEquals":141,"org.easymock.tests2.EasyMockSupportClassTest.testAll":357,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":79,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":474,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":129,"org.easymock.tests2.CaptureTest.testCaptureAll":339,"org.easymock.tests.MockNameTest.defaultName":81,"org.easymock.tests2.UsageConstraintsTest.testMatches":503,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":246,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":254,"org.easymock.samples.ExampleTest.voteForRemovals":41,"org.easymock.tests.UsageVarargTest.allKinds":285,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":130,"org.easymock.samples.BasicClassMockTest.testPrintContent":50,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":149,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":489,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":181,"org.easymock.tests2.UsageConstraintsTest.greaterThan":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":104,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":336,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":295,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":122,"org.easymock.samples.ExampleTest.voteForRemoval":38,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":337,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":350,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":328,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":287,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":452,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":115,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":394,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":176,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":428,"org.easymock.tests2.CaptureTest.testCaptureFirst":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":395,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":464,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":90,"org.easymock.tests2.UsageTest.moreThanOneArgument":454,"org.easymock.tests2.CaptureTest.testCapture2_2446744":346,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":352,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":225,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":284,"org.easymock.tests.GenericTest.testBridgedEquals":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":238,"org.easymock.tests.UsageExpectAndReturnTest.longType":86,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":70,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":509,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":109,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":68,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":243,"org.easymock.tests.UsageCallCountTest.tooManyCalls":239,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":148,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":418,"org.easymock.tests.MockingTest.testNiceClassMocking":207,"org.easymock.tests.MockingTest.testClassMocking":199,"org.easymock.tests2.UsageConstraintsTest.testContains":501,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":232,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":382,"org.easymock.tests2.UsageConstraintsTest.testFind":497,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":242,"org.easymock.tests.MockTypeTest.fromEasyMockClass":162,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":515,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":189,"org.easymock.tests.UsageExpectAndReturnTest.object":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":330,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":400,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":279,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":251,"org.easymock.tests.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":213,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":111,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":99,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":184,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":483,"org.easymock.tests.MockClassControlTest.testHashCode":140,"org.easymock.tests2.EasyMockSupportTest.testVerify":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":367,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":112,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":472,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":512,"org.easymock.tests.UsageVarargTest.varargCharAccepted":278,"org.easymock.tests2.CaptureTest.testCaptureMultiple":518,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":230,"org.easymock.tests2.UsageTest.openCallCountByLastCall":458,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":521,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":403,"org.easymock.tests.DefaultClassInstantiatorTest.object":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":271,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":249,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":523,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":368,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":482,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":139,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":293,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":58,"org.easymock.tests.CapturesMatcherTest.test":517,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":100,"org.easymock.tests.ReplayStateInvalidCallsTest.times":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":132,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":300,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":376,"org.easymock.tests2.UsageTest.resumeIfFailure":463,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":179,"org.easymock.tests2.StubTest.stubWithReturnValue":481,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":510,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":92,"org.easymock.tests2.SerializationTest.testAllMockedMethod":391,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":223,"org.easymock.samples.SupportTest.voteForRemovals":45,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":485,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":64,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":519,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":229,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":384,"org.easymock.tests.UsageExpectAndThrowTest.object":62,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":77,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":507,"org.easymock.tests2.DelegateToTest.testWrongClass":430,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":297,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":308,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":309,"org.easymock.samples.ConstructorCalledMockTest.testTax":47,"org.easymock.tests.UsageStrictMockTest.range":194,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":450,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":399,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":417,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":63,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":439,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":173,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":124,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":289,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":74,"org.easymock.tests2.CaptureTest.testCaptureNone":344,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":318,"org.easymock.tests.UsageUnorderedTest.message":82,"org.easymock.tests.UsageVerifyTest.twoReturns":158,"org.easymock.tests.UsageVarargTest.varargByteAccepted":283,"org.easymock.tests2.ThreadingTest.testThreadSafe":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":371,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":236,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":49,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":252,"org.easymock.tests2.CaptureTest.testCapture_2617107":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":316,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":227,"org.easymock.tests2.UsageConstraintsTest.any":499,"org.easymock.tests2.StubTest.stub":480,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":178,"org.easymock.tests.UsageExpectAndThrowTest.longType":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":228,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":120,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":260,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":468,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":487,"org.easymock.tests2.SerializationTest.testClass":389,"org.easymock.tests.LimitationsTest.mockNativeMethod":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":102,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":80,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":407,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":305,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":471,"org.easymock.tests2.NameTest.nameForMocksControl":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":409,"org.easymock.tests2.MockedExceptionTest.testMockedException":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":359,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":172,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":514,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":56,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":204,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":322,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":440,"org.easymock.tests.MockingTest.testNicePartialClassMocking":202,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":405,"org.easymock.tests2.CaptureTest.testCaptureLast":29,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":315,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":3,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":22,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":304,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":508,"org.easymock.tests.MockingTest.testTwoMocks":200,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":301,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":60,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":461,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":511,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":321,"org.easymock.samples.ExampleTest.removeNonExistingDocument":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":412,"org.easymock.tests.UsageStrictMockTest.differentMethods":195,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":258,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":484,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":118,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":320,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":351,"org.easymock.tests2.MockBuilderTest.testCreateMockString":445,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":135,"org.easymock.tests.UsageExpectAndThrowTest.floatType":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":361,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":386,"org.easymock.tests.UsageVerifyTest.twoThrows":157,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":370,"org.easymock.samples.ExampleTest.voteAgainstRemoval":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":218,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":335,"org.easymock.tests.LimitationsTest.privateConstructor":311,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":6,"org.easymock.tests2.UsageConstraintsTest.testNotNull":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":150,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":380,"org.easymock.tests2.UsageTest.defaultResetToNice":460,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":406,"org.easymock.tests.UsageVarargTest.differentLength":280,"org.easymock.tests2.CallbackTest.callback":379,"org.easymock.tests2.UsageConstraintsTest.equals":496,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":331,"org.easymock.tests.UsageTest.openCallCountByLastCall":171,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":494,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":153,"org.easymock.tests.UsageCallCountTest.tooFewCalls":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":419,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":126,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":319,"org.easymock.tests.UsageThrowableTest.throwCheckedException":147,"org.easymock.tests.MockingTest.testStrictClassMocking":198,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":422,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":411,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":2,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":421,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":388,"org.easymock.tests2.CompareToTest.testGreateOrEqual":32,"org.easymock.tests.ObjectMethodsTest.testHashCode":250,"org.easymock.tests2.NameTest.nameForNiceMock":426,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":303,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":353,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":298,"org.easymock.tests2.DependencyTest.testInterfaceMocking":478,"org.easymock.samples.ExampleTest.addDocument":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":372,"org.easymock.tests2.DelegateToTest.testStubDelegate":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.stubAnswer":387,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":192,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":441,"org.easymock.tests.UsageVarargTest.varargLongAccepted":282,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":217,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":101,"org.easymock.tests.UsageExpectAndReturnTest.floatType":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":516,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":48,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":506,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":491,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageThrowableTest.noUpperLimit":144,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":495,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":446,"org.easymock.tests2.SerializationTest.test":390,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":342,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":117,"org.easymock.tests2.UsageConstraintsTest.testSame":498,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":84,"org.easymock.samples.SupportTest.addDocument":44,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":420,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":288,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":362,"org.easymock.tests.GenericTest.testPackageScope":78,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":490,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":205,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":286,"org.easymock.tests2.NameTest.nameForMock":424,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":95,"org.easymock.tests2.UsageStrictMockTest.differentMethods":470,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":332,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":87,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":66,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":106,"org.easymock.tests2.MockedExceptionTest.testRealException":383,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":221,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":152,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":265,"org.easymock.tests2.NameTest.nameForStrictMock":425,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":436,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":522,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":513,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":326,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":449,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":119,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":24,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":434,"org.easymock.tests2.UsageStrictMockTest.range":469,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":292,"org.easymock.tests2.UsageConstraintsTest.lessThan":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":486,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":216,"org.easymock.tests2.CaptureTest.testCaptureRightOne":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":366,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":317,"org.easymock.tests2.UsageConstraintsTest.testOr":21,"org.easymock.tests.UsageRangeTest.combination":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":323,"org.easymock.tests.UsageTest.wrongArguments":170,"org.easymock.tests2.MockBuilderTest.testWithConstructor":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":363,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":209,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":121,"org.easymock.tests.UsageVarargTest.varargShortAccepted":281,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":237,"org.easymock.tests2.UsageConstraintsTest.cmpTo":500,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":306,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":385,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":296,"org.easymock.tests2.CompareToTest.testLessThan":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":211,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":459,"org.easymock.tests2.CaptureTest.testCaptureFromStub":345,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":255,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":435,"org.easymock.tests.UsageTest.unexpectedCallWithArray":169,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":302,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":191,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":235,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":97,"org.easymock.tests2.CaptureTest.testCapture":31,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":193,"org.easymock.samples.ExampleTest.addAndChangeDocument":43,"org.easymock.tests.UsageStrictMockTest.testVerify":197,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":46,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":128,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":268,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":89,"org.easymock.tests.LimitationsTest.abstractClass":310,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":398,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":275}}]
