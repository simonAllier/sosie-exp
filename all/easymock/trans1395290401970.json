[{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[41,0,1,2,3,4,42,14,24,30,43,44,45,46,47,48,49,35,50,51,36,52,53,54,55,37,56,57,38,58,59,40,60,61,62,63,64],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[3,65,66,67,68,69,70,71],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[74],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[112],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[2,3,4,66,67,68,113,71,37,38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[114,115,116,117,73,118,119,120,121,122],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[2,123,124,125],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[63,126],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"failures":[119,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.Range:44","failures":[128],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[129,130,131,132,133,134],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,123,124,125],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[41,0,0,1,1,2,3,4,14,24,30,43,44,45,46,47,48,49,50,51,52,53,55,56,57,38,59,60,61,62,63,64],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[129,130,131,132,133,134],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[41,136,137,138,139,140,141,3,142,143,5,144,145,146,6,11,14,24,30,147,148,149,150,151,152,153,45,46,154,155,156,157,158,159,160,50,53,55,56,59,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[200,129,130,132,201],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[202],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[203,76,204,205,206,207,208,209,210,157,158,59,60,211,86,133,212,213,214,215,216,134,217,195,196,89,218],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[219,220,221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[154],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[75,48,222,223,224,225,226,227,228,85,229,230,231,232,233,234,235,236],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[237,238],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,203,255,256,257,202,258,259,260,261,262,263,264,265,266,267,200,268,269,270,135,271,272,273,274,275,276,153,155,156,119,120,211,237,85,189,190,191,192,193,277,234,134,194,197,238,236,91,278,198,199],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[41,279,136,114,137,138,280,139,281,282,283,140,284,285,286,0,1,239,240,241,242,243,244,245,246,247,248,249,250,251,252,2,123,124,287,288,141,289,290,291,292,75,3,4,42,253,254,203,255,293,256,257,202,258,259,260,261,262,263,264,265,266,267,200,268,269,270,135,271,272,273,274,275,276,294,295,296,297,298,299,300,142,143,5,144,301,145,146,6,7,115,302,116,117,72,73,303,304,305,306,307,308,309,310,311,312,313,314,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,76,315,316,204,317,205,318,77,319,206,207,320,208,321,147,148,149,150,151,152,43,322,153,44,323,324,45,46,154,325,47,326,327,328,155,329,209,330,156,210,157,158,331,332,333,159,160,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,118,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,48,222,223,224,49,35,50,51,36,52,53,54,55,37,56,57,38,58,59,40,60,119,127,120,161,162,163,164,165,166,368,369,167,168,370,169,170,171,371,172,173,174,175,176,78,372,79,80,81,82,83,84,211,61,373,374,375,376,62,377,378,379,380,381,382,383,384,385,386,387,388,389,177,390,391,392,393,394,395,396,397,398,399,400,401,237,225,226,227,228,85,229,402,403,404,405,406,407,408,409,178,179,180,181,410,411,412,413,414,415,416,417,230,418,419,420,421,422,121,423,424,425,426,427,428,429,430,431,432,86,433,133,212,434,87,213,214,215,435,436,437,438,439,440,441,442,182,183,443,184,444,445,446,185,186,187,188,447,448,449,450,189,190,191,192,193,231,232,233,451,452,453,454,277,234,216,455,134,194,217,195,196,456,457,63,458,459,64,126,460,461,462,88,128,463,464,465,466,467,468,469,470,471,472,473,474,475,476,89,218,122,477,478,90,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,235,501,197,238,236,91,278,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,198,199,502,503,504,505,506,507,508,509],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[381,385],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:959","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[203,259],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:52","failures":[114,291,257,202,262,263,274,275,115,76,316,204,318,77,206,207,208,156,157,158,348,349,350,351,79,211,391,237,225,86,433,212,434,87,213,214,215,134,194,195,196,88,463,464,470,472,475,476,89,218],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[239,240,241,242,243,244,245,246,247,248,249,250,251,252,510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[265],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":255,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":86,"org.easymock.tests2.UsageTest.argumentsOrdered":207,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":420,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":205,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":279,"org.easymock.tests2.DelegateToTest.testReturnException":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":226,"org.easymock.tests.MockingTest.testPartialClassMocking":182,"org.easymock.tests.MockClassControlTest.testToString":404,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":347,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":18,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":92,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":66,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":197,"org.easymock.tests2.UsageTest.wrongArguments":204,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":449,"org.easymock.samples.ExampleTest.answerVsDelegate":114,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":62,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":445,"org.easymock.tests2.UsageConstraintsTest.testNull":257,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":150,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":343,"org.easymock.tests2.CaptureTest.testPrimitive":242,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":278,"org.easymock.tests.UsageTest.moreThanOneArgument":433,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":111,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":180,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":128,"org.easymock.tests.UsageTest.argumentsOrdered":214,"org.easymock.tests.UsageVarargTest.varargIntAccepted":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":189,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":70,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":296,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":366,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":193,"org.easymock.tests.ReplayStateInvalidUsageTest.times":499,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":308,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":74,"org.easymock.tests2.DependencyTest.testClassMocking":332,"org.easymock.tests2.AnswerTest.answer":115,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":426,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":355,"org.easymock.tests2.CaptureTest.testAnd":239,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":374,"org.easymock.tests2.UsageTest.strictResetToDefault":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":36,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":338,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":466,"org.easymock.tests2.DelegateToTest.testDelegate":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":107,"org.easymock.tests.LimitationsTest.mockFinalMethod":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":439,"org.easymock.tests2.DependencyTest.testClassMockingSupport":333,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":488,"org.easymock.tests2.CaptureTest.testCapture1_2446744":243,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":353,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":493,"org.easymock.tests.UsageThrowableTest.throwError":78,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":376,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":451,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":410,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":32,"org.easymock.samples.PartialClassMockTest.testGetArea":41,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":494,"org.easymock.tests.MockingTest.testInterfaceMocking":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":483,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":93,"org.easymock.tests2.UsageTest.niceToStrict":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":53,"org.easymock.tests2.MockBuilderTest.testCreateMock":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":27,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":311,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":129,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":101,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":339,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":373,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":487,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":467,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":447,"org.easymock.tests.UsageOverloadedMethodTest.overloading":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":23,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":90,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":266,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":461,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":169,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":265,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":248,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":394,"org.easymock.tests.MockClassControlTest.testEquals":408,"org.easymock.tests2.EasyMockSupportClassTest.testAll":11,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":459,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":437,"org.easymock.tests2.CaptureTest.testCaptureAll":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":354,"org.easymock.tests.MockNameTest.defaultName":509,"org.easymock.tests2.UsageConstraintsTest.testMatches":267,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":491,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":181,"org.easymock.samples.ExampleTest.voteForRemovals":139,"org.easymock.tests.UsageVarargTest.allKinds":237,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":438,"org.easymock.samples.BasicClassMockTest.testPrintContent":285,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":83,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":229,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":363,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":71,"org.easymock.tests2.UsageConstraintsTest.greaterThan":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":186,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":154,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":387,"org.easymock.samples.ExampleTest.voteForRemoval":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":325,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":327,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":43,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":460,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":76,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":336,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":225,"org.easymock.tests2.CaptureTest.testCaptureFirst":252,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":337,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":481,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":369,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":155,"org.easymock.tests2.CaptureTest.testCapture2_2446744":251,"org.easymock.tests2.UsageTest.moreThanOneArgument":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":427,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":59,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":401,"org.easymock.tests.GenericTest.testBridgedEquals":126,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":474,"org.easymock.tests.UsageExpectAndReturnTest.longType":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":435,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":110,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":502,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":272,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":232,"org.easymock.tests.UsageCallCountTest.tooManyCalls":475,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":82,"org.easymock.tests.MockingTest.testNiceClassMocking":446,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":143,"org.easymock.tests.MockingTest.testClassMocking":441,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":468,"org.easymock.tests2.UsageConstraintsTest.testContains":264,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":223,"org.easymock.tests2.UsageConstraintsTest.testFind":256,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":88,"org.easymock.tests.MockTypeTest.fromEasyMockClass":375,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":120,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":216,"org.easymock.tests.UsageExpectAndReturnTest.object":370,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":342,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":396,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":67,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":506,"org.easymock.tests.UsageTest.exactCallCountByLastCall":215,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":463,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":452,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":391,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":173,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":478,"org.easymock.tests.MockClassControlTest.testHashCode":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests2.EasyMockSupportTest.testVerify":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":21,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":464,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":486,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":352,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":321,"org.easymock.tests.UsageVarargTest.varargCharAccepted":395,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":379,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":432,"org.easymock.tests2.UsageTest.openCallCountByLastCall":318,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":345,"org.easymock.tests.DefaultClassInstantiatorTest.object":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":485,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":504,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":306,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":356,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":406,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":98,"org.easymock.tests.CapturesMatcherTest.test":510,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":231,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":30,"org.easymock.tests2.UsageTest.resumeIfFailure":320,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":61,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":228,"org.easymock.tests2.StubTest.stubWithReturnValue":75,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":37,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":273,"org.easymock.tests2.SerializationTest.testAllMockedMethod":124,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":425,"org.easymock.samples.SupportTest.voteForRemovals":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":130,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":104,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":125,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":431,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":302,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":454,"org.easymock.tests.UsageExpectAndThrowTest.object":102,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":135,"org.easymock.tests2.DelegateToTest.testWrongClass":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":198,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":199,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":195,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":299,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":142,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":8,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":213,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":235,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":448,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":484,"org.easymock.tests2.CaptureTest.testCaptureNone":247,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":219,"org.easymock.tests.UsageUnorderedTest.message":211,"org.easymock.tests.UsageVerifyTest.twoReturns":218,"org.easymock.tests.UsageVarargTest.varargByteAccepted":400,"org.easymock.tests2.ThreadingTest.testThreadSafe":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":25,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":472,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":507,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":284,"org.easymock.tests2.CaptureTest.testCapture_2617107":241,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":91,"org.easymock.tests2.UsageConstraintsTest.any":262,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":498,"org.easymock.tests2.StubTest.stub":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndThrowTest.longType":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":227,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":384,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":497,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":210,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":361,"org.easymock.tests.LimitationsTest.mockNativeMethod":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":176,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":64,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":305,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":331,"org.easymock.tests2.NameTest.nameForMocksControl":351,"org.easymock.tests2.MockedExceptionTest.testMockedException":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":13,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":87,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":184,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":96,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":56,"org.easymock.tests.MockingTest.testNicePartialClassMocking":183,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":65,"org.easymock.tests2.CaptureTest.testCaptureLast":246,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":303,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":489,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":6,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":259,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":271,"org.easymock.tests.MockingTest.testTwoMocks":442,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":100,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":206,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":275,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":221,"org.easymock.samples.ExampleTest.removeNonExistingDocument":281,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":495,"org.easymock.tests.UsageStrictMockTest.differentMethods":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":310,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":220,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":382,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":328,"org.easymock.tests2.MockBuilderTest.testCreateMockString":60,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":15,"org.easymock.tests.UsageExpectAndThrowTest.floatType":94,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":10,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":42,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":24,"org.easymock.samples.ExampleTest.voteAgainstRemoval":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests.LimitationsTest.privateConstructor":389,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":34,"org.easymock.tests2.UsageConstraintsTest.testNotNull":274,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":84,"org.easymock.tests2.UsageTest.defaultResetToNice":319,"org.easymock.samples.ExampleTest.voteAgainstRemovals":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":172,"org.easymock.tests.UsageVarargTest.differentLength":397,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":304,"org.easymock.tests2.CallbackTest.callback":118,"org.easymock.tests2.UsageConstraintsTest.equals":293,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":44,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":201,"org.easymock.tests.UsageTest.openCallCountByLastCall":434,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":253,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":236,"org.easymock.tests.UsageCallCountTest.tooFewCalls":470,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":450,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":112,"org.easymock.tests.UsageThrowableTest.throwCheckedException":81,"org.easymock.tests.MockingTest.testStrictClassMocking":440,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":132,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":234,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":5,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":309,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":500,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":145,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":73,"org.easymock.tests.ObjectMethodsTest.testHashCode":505,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":69,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":329,"org.easymock.tests2.NameTest.nameForNiceMock":350,"org.easymock.tests2.DependencyTest.testInterfaceMocking":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":68,"org.easymock.samples.ExampleTest.addDocument":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":26,"org.easymock.tests2.DelegateToTest.testStubDelegate":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":31,"org.easymock.tests2.AnswerTest.stubAnswer":72,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":194,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":57,"org.easymock.tests.UsageVarargTest.varargLongAccepted":399,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":175,"org.easymock.tests.UsageExpectAndReturnTest.floatType":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":365,"org.easymock.tests.UsageThrowableTest.noUpperLimit":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":254,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":294,"org.easymock.tests2.SerializationTest.test":123,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":244,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":162,"org.easymock.tests2.UsageConstraintsTest.testSame":202,"org.easymock.samples.SupportTest.addDocument":283,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":301,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":16,"org.easymock.tests.GenericTest.testPackageScope":458,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":364,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":444,"org.easymock.tests2.NameTest.nameForMock":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":170,"org.easymock.tests2.UsageStrictMockTest.differentMethods":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":106,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":503,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":188,"org.easymock.tests2.MockedExceptionTest.testRealException":224,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":300,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":501,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":238,"org.easymock.tests2.NameTest.nameForStrictMock":349,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":52,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":151,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":298,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":270,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":383,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":50,"org.easymock.tests2.UsageStrictMockTest.range":157,"org.easymock.tests2.UsageConstraintsTest.lessThan":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":113,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":20,"org.easymock.tests2.CaptureTest.testCaptureRightOne":249,"org.easymock.tests2.UsageConstraintsTest.testOr":258,"org.easymock.tests.UsageRangeTest.combination":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":148,"org.easymock.tests.UsageTest.wrongArguments":212,"org.easymock.tests2.MockBuilderTest.testWithConstructor":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":17,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":171,"org.easymock.tests.UsageVarargTest.varargShortAccepted":398,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":385,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":473,"org.easymock.tests2.UsageConstraintsTest.cmpTo":263,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":414,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests2.CaptureTest.testCaptureFromStub":250,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":492,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":51,"org.easymock.tests.UsageTest.unexpectedCallWithArray":133,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":471,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":39,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":371,"org.easymock.tests2.UsageConstraintsTest.constraints":203,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":217,"org.easymock.samples.ExampleTest.addAndChangeDocument":282,"org.easymock.tests.UsageStrictMockTest.testVerify":457,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":286,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":455,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":436,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":191,"org.easymock.tests.LimitationsTest.abstractClass":388,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":368,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":192,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":340}}]
