[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[42,43,44,44,45,45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[1,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,40,41],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,46,80,81,82,83,84,85,86,87,88,89,1,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,2,111,112,113,114,115,116,3,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,44,45,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,8,255,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,256,257,258,259,29,260,30,31,32,33,34,35,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,36,309,310,311,37,38,312,313,314,315,39,316,317,318,319,320,321,322,323,324,325,326,40,327,328,329,330,331,332,333,41,334],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[335,336,236,337,338,313],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[61,113,118,119,206,236,239,339,36,309,313,314,316,317,328],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[97,99,107,128,129,131,133,134,340,145,150],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[341],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[86,87,88,342],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[129],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[47,48,49,50,343,344,51,52,53,345,346,54,55,56,57,58,59,60,61,62,63,347,348,349,350,351,64,352,353,354,355,356,357,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,46,80,81,82,358,359,83,84,360,85,86,87,88,89,1,90,91,92,93,361,94,95,96,362,363,364,365,366,97,98,99,100,101,102,103,104,105,106,107,108,109,110,2,111,112,113,114,115,116,3,117,118,119,120,121,367,122,123,124,368,125,369,126,127,128,129,370,130,131,132,133,134,135,340,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,371,153,154,155,156,157,158,159,160,161,162,163,372,164,42,373,165,166,167,168,374,375,169,376,170,377,378,379,171,172,173,380,174,381,382,175,176,383,177,384,385,386,387,388,178,389,390,391,392,393,394,179,180,181,182,395,396,397,183,398,399,184,400,401,402,403,404,405,406,407,408,185,409,410,411,412,413,186,414,415,187,188,189,190,191,192,193,194,195,196,197,44,45,198,199,200,201,416,202,203,204,417,418,419,205,420,421,422,423,424,425,426,206,207,208,209,210,211,212,213,214,215,216,217,218,4,5,6,219,220,221,222,223,427,428,429,430,224,225,431,341,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,0,432,433,243,244,245,246,247,248,249,250,251,434,435,436,7,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,252,253,254,8,255,457,458,459,460,461,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,462,463,256,464,465,466,467,468,257,258,469,259,470,471,472,29,260,30,31,32,33,34,35,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,473,474,475,283,284,285,286,287,288,289,290,291,292,293,294,295,476,296,297,298,299,300,301,302,303,304,305,306,307,308,36,309,477,310,311,37,38,312,313,314,315,39,316,317,318,319,320,321,322,478,479,480,481,482,483,484,485,486,487,488,323,324,325,489,326,40,490,327,328,329,330,331,332,333,41,334],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[420,424],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[430,224,225,431,341],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[167],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[86,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[82,491,492,493,86,88,90,91,92,93,95,96,157,158,160,161,162,163,164,165,166,167,168,169,494,170,377,171,172,173,174,175,176,495,177,181,183,184,185,186,188,189,44,44,45,45,201,224,225,431,227,256,468,257,258,259,481,486,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[59,84,85,97,98,99,100,101,102,103,104,105,106,107,108,109,110,369,126,127,128,129,130,131,132,133,134,135,340,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,164,206,236,237,252,253,254,8,255,281,282,288,289,290,291,292,303,323,324,41],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[205,420,421,422,424,426],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[59,61,62,112,113,118,119,153,154,155,156,206,236,237,239,240,308,36,309,312,314,316,317,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[51,52,53,55,59,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,46,80,81,82,86,87,1,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,109,110,2,111,112,114,116,3,117,120,121,123,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,160,161,162,164,166,167,168,170,171,173,174,176,178,181,183,184,185,186,190,192,193,195,199,201,224,237,239,240,252,253,255,457,256,257,258,259,29,30,31,32,33,34,35,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,288,289,290,291,292,293,304,305,306,307,308,309,310,311,37,38,312,315,39,318,323,324,327],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[47,48,49,50,343,344,51,52,53,345,346,54,55,56,57,58,59,60,61,62,63,347,348,349,350,351,64,352,353,354,355,356,357,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,46,80,81,82,358,359,83,84,360,85,86,87,88,89,1,90,91,92,93,361,94,95,96,362,363,496,497,498,364,365,366,97,98,99,100,101,102,103,104,105,106,107,108,109,110,2,111,112,113,114,115,116,3,117,118,119,120,121,367,122,123,124,368,125,369,126,127,128,129,370,130,131,132,133,134,135,340,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,371,153,154,155,156,157,158,159,160,161,162,163,372,164,42,373,165,166,167,168,374,375,169,376,170,377,378,379,171,172,173,380,174,381,382,175,176,383,177,384,385,386,387,388,178,389,390,391,392,393,394,179,180,181,182,395,396,397,183,398,399,184,400,401,402,403,404,405,406,407,408,185,409,410,411,412,413,186,414,415,187,188,189,190,191,192,193,194,195,196,197,44,45,198,199,200,201,416,202,203,204,417,418,419,205,420,421,422,423,424,425,426,206,207,208,209,210,211,212,213,214,215,216,217,218,4,5,6,219,220,221,222,223,427,428,429,430,224,225,431,341,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,0,432,433,243,244,245,246,247,248,249,250,251,434,435,436,7,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,252,253,254,8,255,457,458,459,460,461,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,462,463,256,464,499,465,466,467,468,257,258,469,259,470,471,472,29,260,30,31,32,33,34,35,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,473,474,475,283,284,285,286,287,288,289,290,291,292,293,294,295,476,296,297,298,299,300,301,302,303,304,305,306,307,308,36,309,477,310,311,37,38,312,313,314,315,39,316,317,318,319,320,321,322,478,479,480,481,482,483,484,485,486,487,488,323,324,325,489,326,40,490,327,328,329,330,331,332,333,41,334],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[208,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[47,48,49,51,52,53,345,346,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,46,80,81,82,83,84,85,86,87,88,89,1,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,2,111,112,113,114,115,116,3,117,118,119,120,121,367,122,123,124,368,125,126,127,128,129,130,131,132,133,134,135,340,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,158,159,160,161,162,164,165,166,167,168,170,171,173,174,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,195,197,44,44,45,45,199,201,206,207,4,5,6,219,220,221,222,223,427,428,429,224,431,234,236,237,238,239,240,241,0,432,433,245,449,455,252,253,254,8,255,458,459,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,256,257,258,259,29,260,30,31,32,33,34,35,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,474,283,284,285,286,287,288,289,290,291,292,303,304,305,306,307,308,36,309,477,310,311,37,38,312,313,314,315,39,316,317,318,319,320,321,478,479,323,324,325,326,40,327,330,331,332,333,41,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[86,87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[86,87,88,342],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[86,163,169,494,170,377,171,172,173,174,175,176,501,495,177,201,431,481,486],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[129],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":129,"org.easymock.tests2.UsageTest.argumentsOrdered":119,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":443,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":200,"org.easymock.tests2.DelegateToTest.testReturnException":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":331,"org.easymock.tests.MockingTest.testPartialClassMocking":257,"org.easymock.tests.MockClassControlTest.testToString":228,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":371,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":9,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":52,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":135,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":252,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":321,"org.easymock.samples.ExampleTest.answerVsDelegate":191,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":486,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":471,"org.easymock.tests2.UsageConstraintsTest.testNull":131,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":160,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":74,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":233,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":28,"org.easymock.tests.UsageTest.moreThanOneArgument":312,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":221,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":457,"org.easymock.tests.UsageTest.argumentsOrdered":317,"org.easymock.tests.UsageVarargTest.varargIntAccepted":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":288,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":169,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":393,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":292,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests.ReplayStateInvalidUsageTest.times":215,"org.easymock.tests2.DependencyTest.testClassMocking":343,"org.easymock.tests2.AnswerTest.answer":53,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":450,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":50,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":483,"org.easymock.tests2.CaptureTest.testAnd":97,"org.easymock.tests2.UsageTest.strictResetToDefault":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":69,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":306,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":461,"org.easymock.tests2.DelegateToTest.testDelegate":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":24,"org.easymock.tests.LimitationsTest.mockFinalMethod":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":287,"org.easymock.tests2.DependencyTest.testClassMockingSupport":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":478,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":22,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":48,"org.easymock.tests.UsageThrowableTest.throwError":29,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":209,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":485,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":499,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":415,"org.easymock.samples.PartialClassMockTest.testGetArea":201,"org.easymock.tests.MockingTest.testInterfaceMocking":469,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":289,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":432,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":404,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":171,"org.easymock.tests2.MockBuilderTest.testCreateMock":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":18,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":335,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":70,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":243,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageOverloadedMethodTest.overloading":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":140,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":272,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":310,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":139,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":476,"org.easymock.tests2.EasyMockSupportClassTest.testAll":183,"org.easymock.tests.MockClassControlTest.testEquals":232,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":225,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":26,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":491,"org.easymock.tests2.CaptureTest.testCaptureAll":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":285,"org.easymock.tests.MockNameTest.defaultName":465,"org.easymock.tests2.UsageConstraintsTest.testMatches":141,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":222,"org.easymock.samples.ExampleTest.voteForRemovals":195,"org.easymock.tests.UsageVarargTest.allKinds":303,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":308,"org.easymock.samples.BasicClassMockTest.testPrintContent":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":34,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":334,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":368,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":425,"org.easymock.tests2.UsageConstraintsTest.greaterThan":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":168,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":426,"org.easymock.samples.ExampleTest.voteForRemoval":192,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":79,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":374,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":501,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":487,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":163,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":329,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":67,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":330,"org.easymock.tests2.CaptureTest.testCaptureFirst":110,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":68,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":268,"org.easymock.tests2.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.CaptureTest.testCapture2_2446744":109,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":451,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":176,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":302,"org.easymock.tests.GenericTest.testBridgedEquals":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":250,"org.easymock.tests.UsageExpectAndReturnTest.longType":264,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":283,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":27,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":477,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":25,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":219,"org.easymock.tests.UsageCallCountTest.tooManyCalls":251,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":33,"org.easymock.tests.MockingTest.testNiceClassMocking":472,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":91,"org.easymock.tests.MockingTest.testClassMocking":467,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":494,"org.easymock.tests2.UsageConstraintsTest.testContains":138,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":244,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":181,"org.easymock.tests2.UsageConstraintsTest.testFind":130,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":37,"org.easymock.tests.MockTypeTest.fromEasyMockClass":484,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":85,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":234,"org.easymock.tests.UsageExpectAndReturnTest.object":271,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":73,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":297,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":204,"org.easymock.tests.UsageTest.exactCallCountByLastCall":318,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":458,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":358,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":277,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":293,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":385,"org.easymock.tests.MockClassControlTest.testHashCode":231,"org.easymock.tests2.EasyMockSupportTest.testVerify":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":406,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":459,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":5,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":47,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":369,"org.easymock.tests.UsageVarargTest.varargCharAccepted":296,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":419,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":456,"org.easymock.tests2.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":76,"org.easymock.tests.DefaultClassInstantiatorTest.object":205,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":4,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":202,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":384,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":166,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":230,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":186,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":229,"org.easymock.tests2.UsageTest.resumeIfFailure":120,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":333,"org.easymock.tests2.StubTest.stubWithReturnValue":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":380,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":270,"org.easymock.tests2.SerializationTest.testAllMockedMethod":88,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":449,"org.easymock.samples.SupportTest.voteForRemovals":199,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":336,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":430,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":387,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":21,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":342,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":455,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":345,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":475,"org.easymock.tests.UsageExpectAndThrowTest.object":19,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":146,"org.easymock.tests2.DelegateToTest.testWrongClass":124,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":323,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":324,"org.easymock.samples.ConstructorCalledMockTest.testTax":44,"org.easymock.tests.UsageStrictMockTest.range":239,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":365,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":72,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":20,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":395,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":217,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":337,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":433,"org.easymock.tests2.CaptureTest.testCaptureNone":105,"org.easymock.tests.UsageUnorderedTest.message":206,"org.easymock.tests.UsageVerifyTest.twoReturns":309,"org.easymock.tests.UsageVarargTest.varargByteAccepted":301,"org.easymock.tests2.ThreadingTest.testThreadSafe":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":409,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":248,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":417,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":188,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":8,"org.easymock.tests2.UsageConstraintsTest.any":136,"org.easymock.tests2.StubTest.stub":89,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndThrowTest.longType":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":423,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":213,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":60,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests2.SerializationTest.testClass":86,"org.easymock.tests.LimitationsTest.mockNativeMethod":256,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":431,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":280,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":493,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":349,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":63,"org.easymock.tests2.NameTest.nameForMocksControl":156,"org.easymock.tests2.MockedExceptionTest.testMockedException":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":399,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":13,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":259,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":360,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":157,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":174,"org.easymock.tests.MockingTest.testNicePartialClassMocking":258,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":162,"org.easymock.tests2.CompareToTest.testCompareEqual":500,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":347,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":479,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":134,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":96,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":147,"org.easymock.tests.MockingTest.testTwoMocks":468,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":17,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":118,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":151,"org.easymock.samples.ExampleTest.removeNonExistingDocument":196,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":211,"org.easymock.tests.UsageStrictMockTest.differentMethods":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":386,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":421,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":46,"org.easymock.tests2.MockBuilderTest.testCreateMockString":177,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":400,"org.easymock.tests.UsageExpectAndThrowTest.floatType":11,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":54,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":359,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":185,"org.easymock.samples.ExampleTest.voteAgainstRemoval":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":444,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":0,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":167,"org.easymock.tests.LimitationsTest.privateConstructor":463,"org.easymock.tests2.UsageConstraintsTest.testNotNull":150,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":35,"org.easymock.tests2.UsageTest.defaultResetToNice":117,"org.easymock.samples.ExampleTest.voteAgainstRemovals":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":276,"org.easymock.tests.UsageVarargTest.differentLength":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":348,"org.easymock.tests2.CallbackTest.callback":83,"org.easymock.tests2.UsageConstraintsTest.equals":370,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":42,"org.easymock.tests.UsageTest.openCallCountByLastCall":315,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":254,"org.easymock.tests.UsageCallCountTest.tooFewCalls":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":322,"org.easymock.tests.UsageThrowableTest.throwCheckedException":32,"org.easymock.tests.MockingTest.testStrictClassMocking":466,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":338,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":95,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":282,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":352,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":216,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":94,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":56,"org.easymock.tests.ObjectMethodsTest.testHashCode":203,"org.easymock.tests2.NameTest.nameForNiceMock":155,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":81,"org.easymock.tests2.DependencyTest.testInterfaceMocking":51,"org.easymock.samples.ExampleTest.addDocument":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.DelegateToTest.testStubDelegate":123,"org.easymock.tests2.AnswerTest.stubAnswer":55,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":237,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":381,"org.easymock.tests.UsageVarargTest.varargLongAccepted":300,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.floatType":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":82,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":45,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":392,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":144,"org.easymock.tests.UsageThrowableTest.noUpperLimit":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":127,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":363,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.SerializationTest.test":87,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":420,"org.easymock.tests2.UsageConstraintsTest.testSame":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":262,"org.easymock.samples.SupportTest.addDocument":198,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":361,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":401,"org.easymock.tests.GenericTest.testPackageScope":224,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":391,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":470,"org.easymock.tests2.NameTest.nameForMock":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":273,"org.easymock.tests2.UsageStrictMockTest.differentMethods":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":383,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":23,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":416,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":307,"org.easymock.tests2.MockedExceptionTest.testRealException":182,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":446,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":253,"org.easymock.tests2.NameTest.nameForStrictMock":154,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":379,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":84,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":161,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":364,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":422,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":170,"org.easymock.tests2.UsageStrictMockTest.range":61,"org.easymock.tests2.UsageConstraintsTest.lessThan":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":405,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests2.UsageConstraintsTest.testOr":133,"org.easymock.tests.UsageRangeTest.combination":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":158,"org.easymock.tests.UsageTest.wrongArguments":314,"org.easymock.tests2.MockBuilderTest.testWithConstructor":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":402,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":274,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":424,"org.easymock.tests.UsageVarargTest.varargShortAccepted":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":249,"org.easymock.tests2.UsageConstraintsTest.cmpTo":137,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":7,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests2.CaptureTest.testCaptureFromStub":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":208,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":377,"org.easymock.tests.UsageTest.unexpectedCallWithArray":313,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":236,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":247,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":275,"org.easymock.tests2.UsageConstraintsTest.constraints":128,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":238,"org.easymock.samples.ExampleTest.addAndChangeDocument":197,"org.easymock.tests.UsageStrictMockTest.testVerify":242,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":187,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":284,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":290,"org.easymock.tests.LimitationsTest.abstractClass":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":291,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":71,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":294}}]
