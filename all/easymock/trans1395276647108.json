[{"position":"org.easymock.internal.EasyMockProperties:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[508],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[55,74,80,509],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[213,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[58,64,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[85,86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[55,74,80,509],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[2,4,5,7,16,438],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[510,511,512,513,514,515,214],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[167],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:47","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[14,30,33,43,49,112,116,154,157,159,160,164,166,168,169,171,183,184,185,186,188,189,190,213,257,258,260,427,437],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[74,516],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[180],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[305,309],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[18,19,20,517],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,0,1,1,10,11,14,18,20,21,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,153,154,155,156,157,158,159,160,162,163,164,165,166,167,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,189,190,213,214,227,228,229,247,248,249,250,251,252,253,254,255,256,257,258,260,263,292,297,298,299,300,301,302,303,304,305,306,307,308,309,350,406,411,425,426,427,428],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[518],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[451],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[57,64,76,96],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[306,308,309],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[3,52,53,54,84,87,88],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[116],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[177,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[519],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[57,58,63,64,66,76,94,96,104],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[123,129,130,235,520,370,371,374,375,401,402,435,473,476,479],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[18,19,20,517],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[521,522,157,178,179],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[10,11,20,21,24,27,30,32,34,35,38,41,44,45,48,166,167,169,170,171,174,176,177,180,181,182,183,186,228,229,247,248,249,250,251,252,253,254,255,256,263,297,298,299,300,301,302,303,304,306,307,309,350,425,426,427,428],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[230,432],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.RecordState:274","failures":[3,17,52,54,84,85,86,87,88,89,429],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":58,"org.easymock.tests2.UsageTest.argumentsOrdered":130,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":368,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":451,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":125,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":13,"org.easymock.tests2.DelegateToTest.testReturnException":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":484,"org.easymock.tests.MockingTest.testPartialClassMocking":257,"org.easymock.tests.MockClassControlTest.testToString":299,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":208,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":377,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":195,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":65,"org.easymock.tests2.UsageTest.wrongArguments":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":363,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":242,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":411,"org.easymock.tests2.UsageConstraintsTest.testNull":61,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":262,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":169,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":304,"org.easymock.tests2.CaptureTest.testPrimitive":97,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":367,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":396,"org.easymock.tests.UsageTest.moreThanOneArgument":369,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":496,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":489,"org.easymock.tests.UsageTest.argumentsOrdered":375,"org.easymock.tests.UsageVarargTest.varargIntAccepted":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":436,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":515,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":153,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":23,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":225,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":440,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":332,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":201,"org.easymock.tests.ReplayStateInvalidUsageTest.times":359,"org.easymock.tests2.DependencyTest.testClassMocking":192,"org.easymock.tests2.AnswerTest.answer":84,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":93,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":408,"org.easymock.tests2.CaptureTest.testAnd":94,"org.easymock.tests2.UsageTest.strictResetToDefault":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":495,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":295,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":493,"org.easymock.tests2.DelegateToTest.testDelegate":119,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":392,"org.easymock.tests.LimitationsTest.mockFinalMethod":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":469,"org.easymock.tests2.DependencyTest.testClassMockingSupport":193,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":284,"org.easymock.tests2.CaptureTest.testCapture1_2446744":98,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":91,"org.easymock.tests.UsageThrowableTest.throwError":417,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":353,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":410,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":51,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":335,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":259,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":354,"org.easymock.tests2.CompareToTest.testLessOrEqual":509,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":437,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":404,"org.easymock.tests2.UsageTest.niceToStrict":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":38,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":378,"org.easymock.tests2.ThreadingTest.testChangeDefault":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":157,"org.easymock.tests2.MockBuilderTest.testCreateMock":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":46,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":204,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":386,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":407,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":499,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":240,"org.easymock.tests.UsageOverloadedMethodTest.overloading":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":48,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":432,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":71,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":397,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":275,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":508,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":70,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":103,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":316,"org.easymock.tests2.EasyMockSupportClassTest.testAll":30,"org.easymock.tests.MockClassControlTest.testEquals":303,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":92,"org.easymock.tests2.CaptureTest.testCaptureAll":95,"org.easymock.tests.MockNameTest.defaultName":244,"org.easymock.tests2.UsageConstraintsTest.testMatches":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":497,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":351,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":324,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":400,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":468,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":423,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":488,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":222,"org.easymock.tests2.UsageConstraintsTest.greaterThan":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":31,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":294,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":180,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":336,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":253,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":181,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":110,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":172,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":328,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":120,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":350,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":483,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":114,"org.easymock.tests2.CaptureTest.testCaptureFirst":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":132,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":271,"org.easymock.tests2.UsageTest.moreThanOneArgument":122,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":112,"org.easymock.tests2.CaptureTest.testCapture2_2446744":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":459,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":164,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":323,"org.easymock.tests.GenericTest.testBridgedEquals":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":506,"org.easymock.tests.UsageExpectAndReturnTest.longType":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":465,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":395,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":79,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":494,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":415,"org.easymock.tests.UsageCallCountTest.tooManyCalls":507,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":422,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":184,"org.easymock.tests.MockingTest.testNiceClassMocking":263,"org.easymock.tests.MockingTest.testClassMocking":255,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":522,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":500,"org.easymock.tests2.UsageConstraintsTest.testContains":69,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":229,"org.easymock.tests2.UsageConstraintsTest.testFind":60,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":399,"org.easymock.tests.MockTypeTest.fromEasyMockClass":409,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":474,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":54,"org.easymock.tests.UsageExpectAndReturnTest.object":274,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":512,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":318,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":290,"org.easymock.tests.UsageTest.exactCallCountByLastCall":376,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":490,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":310,"org.easymock.tests2.ConstraintsToStringTest.findToString":518,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":214,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":280,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":313,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":216,"org.easymock.tests.MockClassControlTest.testHashCode":302,"org.easymock.tests2.EasyMockSupportTest.testVerify":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":40,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":491,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":471,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":429,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":90,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":146,"org.easymock.tests.UsageVarargTest.varargCharAccepted":317,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests.DefaultClassInstantiatorTest.object":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":470,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":288,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":520,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":199,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":215,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":178,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":301,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":383,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":281,"org.easymock.tests.ReplayStateInvalidCallsTest.times":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":414,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":49,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":300,"org.easymock.tests2.UsageTest.resumeIfFailure":131,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":486,"org.easymock.tests2.StubTest.stubWithReturnValue":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":510,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":80,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":273,"org.easymock.tests2.SerializationTest.testAllMockedMethod":20,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":457,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":218,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":389,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":517,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":463,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":85,"org.easymock.tests.UsageExpectAndThrowTest.object":387,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":312,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":77,"org.easymock.tests2.DelegateToTest.testWrongClass":117,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":325,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":338,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":326,"org.easymock.tests.UsageStrictMockTest.range":479,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":25,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":388,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":27,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":361,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":241,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":330,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":405,"org.easymock.tests2.CaptureTest.testCaptureNone":102,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":148,"org.easymock.tests.UsageUnorderedTest.message":473,"org.easymock.tests.UsageVerifyTest.twoReturns":402,"org.easymock.tests.UsageVarargTest.varargByteAccepted":322,"org.easymock.tests2.ThreadingTest.testThreadSafe":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":44,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":504,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":366,"org.easymock.tests2.UsageConstraintsTest.any":67,"org.easymock.tests2.StubTest.stub":238,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":358,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndThrowTest.longType":380,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":251,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":357,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":220,"org.easymock.tests.LimitationsTest.mockNativeMethod":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":283,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":308,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":198,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":346,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":149,"org.easymock.tests2.NameTest.nameForMocksControl":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":200,"org.easymock.tests2.MockedExceptionTest.testMockedException":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":32,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":373,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":53,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":381,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":160,"org.easymock.tests.MockingTest.testNicePartialClassMocking":258,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":171,"org.easymock.tests2.CompareToTest.testCompareEqual":519,"org.easymock.tests2.CaptureTest.testCaptureLast":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":285,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":190,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":64,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":345,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":78,"org.easymock.tests.MockingTest.testTwoMocks":256,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":342,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":385,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":129,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":82,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":152,"org.easymock.samples.ExampleTest.removeNonExistingDocument":8,"org.easymock.tests.UsageStrictMockTest.differentMethods":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":203,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":217,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":151,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":249,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":111,"org.easymock.tests2.MockBuilderTest.testCreateMockString":165,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":34,"org.easymock.tests.UsageExpectAndThrowTest.floatType":379,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":29,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":87,"org.easymock.tests.UsageVerifyTest.twoThrows":401,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":43,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":403,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":179,"org.easymock.tests.LimitationsTest.privateConstructor":426,"org.easymock.tests2.UsageConstraintsTest.testNotNull":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":424,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":227,"org.easymock.tests2.UsageTest.defaultResetToNice":128,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":197,"org.easymock.tests.UsageVarargTest.differentLength":319,"org.easymock.tests2.CallbackTest.callback":17,"org.easymock.tests2.UsageConstraintsTest.equals":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":175,"org.easymock.tests.UsageTest.openCallCountByLastCall":372,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":365,"org.easymock.tests.UsageCallCountTest.tooFewCalls":502,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":243,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":150,"org.easymock.tests.UsageThrowableTest.throwCheckedException":421,"org.easymock.tests.MockingTest.testStrictClassMocking":254,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":246,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":202,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":360,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":188,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":89,"org.easymock.tests.ObjectMethodsTest.testHashCode":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":514,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":113,"org.easymock.tests2.NameTest.nameForNiceMock":211,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":344,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":339,"org.easymock.tests2.DependencyTest.testInterfaceMocking":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":513,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":45,"org.easymock.tests2.DelegateToTest.testStubDelegate":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":50,"org.easymock.tests2.AnswerTest.stubAnswer":88,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":477,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":161,"org.easymock.tests.UsageVarargTest.varargLongAccepted":321,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.floatType":266,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":213,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":433,"org.easymock.tests.UsageThrowableTest.noUpperLimit":418,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":224,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":21,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":99,"org.easymock.tests2.SerializationTest.test":19,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":248,"org.easymock.tests2.UsageConstraintsTest.testSame":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":265,"org.easymock.samples.SupportTest.addDocument":15,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":187,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":329,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":35,"org.easymock.tests.GenericTest.testPackageScope":306,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":223,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":261,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":327,"org.easymock.tests2.NameTest.nameForMock":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":276,"org.easymock.tests2.UsageStrictMockTest.differentMethods":236,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":391,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":296,"org.easymock.tests2.MockedExceptionTest.testRealException":230,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":454,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":233,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":362,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":364,"org.easymock.tests2.NameTest.nameForStrictMock":210,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":156,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":52,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":170,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":24,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":76,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":250,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":154,"org.easymock.tests2.UsageStrictMockTest.range":235,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":333,"org.easymock.tests2.UsageConstraintsTest.lessThan":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":219,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests2.CaptureTest.testCaptureRightOne":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":39,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":147,"org.easymock.tests2.UsageConstraintsTest.testOr":63,"org.easymock.tests.UsageRangeTest.combination":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":167,"org.easymock.tests.UsageTest.wrongArguments":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":36,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":277,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":252,"org.easymock.tests.UsageVarargTest.varargShortAccepted":320,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":505,"org.easymock.tests2.UsageConstraintsTest.cmpTo":68,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":347,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":86,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.CaptureTest.testCaptureFromStub":105,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":352,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":155,"org.easymock.tests.UsageTest.unexpectedCallWithArray":370,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":343,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":476,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":278,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":478,"org.easymock.tests2.UsageConstraintsTest.constraints":57,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageStrictMockTest.testVerify":482,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":475,"org.easymock.tests2.CompareToTest.testGreateThan":516,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":466,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":438,"org.easymock.tests.LimitationsTest.abstractClass":425,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":439,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":314}}]
