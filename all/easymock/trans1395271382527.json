[{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[1,2,3],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[6,7,8],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[9,10,10,11,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[72,73,74,75,76,77,78,79,80,81,82],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[83,84,85,86,87,88,89],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[72,90,16,22,23,24,26,33,35,91,92,93,94,2,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,3,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[72,76,80,81,82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[129],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[48,130,49,131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,60],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[132],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[133,134,135,136,137,138,139,140,14,141,142,143,144,145,146,147,148,72,73,149,74,150,75,76,151,152,153,154,155,156,157,90,158,159,78,160,161,162,163,79,71,164,165,166,167,168,15,16,18,19,22,23,24,80,169,81,170,171,172,173,174,175,176,82,177,178,179,25,26,180,27,28,29,30,31,32,33,34,35,181,4,5,182,183,184,185,37,186,91,187,188,92,93,94,189,190,191,2,95,96,97,192,98,193,194,195,196,197,198,199,200,39,40,42,43,201,202,203,204,103,205,206,104,105,106,207,48,130,49,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,51,52,53,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,111,272,273,274,112,275,113,114,276,277,3,115,116,56,278,279,280,281,282,283,117,284,285,286,287,288,289,290,291,292,293,57,58,294,295,296,297,298,299,300,301,118,302,303,304,305,306,61,62,63,64,65,66,67,68,69,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,119,120,331,332,333,334,335,336,121,122,123,337,338,124,339,125,340,126,127,128,341,342],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[9,10,10,11,11,12,13,14,83,15,343,16,17,344,18,19,20,21,345,22,23,346,24,25,26,27,28,29,30,31,347,348,32,33,34,35,349,36,184,185,37,350,351,38,39,40,41,42,43,352,353,354,355,44,356,357,45,358,359,360,361,362,363,364,365,366,46,367,368,369,370,371,47,372,373,48,49,374,375,50,51,52,53,376,54,55,56,283,377,378,379,380,381,382,0,57,58,59,60,61,62,63,64,65,66,67,68,383,384,69,385,70],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[9,10,10,11,11,133,134,135,136,138,140,386,14,141,142,143,144,145,146,147,148,72,73,149,74,150,75,76,151,77,152,153,154,155,156,157,90,158,159,78,160,161,162,163,79,71,164,165,166,167,168,15,16,18,19,20,21,22,23,24,80,169,81,170,171,172,173,174,175,176,82,177,178,179,25,26,180,27,28,29,30,31,33,34,35,181,4,5,182,183,184,185,37,186,387,91,187,188,92,93,94,189,190,191,2,95,96,97,192,388,98,194,389,195,196,197,390,198,199,200,38,39,40,41,391,42,43,392,99,393,394,395,100,101,396,397,102,398,399,400,44,45,46,47,201,401,402,202,203,204,103,206,104,105,106,207,48,130,49,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,403,404,405,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,50,51,52,53,260,261,262,263,264,265,266,267,268,406,269,270,407,271,408,111,272,273,274,112,275,113,114,276,277,3,115,116,56,409,410,411,412,413,278,279,280,281,282,117,414,415,416,284,285,286,287,288,289,290,291,292,293,57,59,294,295,296,417,418,306,69,307,308,309,310,311,313,314,315,316,317,318,319,320,419,324,325,326,327,328,329,330,119,120,331,333,334,335,336,121,122,123,337,338,124,125,340,126,127,128,341,420,421,422],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[105,106,127,128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[9,10,10,11,11,133,134,135,136,138,140,386,14,145,146,147,148,72,73,149,74,150,75,76,151,152,153,154,155,156,157,90,158,159,78,160,161,163,79,71,164,16,18,20,21,23,80,169,170,171,174,175,176,82,177,178,179,25,26,180,27,28,29,31,33,34,35,181,4,5,182,183,184,185,37,186,387,91,187,188,93,189,190,191,96,97,192,388,98,194,389,195,196,197,390,198,199,200,38,39,40,41,391,42,43,392,99,393,394,395,100,101,396,397,102,398,399,44,45,46,47,201,401,402,202,203,204,206,105,106,48,130,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,403,404,405,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,51,52,53,253,260,261,262,263,264,265,267,268,269,271,408,111,272,273,274,112,275,276,277,116,56,410,411,117,414,415,416,284,285,286,287,288,289,290,291,292,293,57,59,294,295,296,417,418,69,307,308,309,310,311,316,317,318,319,320,423,419,424,324,325,326,327,328,329,330,119,120,333,337,338,340,127,128,420,421,422],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"lastControl"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[48,130,49,131],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[72,73,74,75,76,77,78,79,80,81,82],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[10,11,14,83,425,426,427,428,84,345,429,430,40,43,431,353,354,355,44,356,357,45,358,359,360,361,362,363,364,365,366,46,367,368,369,370,371,47,372,373,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[432,147,72,158,163],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:320","sourceCode":"final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters()","type":"CtLocalVariableImpl"},"failures":[0],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[83,84,433,85,86,87,88,89,434,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[9,10,10,11,11,133,134,135,136,137,138,140,435,12,13,436,437,386,14,141,142,143,144,145,146,147,148,72,73,149,74,150,75,76,151,77,152,153,154,155,156,157,90,158,159,78,160,161,162,163,79,71,164,165,16,18,20,21,23,80,169,81,170,171,172,173,174,175,176,82,177,178,179,25,26,180,27,28,29,30,31,32,33,34,35,181,4,5,182,183,184,185,37,186,387,91,187,188,92,93,94,189,190,191,2,95,96,97,192,388,98,194,389,195,196,197,390,198,199,200,38,39,40,41,391,42,43,392,99,393,394,395,100,101,396,397,102,398,399,400,44,45,46,47,201,401,402,202,203,204,103,205,206,104,105,106,207,48,130,49,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,403,404,405,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,50,51,52,53,260,261,262,263,264,265,266,267,268,406,269,407,271,408,111,272,273,274,112,275,114,276,277,3,115,116,56,409,410,411,412,413,117,414,415,416,284,285,286,287,288,289,290,291,292,293,57,58,59,294,295,296,417,418,297,298,299,300,301,118,302,303,304,305,306,61,69,307,308,309,310,311,312,316,317,318,319,320,419,324,325,326,327,328,329,330,119,120,331,333,334,335,336,122,123,337,338,124,339,125,340,126,127,128,341,342,420,421,422],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[438,439,440,441,113,125],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[20,55],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[10,11,427,429,442,430,347],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[435,436,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[200],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:353","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[0,60],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:290","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[133,134,135,136,137,138,140,14,141,142,143,144,145,146,147,148,72,73,149,74,150,75,76,151,152,153,154,155,156,157,90,158,159,78,160,161,163,79,71,164,165,166,167,168,15,18,19,23,24,80,169,81,170,171,172,173,174,175,176,82,177,178,179,25,26,180,27,28,29,31,32,34,181,4,5,182,183,184,185,37,186,91,187,188,92,93,94,189,190,191,2,95,96,97,192,98,193,194,195,196,197,198,199,200,39,40,42,43,201,202,203,204,103,205,206,104,105,106,207,48,130,49,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,51,52,53,252,260,261,262,263,264,269,271,111,272,273,274,112,275,113,114,276,277,3,115,116,56,278,279,280,281,282,117,284,285,286,287,288,289,290,291,292,293,57,58,295,296,297,298,299,300,301,302,303,304,305,306,62,69,307,308,309,310,311,312,313,314,315,316,317,318,319,320,324,325,326,327,328,329,330,119,120,331,332,333,334,335,336,337,338,124,339,125,340,126,127,128,341,342],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[9,10,11,133,134,135,136,137,138,139,140,435,12,13,436,437,386,14,83,459,460,141,142,143,144,145,129,146,147,148,72,73,1,149,74,150,75,76,151,77,152,153,154,155,156,157,90,158,159,78,160,161,162,163,79,71,164,165,166,167,168,15,427,16,17,428,344,18,19,20,84,21,461,345,22,23,430,24,80,169,81,170,171,172,173,174,175,176,82,177,178,179,25,26,180,27,28,29,30,7,31,347,348,32,33,34,35,349,36,181,4,5,182,183,184,185,37,186,443,444,445,462,446,387,447,448,449,463,464,450,91,187,188,92,93,94,189,190,191,2,95,96,97,465,466,192,388,98,193,451,452,453,467,454,194,455,456,457,468,469,458,389,195,196,197,390,198,350,470,471,472,351,473,474,199,200,38,39,40,41,475,391,42,43,431,392,99,393,394,395,100,101,396,397,102,398,399,400,353,354,355,44,356,357,45,358,359,360,361,362,363,364,365,366,46,367,368,369,370,371,47,372,373,201,401,402,202,203,204,103,205,206,104,105,106,207,48,130,49,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,403,404,405,108,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,374,375,50,51,52,476,53,477,478,376,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,54,479,480,481,482,55,483,484,265,266,267,268,406,269,270,407,271,485,408,111,272,273,274,112,275,113,114,276,277,3,115,116,56,409,410,411,412,413,278,279,280,281,282,486,283,377,378,379,380,381,487,382,117,414,415,416,284,285,488,286,287,288,289,290,291,292,293,0,57,58,59,60,294,295,296,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,417,505,506,507,508,509,418,510,297,298,299,511,300,301,118,302,303,304,305,306,61,62,63,64,65,66,67,68,383,384,69,385,307,308,309,310,311,312,313,314,315,316,317,318,319,320,423,419,424,512,321,322,323,513,70,324,325,326,327,328,329,330,119,120,331,332,333,334,335,336,121,122,123,337,338,124,339,125,340,126,127,128,341,342,420,421,422],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[9,133,134,135,136,138,386,14,147,148,72,73,149,74,150,75,76,151,152,153,154,155,156,157,90,158,159,78,160,161,162,163,79,71,164,16,18,20,21,23,80,169,81,170,171,174,175,176,82,178,179,25,26,180,27,28,29,31,33,34,35,181,4,5,182,183,37,387,91,187,188,93,189,190,191,96,97,192,388,98,194,195,196,197,198,200,38,39,40,41,391,42,43,392,99,393,394,395,100,101,396,397,102,398,399,44,45,46,47,201,203,204,206,105,106,48,130,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,51,52,53,265,267,268,269,407,271,111,272,273,274,112,275,276,277,116,284,285,286,288,289,290,291,292,293,57,294,295,296,417,69,307,308,311,312,316,317,318,319,320,328,330,119,120,337,338,124,340,127,128],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":112,"org.easymock.tests2.UsageTest.argumentsOrdered":95,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":499,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":94,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":435,"org.easymock.tests2.DelegateToTest.testReturnException":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":325,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.tests.MockClassControlTest.testToString":63,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":460,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":507,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":208,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":388,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":85,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":151,"org.easymock.tests2.UsageTest.wrongArguments":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":307,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":314,"org.easymock.samples.ExampleTest.answerVsDelegate":134,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":55,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":478,"org.easymock.tests2.UsageConstraintsTest.testNull":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":68,"org.easymock.tests2.CaptureTest.testPrimitive":170,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":227,"org.easymock.tests.UsageTest.moreThanOneArgument":275,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":262,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":409,"org.easymock.tests.UsageTest.argumentsOrdered":115,"org.easymock.tests.UsageVarargTest.varargIntAccepted":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":316,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":89,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":471,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":464,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":320,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests.ReplayStateInvalidUsageTest.times":256,"org.easymock.tests2.DependencyTest.testClassMocking":465,"org.easymock.tests2.AnswerTest.answer":201,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":505,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":168,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":480,"org.easymock.tests2.CaptureTest.testAnd":80,"org.easymock.tests2.UsageTest.strictResetToDefault":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":428,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":273,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":413,"org.easymock.tests2.DelegateToTest.testDelegate":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":223,"org.easymock.tests.LimitationsTest.mockFinalMethod":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":328,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":282,"org.easymock.tests2.DependencyTest.testClassMockingSupport":466,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":407,"org.easymock.tests2.CaptureTest.testCapture1_2446744":171,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":166,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":250,"org.easymock.tests.UsageThrowableTest.throwError":286,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":482,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":450,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":264,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":373,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.MockingTest.testInterfaceMocking":476,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":251,"org.easymock.tests2.CompareToTest.testLessOrEqual":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":317,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":421,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":70,"org.easymock.tests2.UsageTest.niceToStrict":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":362,"org.easymock.tests2.ThreadingTest.testChangeDefault":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":489,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":18,"org.easymock.tests2.MockBuilderTest.testCreateMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":457,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":438,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":217,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":100,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":479,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":416,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":312,"org.easymock.tests.UsageOverloadedMethodTest.overloading":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":156,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":239,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":294,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":155,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":176,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":511,"org.easymock.tests2.EasyMockSupportClassTest.testAll":44,"org.easymock.tests.MockClassControlTest.testEquals":67,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":225,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":442,"org.easymock.tests2.CaptureTest.testCaptureAll":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":280,"org.easymock.tests.MockNameTest.defaultName":488,"org.easymock.tests2.UsageConstraintsTest.testMatches":157,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":263,"org.easymock.samples.ExampleTest.voteForRemovals":138,"org.easymock.tests.UsageVarargTest.allKinds":306,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":330,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":281,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":292,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":448,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":329,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":487,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":434,"org.easymock.tests2.UsageConstraintsTest.greaterThan":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":272,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":35,"org.easymock.samples.ExampleTest.voteForRemoval":135,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":382,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":349,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":483,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":30,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":56,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":393,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":324,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":389,"org.easymock.tests2.CaptureTest.testCaptureFirst":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":495,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":394,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":235,"org.easymock.tests2.UsageTest.moreThanOneArgument":188,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":182,"org.easymock.tests2.CaptureTest.testCapture2_2446744":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":506,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":23,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":305,"org.easymock.tests.GenericTest.testBridgedEquals":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":122,"org.easymock.tests.UsageExpectAndReturnTest.longType":231,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":226,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":346,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":408,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":224,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":260,"org.easymock.tests.UsageCallCountTest.tooManyCalls":123,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":291,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":39,"org.easymock.tests.MockingTest.testNiceClassMocking":376,"org.easymock.tests.MockingTest.testClassMocking":375,"org.easymock.tests2.UsageConstraintsTest.testContains":154,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":332,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":343,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":37,"org.easymock.tests2.UsageConstraintsTest.testFind":149,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":296,"org.easymock.tests.MockTypeTest.fromEasyMockClass":481,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":146,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":124,"org.easymock.tests.UsageExpectAndReturnTest.object":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":86,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":301,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":323,"org.easymock.tests.UsageTest.exactCallCountByLastCall":116,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":494,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":410,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":244,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":297,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":267,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":444,"org.easymock.tests.MockClassControlTest.testHashCode":66,"org.easymock.tests2.EasyMockSupportTest.testVerify":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":364,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":411,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":415,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":165,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":109,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":193,"org.easymock.tests.UsageVarargTest.varargCharAccepted":300,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":486,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":510,"org.easymock.tests2.UsageTest.openCallCountByLastCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":399,"org.easymock.tests.DefaultClassInstantiatorTest.object":283,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":414,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":321,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":467,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":443,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":33,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":214,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":64,"org.easymock.tests2.UsageTest.resumeIfFailure":96,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":54,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":327,"org.easymock.tests2.StubTest.stubWithReturnValue":200,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":84,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":237,"org.easymock.tests2.SerializationTest.testAllMockedMethod":49,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":417,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":439,"org.easymock.samples.SupportTest.voteForRemovals":386,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":220,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":131,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":418,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":401,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":424,"org.easymock.tests.UsageExpectAndThrowTest.object":218,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":160,"org.easymock.tests2.DelegateToTest.testWrongClass":197,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":337,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":338,"org.easymock.tests.UsageStrictMockTest.range":127,"org.easymock.samples.ConstructorCalledMockTest.testTax":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":473,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":396,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":38,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":219,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":20,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":313,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":440,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":422,"org.easymock.tests2.CaptureTest.testCaptureNone":175,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":132,"org.easymock.tests.UsageUnorderedTest.message":117,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":107,"org.easymock.tests.UsageVerifyTest.twoReturns":120,"org.easymock.tests.UsageVarargTest.varargByteAccepted":304,"org.easymock.tests2.ThreadingTest.testThreadSafe":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":367,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":336,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":513,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests2.CaptureTest.testCapture_2617107":81,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":508,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":310,"org.easymock.tests2.UsageConstraintsTest.any":152,"org.easymock.tests2.StubTest.stub":199,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":509,"org.easymock.tests.UsageExpectAndThrowTest.longType":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":326,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":380,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":254,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":104,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":387,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests.LimitationsTest.mockNativeMethod":69,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":247,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":453,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":207,"org.easymock.tests2.NameTest.nameForMocksControl":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":454,"org.easymock.tests2.MockedExceptionTest.testMockedException":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":357,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":277,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":129,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":212,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":21,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":29,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":451,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":433,"org.easymock.tests2.CaptureTest.testCaptureLast":174,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":271,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":43,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":76,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":161,"org.easymock.tests.MockingTest.testTwoMocks":50,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":228,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":216,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":71,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":6,"org.easymock.samples.ExampleTest.removeNonExistingDocument":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":456,"org.easymock.tests.UsageStrictMockTest.differentMethods":128,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":252,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":445,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":378,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":5,"org.easymock.tests2.MockBuilderTest.testCreateMockString":24,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":61,"org.easymock.tests.UsageExpectAndThrowTest.floatType":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":358,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":459,"org.easymock.tests.UsageVerifyTest.twoThrows":119,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":46,"org.easymock.samples.ExampleTest.voteAgainstRemoval":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":500,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":420,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":34,"org.easymock.tests.LimitationsTest.privateConstructor":384,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":426,"org.easymock.tests2.UsageConstraintsTest.testNotNull":79,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":293,"org.easymock.tests2.UsageTest.defaultResetToNice":191,"org.easymock.samples.ExampleTest.voteAgainstRemovals":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":501,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":243,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":452,"org.easymock.tests.UsageVarargTest.differentLength":118,"org.easymock.tests2.CallbackTest.callback":98,"org.easymock.tests2.UsageConstraintsTest.equals":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":347,"org.easymock.tests.UsageTest.openCallCountByLastCall":276,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":309,"org.easymock.tests.UsageCallCountTest.tooFewCalls":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":315,"org.easymock.tests.UsageThrowableTest.throwCheckedException":290,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":441,"org.easymock.tests.MockingTest.testStrictClassMocking":374,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":42,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":455,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":40,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":391,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":204,"org.easymock.tests.ObjectMethodsTest.testHashCode":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":88,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":183,"org.easymock.tests2.NameTest.nameForNiceMock":143,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":87,"org.easymock.samples.ExampleTest.addDocument":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":368,"org.easymock.tests2.DelegateToTest.testStubDelegate":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.stubAnswer":203,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":340,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":461,"org.easymock.tests.UsageVarargTest.varargLongAccepted":303,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":498,"org.easymock.tests.UsageExpectAndReturnTest.floatType":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":246,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":463,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":159,"org.easymock.tests.UsageThrowableTest.noUpperLimit":287,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":148,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":350,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":172,"org.easymock.tests2.SerializationTest.test":130,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":377,"org.easymock.tests2.UsageConstraintsTest.testSame":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":229,"org.easymock.samples.SupportTest.addDocument":437,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":475,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":359,"org.easymock.tests.GenericTest.testPackageScope":57,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":449,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":477,"org.easymock.tests2.NameTest.nameForMock":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":240,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":430,"org.easymock.tests2.UsageStrictMockTest.differentMethods":106,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":348,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":222,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":512,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":274,"org.easymock.tests2.MockedExceptionTest.testRealException":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":503,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":502,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":206,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":308,"org.easymock.tests2.NameTest.nameForStrictMock":142,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":344,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":351,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":78,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":379,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":16,"org.easymock.tests2.UsageStrictMockTest.range":105,"org.easymock.tests2.UsageConstraintsTest.lessThan":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":497,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":99,"org.easymock.tests2.CaptureTest.testCaptureRightOne":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":363,"org.easymock.tests2.UsageConstraintsTest.testOr":75,"org.easymock.tests.UsageRangeTest.combination":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":26,"org.easymock.tests.UsageTest.wrongArguments":114,"org.easymock.tests2.MockBuilderTest.testWithConstructor":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":360,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":490,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":241,"org.easymock.tests.UsageVarargTest.varargShortAccepted":302,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":381,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":121,"org.easymock.tests2.UsageConstraintsTest.cmpTo":153,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":492,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":190,"org.easymock.tests2.CaptureTest.testCaptureFromStub":177,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":249,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":17,"org.easymock.tests.UsageTest.unexpectedCallWithArray":113,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":125,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":335,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":429,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":242,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":126,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.samples.ExampleTest.addAndChangeDocument":140,"org.easymock.tests.UsageStrictMockTest.testVerify":342,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":436,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":279,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":318,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":234,"org.easymock.tests.LimitationsTest.abstractClass":383,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":101,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":298}}]
