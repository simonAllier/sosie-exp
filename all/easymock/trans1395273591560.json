[{"position":"org.easymock.internal.RecordState:153","failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[12,13,14,15],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:136","failures":[17,18,19,20,21,22,23,13,24,25,26,27,28,14,29,30,31,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[50,51,0,52,53,54],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[55],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[25,56],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:136","failures":[17,18,19,20,21,22,23,13,24,25,26,27,28,14,29,30,31,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[59,60,61],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,17,18,74,75,76,19,20,21,22,16,12,77,78,79,23,80,13,24,81,25,26,82,83,84,85,86,27,28,14,87,88,89,90,91,92,93,57,94,95,96,97,98,99,100,101,102,103,104,105,106,107,50,60,108,109,110,111,112,113,114,51,115,116,117,118,0,1,2,3,119,120,121,122,52,123,124,125,126,127,128,129,130,131,132,133,53,134,135,136,137,54,138,55,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,29,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,30,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,33,34,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,4,5,6,7,8,9,294,295,296,35,36,37,38,39,40,41,42,43,44,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,45,10,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,46,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,58,395,396,397,398,399,400,401,402,403,404,47,48,11,405,49,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[459,460],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[320,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[142,405],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:183","failures":[85,137,142,147,153,154,155,156,158,160,161,162,163,164,183,215,216,219,220,221,222,226,228,229,230,231,232,233,234,236,237,238,239,241,242,243,244,246,247,249,250,251,252,253,293,313,322,349,351,353,354,355,356,11,408,409,410,411,413,414],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[50,53,461,134,135,137,54,138,55,139,140,462,463,141,464,227,323,371,374],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[67,17,18,74,75,19,20,21,22,16,12,78,79,23,80,13,24,81,25,26,82,83,84,85,86,27,28,14,465,92,95,96,97,98,466,99,100,467,468,102,103,104,105,106,107,108,111,112,113,2,121,52,127,133,134,137,138,55,140,143,144,145,146,147,148,149,150,151,152,153,154,155,464,157,29,162,163,165,171,178,179,180,182,184,185,186,189,190,192,193,194,196,202,203,204,205,206,207,208,214,215,216,217,218,221,222,223,224,225,226,227,231,234,235,236,237,239,33,34,256,469,470,471,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,8,294,295,35,36,37,38,39,302,305,307,308,310,312,314,315,316,317,318,319,321,45,10,46,354,355,358,359,362,363,366,367,368,369,370,397,47,48,49,406,415,416,417,426,427,428,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[472],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[162,181,187,188,293,311,352,354,360,361,364,365,427,428,473],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[29,163,164,180,210,211,212,213,46,355,356,359,406,408,409,426,427,428],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[459,460],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[465,474,475,476,477,478,464,479,480,481,482,483,484,485],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[460],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[486,487,352,360,488,489],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[207,286,340,342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[55,371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[86],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[316,317,427],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[287],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[94,165,197,199],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[92,94,96,165,197,199,235,305],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:733","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[464,157,158,490],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests2.UsageTest.argumentsOrdered":188,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":358,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":392,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":183,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":229,"org.easymock.tests2.DelegateToTest.testReturnException":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":5,"org.easymock.tests.MockingTest.testPartialClassMocking":469,"org.easymock.tests.MockClassControlTest.testToString":420,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":209,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":432,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":52,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":480,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":12,"org.easymock.tests2.UsageTest.wrongArguments":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":47,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":457,"org.easymock.samples.ExampleTest.answerVsDelegate":235,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":374,"org.easymock.tests2.UsageConstraintsTest.testNull":20,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":259,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":425,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":153,"org.easymock.tests2.CaptureTest.testPrimitive":217,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":451,"org.easymock.tests.UsageTest.moreThanOneArgument":359,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":325,"org.easymock.tests.UsageTest.argumentsOrdered":365,"org.easymock.tests.UsageVarargTest.varargIntAccepted":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":484,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":53,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":72,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":39,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":171,"org.easymock.tests.ReplayStateInvalidUsageTest.times":289,"org.easymock.tests2.DependencyTest.testClassMocking":200,"org.easymock.tests2.AnswerTest.answer":92,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":90,"org.easymock.tests2.CaptureTest.testAnd":214,"org.easymock.tests2.UsageTest.strictResetToDefault":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":369,"org.easymock.tests2.DelegateToTest.testDelegate":196,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":447,"org.easymock.tests.LimitationsTest.mockFinalMethod":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":381,"org.easymock.tests2.DependencyTest.testClassMockingSupport":201,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":294,"org.easymock.tests2.CaptureTest.testCapture1_2446744":218,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":445,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":88,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":283,"org.easymock.tests.UsageThrowableTest.throwError":312,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":373,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":44,"org.easymock.samples.PartialClassMockTest.testGetArea":227,"org.easymock.tests.MockingTest.testInterfaceMocking":257,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":433,"org.easymock.tests2.UsageTest.niceToStrict":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":125,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":348,"org.easymock.tests2.ThreadingTest.testChangeDefault":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":137,"org.easymock.tests2.MockBuilderTest.testCreateMock":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":130,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":174,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":486,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":441,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":431,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":455,"org.easymock.tests.UsageOverloadedMethodTest.overloading":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":13,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":308,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":272,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":80,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":223,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":245,"org.easymock.tests.MockClassControlTest.testEquals":424,"org.easymock.tests2.EasyMockSupportClassTest.testAll":121,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":449,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":89,"org.easymock.tests2.CaptureTest.testCaptureAll":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":379,"org.easymock.tests.MockNameTest.defaultName":330,"org.easymock.tests2.UsageConstraintsTest.testMatches":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":43,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":281,"org.easymock.samples.ExampleTest.voteForRemovals":239,"org.easymock.tests.UsageVarargTest.allKinds":253,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":426,"org.easymock.samples.BasicClassMockTest.testPrintContent":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":380,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":318,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":69,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":485,"org.easymock.tests2.UsageConstraintsTest.greaterThan":25,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":368,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":113,"org.easymock.samples.ExampleTest.voteForRemoval":236,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":339,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":114,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":205,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":462,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":375,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":50,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":178,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":349,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":4,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":191,"org.easymock.tests2.CaptureTest.testCaptureFirst":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":147,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":190,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":268,"org.easymock.tests2.UsageTest.moreThanOneArgument":180,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":207,"org.easymock.tests2.CaptureTest.testCapture2_2446744":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":140,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":252,"org.easymock.tests.GenericTest.testBridgedEquals":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":413,"org.easymock.tests.UsageExpectAndReturnTest.longType":264,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":377,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":463,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":450,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":85,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":448,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":453,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":40,"org.easymock.tests.UsageCallCountTest.tooManyCalls":414,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":437,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":317,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":98,"org.easymock.tests.MockingTest.testNiceClassMocking":260,"org.easymock.tests.MockingTest.testClassMocking":255,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":461,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":407,"org.easymock.tests2.UsageConstraintsTest.testContains":23,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":19,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":417,"org.easymock.tests.MockTypeTest.fromEasyMockClass":372,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":199,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":350,"org.easymock.tests.UsageExpectAndReturnTest.object":271,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":481,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":247,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":346,"org.easymock.tests.UsageTest.exactCallCountByLastCall":366,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":326,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":474,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":242,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":277,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":307,"org.easymock.tests.MockClassControlTest.testHashCode":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":63,"org.easymock.tests2.EasyMockSupportTest.testVerify":156,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":430,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":87,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":91,"org.easymock.tests.UsageVarargTest.varargCharAccepted":246,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":331,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":404,"org.easymock.tests2.UsageTest.openCallCountByLastCall":184,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":155,"org.easymock.tests.DefaultClassInstantiatorTest.object":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":429,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":344,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":473,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":169,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":62,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":422,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":111,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":438,"org.easymock.tests.CapturesMatcherTest.test":460,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":452,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":133,"org.easymock.tests2.UsageTest.resumeIfFailure":189,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":7,"org.easymock.tests2.StubTest.stubWithReturnValue":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":475,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":86,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":270,"org.easymock.tests2.SerializationTest.testAllMockedMethod":158,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":397,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":478,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":487,"org.easymock.samples.SupportTest.voteForRemovals":231,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":444,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":403,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":93,"org.easymock.tests.UsageExpectAndThrowTest.object":442,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":342,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":83,"org.easymock.tests2.DelegateToTest.testWrongClass":194,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":33,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":34,"org.easymock.samples.ConstructorCalledMockTest.testTax":31,"org.easymock.tests.UsageStrictMockTest.range":354,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":117,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":151,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":443,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":119,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":291,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":456,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":488,"org.easymock.tests2.CaptureTest.testCaptureNone":222,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":299,"org.easymock.tests.UsageUnorderedTest.message":293,"org.easymock.tests.UsageVerifyTest.twoReturns":428,"org.easymock.tests.UsageVarargTest.varargByteAccepted":251,"org.easymock.tests2.ThreadingTest.testThreadSafe":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":128,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":411,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":232,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":347,"org.easymock.tests2.CaptureTest.testCapture_2617107":216,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":401,"org.easymock.tests2.UsageConstraintsTest.any":78,"org.easymock.tests2.StubTest.stub":142,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":454,"org.easymock.tests.UsageExpectAndThrowTest.longType":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":6,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":336,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":287,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":161,"org.easymock.tests2.SerializationTest.testClass":464,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":67,"org.easymock.tests.LimitationsTest.mockNativeMethod":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":280,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":323,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":168,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":164,"org.easymock.tests2.NameTest.nameForMocksControl":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":170,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":122,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":363,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":471,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":436,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":198,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":55,"org.easymock.tests.MockingTest.testNicePartialClassMocking":470,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":479,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":166,"org.easymock.tests2.CaptureTest.testCaptureLast":221,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":295,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":468,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":16,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":84,"org.easymock.tests.MockingTest.testTwoMocks":256,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":440,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":187,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":28,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":59,"org.easymock.samples.ExampleTest.removeNonExistingDocument":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":173,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":285,"org.easymock.tests.UsageStrictMockTest.differentMethods":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":64,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":334,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":206,"org.easymock.tests2.MockBuilderTest.testCreateMockString":141,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":418,"org.easymock.tests.UsageExpectAndThrowTest.floatType":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":123,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":81,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":94,"org.easymock.tests.UsageVerifyTest.twoThrows":427,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":127,"org.easymock.samples.ExampleTest.voteAgainstRemoval":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":297,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":112,"org.easymock.tests.LimitationsTest.privateConstructor":301,"org.easymock.tests2.UsageConstraintsTest.testNotNull":27,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":319,"org.easymock.tests2.UsageTest.defaultResetToNice":186,"org.easymock.samples.ExampleTest.voteAgainstRemovals":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":167,"org.easymock.tests.UsageVarargTest.differentLength":248,"org.easymock.tests2.CallbackTest.callback":165,"org.easymock.tests2.UsageConstraintsTest.equals":76,"org.easymock.tests.UsageTest.openCallCountByLastCall":362,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":472,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":11,"org.easymock.tests.UsageCallCountTest.tooFewCalls":409,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":458,"org.easymock.tests.UsageThrowableTest.throwCheckedException":316,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":489,"org.easymock.tests.MockingTest.testStrictClassMocking":254,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":467,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":10,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":466,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":172,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":290,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":100,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":96,"org.easymock.tests2.CompareToTest.testGreateOrEqual":15,"org.easymock.tests.ObjectMethodsTest.testHashCode":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":483,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":208,"org.easymock.tests2.NameTest.nameForNiceMock":212,"org.easymock.tests2.DependencyTest.testInterfaceMocking":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":482,"org.easymock.samples.ExampleTest.addDocument":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":129,"org.easymock.tests2.DelegateToTest.testStubDelegate":193,"org.easymock.tests2.AnswerTest.stubAnswer":95,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":46,"org.easymock.tests.UsageVarargTest.varargLongAccepted":250,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.floatType":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":465,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":32,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":71,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests.UsageThrowableTest.noUpperLimit":313,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":115,"org.easymock.tests2.SerializationTest.test":157,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":219,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":333,"org.easymock.tests2.UsageConstraintsTest.testSame":21,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":262,"org.easymock.samples.SupportTest.addDocument":230,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":124,"org.easymock.tests.GenericTest.testPackageScope":321,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":70,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":258,"org.easymock.tests2.NameTest.nameForMock":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":273,"org.easymock.tests2.UsageStrictMockTest.differentMethods":163,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":446,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":343,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":370,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":477,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":292,"org.easymock.tests2.NameTest.nameForStrictMock":211,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":136,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":116,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":82,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":335,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":134,"org.easymock.tests2.UsageStrictMockTest.range":162,"org.easymock.tests2.UsageConstraintsTest.lessThan":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":224,"org.easymock.tests2.UsageConstraintsTest.testOr":22,"org.easymock.tests.UsageRangeTest.combination":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":103,"org.easymock.tests.UsageTest.wrongArguments":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargShortAccepted":249,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":337,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":412,"org.easymock.tests2.UsageConstraintsTest.cmpTo":79,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":185,"org.easymock.tests2.CaptureTest.testCaptureFromStub":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":282,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":135,"org.easymock.tests.UsageTest.unexpectedCallWithArray":360,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":410,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":275,"org.easymock.tests2.CaptureTest.testCapture":459,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":353,"org.easymock.samples.ExampleTest.addAndChangeDocument":241,"org.easymock.tests.UsageStrictMockTest.testVerify":357,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":228,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":351,"org.easymock.tests2.CompareToTest.testGreateThan":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":378,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":267,"org.easymock.tests.LimitationsTest.abstractClass":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":38,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":243}}]
