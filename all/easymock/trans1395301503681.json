[{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,60,61,61],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[76,77,78,79,80,81,82,83,84,85,5,86,6,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,7,108,109,110,111,112,113,114,62,115,116,8,9,10,11,12,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,13,14,144,15,16,17,18,19,20,21,22,23,145,146,147,148,149,24,25,26,27,150,28,29,151,152,153,154,30,32,34,35,36,37,38,39,41,155,156,157,63,158,159,160,161,162,64,65,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,45,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,66,232,233,67,234,235,236,237,238,239,240,241,242,243,244,245,46,246,247,248,249,250,251,47,48,252,253,254,255,256,51,52,53,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,69,305,306,307,308,309,56,310,311,70,71,312,313,72,73,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,74,75,332,333,57,58,334,59,335,60,60,61,61,336,337,338,339,340,341,342,343],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:79","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[134,344],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[346],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[5,347],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:222","failures":[348,349,350,351],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[352],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[120,121,125,126,136,137],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[353,354,66,355,356,70],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[357,158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[106,107,7,108,152,155,161,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,227,228,239,243,244,257,258,259,260,261,262,264,310,313,317,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[80,81,82,83,84,85,5,86,6,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,358,359,102,103,104,105,106,107,7,108,109,110,111,112,113,114,62,115,116,8,9,10,11,12,117,118,119,120,121,122,123,124,125,126,360,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,13,14,144,15,16,17,18,19,20,21,22,23,145,146,147,148,24,25,26,27,150,28,29,151,152,30,32,34,35,36,37,38,39,41,155,156,157,63,158,159,160,161,162,64,65,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,361,178,179,180,362,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,45,363,364,365,366,367,368,369,370,206,207,208,209,210,211,371,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,372,373,374,375,230,231,66,232,233,67,234,235,236,237,238,239,240,241,242,243,244,245,46,246,247,248,249,250,251,47,48,49,252,253,254,255,256,348,349,50,51,52,53,257,258,259,260,261,262,376,377,378,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,379,380,69,305,306,307,308,309,56,310,311,70,71,312,313,72,73,314,315,350,316,317,351,318,319,320,321,322,323,324,325,326,327,328,329,330,331,74,75,332,333,57,58,334,59,335,60,60,61,61,336,337,338,339,340,341,342,343],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[162],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[353,354,66,355,356,70],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[103,104],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[5,12,381,382,347,383,384,385,386,387,388,389,390],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[136,137],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[380],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[5,18,30,31,32,33,34,35,36,37,38,39,40,41,49,54,55,59],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[87,89,97,125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[127,263],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[31,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:189","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Method.getParameterTypes()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[76,77,78,79,80,81,82,83,84,85,5,86,6,391,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,358,359,102,103,104,105,106,107,7,108,109,110,111,112,113,114,62,115,116,8,9,10,11,12,117,118,119,120,121,122,123,124,125,126,360,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,13,14,144,15,16,17,18,19,20,21,22,23,145,146,147,148,149,24,25,26,27,150,28,29,151,152,153,154,30,32,34,35,36,37,38,39,41,155,156,157,63,158,159,160,161,162,64,65,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,361,178,179,180,362,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,45,363,364,365,366,367,368,369,370,206,207,208,209,210,211,371,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,372,373,374,375,230,231,66,232,233,67,234,235,236,237,238,239,240,241,242,243,244,245,46,246,247,248,249,250,251,47,48,49,252,253,254,255,256,348,349,50,51,52,53,257,258,259,260,261,262,376,377,378,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,379,380,69,305,306,307,308,309,56,310,311,70,71,312,313,72,73,314,315,350,316,317,351,318,319,320,321,322,323,324,325,326,327,328,329,330,331,74,75,332,333,57,58,334,59,335,60,60,61,61,336,337,338,339,340,341,342,343],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[62,63,64,65,66,67,68,69,70,71,72,73,319,74,75],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[357,162],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[80,81,82,5,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,358,359,102,103,104,105,109,110,111,112,113,114,62,115,116,117,118,119,120,121,122,123,124,125,126,360,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,13,14,16,19,20,21,22,23,145,146,147,148,149,24,151,152,153,154,34,36,37,155,156,157,63,158,159,160,161,162,64,65,163,164,165,166,167,168,169,170,171,172,173,174,175,176,361,178,179,180,362,181,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,364,365,206,207,371,225,226,227,228,229,372,373,374,375,230,231,66,232,233,67,234,235,236,237,238,239,240,241,242,243,244,245,48,252,253,254,255,256,348,349,257,258,259,260,261,262,376,377,378,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,379,380,69,305,306,307,308,309,56,310,311,71,312,313,72,73,314,315,350,316,317,351,318,320,321,322,331,74,75,332,333,57,58,334,335,336,337,338,339,340,341,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[392,393,394,395,396,60,61],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[105,110,334,335],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[127,263],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":120,"org.easymock.tests2.UsageTest.argumentsOrdered":65,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":310,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":175,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":159,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":334,"org.easymock.tests2.DelegateToTest.testReturnException":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":258,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.tests.MockClassControlTest.testToString":246,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":352,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":371,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":186,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":385,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":126,"org.easymock.tests2.UsageTest.wrongArguments":63,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":184,"org.easymock.samples.ExampleTest.answerVsDelegate":337,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":55,"org.easymock.tests2.UsageConstraintsTest.testNull":122,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":15,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":174,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":251,"org.easymock.tests2.CaptureTest.testPrimitive":90,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":205,"org.easymock.tests.UsageTest.moreThanOneArgument":311,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":254,"org.easymock.tests.UsageTest.argumentsOrdered":73,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":305,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":30,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":309,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests.ReplayStateInvalidUsageTest.times":220,"org.easymock.tests2.AnswerTest.answer":101,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":85,"org.easymock.tests2.CaptureTest.testAnd":87,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":210,"org.easymock.tests2.DelegateToTest.testDelegate":181,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":348,"org.easymock.tests2.CaptureTest.testCapture1_2446744":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":83,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":214,"org.easymock.tests.UsageThrowableTest.throwError":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":256,"org.easymock.samples.PartialClassMockTest.testGetArea":59,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":306,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":187,"org.easymock.tests2.UsageTest.niceToStrict":158,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.MockBuilderTest.testCreateMock":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":195,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":353,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":170,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":182,"org.easymock.tests.UsageOverloadedMethodTest.overloading":321,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":131,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":276,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":320,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":130,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":96,"org.easymock.tests2.EasyMockSupportClassTest.testAll":8,"org.easymock.tests.MockClassControlTest.testEquals":250,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":48,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":203,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":42,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":84,"org.easymock.tests2.CaptureTest.testCaptureAll":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":325,"org.easymock.tests2.UsageConstraintsTest.testMatches":132,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":255,"org.easymock.samples.ExampleTest.voteForRemovals":341,"org.easymock.tests.UsageVarargTest.allKinds":295,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":331,"org.easymock.samples.BasicClassMockTest.testPrintContent":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":326,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":243,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":262,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":390,"org.easymock.tests2.UsageConstraintsTest.greaterThan":134,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":209,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":23,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":4,"org.easymock.samples.ExampleTest.voteForRemoval":338,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":18,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":45,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":167,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":257,"org.easymock.tests2.CaptureTest.testCaptureFirst":100,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":168,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":272,"org.easymock.tests2.UsageTest.moreThanOneArgument":157,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":148,"org.easymock.tests2.CaptureTest.testCapture2_2446744":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":39,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":294,"org.easymock.tests.GenericTest.testBridgedEquals":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":303,"org.easymock.tests.UsageExpectAndReturnTest.longType":268,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":323,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":204,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":139,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":372,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":374,"org.easymock.tests.UsageCallCountTest.tooManyCalls":304,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":242,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":25,"org.easymock.tests2.UsageConstraintsTest.testContains":129,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":31,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":297,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":7,"org.easymock.tests2.UsageConstraintsTest.testFind":121,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":322,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":81,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":230,"org.easymock.tests.UsageExpectAndReturnTest.object":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":386,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":289,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":330,"org.easymock.tests.UsageTest.exactCallCountByLastCall":314,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":263,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":381,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":281,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":285,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":316,"org.easymock.tests.MockClassControlTest.testHashCode":249,"org.easymock.tests2.EasyMockSupportTest.testVerify":177,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":82,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":391,"org.easymock.tests.UsageVarargTest.varargCharAccepted":288,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":112,"org.easymock.tests2.UsageTest.openCallCountByLastCall":160,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":176,"org.easymock.tests.DefaultClassInstantiatorTest.object":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":376,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":240,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":21,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":11,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":247,"org.easymock.tests2.UsageTest.resumeIfFailure":163,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":260,"org.easymock.tests2.StubTest.stubWithReturnValue":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":382,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":274,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":379,"org.easymock.samples.SupportTest.voteForRemovals":333,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":198,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":380,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":358,"org.easymock.tests.UsageExpectAndThrowTest.object":196,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":137,"org.easymock.tests2.DelegateToTest.testWrongClass":180,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":206,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":207,"org.easymock.samples.ConstructorCalledMockTest.testTax":60,"org.easymock.tests.UsageStrictMockTest.range":67,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":36,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":72,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":183,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":355,"org.easymock.tests2.CaptureTest.testCaptureNone":95,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":365,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests.UsageVerifyTest.twoReturns":75,"org.easymock.tests.UsageVarargTest.varargByteAccepted":293,"org.easymock.tests2.ThreadingTest.testThreadSafe":145,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":301,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":57,"org.easymock.tests2.CaptureTest.testCapture_2617107":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":228,"org.easymock.tests2.UsageConstraintsTest.any":127,"org.easymock.tests2.StubTest.stub":151,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":375,"org.easymock.tests.UsageExpectAndThrowTest.longType":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":259,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":218,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":114,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests.LimitationsTest.mockNativeMethod":56,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":49,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":284,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":44,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":116,"org.easymock.tests2.NameTest.nameForMocksControl":79,"org.easymock.tests2.MockedExceptionTest.testMockedException":107,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":190,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":53,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":13,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":37,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":384,"org.easymock.tests2.CaptureTest.testCaptureLast":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":349,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":138,"org.easymock.tests.MockingTest.testTwoMocks":50,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":194,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":64,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":142,"org.easymock.samples.ExampleTest.removeNonExistingDocument":342,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":216,"org.easymock.tests.UsageStrictMockTest.differentMethods":234,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":1,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":147,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":245,"org.easymock.tests.UsageExpectAndThrowTest.floatType":188,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":133,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":102,"org.easymock.tests.UsageVerifyTest.twoThrows":74,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":10,"org.easymock.samples.ExampleTest.voteAgainstRemoval":339,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":363,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":22,"org.easymock.tests2.UsageConstraintsTest.testNotNull":141,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":244,"org.easymock.tests2.UsageTest.defaultResetToNice":162,"org.easymock.samples.ExampleTest.voteAgainstRemovals":336,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":280,"org.easymock.tests.UsageVarargTest.differentLength":290,"org.easymock.tests2.CallbackTest.callback":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":392,"org.easymock.tests.UsageTest.openCallCountByLastCall":312,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":227,"org.easymock.tests.UsageCallCountTest.tooFewCalls":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":185,"org.easymock.tests.UsageThrowableTest.throwCheckedException":241,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":356,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":264,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":26,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":150,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":104,"org.easymock.tests.ObjectMethodsTest.testHashCode":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":389,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":149,"org.easymock.tests2.NameTest.nameForNiceMock":78,"org.easymock.tests2.DependencyTest.testInterfaceMocking":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":387,"org.easymock.samples.ExampleTest.addDocument":340,"org.easymock.tests2.DelegateToTest.testStubDelegate":179,"org.easymock.tests2.AnswerTest.stubAnswer":103,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":232,"org.easymock.tests.UsageVarargTest.varargLongAccepted":292,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests.UsageExpectAndReturnTest.floatType":267,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":61,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":135,"org.easymock.tests.UsageThrowableTest.noUpperLimit":238,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":118,"org.easymock.tests2.SerializationTest.test":86,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":92,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests2.UsageConstraintsTest.testSame":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":266,"org.easymock.samples.SupportTest.addDocument":332,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":217,"org.easymock.tests.GenericTest.testPackageScope":47,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":369,"org.easymock.tests2.NameTest.nameForMock":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":277,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":396,"org.easymock.tests2.UsageStrictMockTest.differentMethods":115,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":357,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":269,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":211,"org.easymock.tests2.MockedExceptionTest.testRealException":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":383,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":113,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":226,"org.easymock.tests2.NameTest.nameForStrictMock":77,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":16,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":136,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":2,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":32,"org.easymock.tests2.UsageStrictMockTest.range":62,"org.easymock.tests2.UsageConstraintsTest.lessThan":143,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":346,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":388,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":166,"org.easymock.tests2.CaptureTest.testCaptureRightOne":97,"org.easymock.tests2.UsageConstraintsTest.testOr":124,"org.easymock.tests.UsageRangeTest.combination":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":14,"org.easymock.tests.UsageTest.wrongArguments":71,"org.easymock.tests2.MockBuilderTest.testWithConstructor":393,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":278,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":3,"org.easymock.tests.UsageVarargTest.varargShortAccepted":291,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":302,"org.easymock.tests2.UsageConstraintsTest.cmpTo":128,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":359,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":161,"org.easymock.tests2.CaptureTest.testCaptureFromStub":98,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":213,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":33,"org.easymock.tests.UsageTest.unexpectedCallWithArray":70,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":300,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":394,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":279,"org.easymock.tests2.UsageConstraintsTest.constraints":119,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":233,"org.easymock.samples.ExampleTest.addAndChangeDocument":343,"org.easymock.tests.UsageStrictMockTest.testVerify":236,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":335,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":324,"org.easymock.tests2.CompareToTest.testGreateThan":344,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":93,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":307,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":308,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":171,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":286}}]
