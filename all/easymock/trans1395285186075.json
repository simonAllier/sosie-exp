[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[1,2,0,3],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,1,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,3,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[171,172,173,174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[175,176,177,3],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[178,179,180],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[8,26,181,62,63,123,131,182,168],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,4,5,6,207,208,209,210,211,212,213,7,214,8,9,10,11,12,13,215,216,217,218,219,220,221,222,223,224,225,171,226,227,172,14,228,15,16,17,18,19,20,21,229,230,231,232,233,22,23,234,235,24,25,236,237,26,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,27,255,28,256,257,29,258,30,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,178,275,276,277,278,279,280,179,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,302,303,304,51,52,305,53,306,307,308,309,54,55,310,311,56,312,313,314,315,316,317,318,319,320,321,322,180,323,324,325,326,327,328,329,330,331,57,58,59,60,332,333,334,335,336,337,173,174,338,339,340,341,342,343,344,345,346,347,61,181,62,348,349,350,351,352,353,354,355,63,356,64,65,357,358,66,67,359,68,69,360,70,361,362,363,363,364,364,365,366,367,71,368,369,72,73,74,75,76,77,370,371,78,372,373,374,79,80,81,375,376,377,378,379,82,380,381,83,382,383,384,385,386,387,388,389,390,84,391,392,393,394,395,85,396,397,86,87,88,89,90,91,92,175,398,176,93,94,95,96,399,97,1,98,99,100,101,2,102,103,104,105,106,107,108,109,110,0,111,112,177,113,3,114,115,116,117,400,401,402,118,403,404,405,119,406,120,407,121,408,409,122,410,411,123,124,125,412,126,413,127,128,129,414,415,130,131,416,417,418,419,182,420,421,422,132,423,424,425,426,427,428,429,430,431,432,133,433,434,435,436,437,438,134,135,136,137,138,139,140,141,142,143,144,145,439,440,441,442,443,444,445,446,447,448,449,146,450,451,452,453,454,455,147,456,457,458,459,148,460,461,149,150,151,152,153,462,154,463,464,155,156,465,466,157,467,468,469,158,159,470,160,161,471,472,162,163,164,165,473,166,167,474,475,476,168,477,169,170,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:33","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResult>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:721","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[359,175,398,176,182,422,132],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[479],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[407,480,147,456],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[228,481,482,234,235,236,237,309,181,62,355,64,65,411,412,414,415,169,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[14,23,338,61,181,62,63,65,357,125,168,170,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.internal.MocksControl:190","failures":[5,7,214,9,10,11,12,13,237,309,57,181,353,64,65,73,80,96,100,101,102,105,0,111,112,113,122,126,413,415,135,137,139,140,143,144,145,461,165,475,169,170],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[183,184,185,195,196,197,205,206,4,5,6,7,214,8,9,10,11,12,13,219,220,221,222,223,224,225,171,226,227,172,14,15,16,17,18,19,20,21,22,23,235,24,25,236,237,26,238,239,240,242,243,244,245,246,247,248,249,251,28,256,29,258,275,179,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,309,54,55,310,311,56,313,332,333,334,335,336,337,173,174,61,181,62,353,354,355,63,356,64,65,357,358,67,359,68,69,360,70,362,365,366,367,71,368,369,73,76,78,374,79,80,81,175,176,93,94,95,96,97,1,98,99,100,101,2,102,103,104,105,106,107,108,109,110,0,111,112,177,113,3,114,115,116,117,400,119,120,121,123,124,125,412,126,413,127,128,129,414,415,130,131,182,420,421,422,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,461,149,150,151,152,153,462,154,155,156,465,466,157,467,468,469,158,159,470,160,161,471,472,162,163,164,165,473,166,167,475,476,168,477,169,170,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[225,226,182,466,467],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[483],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[317,484],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[28,102],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[485,186,486,158,159,470,160,161,471,472,162,163,164,487,165,473,166,167],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[488,489,490],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":96,"org.easymock.tests2.UsageTest.argumentsOrdered":415,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":22,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":144,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":270,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":413,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":365,"org.easymock.tests2.DelegateToTest.testReturnException":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":220,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.tests.MockClassControlTest.testToString":341,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":440,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":282,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":101,"org.easymock.tests2.UsageTest.wrongArguments":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":54,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":455,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":217,"org.easymock.samples.ExampleTest.answerVsDelegate":359,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":201,"org.easymock.tests2.UsageConstraintsTest.testNull":1,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":75,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":143,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":346,"org.easymock.tests2.CaptureTest.testPrimitive":160,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":56,"org.easymock.tests.UsageTest.moreThanOneArgument":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":301,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":334,"org.easymock.tests.UsageTest.argumentsOrdered":237,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":348,"org.easymock.tests.UsageVarargTest.varargIntAccepted":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":17,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":437,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":21,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests.ReplayStateInvalidUsageTest.times":328,"org.easymock.tests2.DependencyTest.testClassMocking":463,"org.easymock.tests2.AnswerTest.answer":182,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":427,"org.easymock.tests2.CaptureTest.testAnd":158,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":404,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":59,"org.easymock.tests2.DelegateToTest.testDelegate":469,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":297,"org.easymock.tests.LimitationsTest.mockFinalMethod":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":233,"org.easymock.tests2.DependencyTest.testClassMockingSupport":464,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":173,"org.easymock.tests2.CaptureTest.testCapture1_2446744":161,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":425,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":180,"org.easymock.tests.UsageThrowableTest.throwError":7,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":200,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":482,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":397,"org.easymock.samples.PartialClassMockTest.testGetArea":66,"org.easymock.tests.MockingTest.testInterfaceMocking":305,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":18,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":386,"org.easymock.tests2.UsageTest.niceToStrict":126,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":283,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":260,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":119,"org.easymock.tests2.MockBuilderTest.testCreateMock":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":393,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":452,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":291,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":139,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":185,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":215,"org.easymock.tests.UsageOverloadedMethodTest.overloading":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":106,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":42,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":4,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":105,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":164,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":241,"org.easymock.tests2.EasyMockSupportClassTest.testAll":82,"org.easymock.tests.MockClassControlTest.testEquals":345,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":426,"org.easymock.tests2.CaptureTest.testCaptureAll":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":231,"org.easymock.tests.MockNameTest.defaultName":213,"org.easymock.tests2.UsageConstraintsTest.testMatches":107,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":335,"org.easymock.samples.ExampleTest.voteForRemovals":70,"org.easymock.tests.UsageVarargTest.allKinds":249,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":232,"org.easymock.samples.BasicClassMockTest.testPrintContent":369,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":12,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":475,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":224,"org.easymock.tests2.UsageConstraintsTest.greaterThan":109,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":58,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":81,"org.easymock.samples.ExampleTest.voteForRemoval":68,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":320,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":150,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":375,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":479,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":370,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":347,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":136,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":219,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":465,"org.easymock.tests2.CaptureTest.testCaptureFirst":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":137,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":38,"org.easymock.tests2.CaptureTest.testCapture2_2446744":166,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":152,"org.easymock.tests2.UsageTest.moreThanOneArgument":125,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":277,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":248,"org.easymock.tests.GenericTest.testBridgedEquals":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":193,"org.easymock.tests.UsageExpectAndReturnTest.longType":34,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":300,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":177,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":332,"org.easymock.tests.UsageCallCountTest.tooManyCalls":194,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":287,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":11,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":87,"org.easymock.tests.MockingTest.testNiceClassMocking":308,"org.easymock.tests.MockingTest.testClassMocking":303,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":187,"org.easymock.tests2.UsageConstraintsTest.testContains":104,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":148,"org.easymock.tests2.UsageConstraintsTest.testFind":97,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":6,"org.easymock.tests.MockTypeTest.fromEasyMockClass":199,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":176,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":353,"org.easymock.tests.UsageExpectAndReturnTest.object":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":142,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":243,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":210,"org.easymock.tests.UsageTest.exactCallCountByLastCall":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":265,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":250,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":456,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":47,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":226,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":429,"org.easymock.tests.MockClassControlTest.testHashCode":344,"org.easymock.tests2.EasyMockSupportTest.testVerify":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":388,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":350,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":184,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":424,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":474,"org.easymock.tests.UsageVarargTest.varargCharAccepted":242,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":312,"org.easymock.tests2.CaptureTest.testCaptureMultiple":486,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":281,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":489,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":145,"org.easymock.tests.DefaultClassInstantiatorTest.object":313,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":183,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":389,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":428,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":79,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":288,"org.easymock.tests.CapturesMatcherTest.test":485,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":48,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":85,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":342,"org.easymock.tests2.UsageTest.resumeIfFailure":130,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":222,"org.easymock.tests2.StubTest.stubWithReturnValue":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":407,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":113,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":40,"org.easymock.tests2.SerializationTest.testAllMockedMethod":400,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":275,"org.easymock.samples.SupportTest.voteForRemovals":71,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":294,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":179,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":420,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":252,"org.easymock.tests.UsageExpectAndThrowTest.object":292,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":111,"org.easymock.tests2.DelegateToTest.testWrongClass":467,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":15,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":16,"org.easymock.tests.UsageStrictMockTest.range":64,"org.easymock.samples.ConstructorCalledMockTest.testTax":363,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":418,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":293,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":120,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":236,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":216,"org.easymock.tests2.CaptureTest.testCaptureNone":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":206,"org.easymock.tests.UsageUnorderedTest.message":309,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":481,"org.easymock.tests.UsageVerifyTest.twoReturns":62,"org.easymock.tests.UsageVarargTest.varargByteAccepted":247,"org.easymock.tests2.ThreadingTest.testThreadSafe":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":391,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":191,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":211,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":368,"org.easymock.tests2.CaptureTest.testCapture_2617107":470,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":311,"org.easymock.tests2.UsageConstraintsTest.any":102,"org.easymock.tests2.StubTest.stub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":280,"org.easymock.tests.UsageExpectAndThrowTest.longType":285,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":317,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":326,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":477,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests2.SerializationTest.testClass":116,"org.easymock.tests.LimitationsTest.mockNativeMethod":27,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":30,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":50,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":478,"org.easymock.tests2.NameTest.nameForMocksControl":444,"org.easymock.tests2.MockedExceptionTest.testMockedException":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":381,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":25,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":398,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":286,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":72,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":121,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests2.CaptureTest.testCaptureLast":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":92,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":112,"org.easymock.tests.MockingTest.testTwoMocks":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":290,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":414,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":114,"org.easymock.samples.ExampleTest.removeNonExistingDocument":361,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":451,"org.easymock.tests.UsageStrictMockTest.differentMethods":65,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":430,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":315,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":151,"org.easymock.tests2.MockBuilderTest.testCreateMockString":411,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":339,"org.easymock.tests.UsageExpectAndThrowTest.floatType":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":382,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":422,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":457,"org.easymock.tests.UsageVerifyTest.twoThrows":181,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":84,"org.easymock.samples.ExampleTest.voteAgainstRemoval":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":271,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":80,"org.easymock.tests.LimitationsTest.privateConstructor":254,"org.easymock.tests2.UsageConstraintsTest.testNotNull":3,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":458,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":13,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.samples.ExampleTest.voteAgainstRemovals":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":272,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.UsageVarargTest.differentLength":244,"org.easymock.tests2.CallbackTest.callback":461,"org.easymock.tests2.UsageConstraintsTest.equals":399,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":372,"org.easymock.tests.UsageTest.openCallCountByLastCall":24,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":310,"org.easymock.tests.UsageCallCountTest.tooFewCalls":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":218,"org.easymock.tests.UsageThrowableTest.throwCheckedException":10,"org.easymock.tests.MockingTest.testStrictClassMocking":302,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":91,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":450,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":88,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":329,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":90,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":423,"org.easymock.tests.ObjectMethodsTest.testHashCode":209,"org.easymock.tests2.NameTest.nameForNiceMock":443,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":153,"org.easymock.tests2.DependencyTest.testInterfaceMocking":155,"org.easymock.samples.ExampleTest.addDocument":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.DelegateToTest.testStubDelegate":157,"org.easymock.tests2.AnswerTest.stubAnswer":132,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":63,"org.easymock.tests.UsageVarargTest.varargLongAccepted":246,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":269,"org.easymock.tests.UsageExpectAndReturnTest.floatType":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":49,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":147,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":436,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":110,"org.easymock.tests.UsageThrowableTest.noUpperLimit":214,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":94,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":416,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":471,"org.easymock.tests2.SerializationTest.test":117,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":484,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":314,"org.easymock.tests2.UsageConstraintsTest.testSame":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":32,"org.easymock.samples.SupportTest.addDocument":367,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":383,"org.easymock.tests.GenericTest.testPackageScope":29,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":264,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":435,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":306,"org.easymock.tests2.NameTest.nameForMock":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":410,"org.easymock.tests2.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":35,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":296,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":60,"org.easymock.tests2.MockedExceptionTest.testRealException":460,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":203,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":274,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":480,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":273,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":55,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":331,"org.easymock.tests2.NameTest.nameForStrictMock":442,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":405,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":490,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":417,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":316,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":118,"org.easymock.tests2.UsageStrictMockTest.range":169,"org.easymock.tests2.UsageConstraintsTest.lessThan":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":432,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":387,"org.easymock.tests2.CaptureTest.testCaptureRightOne":165,"org.easymock.tests2.UsageConstraintsTest.testOr":99,"org.easymock.tests.UsageRangeTest.combination":57,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":73,"org.easymock.tests.UsageTest.wrongArguments":235,"org.easymock.tests2.MockBuilderTest.testWithConstructor":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":384,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":261,"org.easymock.tests.UsageVarargTest.varargShortAccepted":245,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":318,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":192,"org.easymock.tests2.UsageConstraintsTest.cmpTo":103,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":263,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.CaptureTest.testCaptureFromStub":473,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":322,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":403,"org.easymock.tests.UsageTest.unexpectedCallWithArray":234,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":355,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":190,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":45,"org.easymock.tests2.CaptureTest.testCapture":487,"org.easymock.tests2.UsageConstraintsTest.constraints":95,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":356,"org.easymock.samples.ExampleTest.addAndChangeDocument":362,"org.easymock.tests2.ConstraintsToStringTest.notToString":483,"org.easymock.tests.UsageStrictMockTest.testVerify":358,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":366,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":354,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":230,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":19,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":37,"org.easymock.tests.LimitationsTest.abstractClass":253,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":140,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":239}}]
