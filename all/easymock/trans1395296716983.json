[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,111,112,112,113,114,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"classMockingDisabled"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[88,89,93],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[92,116,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:99","sourceCode":"return ((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","type":"CtReturnImpl"},"failures":[118,119,120,65,121,122,123,124,125,126,127,115],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,111,111,112,112,123,148,124,125,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"message"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[150],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[35,151,36,152],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[153,154,155,156],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[158,159,160,157,161,162,163,0,1,2,164,3,165,166,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,154,167,168,169,170,171,172,173,174,175,176,149,118,177,178,179,180,181,182,155,183,184,185,186,187,156,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,29,30,31,32,233,234,33,34,235,35,151,36,37,38,236,39,40,41,42,43,44,45,46,47,48,49,50,51,52,237,238,239,240,241,242,53,54,55,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,119,265,120,266,267,268,269,270,56,57,58,59,60,61,62,63,64,65,66,67,68,69,271,70,71,72,73,74,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,128,129,305,306,307,308,309,310,311,312,130,313,131,314,132,75,76,77,78,79,315,80,316,317,81,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,82,83,84,85,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,86,371,372,373,122,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,87,88,89,90,91,92,93,94,95,133,134,431,135,432,150,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,96,97,98,99,100,460,101,102,103,104,105,106,107,108,109,461,462,463,464,110,465,466,467,468,469,470,471,472,473,136,137,138,139,140,474,475,476,141,142,477,478,479,480,481,143,144,145,146,147,482,483,484,485,486,487,488,111,112,489,123,113,114,148,490,124,125,491,126,492,127,115],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[35,42,493,59,494,61,62,65,66,67,69,71,72,495,74,99,109,110,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[496,497,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[192],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[158,159,160,157,161,162,163,0,1,2,3,165,166,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,154,167,168,169,170,171,172,173,174,175,176,149,118,177,178,179,180,181,182,155,183,184,185,186,187,156,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,499,219,220,221,222,223,224,225,226,227,228,229,230,231,232,29,30,31,32,233,234,33,34,235,35,151,36,37,38,236,39,40,41,42,43,44,45,46,47,48,49,50,51,52,237,238,239,240,241,242,53,54,55,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,119,265,120,266,267,268,269,270,56,57,59,61,62,64,65,66,67,69,271,70,71,72,74,272,273,274,275,276,277,278,500,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,128,129,305,306,307,308,309,310,311,312,130,313,131,314,132,75,76,77,78,79,315,80,316,317,81,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,82,83,84,85,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,86,371,372,373,122,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,88,89,90,91,92,93,95,133,134,431,135,432,150,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,96,97,98,99,100,460,101,102,103,104,105,106,107,108,109,461,462,463,464,110,465,466,467,468,469,470,471,472,473,136,137,138,139,140,474,475,476,141,142,477,478,479,480,481,143,144,145,146,147,482,483,484,485,486,487,488,111,112,489,123,113,114,148,490,124,125,491,126,492,127,115],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[523,524,323,445,525,526],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[527,528,529,530,531],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[228,229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[172,149,184,188],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[532],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[523,524,323,445,525,526],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[533,534,535,528,529,57,68],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[158,159,160,157,161,162,163,7,10,20,26,154,167,168,169,171,172,173,174,175,176,149,118,177,178,179,180,181,182,155,183,184,185,186,187,156,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,230,231,232,29,30,31,32,234,33,34,35,151,36,37,38,236,39,40,41,44,48,49,50,237,238,239,240,241,242,53,54,55,243,249,256,257,258,259,260,261,262,263,264,119,265,120,266,269,270,56,61,65,67,69,72,272,273,274,275,276,277,278,284,303,128,129,306,130,313,131,314,132,77,78,79,80,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,84,336,337,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,369,370,86,371,372,373,122,374,375,376,377,378,379,380,381,382,395,396,397,399,400,401,402,403,404,405,406,423,429,133,134,431,135,432,150,433,434,435,436,437,438,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,97,98,99,460,467,468,469,470,471,472,136,137,138,139,140,474,475,476,141,142,477,478,479,480,481,143,144,145,146,147,482,483,484,485,486,487,488,111,111,112,112,489,123,113,114,148,490,124,125,491,126,127,115],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[168,169,174,175,149,184,204,206,214],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[536,500],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[537],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[452,455],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[538],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[496,497,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[149],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[96],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[88,89,90,91,93,95],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[219,220],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[182],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[35,151,36,152],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[7,10,20,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,47,48,49,50,52,55,56,59,61,62,65,66,67,69,71,72,74,301,77,78,79,80,84,86,97,98,99,100,102,103,104,105,108,109,110,111,111,112,112,113,114,115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":169,"org.easymock.tests2.UsageTest.argumentsOrdered":201,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":321,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":417,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":196,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":487,"org.easymock.tests2.DelegateToTest.testReturnException":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":378,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.tests.MockClassControlTest.testToString":103,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":223,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":14,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":10,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":342,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":270,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":522,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":533,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":482,"org.easymock.tests2.UsageTest.wrongArguments":194,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":255,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":340,"org.easymock.samples.ExampleTest.answerVsDelegate":490,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":110,"org.easymock.tests2.UsageConstraintsTest.testNull":172,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":317,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":39,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":119,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":108,"org.easymock.tests2.CaptureTest.testPrimitive":207,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":486,"org.easymock.tests.UsageTest.moreThanOneArgument":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":361,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":431,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":150,"org.easymock.tests.UsageTest.argumentsOrdered":328,"org.easymock.tests.UsageVarargTest.varargIntAccepted":397,"org.easymock.tests.InvocationTest.testEquals":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":529,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":289,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":409,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":132,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":506,"org.easymock.tests.ReplayStateInvalidUsageTest.times":391,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":249,"org.easymock.tests2.DependencyTest.testClassMocking":267,"org.easymock.tests2.AnswerTest.answer":237,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":294,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":462,"org.easymock.tests2.CaptureTest.testAnd":204,"org.easymock.tests2.UsageTest.strictResetToDefault":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":260,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":375,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":436,"org.easymock.tests2.DelegateToTest.testDelegate":163,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":505,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":357,"org.easymock.tests.LimitationsTest.mockFinalMethod":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":381,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":312,"org.easymock.tests2.DependencyTest.testClassMockingSupport":268,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":437,"org.easymock.tests2.CaptureTest.testCapture1_2446744":208,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":292,"org.easymock.tests.UsageThrowableTest.throwError":452,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":385,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":464,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":290,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":28,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":509,"org.easymock.samples.PartialClassMockTest.testGetArea":115,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":386,"org.easymock.tests.MockingTest.testInterfaceMocking":315,"org.easymock.tests2.CompareToTest.testLessOrEqual":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":313,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":15,"org.easymock.tests2.UsageTest.niceToStrict":195,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":343,"org.easymock.tests2.ThreadingTest.testChangeDefault":499,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":23,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":252,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":523,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":351,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":261,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":461,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":442,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":338,"org.easymock.tests.UsageOverloadedMethodTest.overloading":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":19,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":470,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":478,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":330,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":179,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":116,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":213,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":398,"org.easymock.tests.MockClassControlTest.testEquals":107,"org.easymock.tests2.EasyMockSupportClassTest.testAll":7,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":98,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":359,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":537,"org.easymock.tests2.CaptureTest.testCaptureAll":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":310,"org.easymock.tests.MockNameTest.defaultName":304,"org.easymock.tests2.UsageConstraintsTest.testMatches":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":135,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":383,"org.easymock.samples.ExampleTest.voteForRemovals":126,"org.easymock.tests.UsageVarargTest.allKinds":406,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":371,"org.easymock.samples.BasicClassMockTest.testPrintContent":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":311,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":458,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":272,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":382,"org.easymock.tests2.UsageConstraintsTest.greaterThan":155,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":8,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":374,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":50,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":510,"org.easymock.samples.ExampleTest.voteForRemoval":124,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":95,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":51,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":42,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":502,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":191,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":86,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":258,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":377,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":159,"org.easymock.tests2.CaptureTest.testCaptureFirst":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":259,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":473,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":476,"org.easymock.tests2.UsageTest.moreThanOneArgument":193,"org.easymock.tests2.CaptureTest.testCapture2_2446744":216,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":72,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":405,"org.easymock.tests.GenericTest.testBridgedEquals":100,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":369,"org.easymock.tests.UsageExpectAndReturnTest.longType":139,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":308,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":360,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":187,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":133,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":319,"org.easymock.tests.UsageCallCountTest.tooManyCalls":370,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":347,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":457,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":30,"org.easymock.tests.MockingTest.testNiceClassMocking":81,"org.easymock.tests.MockingTest.testClassMocking":76,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":494,"org.easymock.tests2.UsageConstraintsTest.testContains":178,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":363,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":55,"org.easymock.tests2.UsageConstraintsTest.testFind":171,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":332,"org.easymock.tests.MockTypeTest.fromEasyMockClass":463,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":443,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":230,"org.easymock.tests.UsageExpectAndReturnTest.object":477,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":253,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":538,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":534,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":400,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":299,"org.easymock.tests.UsageTest.exactCallCountByLastCall":329,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":433,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":57,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":395,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":144,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":469,"org.easymock.tests.MockClassControlTest.testHashCode":106,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":280,"org.easymock.tests2.EasyMockSupportTest.testVerify":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":17,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":434,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":441,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":291,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":295,"org.easymock.tests.UsageVarargTest.varargCharAccepted":399,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":87,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastCall":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":497,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":120,"org.easymock.tests.DefaultClassInstantiatorTest.object":88,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":440,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":18,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":349,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":455,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":247,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":279,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":508,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":105,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":48,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":348,"org.easymock.tests.ReplayStateInvalidCallsTest.times":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":318,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":515,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests2.UsageTest.resumeIfFailure":202,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":109,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":380,"org.easymock.tests2.StubTest.stubWithReturnValue":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":142,"org.easymock.tests2.SerializationTest.testAllMockedMethod":36,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":423,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":531,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":524,"org.easymock.samples.SupportTest.voteForRemovals":123,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":354,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":152,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":429,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":238,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":307,"org.easymock.tests.UsageExpectAndThrowTest.object":352,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":185,"org.easymock.tests2.DelegateToTest.testWrongClass":161,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":512,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":129,"org.easymock.tests.UsageStrictMockTest.range":448,"org.easymock.samples.ConstructorCalledMockTest.testTax":111,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":165,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":29,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":353,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":4,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":339,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":525,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":504,"org.easymock.tests2.CaptureTest.testCaptureNone":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":335,"org.easymock.tests.UsageUnorderedTest.message":460,"org.easymock.tests.UsageVerifyTest.twoReturns":373,"org.easymock.tests.UsageVarargTest.varargByteAccepted":404,"org.easymock.tests2.ThreadingTest.testThreadSafe":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":21,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":367,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":113,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":300,"org.easymock.tests2.CaptureTest.testCapture_2617107":206,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":439,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":427,"org.easymock.tests2.UsageConstraintsTest.any":118,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":390,"org.easymock.tests2.StubTest.stub":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndThrowTest.longType":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":379,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":92,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":389,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.tests2.SerializationTest.testClass":35,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":284,"org.easymock.tests.LimitationsTest.mockNativeMethod":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":147,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":246,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":520,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":278,"org.easymock.tests2.NameTest.nameForMocksControl":227,"org.easymock.tests2.MockedExceptionTest.testMockedException":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":9,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":326,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":346,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":69,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":527,"org.easymock.tests2.CaptureTest.testCaptureLast":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":244,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":438,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":519,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":34,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":186,"org.easymock.tests.MockingTest.testTwoMocks":77,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":516,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":350,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":200,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":189,"org.easymock.samples.ExampleTest.removeNonExistingDocument":492,"org.easymock.tests.UsageStrictMockTest.differentMethods":449,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":387,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":251,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":281,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":500,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":90,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":220,"org.easymock.tests2.MockBuilderTest.testCreateMockString":74,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":11,"org.easymock.tests.UsageExpectAndThrowTest.floatType":344,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":6,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":58,"org.easymock.tests.UsageVerifyTest.twoThrows":372,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":20,"org.easymock.samples.ExampleTest.voteAgainstRemoval":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":333,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":49,"org.easymock.tests.LimitationsTest.privateConstructor":83,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":532,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":459,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":53,"org.easymock.tests2.UsageTest.defaultResetToNice":199,"org.easymock.samples.ExampleTest.voteAgainstRemovals":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":143,"org.easymock.tests.UsageVarargTest.differentLength":401,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":245,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests2.UsageConstraintsTest.equals":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":45,"org.easymock.tests.UsageTest.openCallCountByLastCall":325,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":484,"org.easymock.tests.UsageCallCountTest.tooFewCalls":365,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":341,"org.easymock.tests.UsageThrowableTest.throwCheckedException":456,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":526,"org.easymock.tests.MockingTest.testStrictClassMocking":75,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":33,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":337,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":250,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":392,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":234,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":242,"org.easymock.tests.ObjectMethodsTest.testHashCode":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":528,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":518,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":222,"org.easymock.tests2.NameTest.nameForNiceMock":226,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":513,"org.easymock.tests2.DependencyTest.testInterfaceMocking":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":535,"org.easymock.samples.ExampleTest.addDocument":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":22,"org.easymock.tests2.DelegateToTest.testStubDelegate":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":27,"org.easymock.tests2.AnswerTest.stubAnswer":241,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":446,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":271,"org.easymock.tests.UsageVarargTest.varargLongAccepted":403,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":146,"org.easymock.tests.UsageExpectAndReturnTest.floatType":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":56,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":112,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":471,"org.easymock.tests.UsageThrowableTest.noUpperLimit":453,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":167,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":0,"org.easymock.tests2.SerializationTest.test":151,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":209,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":117,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":89,"org.easymock.tests2.UsageConstraintsTest.testSame":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":137,"org.easymock.samples.SupportTest.addDocument":489,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":233,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":503,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":12,"org.easymock.tests.GenericTest.testPackageScope":97,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":287,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":316,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":501,"org.easymock.tests2.NameTest.nameForMock":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":479,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":73,"org.easymock.tests2.UsageStrictMockTest.differentMethods":277,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":140,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":356,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":376,"org.easymock.tests2.MockedExceptionTest.testRealException":243,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":530,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":420,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":274,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":483,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":394,"org.easymock.tests2.NameTest.nameForStrictMock":225,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":498,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":3,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":184,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":61,"org.easymock.tests2.UsageStrictMockTest.range":276,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":507,"org.easymock.tests2.UsageConstraintsTest.lessThan":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":16,"org.easymock.tests2.CaptureTest.testCaptureRightOne":214,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":536,"org.easymock.tests2.UsageConstraintsTest.testOr":174,"org.easymock.tests.UsageRangeTest.combination":122,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.UsageTest.wrongArguments":324,"org.easymock.tests2.MockBuilderTest.testWithConstructor":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":13,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":408,"org.easymock.tests.UsageVarargTest.varargShortAccepted":402,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":93,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":368,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":521,"org.easymock.tests2.UsageConstraintsTest.cmpTo":177,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":239,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":410,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":198,"org.easymock.tests2.CaptureTest.testCaptureFromStub":215,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":384,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":62,"org.easymock.tests.UsageTest.unexpectedCallWithArray":323,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":517,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":445,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":366,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":481,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":447,"org.easymock.tests2.UsageConstraintsTest.constraints":168,"org.easymock.samples.ExampleTest.addAndChangeDocument":127,"org.easymock.tests.UsageStrictMockTest.testVerify":451,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":488,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":444,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":309,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":210,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":493,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":475,"org.easymock.tests.LimitationsTest.abstractClass":82,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":314,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":262}}]
