[{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[53,54,55],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,53,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,39,102,103,104,105,106,107,108,40,109,41,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[124,125,126,127,128,129,130,131,132,133,134,135],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[136,137,138,139,140,141,142,143,144,145,146,147,148,114,115,116,149],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[150],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[86,86,87,87,151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[152,153,154,155,156,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[158,137,142,159,8,16,160,161,162,163,164,165,166,167,168,169,147,170,171,172,173,106,174,175,176,177,51,2,178,179,180,181,182,183,3,184,185,186,187,188,189,52,190,191,192,150,193,194,195,196,197,198,199,200,201,202,203,152,153,154,204,155,205,206,207,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[162,208,209,210,211,212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[213,34,103,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[214,215],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:280","sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n            org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        } \n    } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterfaces":"actualTypeArguments","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[187],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"expected"}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[216,217,218,219,220,221,222,223,224,225],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[226,142,159,8,9,227,11,228,229,12,13,14,16,160,17,18,19,230,25,26,169,171,231,148,232,233,234,235,31,236,32,237,238,35,36,38,42,174,48,49,50,179,184,52,196,239,151,240,200,201,203,152,153,154,204,157],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[241,242,243,244,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"delegateTo","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[246],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"result","callCount":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[247,248,249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[53,54,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[165,250,251,252,253,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.UsageTest.argumentsOrdered":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":141,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":34,"org.easymock.tests2.StubTest.stubWithReturnValue":148,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":195,"org.easymock.tests2.SerializationTest.testAllMockedMethod":117,"org.easymock.tests2.DelegateToTest.testReturnException":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":139,"org.easymock.tests.MockingTest.testPartialClassMocking":60,"org.easymock.samples.SupportTest.voteForRemovals":254,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":68,"org.easymock.tests.MockClassControlTest.testToString":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":111,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":214,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":150,"org.easymock.tests2.DelegateToTest.testWrongClass":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":161,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":162,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":183,"org.easymock.tests2.UsageTest.wrongArguments":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":168,"org.easymock.samples.ConstructorCalledMockTest.testTax":86,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":118,"org.easymock.tests2.UsageConstraintsTest.testNull":179,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":85,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":46,"org.easymock.tests2.CaptureTest.testPrimitive":202,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":171,"org.easymock.tests.UsageTest.moreThanOneArgument":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":91,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.CaptureTest.testCaptureNone":204,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":20,"org.easymock.tests.UsageVerifyTest.twoReturns":26,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":98,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":89,"org.easymock.tests2.CaptureTest.testCapture_2617107":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":163,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":170,"org.easymock.tests2.UsageConstraintsTest.any":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":140,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":213,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.SerializationTest.testClass":225,"org.easymock.tests.LimitationsTest.mockNativeMethod":66,"org.easymock.tests2.AnswerTest.answer":239,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":3,"org.easymock.tests2.CaptureTest.testAnd":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":108,"org.easymock.tests2.NameTest.nameForMocksControl":235,"org.easymock.tests2.MockedExceptionTest.testMockedException":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":93,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.DelegateToTest.testDelegate":245,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":62,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests.MockingTest.testNicePartialClassMocking":61,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests.LimitationsTest.mockFinalMethod":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":217,"org.easymock.tests2.CaptureTest.testCaptureLast":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":123,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":182,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":193,"org.easymock.tests.MockingTest.testTwoMocks":59,"org.easymock.tests2.CaptureTest.testCapture1_2446744":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":208,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":197,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":127,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":131,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":74,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":21,"org.easymock.tests2.MockBuilderTest.testCreateMockString":30,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":135,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":94,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":52,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.samples.PartialClassMockTest.testGetArea":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":164,"org.easymock.samples.ExampleTest.voteAgainstRemoval":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":246,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":109,"org.easymock.tests2.UsageTest.niceToStrict":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":96,"org.easymock.tests.LimitationsTest.privateConstructor":65,"org.easymock.tests2.UsageConstraintsTest.testNotNull":196,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":114,"org.easymock.tests2.MockBuilderTest.testCreateMock":28,"org.easymock.samples.ExampleTest.voteAgainstRemovals":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":211,"org.easymock.tests.UsageVarargTest.differentLength":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":124,"org.easymock.tests2.CallbackTest.callback":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":128,"org.easymock.tests.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":44,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":100,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":188,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":121,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":54,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":187,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":155,"org.easymock.tests2.EasyMockSupportClassTest.testAll":92,"org.easymock.tests.MockClassControlTest.testEquals":84,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":70,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":249,"org.easymock.tests.MockingTest.testStrictClassMocking":57,"org.easymock.tests2.CaptureTest.testCaptureAll":200,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":137,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":120,"org.easymock.tests2.UsageConstraintsTest.testMatches":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":212,"org.easymock.samples.ExampleTest.voteForRemovals":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":221,"org.easymock.tests2.NameTest.nameForNiceMock":234,"org.easymock.tests.UsageVarargTest.allKinds":159,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":220,"org.easymock.samples.BasicClassMockTest.testPrintContent":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":99,"org.easymock.tests2.DelegateToTest.testStubDelegate":240,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":47,"org.easymock.tests2.AnswerTest.stubAnswer":151,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":143,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":223,"org.easymock.tests2.UsageConstraintsTest.greaterThan":190,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":41,"org.easymock.samples.ExampleTest.voteForRemoval":251,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":77,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":105,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":87,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":191,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":56,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":177,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":112,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":152,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":136,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":73,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":209,"org.easymock.tests2.UsageConstraintsTest.testSame":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":138,"org.easymock.tests2.CaptureTest.testCaptureFirst":157,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":95,"org.easymock.tests.GenericTest.testPackageScope":69,"org.easymock.tests2.UsageTest.moreThanOneArgument":236,"org.easymock.tests2.CaptureTest.testCapture2_2446744":207,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":134,"org.easymock.tests.GenericTest.testBridgedEquals":71,"org.easymock.tests2.NameTest.nameForMock":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":5,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":1,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":194,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":145,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":107,"org.easymock.tests.UsageCallCountTest.tooManyCalls":6,"org.easymock.tests2.MockedExceptionTest.testRealException":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":210,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":169,"org.easymock.tests.MockingTest.testNiceClassMocking":63,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":119,"org.easymock.tests.MockingTest.testClassMocking":58,"org.easymock.tests2.NameTest.nameForStrictMock":233,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":0,"org.easymock.tests2.UsageConstraintsTest.testContains":186,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":116,"org.easymock.tests2.UsageConstraintsTest.testFind":178,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":231,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":15,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":173,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":113,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":192,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":106,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":27,"org.easymock.tests2.UsageStrictMockTest.range":49,"org.easymock.tests2.UsageConstraintsTest.lessThan":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":132,"org.easymock.tests.UsageTest.exactCallCountByLastCall":14,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":158,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":43,"org.easymock.tests2.CaptureTest.testCaptureRightOne":205,"org.easymock.tests2.UsageConstraintsTest.testOr":181,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":224,"org.easymock.tests.UsageRangeTest.combination":24,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":39,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":241,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests.MockClassControlTest.testHashCode":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":130,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":79,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":247,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":76,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":22,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":4,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":175,"org.easymock.tests2.UsageConstraintsTest.cmpTo":185,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":215,"org.easymock.tests2.UsageTest.openCallCountByLastCall":237,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":238,"org.easymock.tests.DefaultClassInstantiatorTest.object":72,"org.easymock.tests2.CaptureTest.testCaptureFromStub":206,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":97,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests2.CaptureTest.testCapture":156,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":82,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":17,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":144,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":248,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":81,"org.easymock.tests2.UsageTest.resumeIfFailure":37,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":165,"org.easymock.tests.LimitationsTest.abstractClass":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":45}}]
