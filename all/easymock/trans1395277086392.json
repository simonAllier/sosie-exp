[{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[41],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[57,58],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[59,60,61,62,63,64,65,66,67,68,69,70,0,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,42,93,94,95,96,97,43,44,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,1,123,124,125,126,2,3,4,5,127,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,128,129,130,131,132,133,134,135,31,136,137,32,138,139,140,141,33,142,143,34,144,145,36,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,41,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,57,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,45,237,238,239,240,241,242,243,244,245,246,247,248,249,250,39,40,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,46,47,303,304,48,49,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,50,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,51,52,447,448,449,450,451,452,453,454,58,455,456,53,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,55,472,473,56,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Or:39","sourceCode":"if (org.easymock.IArgumentMatcher.matches(java.lang.Object)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[182,186],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[148,149,150,151,152,153,154,155,156,157,158,159,160,161,492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[185],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[493,494,46,495,496,55],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[200],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[390,487,490,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[325,329],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,71,72,498],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[493,494,46,47,303,304,48,49,305,495,496,466,55,472],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[0,4,5,33,34,499,500,501,502,503,504,505,506,507],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[64,0,71,72,77,78,79,80,81,82,85,86,87,89,90,91,92,42,93,94,95,96,97,43,44,98,99,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,1,123,125,126,2,4,9,12,22,28,129,130,131,132,133,134,136,139,141,142,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,170,174,175,176,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,57,215,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,45,237,238,239,240,241,242,243,244,245,246,247,249,250,39,39,40,40,251,252,253,254,255,256,257,258,259,260,261,266,267,268,269,270,271,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,47,303,304,48,49,305,306,307,308,309,311,312,313,314,316,317,318,319,320,321,322,50,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,398,404,407,415,416,417,418,419,420,421,422,423,425,426,427,428,429,430,431,432,434,435,436,446,51,52,447,448,449,450,451,452,453,454,58,455,456,457,458,459,466,467,468,469,470,471,55,472,473,56,474,475,476,479,480,481,483,487,488,489,490,491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[12,136,145,174,178],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[325,329],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[0,72,121,122,1,123,126,2,4,9,12,22,28,135,136,137,139,140,141,142,144,145,146,508,162,163,165,166,167,168,170,173,174,175,176,209,39,39,40,40,251,252,253,300,347,434,435,436,479,480,481,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[64,0,71,77,82,85,86,90,91,93,97,99,107,108,109,110,111,112,113,114,115,116,117,118,121,122,1,123,125,126,2,4,9,12,22,28,136,139,141,142,145,148,149,150,151,152,155,156,157,158,161,162,163,164,165,166,167,170,174,175,176,182,183,184,185,187,188,190,191,193,194,196,197,199,200,201,202,203,204,209,215,223,225,227,231,232,235,45,237,240,242,243,244,245,247,251,257,258,259,260,267,268,271,282,283,285,290,295,305,318,319,320,321,322,50,347,351,352,354,359,364,369,370,372,374,375,376,377,378,379,380,381,419,434,51,52,452,453,454,58,455,456,466,472,56,474,480,481,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[199,200],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[497,206],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[62,213],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[35,36,509,171,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[493,494,46,495,496,55],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":182,"org.easymock.tests2.UsageTest.argumentsOrdered":44,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":301,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":392,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":94,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":241,"org.easymock.tests2.DelegateToTest.testReturnException":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":416,"org.easymock.tests.MockingTest.testPartialClassMocking":480,"org.easymock.tests.MockClassControlTest.testToString":440,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":128,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":16,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":349,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":502,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":188,"org.easymock.tests2.UsageTest.wrongArguments":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":267,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":264,"org.easymock.samples.ExampleTest.answerVsDelegate":243,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":277,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":485,"org.easymock.tests2.UsageConstraintsTest.testNull":184,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":165,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":445,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":116,"org.easymock.tests2.CaptureTest.testPrimitive":151,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":271,"org.easymock.tests.UsageTest.moreThanOneArgument":302,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":368,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":449,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":487,"org.easymock.tests.UsageTest.argumentsOrdered":49,"org.easymock.tests.UsageVarargTest.varargIntAccepted":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":506,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":135,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":220,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":322,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests.ReplayStateInvalidUsageTest.times":341,"org.easymock.tests2.DependencyTest.testClassMocking":83,"org.easymock.tests2.AnswerTest.answer":77,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":399,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":76,"org.easymock.tests2.CaptureTest.testAnd":148,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":274,"org.easymock.tests2.UsageTest.strictResetToDefault":91,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":448,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":111,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":491,"org.easymock.tests2.DelegateToTest.testDelegate":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":364,"org.easymock.tests.LimitationsTest.mockFinalMethod":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":465,"org.easymock.tests2.DependencyTest.testClassMockingSupport":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":369,"org.easymock.tests2.CaptureTest.testCapture1_2446744":152,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":362,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":74,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":335,"org.easymock.tests.UsageThrowableTest.throwError":372,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":276,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":460,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":451,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":509,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":30,"org.easymock.samples.PartialClassMockTest.testGetArea":251,"org.easymock.tests.MockingTest.testInterfaceMocking":482,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":255,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":17,"org.easymock.tests2.UsageTest.niceToStrict":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":139,"org.easymock.tests2.MockBuilderTest.testCreateMock":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":25,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":67,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":358,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":273,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":459,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":262,"org.easymock.tests.UsageOverloadedMethodTest.overloading":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":21,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":194,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":291,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":193,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":157,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":424,"org.easymock.tests.MockClassControlTest.testEquals":444,"org.easymock.tests2.EasyMockSupportClassTest.testAll":9,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":435,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":366,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":508,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":463,"org.easymock.tests2.CaptureTest.testCaptureAll":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":75,"org.easymock.tests.MockNameTest.defaultName":332,"org.easymock.tests2.UsageConstraintsTest.testMatches":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":450,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":333,"org.easymock.samples.ExampleTest.voteForRemovals":247,"org.easymock.tests.UsageVarargTest.allKinds":432,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":446,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":464,"org.easymock.samples.BasicClassMockTest.testPrintContent":253,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":378,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":420,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":217,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":226,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":507,"org.easymock.tests2.UsageConstraintsTest.greaterThan":197,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":10,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":467,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":176,"org.easymock.samples.ExampleTest.voteForRemoval":244,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":331,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":177,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":278,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":168,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":90,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":300,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":109,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":415,"org.easymock.tests2.CaptureTest.testCaptureFirst":161,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":110,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":99,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":53,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":287,"org.easymock.tests2.CaptureTest.testCapture2_2446744":160,"org.easymock.tests2.UsageTest.moreThanOneArgument":92,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":400,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":145,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":431,"org.easymock.tests.GenericTest.testBridgedEquals":437,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":316,"org.easymock.tests.UsageExpectAndReturnTest.longType":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":461,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":367,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":202,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":266,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":447,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":307,"org.easymock.tests.UsageCallCountTest.tooManyCalls":317,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":69,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":377,"org.easymock.tests.MockingTest.testNiceClassMocking":486,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":122,"org.easymock.tests.MockingTest.testClassMocking":478,"org.easymock.tests2.UsageConstraintsTest.testContains":192,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":310,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":209,"org.easymock.tests2.UsageConstraintsTest.testFind":183,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":261,"org.easymock.tests.MockTypeTest.fromEasyMockClass":275,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":470,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":89,"org.easymock.tests.UsageExpectAndReturnTest.object":290,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":503,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":426,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":412,"org.easymock.tests.UsageTest.exactCallCountByLastCall":305,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":488,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":406,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":421,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":454,"org.easymock.tests.MockClassControlTest.testHashCode":443,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":211,"org.easymock.tests2.EasyMockSupportTest.testVerify":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":19,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":489,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":458,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":452,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":73,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":147,"org.easymock.tests.UsageVarargTest.varargCharAccepted":425,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":323,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastCall":95,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":118,"org.easymock.tests.DefaultClassInstantiatorTest.object":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":457,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":410,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":62,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":210,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":442,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":355,"org.easymock.tests.CapturesMatcherTest.test":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":306,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":28,"org.easymock.tests2.UsageTest.resumeIfFailure":98,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":272,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":418,"org.easymock.tests2.StubTest.stubWithReturnValue":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":33,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":203,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":289,"org.easymock.tests2.SerializationTest.testAllMockedMethod":72,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":398,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":500,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":494,"org.easymock.samples.SupportTest.voteForRemovals":240,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":433,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":361,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":498,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":404,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":78,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":408,"org.easymock.tests.UsageExpectAndThrowTest.object":359,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":200,"org.easymock.tests2.DelegateToTest.testWrongClass":225,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":380,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":381,"org.easymock.samples.ConstructorCalledMockTest.testTax":39,"org.easymock.tests.UsageStrictMockTest.range":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":105,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":360,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":6,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":263,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":495,"org.easymock.tests2.CaptureTest.testCaptureNone":156,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":256,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests.UsageVerifyTest.twoReturns":52,"org.easymock.tests.UsageVarargTest.varargByteAccepted":430,"org.easymock.tests2.ThreadingTest.testThreadSafe":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":23,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":314,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":413,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":252,"org.easymock.tests2.CaptureTest.testCapture_2617107":150,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":270,"org.easymock.tests2.UsageConstraintsTest.any":190,"org.easymock.tests2.StubTest.stub":133,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndThrowTest.longType":352,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":328,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":339,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":236,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests.LimitationsTest.mockNativeMethod":347,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":436,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":61,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":238,"org.easymock.tests2.NameTest.nameForMocksControl":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":63,"org.easymock.tests2.MockedExceptionTest.testMockedException":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":11,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":304,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":483,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":88,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":353,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":142,"org.easymock.tests.MockingTest.testNicePartialClassMocking":481,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":501,"org.easymock.tests2.CaptureTest.testCaptureLast":155,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":370,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":187,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":2,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":201,"org.easymock.tests.MockingTest.testTwoMocks":479,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":357,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":205,"org.easymock.samples.ExampleTest.removeNonExistingDocument":248,"org.easymock.tests.UsageStrictMockTest.differentMethods":474,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":66,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":212,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":326,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":230,"org.easymock.tests2.MockBuilderTest.testCreateMockString":146,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":13,"org.easymock.tests.UsageExpectAndThrowTest.floatType":351,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":8,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":127,"org.easymock.tests.UsageVerifyTest.twoThrows":51,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":22,"org.easymock.samples.ExampleTest.voteAgainstRemoval":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":254,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":175,"org.easymock.tests.LimitationsTest.privateConstructor":346,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":38,"org.easymock.tests2.UsageConstraintsTest.testNotNull":204,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":207,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":379,"org.easymock.tests2.UsageTest.defaultResetToNice":97,"org.easymock.samples.ExampleTest.voteAgainstRemovals":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":295,"org.easymock.tests.UsageVarargTest.differentLength":427,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":60,"org.easymock.tests2.CallbackTest.callback":120,"org.easymock.tests2.UsageConstraintsTest.equals":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":171,"org.easymock.tests.UsageTest.openCallCountByLastCall":303,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":269,"org.easymock.tests.UsageCallCountTest.tooFewCalls":312,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":265,"org.easymock.tests.UsageThrowableTest.throwCheckedException":376,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":477,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":126,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":258,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":65,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":125,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":82,"org.easymock.tests.ObjectMethodsTest.testHashCode":411,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":505,"org.easymock.tests2.NameTest.nameForNiceMock":131,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":232,"org.easymock.tests2.DependencyTest.testInterfaceMocking":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":504,"org.easymock.samples.ExampleTest.addDocument":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":29,"org.easymock.tests2.DelegateToTest.testStubDelegate":224,"org.easymock.tests2.AnswerTest.stubAnswer":81,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":472,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":143,"org.easymock.tests.UsageVarargTest.varargLongAccepted":429,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.floatType":282,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":40,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":455,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":198,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":219,"org.easymock.tests.UsageThrowableTest.noUpperLimit":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":180,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":100,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":153,"org.easymock.tests2.SerializationTest.test":71,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":325,"org.easymock.tests2.UsageConstraintsTest.testSame":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":281,"org.easymock.samples.SupportTest.addDocument":239,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":124,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":14,"org.easymock.tests.GenericTest.testPackageScope":434,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":218,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":484,"org.easymock.tests2.NameTest.nameForMock":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":36,"org.easymock.tests2.UsageStrictMockTest.differentMethods":237,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":284,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":363,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":409,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":469,"org.easymock.tests2.MockedExceptionTest.testRealException":57,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":395,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":268,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":344,"org.easymock.tests2.NameTest.nameForStrictMock":130,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":138,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":104,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":199,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":327,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":136,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":206,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":108,"org.easymock.tests2.CaptureTest.testCaptureRightOne":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":18,"org.easymock.tests2.UsageConstraintsTest.testOr":186,"org.easymock.tests.UsageRangeTest.combination":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":163,"org.easymock.tests.UsageTest.wrongArguments":47,"org.easymock.tests2.MockBuilderTest.testWithConstructor":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":15,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":439,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargShortAccepted":428,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":329,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":315,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":79,"org.easymock.tests2.CompareToTest.testLessThan":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":96,"org.easymock.tests2.CaptureTest.testCaptureFromStub":159,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":334,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":137,"org.easymock.tests.UsageTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":313,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":294,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":473,"org.easymock.tests2.UsageConstraintsTest.constraints":181,"org.easymock.samples.ExampleTest.addAndChangeDocument":249,"org.easymock.tests.UsageStrictMockTest.testVerify":476,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":250,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":471,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":462,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":286,"org.easymock.tests.LimitationsTest.abstractClass":345,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":321,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113}}]
