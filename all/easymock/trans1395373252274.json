[{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"position":"org.easymock.internal.LastControl:95","failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,1,2,300,301,3,302,4,5,303,6,304,305,306,307,308,309,310,311,312,7,313,314,315,316,8,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,9,349,10,350,351,352,353,354,355,356,11,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[28,63,84,90,130,136,142,146,148,198,204,210,214,216,265,269,298,308,311,318,332,333,334,349,354,355,359,372,396,416,418,447],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[12,13,14,16,16,17,17,40,41,42,46,76,122,123,124,126,171,296,364,366,377,379,383,384,385,387,390,391,393,407,419,420,422,423,424,425,427,430,431,432,433,436,437,438,439,442,443,463,466,476,482],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,34,35,36,37,38,40,41,46,486,486,48,49,50,51,52,53,56,57,58,59,60,61,62,63,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,95,96,97,98,99,103,104,105,106,107,108,109,110,123,124,126,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,178,180,181,182,183,184,185,186,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,223,224,227,231,232,233,234,235,236,237,238,239,240,241,242,277,278,279,280,281,282,283,284,285,286,287,288,289,294,295,296,297,298,299,1,2,301,3,302,4,5,303,304,305,306,307,308,309,310,311,312,7,313,314,315,316,8,317,318,325,332,333,334,335,336,342,9,349,10,350,351,352,353,354,355,356,11,357,358,359,362,363,364,365,366,368,369,370,372,373,374,375,376,377,379,383,384,385,387,390,391,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,410,413,414,415,416,418,419,420,421,422,423,424,425,427,430,431,432,433,436,437,438,439,441,442,443,445,446,447,453,454,455,456,457,458,459,463,466,476,482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:60","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"message"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[52,53,63,64,98,99,100,150,151,152,153,154,155,169,170,182,183,184,185,186,219,220,237,238,298,299,1,2,301,3,302,4,5,303,6,304,305,306,307,308,309,310,311,312,7,313,314,315,316,8,317,318,319,325,335,342,9,349,10,350,351,352,353,354,355,356,11,357,358,359,364,416,418,427,430,455,456],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[253,257,258,267,272],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[39,40],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[16,16,17,17,77,78,79,80,81,98,150,151,152,153,154,182,183,186,218,219,220,238,253,257,258,267,272,298,299,301,3,302,4,306,308,309,311,312,8,317,318,357,455],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[323,340],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[1,2,301,3,302,4,5,303,6,304,7,313,8,317,9,349,10,350,11,357],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[359],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[48,49,50,51,52,53,84,99,103,106,107,108,109,110,156,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,224,294,295,296,297,446],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[410],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[426],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[29],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[488,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[21,22,23,24,25,26,27,28,34,35,36,37,38,40,41,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,95,96,97,98,99,103,104,105,106,107,108,109,110,112,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,226,227,231,232,233,234,235,236,237,238,239,240,241,242,243,248,249,250,490,491,492,291,293,294,295,296,297,298,299,1,2,301,3,302,4,5,303,304,305,306,307,308,309,310,311,312,7,313,314,315,316,8,317,318,319,325,332,333,334,335,336,9,349,10,350,351,352,353,354,355,356,11,357,358,359,362,364,365,366,368,369,370,372,373,374,375,376,377,379,380,382,383,384,390,391,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,410,413,414,415,416,418,419,420,421,422,423,424,425,427,429,430,431,432,433,434,437,438,442,443,445,446,447,449,450,451,452,453,454,455,456,457,458,459],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[493,364,365],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[486],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[12,46,123,124,126,151,335,369,379,383,385,387,391,407,419,421,422,424,436,437,438,439,441,442,443,463,466,476,482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[430],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests2.UsageTest.argumentsOrdered":404,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":89,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":287,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":263,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":399,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":15,"org.easymock.tests2.DelegateToTest.testReturnException":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":49,"org.easymock.tests.MockingTest.testPartialClassMocking":123,"org.easymock.tests.MockClassControlTest.testToString":172,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":448,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":466,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":198,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":363,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":303,"org.easymock.tests2.UsageTest.wrongArguments":397,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":182,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":233,"org.easymock.samples.ExampleTest.answerVsDelegate":22,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":195,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":128,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":422,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":177,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":286,"org.easymock.tests2.CaptureTest.testPrimitive":350,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":186,"org.easymock.tests.UsageTest.moreThanOneArgument":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":217,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":79,"org.easymock.tests.UsageTest.argumentsOrdered":96,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":29,"org.easymock.tests.UsageVarargTest.varargIntAccepted":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":150,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":330,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":154,"org.easymock.tests.ReplayStateInvalidUsageTest.times":72,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":342,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":487,"org.easymock.tests2.DependencyTest.testClassMocking":360,"org.easymock.tests2.AnswerTest.answer":410,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":376,"org.easymock.tests2.CaptureTest.testAnd":9,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":192,"org.easymock.tests2.UsageTest.strictResetToDefault":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":430,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":78,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":281,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":33,"org.easymock.tests2.DelegateToTest.testDelegate":372,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":213,"org.easymock.tests.LimitationsTest.mockFinalMethod":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":38,"org.easymock.tests2.DependencyTest.testClassMockingSupport":361,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":187,"org.easymock.tests2.CaptureTest.testCapture1_2446744":351,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":374,"org.easymock.tests.UsageThrowableTest.throwError":103,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":66,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":194,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":484,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.MockingTest.testInterfaceMocking":125,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":471,"org.easymock.tests2.UsageTest.niceToStrict":398,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":199,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":253,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":383,"org.easymock.tests2.MockBuilderTest.testCreateMock":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":479,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":345,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":207,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":282,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":102,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":231,"org.easymock.tests.UsageOverloadedMethodTest.overloading":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":224,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":141,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":82,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":307,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":356,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":161,"org.easymock.tests2.EasyMockSupportClassTest.testAll":463,"org.easymock.tests.MockClassControlTest.testEquals":176,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":36,"org.easymock.tests2.CaptureTest.testCaptureAll":349,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":375,"org.easymock.tests.MockNameTest.defaultName":88,"org.easymock.tests2.UsageConstraintsTest.testMatches":309,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":80,"org.easymock.samples.ExampleTest.voteForRemovals":26,"org.easymock.tests.UsageVarargTest.allKinds":169,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":37,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":109,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":53,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":327,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":371,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":118,"org.easymock.tests2.UsageConstraintsTest.greaterThan":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":179,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":433,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":119,"org.easymock.samples.ExampleTest.voteForRemoval":23,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":434,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":333,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":196,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":492,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":425,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":394,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":76,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":279,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":48,"org.easymock.tests2.CaptureTest.testCaptureFirst":359,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":280,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":406,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":137,"org.easymock.tests2.UsageTest.moreThanOneArgument":396,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":335,"org.easymock.tests2.CaptureTest.testCapture2_2446744":358,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":271,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":168,"org.easymock.tests.GenericTest.testBridgedEquals":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":61,"org.easymock.tests.UsageExpectAndReturnTest.longType":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":34,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":277,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":489,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":216,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":218,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":315,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":77,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":229,"org.easymock.tests.UsageCallCountTest.tooManyCalls":62,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":108,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":437,"org.easymock.tests.MockingTest.testNiceClassMocking":129,"org.easymock.tests.MockingTest.testClassMocking":121,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":488,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":55,"org.easymock.tests2.UsageConstraintsTest.testContains":306,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":296,"org.easymock.tests2.UsageConstraintsTest.testFind":301,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":84,"org.easymock.tests.MockTypeTest.fromEasyMockClass":193,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":418,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":235,"org.easymock.tests.UsageExpectAndReturnTest.object":140,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":285,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":163,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":250,"org.easymock.tests.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":258,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":30,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":408,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":146,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":223,"org.easymock.tests.MockClassControlTest.testHashCode":175,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":321,"org.easymock.tests2.EasyMockSupportTest.testVerify":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":473,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":31,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":101,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":373,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":319,"org.easymock.tests.UsageVarargTest.varargCharAccepted":162,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":111,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":276,"org.easymock.tests2.UsageTest.openCallCountByLastCall":400,"org.easymock.tests.DefaultClassInstantiatorTest.object":112,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":100,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":474,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":320,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":431,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":204,"org.easymock.tests.CapturesMatcherTest.test":486,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":482,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":173,"org.easymock.tests2.UsageTest.resumeIfFailure":405,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":190,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":51,"org.easymock.tests2.StubTest.stubWithReturnValue":446,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":386,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":139,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":316,"org.easymock.tests2.SerializationTest.testAllMockedMethod":366,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":269,"org.easymock.samples.SupportTest.voteForRemovals":20,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":210,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":275,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":411,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":87,"org.easymock.tests.UsageExpectAndThrowTest.object":208,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":313,"org.easymock.tests2.DelegateToTest.testWrongClass":370,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":219,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":220,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests.UsageStrictMockTest.range":240,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":292,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":284,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":436,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":209,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":460,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":74,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":232,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":246,"org.easymock.tests2.CaptureTest.testCaptureNone":355,"org.easymock.tests.UsageUnorderedTest.message":63,"org.easymock.tests.UsageVerifyTest.twoReturns":157,"org.easymock.tests.UsageVarargTest.varargByteAccepted":167,"org.easymock.tests2.ThreadingTest.testThreadSafe":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":477,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":59,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":251,"org.easymock.tests2.CaptureTest.testCapture_2617107":10,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":273,"org.easymock.tests2.UsageConstraintsTest.any":304,"org.easymock.tests2.StubTest.stub":445,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":71,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":50,"org.easymock.tests.UsageExpectAndThrowTest.longType":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":274,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":116,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":70,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":456,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":325,"org.easymock.tests2.SerializationTest.testClass":364,"org.easymock.tests.LimitationsTest.mockNativeMethod":46,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":149,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":339,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":459,"org.easymock.tests2.NameTest.nameForMocksControl":452,"org.easymock.tests2.MockedExceptionTest.testMockedException":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":465,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":417,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":202,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":419,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":387,"org.easymock.tests.MockingTest.testNicePartialClassMocking":124,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":424,"org.easymock.tests2.CompareToTest.testCompareEqual":0,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":337,"org.easymock.tests2.CaptureTest.testCaptureLast":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":443,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":314,"org.easymock.tests.MockingTest.testTwoMocks":122,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":206,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":403,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":317,"org.easymock.samples.ExampleTest.removeNonExistingDocument":27,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":68,"org.easymock.tests.UsageStrictMockTest.differentMethods":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":322,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":114,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":334,"org.easymock.tests2.MockBuilderTest.testCreateMockString":393,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":467,"org.easymock.tests.UsageExpectAndThrowTest.floatType":200,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":413,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":409,"org.easymock.tests.UsageVerifyTest.twoThrows":156,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":476,"org.easymock.samples.ExampleTest.voteAgainstRemoval":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":264,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":432,"org.easymock.tests.LimitationsTest.privateConstructor":45,"org.easymock.tests2.UsageConstraintsTest.testNotNull":8,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":110,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":294,"org.easymock.tests2.UsageTest.defaultResetToNice":402,"org.easymock.samples.ExampleTest.voteAgainstRemovals":21,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":265,"org.easymock.tests.UsageVarargTest.differentLength":164,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":338,"org.easymock.tests2.CallbackTest.callback":447,"org.easymock.tests2.UsageConstraintsTest.equals":300,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":428,"org.easymock.tests.UsageTest.openCallCountByLastCall":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":184,"org.easymock.tests.UsageCallCountTest.tooFewCalls":57,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":439,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":234,"org.easymock.tests.UsageThrowableTest.throwCheckedException":107,"org.easymock.tests.MockingTest.testStrictClassMocking":120,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":442,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":99,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":438,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":343,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":73,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":441,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":415,"org.easymock.tests.ObjectMethodsTest.testHashCode":249,"org.easymock.tests2.NameTest.nameForNiceMock":451,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":336,"org.easymock.tests2.DependencyTest.testInterfaceMocking":362,"org.easymock.samples.ExampleTest.addDocument":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":483,"org.easymock.tests2.DelegateToTest.testStubDelegate":369,"org.easymock.tests2.AnswerTest.stubAnswer":414,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":238,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":388,"org.easymock.tests.UsageVarargTest.varargLongAccepted":166,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":148,"org.easymock.tests.UsageExpectAndReturnTest.floatType":132,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":407,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.UsageThrowableTest.noUpperLimit":104,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":312,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":329,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":299,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":290,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":352,"org.easymock.tests2.SerializationTest.test":365,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":131,"org.easymock.tests2.UsageConstraintsTest.testSame":302,"org.easymock.samples.SupportTest.addDocument":19,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":440,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":468,"org.easymock.tests.GenericTest.testPackageScope":40,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":328,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":127,"org.easymock.tests2.NameTest.nameForMock":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":142,"org.easymock.tests2.UsageStrictMockTest.differentMethods":458,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":392,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":429,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":134,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":212,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":181,"org.easymock.tests2.MockedExceptionTest.testRealException":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":293,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":183,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":75,"org.easymock.tests2.NameTest.nameForStrictMock":450,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":382,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":416,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":291,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":115,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":379,"org.easymock.tests2.UsageStrictMockTest.range":457,"org.easymock.tests2.UsageConstraintsTest.lessThan":318,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":324,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":261,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":472,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.UsageConstraintsTest.testOr":4,"org.easymock.tests.UsageRangeTest.combination":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":420,"org.easymock.tests.UsageTest.wrongArguments":92,"org.easymock.tests2.MockBuilderTest.testWithConstructor":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":469,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":254,"org.easymock.tests.UsageVarargTest.varargShortAccepted":165,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":117,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":60,"org.easymock.tests2.UsageConstraintsTest.cmpTo":305,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":256,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":401,"org.easymock.tests2.CaptureTest.testCaptureFromStub":357,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":65,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":380,"org.easymock.tests.UsageTest.unexpectedCallWithArray":91,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":237,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":58,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":144,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":239,"org.easymock.samples.ExampleTest.addAndChangeDocument":28,"org.easymock.tests.UsageStrictMockTest.testVerify":243,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":18,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":35,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":152,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":136,"org.easymock.tests.LimitationsTest.abstractClass":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":153,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":283}}]
