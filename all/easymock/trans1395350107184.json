[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[18,19,20,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,59,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,22,24,125,126,127,128,129,130],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,27,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,30,31,32,33,37,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,40,41,42,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,44,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,52,296,53,54,55,56,57,58,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,0,313,314,59,59,60,60,1,61,62,63,64,65,68,69,70,71,73,74,75,315,316,317,318,319,320,321,322,323,81,84,94,100,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,103,104,347,105,106,107,108,109,112,113,114,115,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,18,375,376,377,378,19,379,380,381,382,383,384,385,386,387,20,388,389,390,391,21,392,393,120,394,395,396,397,398,399,400,122,123,124,401,402,22,23,24,125,126,127,128,403,129,130,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[424,370,386,391],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[131,132,133,135,136,137,138,140,141,27,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,30,31,32,33,37,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,40,41,42,180,181,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,236,237,238,239,240,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,52,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,0,313,314,59,59,60,60,1,61,62,63,65,68,70,71,74,315,316,317,318,319,320,81,84,94,100,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,103,104,347,105,106,107,108,109,112,113,114,115,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,18,375,376,377,378,19,379,380,381,382,383,384,385,386,387,20,388,389,390,391,21,392,393,120,394,395,396,397,398,399,400,122,123,124,401,402,22,23,24,125,126,127,128,403,129,130,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[425,426,427],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[131,132,133,135,136,137,138,139,140,141,428,429,430,431,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,40,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,432,233,234,235,433,236,237,238,239,240,434,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,52,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,0,313,314,1,435,436,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,103,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,18,375,376,377,378,19,379,380,381,382,383,384,385,386,387,20,388,389,390,391,21,392,393,120,394,6,395,396,397,398,399,400,122,123,124,401,402,14,23,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[437],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[48,438,439],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:280","sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n            org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        } \n    } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterfaces":"actualTypeArguments","typeVariableMap":"typeVariableMap","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":373,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":189,"org.easymock.tests2.UsageTest.argumentsOrdered":344,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":14,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":339,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":1,"org.easymock.tests2.DelegateToTest.testReturnException":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":164,"org.easymock.tests.MockingTest.testPartialClassMocking":31,"org.easymock.tests.MockClassControlTest.testToString":53,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":88,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":201,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":333,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":378,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":291,"org.easymock.tests2.UsageTest.wrongArguments":337,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":144,"org.easymock.samples.ExampleTest.answerVsDelegate":306,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":26,"org.easymock.tests2.UsageConstraintsTest.testNull":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":58,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":358,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":76,"org.easymock.tests2.CaptureTest.testPrimitive":413,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":295,"org.easymock.tests.UsageTest.moreThanOneArgument":190,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":220,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":299,"org.easymock.tests.UsageTest.argumentsOrdered":196,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":253,"org.easymock.tests.UsageVarargTest.varargIntAccepted":171,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":282,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":64,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":286,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":394,"org.easymock.tests.ReplayStateInvalidUsageTest.times":249,"org.easymock.tests2.AnswerTest.answer":395,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":19,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":323,"org.easymock.tests2.CaptureTest.testAnd":410,"org.easymock.tests2.UsageTest.strictResetToDefault":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":353,"org.easymock.tests2.DelegateToTest.testDelegate":409,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":216,"org.easymock.tests.LimitationsTest.mockFinalMethod":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":236,"org.easymock.tests2.CaptureTest.testCapture1_2446744":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":321,"org.easymock.tests.UsageThrowableTest.throwError":148,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":243,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":429,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":102,"org.easymock.samples.PartialClassMockTest.testGetArea":61,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":244,"org.easymock.tests2.CompareToTest.testLessOrEqual":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":187,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":202,"org.easymock.tests2.UsageTest.niceToStrict":338,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":68,"org.easymock.tests2.MockBuilderTest.testCreateMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":97,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":210,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":200,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":142,"org.easymock.tests.UsageOverloadedMethodTest.overloading":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":269,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":302,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":438,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":382,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":419,"org.easymock.tests.MockClassControlTest.testEquals":57,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":218,"org.easymock.tests2.CaptureTest.testCaptureAll":411,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":183,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":322,"org.easymock.tests.MockNameTest.defaultName":434,"org.easymock.tests2.UsageConstraintsTest.testMatches":384,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":300,"org.easymock.samples.ExampleTest.voteForRemovals":310,"org.easymock.tests.UsageVarargTest.allKinds":179,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":287,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":184,"org.easymock.samples.BasicClassMockTest.testPrintContent":63,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":154,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":362,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":15,"org.easymock.tests2.UsageConstraintsTest.greaterThan":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":82,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":279,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":50,"org.easymock.samples.ExampleTest.voteForRemoval":307,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":116,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":316,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":430,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":108,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":27,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":334,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":351,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":163,"org.easymock.tests2.CaptureTest.testCaptureFirst":423,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":352,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":346,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":265,"org.easymock.tests2.CaptureTest.testCapture2_2446744":422,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":318,"org.easymock.tests2.UsageTest.moreThanOneArgument":336,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":178,"org.easymock.tests.GenericTest.testBridgedEquals":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":140,"org.easymock.tests.UsageExpectAndReturnTest.longType":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":181,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":219,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":390,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":217,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":141,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":206,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":153,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":126,"org.easymock.tests.MockingTest.testNiceClassMocking":34,"org.easymock.tests.MockingTest.testClassMocking":29,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":134,"org.easymock.tests2.UsageConstraintsTest.testContains":381,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":124,"org.easymock.tests2.UsageConstraintsTest.testFind":374,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":304,"org.easymock.tests.MockTypeTest.fromEasyMockClass":428,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":222,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":325,"org.easymock.tests.UsageExpectAndReturnTest.object":268,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":357,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":173,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":235,"org.easymock.tests.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":146,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":121,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":158,"org.easymock.tests.ResultTest.createThrowResultToString":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":11,"org.easymock.tests.MockClassControlTest.testHashCode":56,"org.easymock.tests2.EasyMockSupportTest.testVerify":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":91,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":156,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":320,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":369,"org.easymock.tests.UsageVarargTest.varargCharAccepted":172,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":435,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":363,"org.easymock.tests2.UsageTest.openCallCountByLastCall":340,"org.easymock.tests.DefaultClassInstantiatorTest.object":44,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":198,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":151,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":77,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":10,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":113,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":100,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":54,"org.easymock.tests2.UsageTest.resumeIfFailure":345,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":166,"org.easymock.tests2.StubTest.stubWithReturnValue":327,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":391,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":267,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":131,"org.easymock.samples.SupportTest.voteForRemovals":314,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":213,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":132,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":396,"org.easymock.tests.UsageExpectAndThrowTest.object":211,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":388,"org.easymock.tests2.DelegateToTest.testWrongClass":407,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":232,"org.easymock.samples.ConstructorCalledMockTest.testTax":59,"org.easymock.tests.UsageStrictMockTest.range":227,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":125,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":212,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":78,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":195,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":143,"org.easymock.tests2.CaptureTest.testCaptureNone":418,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":188,"org.easymock.tests.UsageUnorderedTest.message":180,"org.easymock.tests.UsageVerifyTest.twoReturns":289,"org.easymock.tests.UsageVarargTest.varargByteAccepted":177,"org.easymock.tests2.ThreadingTest.testThreadSafe":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":95,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":138,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":433,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":62,"org.easymock.tests2.CaptureTest.testCapture_2617107":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":294,"org.easymock.tests2.UsageConstraintsTest.any":379,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":248,"org.easymock.tests2.StubTest.stub":326,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":165,"org.easymock.tests.UsageExpectAndThrowTest.longType":204,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":48,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":247,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":365,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":402,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":37,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":277,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":4,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":368,"org.easymock.tests2.NameTest.nameForMocksControl":331,"org.easymock.tests2.MockedExceptionTest.testMockedException":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":83,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":194,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":205,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":71,"org.easymock.tests.MockingTest.testNicePartialClassMocking":32,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":107,"org.easymock.tests2.CaptureTest.testCaptureLast":417,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":237,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":130,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":377,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":389,"org.easymock.tests.MockingTest.testTwoMocks":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":209,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":343,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":392,"org.easymock.samples.ExampleTest.removeNonExistingDocument":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests.UsageStrictMockTest.differentMethods":228,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":12,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":46,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":317,"org.easymock.tests2.MockBuilderTest.testCreateMockString":75,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":85,"org.easymock.tests.UsageExpectAndThrowTest.floatType":203,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests.ResultTest.createReturnResultToString":426,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":398,"org.easymock.tests.UsageVerifyTest.twoThrows":288,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":94,"org.easymock.tests.ResultTest.createDelegateResultToString":425,"org.easymock.samples.ExampleTest.voteAgainstRemoval":308,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":186,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.LimitationsTest.privateConstructor":36,"org.easymock.tests2.UsageConstraintsTest.testNotNull":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":155,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":122,"org.easymock.tests2.UsageTest.defaultResetToNice":342,"org.easymock.samples.ExampleTest.voteAgainstRemovals":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":273,"org.easymock.tests.UsageVarargTest.differentLength":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":3,"org.easymock.tests2.CallbackTest.callback":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":110,"org.easymock.tests.UsageTest.openCallCountByLastCall":193,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":370,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":293,"org.easymock.tests.UsageCallCountTest.tooFewCalls":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":145,"org.easymock.tests.UsageThrowableTest.throwCheckedException":152,"org.easymock.tests.MockingTest.testStrictClassMocking":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":147,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":129,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":250,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":403,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":400,"org.easymock.tests.ObjectMethodsTest.testHashCode":234,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":319,"org.easymock.tests2.NameTest.nameForNiceMock":330,"org.easymock.tests2.DependencyTest.testInterfaceMocking":332,"org.easymock.samples.ExampleTest.addDocument":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":96,"org.easymock.tests2.DelegateToTest.testStubDelegate":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":101,"org.easymock.tests2.AnswerTest.stubAnswer":399,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":225,"org.easymock.tests.UsageVarargTest.varargLongAccepted":176,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":229,"org.easymock.tests.UsageExpectAndReturnTest.floatType":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":120,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":60,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":387,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.UsageThrowableTest.noUpperLimit":149,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":371,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":118,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":415,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":439,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":259,"org.easymock.tests2.UsageConstraintsTest.testSame":375,"org.easymock.samples.SupportTest.addDocument":313,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":86,"org.easymock.tests.GenericTest.testPackageScope":40,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":16,"org.easymock.tests2.NameTest.nameForMock":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":270,"org.easymock.tests2.UsageStrictMockTest.differentMethods":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":215,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":281,"org.easymock.tests2.MockedExceptionTest.testRealException":401,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":431,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":364,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":252,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":292,"org.easymock.tests2.NameTest.nameForStrictMock":329,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":67,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":324,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":119,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":47,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":65,"org.easymock.tests2.UsageStrictMockTest.range":366,"org.easymock.tests2.UsageConstraintsTest.lessThan":393,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":13,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":350,"org.easymock.tests2.CaptureTest.testCaptureRightOne":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":90,"org.easymock.tests2.UsageConstraintsTest.testOr":376,"org.easymock.tests.UsageRangeTest.combination":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.UsageTest.wrongArguments":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":87,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":271,"org.easymock.tests.UsageVarargTest.varargShortAccepted":175,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":49,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":139,"org.easymock.tests2.UsageConstraintsTest.cmpTo":380,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":397,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":341,"org.easymock.tests2.CaptureTest.testCaptureFromStub":421,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":242,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":66,"org.easymock.tests.UsageTest.unexpectedCallWithArray":191,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":224,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":272,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":226,"org.easymock.tests2.UsageConstraintsTest.constraints":372,"org.easymock.samples.ExampleTest.addAndChangeDocument":312,"org.easymock.tests2.ConstraintsToStringTest.notToString":437,"org.easymock.tests.UsageStrictMockTest.testVerify":230,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":0,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":182,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":284,"org.easymock.tests.LimitationsTest.abstractClass":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":264,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":285,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":170,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":355}}]
