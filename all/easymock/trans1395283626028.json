[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[67,68,69,70,71,72,73,74,75,61,76],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[77,78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[79,80,81,82,83,84,85,86,0,87,88,1,2,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,3,4,5,127,6,7,128,8,9,10,11,12,13,129,130,131,14,15,16,132,17,18,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,19,20,160,21,161,162,22,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,23,211,212,213,214,215,216,217,218,219,220,221,222,223,24,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,77,277,278,279,280,281,282,283,284,285,286,287,288,25,26,289,27,28,29,30,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,31,315,32,33,316,34,35,36,37,317,38,318,319,39,40,41,42,320,321,322,43,323,44,324,325,326,45,46,327,328,329,330,331,332,47,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,67,68,364,365,69,366,70,71,367,72,368,369,370,371,372,373,374,375,376,73,377,378,48,379,74,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,49,431,432,433,434,435,50,436,437,438,439,440,51,52,53,54,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,55,490,56,57,58,59,78,491,492,493,494,495,496,497,498,499,500,501,75,60,61,502,503,62,63,64,65,504,76,505,506,66],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[507],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[79,80,81,82,83,84,85,86,0,87,88,1,2,89,90,91,92,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,3,4,5,127,6,7,128,8,9,10,11,12,129,130,131,14,15,16,132,17,18,133,134,135,141,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,19,20,160,21,161,162,22,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,210,23,211,212,213,214,215,216,217,218,219,220,221,226,227,228,229,230,231,236,237,238,239,240,241,242,243,244,245,246,247,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,77,277,278,279,280,281,282,283,284,285,286,287,288,25,26,289,27,28,29,30,290,291,292,293,294,295,296,297,298,299,300,301,310,311,312,313,314,31,32,33,316,34,35,36,37,317,38,41,42,320,321,322,43,323,44,324,325,326,45,46,327,328,343,344,347,362,363,67,68,364,365,69,366,70,71,367,72,368,369,370,371,372,373,374,375,376,73,377,378,48,379,74,380,381,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,430,433,434,435,50,436,437,438,439,440,51,52,53,54,441,442,443,444,445,450,451,477,478,479,480,481,482,483,484,485,486,487,488,489,55,490,56,57,58,59,78,491,492,498,501,75,60,61,502,503,62,63,64,65,504,76,505,506,66],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[79,80,81,82,83,84,85,86,0,87,88,1,2,89,90,91,92,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,3,4,5,127,6,7,128,8,9,10,11,12,13,129,130,131,14,15,16,132,17,18,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,19,20,160,21,161,162,22,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,210,23,211,212,213,214,215,216,217,218,219,220,221,222,223,24,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,77,277,278,279,280,281,282,283,284,285,286,287,288,25,26,289,27,28,29,30,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,31,315,32,33,316,34,35,36,37,317,38,318,319,39,40,41,42,320,321,322,43,323,44,324,325,326,45,46,327,328,329,330,331,332,47,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,67,68,364,365,69,366,70,71,367,72,368,369,370,371,372,373,374,375,376,73,377,378,48,379,74,380,381,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,49,431,432,433,434,435,50,436,437,438,439,440,51,52,53,54,441,442,443,444,445,446,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,55,490,56,57,58,59,78,491,493,494,495,496,498,499,500,75,60,61,502,503,62,63,64,65,504,76,505,506,66],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[84,85,0,87,88,1,2,89,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,3,4,5,6,7,128,8,9,10,11,12,13,129,131,14,15,16,17,18,134,135,139,140,142,146,147,148,149,150,152,153,155,157,158,159,21,161,162,22,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,210,23,211,212,213,214,215,216,223,24,230,234,288,25,26,289,27,28,29,30,290,291,292,293,298,299,310,311,312,313,314,31,315,32,33,316,34,35,36,37,38,39,40,41,42,320,321,322,43,323,44,324,325,326,45,46,327,328,330,47,334,335,339,343,344,345,346,347,348,349,350,353,357,358,359,362,363,67,68,365,69,366,70,71,367,72,368,369,370,371,372,373,374,375,376,73,377,378,48,379,74,380,381,387,390,391,392,399,401,403,404,406,407,408,409,410,416,424,425,426,428,429,430,49,431,433,434,435,50,436,437,438,439,440,51,52,53,54,442,443,444,445,455,458,468,474,482,489,55,490,56,57,58,59,78,491,493,494,495,496,498,499,500,75,60,61,502,503,62,63,64,65,504,76,506,66],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[75,61,502,503,62,63,64,504,508,76,505,66],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[67,68,69,70,71,72,73,74,75,61,76],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[93,335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[337,509,429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[510,511,512,513,514,515,432],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[516,517,75,60,61,502,503,62,63,64,65,504,508,76,505,506,66],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[518,519],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[98,334],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[261,388,391,392],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[84,85,87,88,89,134,139,140,142,146,147,148,149,155,157,158,159,161,162,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,210,211,212,213,214,215,216,223,224,234,289,28,29,291,292,310,311,312,313,314,315,33,34,35,37,42,320,321,322,323,324,325,326,327,328,330,47,334,335,339,343,344,345,346,347,348,349,350,353,357,358,359,362,363,67,68,365,69,366,70,71,367,368,369,370,371,372,373,374,375,376,73,377,378,379,74,380,381,387,391,399,404,406,407,408,409,416,425,429,430,431,433,434,435,50,436,437,438,439,440,51,52,53,455,458,468,474,482,490,57,58,491,493,494,495,496,498,499,500,75,60,502,503,64,65,504,76,506,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[84,86,0,1,2,89,520,521,128,132,17,18,146,21,166,167,288,26,27,28,29,522,523,320,43,323,44,45,46,327,328,330,338,339,340,346,357,359,67,374,410,434,437,438,51,489,56,57,58],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[524],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[67,68,70,71,72,73,75,61,76],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":68,"org.easymock.tests2.UsageTest.argumentsOrdered":46,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":265,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":44,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testReturnException":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":227,"org.easymock.tests.MockingTest.testPartialClassMocking":139,"org.easymock.tests.MockClassControlTest.testToString":304,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":441,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":274,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":458,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":107,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":344,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":367,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":161,"org.easymock.tests2.UsageTest.wrongArguments":43,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":488,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":280,"org.easymock.samples.ExampleTest.answerVsDelegate":316,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":98,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":144,"org.easymock.tests2.UsageConstraintsTest.testNull":69,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":348,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":51,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":309,"org.easymock.tests2.CaptureTest.testPrimitive":502,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":126,"org.easymock.tests.UsageTest.moreThanOneArgument":85,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":81,"org.easymock.tests.UsageTest.argumentsOrdered":2,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":297,"org.easymock.tests.UsageVarargTest.varargIntAccepted":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":310,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":515,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":329,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":421,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":314,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":193,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":482,"org.easymock.tests.ReplayStateInvalidUsageTest.times":244,"org.easymock.tests2.DependencyTest.testClassMocking":341,"org.easymock.tests2.AnswerTest.answer":387,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":396,"org.easymock.tests2.CaptureTest.testAnd":75,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":95,"org.easymock.tests2.UsageTest.strictResetToDefault":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":436,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":148,"org.easymock.tests2.DelegateToTest.testDelegate":428,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":301,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":122,"org.easymock.tests.LimitationsTest.mockFinalMethod":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":221,"org.easymock.tests2.DependencyTest.testClassMockingSupport":342,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":19,"org.easymock.tests2.CaptureTest.testCapture1_2446744":503,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":120,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":394,"org.easymock.tests.UsageThrowableTest.throwError":210,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":238,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":97,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":523,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":476,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":196,"org.easymock.samples.PartialClassMockTest.testGetArea":315,"org.easymock.tests.MockingTest.testInterfaceMocking":141,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":311,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":463,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":108,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":287,"org.easymock.tests2.UsageTest.niceToStrict":323,"org.easymock.tests2.ThreadingTest.testChangeDefault":405,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":524,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":255,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":47,"org.easymock.tests2.MockBuilderTest.testCreateMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":471,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":485,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":116,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":437,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":106,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":129,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":278,"org.easymock.tests.UsageOverloadedMethodTest.overloading":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":467,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":153,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":372,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":179,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":157,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":518,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":371,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":504,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":127,"org.easymock.tests2.EasyMockSupportClassTest.testAll":455,"org.easymock.tests.MockClassControlTest.testEquals":308,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":24,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":124,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":395,"org.easymock.tests2.CaptureTest.testCaptureAll":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":219,"org.easymock.tests.MockNameTest.defaultName":133,"org.easymock.tests2.UsageConstraintsTest.testMatches":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":82,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":236,"org.easymock.samples.ExampleTest.voteForRemovals":37,"org.easymock.tests.UsageVarargTest.allKinds":12,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":165,"org.easymock.samples.BasicClassMockTest.testPrintContent":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":220,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":215,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":489,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":427,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":231,"org.easymock.tests2.UsageConstraintsTest.greaterThan":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":147,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":359,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":197,"org.easymock.samples.ExampleTest.voteForRemoval":34,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":254,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":406,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":360,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":351,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":189,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":13,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":320,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":435,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":226,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":423,"org.easymock.tests2.CaptureTest.testCaptureFirst":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":50,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":328,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":175,"org.easymock.tests2.CaptureTest.testCapture2_2446744":506,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":408,"org.easymock.tests2.UsageTest.moreThanOneArgument":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":273,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":339,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":11,"org.easymock.tests.GenericTest.testBridgedEquals":225,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":17,"org.easymock.tests.UsageExpectAndReturnTest.longType":171,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":125,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":48,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":123,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":79,"org.easymock.tests.UsageCallCountTest.tooManyCalls":18,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":472,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":214,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":494,"org.easymock.tests.MockingTest.testNiceClassMocking":145,"org.easymock.tests.MockingTest.testClassMocking":137,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":130,"org.easymock.tests2.UsageConstraintsTest.testContains":370,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":399,"org.easymock.tests2.UsageConstraintsTest.testFind":365,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":159,"org.easymock.tests.MockTypeTest.fromEasyMockClass":96,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":403,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":178,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":440,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":512,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":7,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":285,"org.easymock.tests.UsageTest.exactCallCountByLastCall":89,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":260,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":90,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":432,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":184,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":3,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":152,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":412,"org.easymock.tests.MockClassControlTest.testHashCode":307,"org.easymock.tests2.EasyMockSupportTest.testVerify":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":465,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":150,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":105,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":520,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":393,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":492,"org.easymock.tests.UsageVarargTest.varargCharAccepted":6,"org.easymock.tests2.CaptureTest.testCaptureMultiple":517,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":277,"org.easymock.tests2.UsageTest.openCallCountByLastCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":53,"org.easymock.tests.DefaultClassInstantiatorTest.object":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":104,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":283,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":466,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":480,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":411,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":195,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":357,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":113,"org.easymock.tests.CapturesMatcherTest.test":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":185,"org.easymock.tests.ReplayStateInvalidCallsTest.times":201,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":101,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":474,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":305,"org.easymock.tests2.UsageTest.resumeIfFailure":327,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":229,"org.easymock.tests2.StubTest.stubWithReturnValue":491,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":510,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":177,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":379,"org.easymock.tests2.SerializationTest.testAllMockedMethod":49,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":271,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":509,"org.easymock.samples.SupportTest.voteForRemovals":42,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":119,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":77,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":388,"org.easymock.tests.UsageExpectAndThrowTest.object":117,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":92,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":377,"org.easymock.tests2.DelegateToTest.testWrongClass":426,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":292,"org.easymock.tests.UsageStrictMockTest.range":28,"org.easymock.samples.ConstructorCalledMockTest.testTax":318,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":450,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":493,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":118,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":1,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":246,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":279,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":191,"org.easymock.tests2.CaptureTest.testCaptureNone":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":295,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":383,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":522,"org.easymock.tests.UsageVerifyTest.twoReturns":167,"org.easymock.tests.UsageVarargTest.varargByteAccepted":10,"org.easymock.tests2.ThreadingTest.testThreadSafe":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":469,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":16,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":39,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":286,"org.easymock.tests2.CaptureTest.testCapture_2617107":61,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":275,"org.easymock.tests2.UsageConstraintsTest.any":368,"org.easymock.tests2.StubTest.stub":78,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":103,"org.easymock.tests.UsageExpectAndThrowTest.longType":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":276,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":252,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":242,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":56,"org.easymock.tests2.SerializationTest.testClass":429,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":416,"org.easymock.tests.LimitationsTest.mockNativeMethod":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":187,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":224,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":479,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":207,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":59,"org.easymock.tests2.NameTest.nameForMocksControl":445,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":481,"org.easymock.tests2.MockedExceptionTest.testMockedException":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":457,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":88,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":402,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":111,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":345,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":335,"org.easymock.tests.MockingTest.testNicePartialClassMocking":140,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":477,"org.easymock.tests2.CaptureTest.testCaptureLast":64,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":20,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":500,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":71,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":206,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":378,"org.easymock.tests.MockingTest.testTwoMocks":138,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":203,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":501,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":115,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":380,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":386,"org.easymock.samples.ExampleTest.removeNonExistingDocument":317,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":484,"org.easymock.tests.UsageStrictMockTest.differentMethods":29,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":240,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":413,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":385,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":250,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":407,"org.easymock.tests2.MockBuilderTest.testCreateMockString":340,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":459,"org.easymock.tests.UsageExpectAndThrowTest.floatType":109,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":390,"org.easymock.tests.UsageVerifyTest.twoThrows":166,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":468,"org.easymock.samples.ExampleTest.voteAgainstRemoval":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":293,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":358,"org.easymock.tests.LimitationsTest.privateConstructor":233,"org.easymock.tests2.UsageConstraintsTest.testNotNull":74,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":397,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":216,"org.easymock.tests2.UsageTest.defaultResetToNice":326,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":478,"org.easymock.tests.UsageVarargTest.differentLength":128,"org.easymock.tests2.CallbackTest.callback":410,"org.easymock.tests2.UsageConstraintsTest.equals":364,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":354,"org.easymock.tests.UsageTest.openCallCountByLastCall":87,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":362,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":22,"org.easymock.tests.UsageCallCountTest.tooFewCalls":14,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":496,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":281,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":384,"org.easymock.tests.UsageThrowableTest.throwCheckedException":213,"org.easymock.tests.MockingTest.testStrictClassMocking":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":499,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":135,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":495,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":483,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":498,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":392,"org.easymock.tests.ObjectMethodsTest.testHashCode":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":514,"org.easymock.tests2.NameTest.nameForNiceMock":444,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":409,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":205,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":200,"org.easymock.tests2.DependencyTest.testInterfaceMocking":343,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":513,"org.easymock.samples.ExampleTest.addDocument":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.DelegateToTest.testStubDelegate":425,"org.easymock.tests2.AnswerTest.stubAnswer":391,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":289,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":336,"org.easymock.tests.UsageVarargTest.varargLongAccepted":9,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":264,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":186,"org.easymock.tests.UsageExpectAndReturnTest.floatType":170,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":431,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":319,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":420,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests.UsageThrowableTest.noUpperLimit":23,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":363,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":446,"org.easymock.tests2.SerializationTest.test":430,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":62,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":519,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":169,"org.easymock.tests2.UsageConstraintsTest.testSame":366,"org.easymock.samples.SupportTest.addDocument":41,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":497,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":190,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":460,"org.easymock.tests.GenericTest.testPackageScope":223,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":419,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":143,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":188,"org.easymock.tests2.NameTest.nameForMock":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":180,"org.easymock.tests2.UsageStrictMockTest.differentMethods":58,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":355,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":121,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":149,"org.easymock.tests2.MockedExceptionTest.testRealException":400,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":100,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":269,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":268,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":162,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":247,"org.easymock.tests2.NameTest.nameForStrictMock":443,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":332,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":449,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":73,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":330,"org.easymock.tests2.UsageStrictMockTest.range":57,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":194,"org.easymock.tests2.UsageConstraintsTest.lessThan":381,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":415,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":464,"org.easymock.tests2.CaptureTest.testCaptureRightOne":76,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":382,"org.easymock.tests2.UsageConstraintsTest.testOr":70,"org.easymock.tests.UsageRangeTest.combination":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":346,"org.easymock.tests.UsageTest.wrongArguments":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":461,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":256,"org.easymock.tests.UsageVarargTest.varargShortAccepted":8,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":132,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":208,"org.easymock.tests2.UsageConstraintsTest.cmpTo":369,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":389,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":258,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":325,"org.easymock.tests2.CaptureTest.testCaptureFromStub":505,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":237,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":331,"org.easymock.tests.UsageTest.unexpectedCallWithArray":86,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":204,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":26,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":182,"org.easymock.tests2.CaptureTest.testCapture":508,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":27,"org.easymock.tests2.UsageConstraintsTest.constraints":67,"org.easymock.samples.ExampleTest.addAndChangeDocument":38,"org.easymock.tests2.ConstraintsToStringTest.containsToString":507,"org.easymock.tests.UsageStrictMockTest.testVerify":290,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":31,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":218,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":312,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":174,"org.easymock.tests.LimitationsTest.abstractClass":232,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":438,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":4}}]
